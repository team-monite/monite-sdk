'use strict';

var jsxRuntime = require('@emotion/react/jsx-runtime');
var React = require('react');
var material = require('@mui/material');
var SearchIcon = require('@mui/icons-material/Search');
var react = require('@lingui/react');
var BusinessIcon = require('@mui/icons-material/Business');
var PersonIcon = require('@mui/icons-material/Person');
var iconsMaterial = require('@mui/icons-material');
var styles$2 = require('@mui/material/styles');
var react$1 = require('@openapi-qraft/react');
var callbacks = require('@openapi-qraft/react/callbacks/index');
var compileMessage = require('@lingui/message-utils/compileMessage');
var generateMessageId = require('@lingui/message-utils/generateMessageId');
var core = require('@lingui/core');
var deepEqual = require('deep-eql');
var reactHotToast = require('react-hot-toast');
var reactQuery = require('@tanstack/react-query');
var react$2 = require('@sentry/react');
var chroma = require('chroma-js');
var utils = require('@mui/utils');
require('@mui/x-data-grid/themeAugmentation');
var createCache = require('@emotion/cache');
var react$3 = require('@emotion/react');
var xDatePickers = require('@mui/x-date-pickers');
var AdapterDateFns = require('@mui/x-date-pickers/AdapterDateFns');
var clsx = require('clsx');
var tailwindMerge = require('tailwind-merge');
var ArrowBackIcon = require('@mui/icons-material/ArrowBack');
var CloseIcon = require('@mui/icons-material/Close');
var IconButton = require('@mui/material/IconButton');
var Tooltip = require('@mui/material/Tooltip');
var CachedIcon = require('@mui/icons-material/Cached');
var OpenInNewIcon = require('@mui/icons-material/OpenInNew');
var SearchOffIcon = require('@mui/icons-material/SearchOff');
var dateFns = require('date-fns');
var DropdownMenuPrimitive = require('@radix-ui/react-dropdown-menu');
var lucideReact = require('lucide-react');
var ArrowDropDownIcon = require('@mui/icons-material/ArrowDropDown');
var NoDataIcon = require('@mui/icons-material/Block');
var ErrorIcon = require('@mui/icons-material/ErrorOutline');
var HourglassEmptyIcon = require('@mui/icons-material/HourglassEmpty');
var AccessRestrictedIcon = require('@mui/icons-material/Lock');
var ReceiptLong = require('@mui/icons-material/ReceiptLong');
var RefreshIcon = require('@mui/icons-material/Refresh');
var reactSlot = require('@radix-ui/react-slot');
var classVarianceAuthority = require('class-variance-authority');
var DialogPrimitive = require('@radix-ui/react-dialog');
var xDataGrid = require('@mui/x-data-grid');
var zod = require('zod');
var zod$1 = require('@hookform/resolvers/zod');
var reactHookForm = require('react-hook-form');
var ArrowForwardIcon = require('@mui/icons-material/ArrowForward');
var reactDom = require('react-dom');
var DeleteIcon = require('@mui/icons-material/DeleteForever');
var EditIcon = require('@mui/icons-material/Edit');
var AddCircleOutlineIcon = require('@mui/icons-material/AddCircleOutline');
var StarIcon = require('@mui/icons-material/Star');
var reactUse = require('react-use');
var AddIcon = require('@mui/icons-material/Add');
var AvatarPrimitive = require('@radix-ui/react-avatar');
var DeleteIcon$1 = require('@mui/icons-material/Delete');
var LabelPrimitive = require('@radix-ui/react-label');
var SelectPrimitive = require('@radix-ui/react-select');
var Autocomplete = require('@mui/material/Autocomplete');
var styled = require('@emotion/styled');
var CancelIcon = require('@mui/icons-material/Cancel');
var PaidOutlinedIcon = require('@mui/icons-material/PaidOutlined');
var DangerousOutlinedIcon = require('@mui/icons-material/DangerousOutlined');
var CheckCircleOutlineRoundedIcon = require('@mui/icons-material/CheckCircleOutlineRounded');
var HighlightOffRoundedIcon = require('@mui/icons-material/HighlightOffRounded');
var AttachFileIcon = require('@mui/icons-material/AttachFile');
var CloudUploadOutlinedIcon = require('@mui/icons-material/CloudUploadOutlined');
var Contrast = require('@mui/icons-material/Contrast');
var InsertDriveFileOutlinedIcon = require('@mui/icons-material/InsertDriveFileOutlined');
var ScheduleOutlinedIcon = require('@mui/icons-material/ScheduleOutlined');
var TaskOutlinedIcon = require('@mui/icons-material/TaskOutlined');
var MoreVertIcon = require('@mui/icons-material/MoreVert');
var core$1 = require('@react-pdf-viewer/core');
var pageNavigation = require('@react-pdf-viewer/page-navigation');
var zoom = require('@react-pdf-viewer/zoom');
var PopoverPrimitive = require('@radix-ui/react-popover');
var useScript = require('react-script-hook');
require('@mui/icons-material/BlockOutlined');
require('@mui/icons-material/CheckOutlined');
require('@mui/icons-material/ErrorOutlineOutlined');
require('@mui/icons-material/HourglassBottomOutlined');
require('@mui/icons-material/ReplayOutlined');
require('@mui/icons-material/SendOutlined');
require('@mui/icons-material/StarHalfOutlined');
var reactDayPicker = require('react-day-picker');
var CheckIcon = require('@mui/icons-material/Check');
var WarningAmberRoundedIcon = require('@mui/icons-material/WarningAmberRounded');
var KeyboardArrowDownIcon = require('@mui/icons-material/KeyboardArrowDown');
var ClearIcon = require('@mui/icons-material/Clear');
var SettingsOutlinedIcon = require('@mui/icons-material/SettingsOutlined');
var DriveFileRenameOutlineIcon = require('@mui/icons-material/DriveFileRenameOutline');
var AccordionPrimitive = require('@radix-ui/react-accordion');
var TabsPrimitive = require('@radix-ui/react-tabs');
var ibantools = require('ibantools');
var libphonenumberJs = require('libphonenumber-js');
var reactInternationalPhone = require('react-international-phone');
var CheckCircleIcon = require('@mui/icons-material/CheckCircle');
var colors = require('@mui/material/colors');
var react$4 = require('@ai-sdk/react');
var copy = require('copy-to-clipboard');
var recharts = require('recharts');
var ReactMarkdown = require('react-markdown');
var rehypeRaw = require('rehype-raw');
var remarkGfm = require('remark-gfm');
var reactVirtual = require('@tanstack/react-virtual');
var DOMPurify = require('isomorphic-dompurify');
var Unstable_QraftSecureRequestFn = require('@openapi-qraft/react/Unstable_QraftSecureRequestFn');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

function _interopNamespaceCompat(e) {
  if (e && typeof e === 'object' && 'default' in e) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return Object.freeze(n);
}

var React__namespace = /*#__PURE__*/_interopNamespaceCompat(React);
var SearchIcon__default = /*#__PURE__*/_interopDefaultCompat(SearchIcon);
var BusinessIcon__default = /*#__PURE__*/_interopDefaultCompat(BusinessIcon);
var PersonIcon__default = /*#__PURE__*/_interopDefaultCompat(PersonIcon);
var callbacks__namespace = /*#__PURE__*/_interopNamespaceCompat(callbacks);
var deepEqual__default = /*#__PURE__*/_interopDefaultCompat(deepEqual);
var chroma__default = /*#__PURE__*/_interopDefaultCompat(chroma);
var createCache__default = /*#__PURE__*/_interopDefaultCompat(createCache);
var clsx__default = /*#__PURE__*/_interopDefaultCompat(clsx);
var ArrowBackIcon__default = /*#__PURE__*/_interopDefaultCompat(ArrowBackIcon);
var CloseIcon__default = /*#__PURE__*/_interopDefaultCompat(CloseIcon);
var IconButton__default = /*#__PURE__*/_interopDefaultCompat(IconButton);
var Tooltip__default = /*#__PURE__*/_interopDefaultCompat(Tooltip);
var CachedIcon__default = /*#__PURE__*/_interopDefaultCompat(CachedIcon);
var OpenInNewIcon__default = /*#__PURE__*/_interopDefaultCompat(OpenInNewIcon);
var SearchOffIcon__default = /*#__PURE__*/_interopDefaultCompat(SearchOffIcon);
var DropdownMenuPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(DropdownMenuPrimitive);
var ArrowDropDownIcon__default = /*#__PURE__*/_interopDefaultCompat(ArrowDropDownIcon);
var NoDataIcon__default = /*#__PURE__*/_interopDefaultCompat(NoDataIcon);
var ErrorIcon__default = /*#__PURE__*/_interopDefaultCompat(ErrorIcon);
var HourglassEmptyIcon__default = /*#__PURE__*/_interopDefaultCompat(HourglassEmptyIcon);
var AccessRestrictedIcon__default = /*#__PURE__*/_interopDefaultCompat(AccessRestrictedIcon);
var ReceiptLong__default = /*#__PURE__*/_interopDefaultCompat(ReceiptLong);
var RefreshIcon__default = /*#__PURE__*/_interopDefaultCompat(RefreshIcon);
var DialogPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(DialogPrimitive);
var ArrowForwardIcon__default = /*#__PURE__*/_interopDefaultCompat(ArrowForwardIcon);
var DeleteIcon__default = /*#__PURE__*/_interopDefaultCompat(DeleteIcon);
var EditIcon__default = /*#__PURE__*/_interopDefaultCompat(EditIcon);
var AddCircleOutlineIcon__default = /*#__PURE__*/_interopDefaultCompat(AddCircleOutlineIcon);
var StarIcon__default = /*#__PURE__*/_interopDefaultCompat(StarIcon);
var AddIcon__default = /*#__PURE__*/_interopDefaultCompat(AddIcon);
var AvatarPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(AvatarPrimitive);
var DeleteIcon__default$1 = /*#__PURE__*/_interopDefaultCompat(DeleteIcon$1);
var LabelPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(LabelPrimitive);
var SelectPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(SelectPrimitive);
var styled__default = /*#__PURE__*/_interopDefaultCompat(styled);
var CancelIcon__default = /*#__PURE__*/_interopDefaultCompat(CancelIcon);
var PaidOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(PaidOutlinedIcon);
var DangerousOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(DangerousOutlinedIcon);
var CheckCircleOutlineRoundedIcon__default = /*#__PURE__*/_interopDefaultCompat(CheckCircleOutlineRoundedIcon);
var HighlightOffRoundedIcon__default = /*#__PURE__*/_interopDefaultCompat(HighlightOffRoundedIcon);
var AttachFileIcon__default = /*#__PURE__*/_interopDefaultCompat(AttachFileIcon);
var CloudUploadOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(CloudUploadOutlinedIcon);
var Contrast__default = /*#__PURE__*/_interopDefaultCompat(Contrast);
var InsertDriveFileOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(InsertDriveFileOutlinedIcon);
var ScheduleOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(ScheduleOutlinedIcon);
var TaskOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(TaskOutlinedIcon);
var MoreVertIcon__default = /*#__PURE__*/_interopDefaultCompat(MoreVertIcon);
var PopoverPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(PopoverPrimitive);
var useScript__default = /*#__PURE__*/_interopDefaultCompat(useScript);
var CheckIcon__default = /*#__PURE__*/_interopDefaultCompat(CheckIcon);
var WarningAmberRoundedIcon__default = /*#__PURE__*/_interopDefaultCompat(WarningAmberRoundedIcon);
var KeyboardArrowDownIcon__default = /*#__PURE__*/_interopDefaultCompat(KeyboardArrowDownIcon);
var ClearIcon__default = /*#__PURE__*/_interopDefaultCompat(ClearIcon);
var SettingsOutlinedIcon__default = /*#__PURE__*/_interopDefaultCompat(SettingsOutlinedIcon);
var DriveFileRenameOutlineIcon__default = /*#__PURE__*/_interopDefaultCompat(DriveFileRenameOutlineIcon);
var AccordionPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(AccordionPrimitive);
var TabsPrimitive__namespace = /*#__PURE__*/_interopNamespaceCompat(TabsPrimitive);
var CheckCircleIcon__default = /*#__PURE__*/_interopDefaultCompat(CheckCircleIcon);
var copy__default = /*#__PURE__*/_interopDefaultCompat(copy);
var ReactMarkdown__default = /*#__PURE__*/_interopDefaultCompat(ReactMarkdown);
var rehypeRaw__default = /*#__PURE__*/_interopDefaultCompat(rehypeRaw);
var remarkGfm__default = /*#__PURE__*/_interopDefaultCompat(remarkGfm);
var DOMPurify__default = /*#__PURE__*/_interopDefaultCompat(DOMPurify);

function _define_property$3w(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3t(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3w(target, key, source[key]);
        });
    }
    return target;
}
const RootElementsContext = /*#__PURE__*/ React.createContext({
    styles: undefined,
    root: undefined
});
const useRootElements = ()=>{
    return React.useContext(RootElementsContext);
};
const RootElementsProvider = ({ children, elements })=>{
    const contextElements = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(RootElementsContext.Provider, {
        value: _object_spread$3t({}, contextElements, elements),
        children: children
    });
};

function classNames(...args) {
    let result = '';
    for (const arg of args){
        if (arg) {
            result += arg + ' ';
        }
    }
    return result;
}

const FilterContainer = ({ className, searchField, children, sx })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        direction: "row",
        justifyContent: "space-between",
        alignItems: "center",
        className: classNames('Monite-Filters', className),
        sx: Object.assign({
            '& > *': {
                flexBasis: 'fit-content',
                flexGrow: 1
            },
            '& > .Monite-SearchField': {
                maxWidth: '400px',
                width: '100%'
            }
        }, sx || {}),
        children: [
            searchField,
            /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                gap: 1,
                direction: "row",
                justifyContent: "flex-end",
                alignItems: "center",
                className: "Monite-Filters-Group",
                sx: {
                    ml: 2,
                    '& .Monite-FilterControl': {
                        maxWidth: '160px',
                        width: '100%'
                    }
                },
                children: children
            })
        ]
    });
};

/**
 * Hook to debounce a value
 * @template T - The type of the value to debounce
 * @param value The value to debounce
 * @param delay The delay in milliseconds
 * @returns The debounced value
 */ const useDebounce = (value, delay = 300)=>{
    const [debouncedValue, setDebouncedValue] = React.useState(value);
    React.useEffect(()=>{
        const handler = setTimeout(()=>{
            setDebouncedValue(value);
        }, delay);
        return ()=>{
            clearTimeout(handler);
        };
    }, [
        value,
        delay
    ]);
    return debouncedValue;
};
/**
 * Hook to debounce a callback function with auto-cleanup on unmount
 * @template Args - The argument types of the callback function
 * @template R - The return type of the callback function
 * @param callback The function to be debounced
 * @param delay The delay in milliseconds
 * @returns The debounced callback function
 */ const useDebounceCallback = (callback, delay = 300)=>{
    const timeoutRef = React.useRef(null);
    const debouncedCallback = React.useCallback((...args)=>{
        if (timeoutRef.current) {
            clearTimeout(timeoutRef.current);
        }
        timeoutRef.current = setTimeout(()=>{
            callback(...args);
        }, delay);
    }, [
        callback,
        delay
    ]);
    React.useEffect(()=>()=>{
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
        }, []);
    return debouncedCallback;
};

/**
 * The delay in milliseconds before a search request is sent after the user stops typing.
 * @type {number}
 */ const DEBOUNCE_SEARCH_TIMEOUT = 500;
/**
 * `SearchField` is a component that renders a search input field with a debounce functionality.
 * The input value is debounced, meaning that the `onChange` callback is not called immediately when the user types into the field,
 * but only after the user has stopped typing for a certain amount of time (`DEBOUNCE_SEARCH_TIMEOUT`).
 *
 * @component
 * @param {object} props - The properties that define the `SearchField` component.
 * @param {string} props.label - The label for the search field.
 * @param {string} props.value - The initial value of the search field.
 * @param {(value: string | null) => void} props.onChange - The function to be called when the input value changes.
 *
 * @example
 * <SearchField label="Search" onChange={value => console.log(value)} />
 *
 * @returns {React.ReactElement} Returns a `FormControl` element that contains the search field.
 */ const SearchField = ({ label, value, placeholder, onChange })=>{
    const debouncedOnChange = useDebounceCallback((value)=>onChange(value), DEBOUNCE_SEARCH_TIMEOUT);
    return /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
        "aria-label": "search-by-name",
        className: "Monite-SearchField Monite-FilterControl",
        children: [
            label && /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                htmlFor: "search-by-name",
                shrink: true,
                children: label
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Input, {
                id: "search-by-name",
                name: "search-by-name",
                "aria-label": "search-by-name",
                placeholder: placeholder,
                value: value,
                onChange: (searchEvent)=>{
                    debouncedOnChange(searchEvent.target.value || null);
                },
                startAdornment: /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                    position: "end",
                    children: /*#__PURE__*/ jsxRuntime.jsx(SearchIcon__default.default, {
                        fontSize: "medium"
                    })
                }),
                sx: {
                    '&::placeholder': {
                        opacity: 1,
                        color: 'text.primary'
                    },
                    '& input::placeholder': {
                        opacity: 1,
                        color: 'text.primary'
                    }
                }
            })
        ]
    });
};

const FILTER_TYPE_SEARCH$4 = 'search';
const FILTER_TYPE_TYPE$1 = 'type';
const FILTER_TYPE_IS_CUSTOMER = 'is_customer';

const Filters$4 = ({ onChangeFilter, showCategories, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const className = 'Monite-CounterpartFilters';
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        sx: sx,
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "Fs+py6"
            }),
            onChange: (search)=>{
                onChangeFilter(FILTER_TYPE_SEARCH$4, search);
            }
        }),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                className: "Monite-CounterpartTypeFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                    defaultValue: "all",
                    MenuProps: {
                        container: root
                    },
                    onChange: (search)=>{
                        onChangeFilter(FILTER_TYPE_TYPE$1, search.target.value);
                    },
                    children: [
                        {
                            label: i18n._({
                                id: "h6zvpR"
                            }),
                            value: 'all'
                        },
                        {
                            label: i18n._({
                                id: "6mbe4b"
                            }),
                            value: 'individual',
                            icons: /*#__PURE__*/ jsxRuntime.jsx(PersonIcon__default.default, {
                                color: "primary",
                                fontSize: "small"
                            })
                        },
                        {
                            label: i18n._({
                                id: "s2QZS6"
                            }),
                            value: 'organization',
                            icons: /*#__PURE__*/ jsxRuntime.jsx(BusinessIcon__default.default, {
                                color: "success",
                                fontSize: "small"
                            })
                        }
                    ].map(({ label, value })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: value,
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                sx: {
                                    marginLeft: 1
                                },
                                children: label
                            })
                        }, value))
                })
            }),
            showCategories && /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                className: "Monite-CounterpartCategoryFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                    defaultValue: "all",
                    MenuProps: {
                        container: root
                    },
                    onChange: (search)=>{
                        onChangeFilter(FILTER_TYPE_IS_CUSTOMER, search.target.value);
                    },
                    children: [
                        {
                            label: i18n._({
                                id: "xIfKEA"
                            }),
                            value: 'all'
                        },
                        {
                            label: i18n._({
                                id: "NihQNk"
                            }),
                            value: 'true'
                        },
                        {
                            label: i18n._({
                                id: "08314m"
                            }),
                            value: 'false'
                        }
                    ].map(({ label, value })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: value,
                            children: label
                        }, value))
                })
            })
        ]
    });
};

function _define_property$3v(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3s(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3v(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2e(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2e(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2e(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * The class name of the container that uses the `ContainerCssBaseline` component.
 * Should be used in the "root" `className` of the components that need to be styled
 * with the styles to support light/dark mode and baseline styles.
 */ const ScopedCssBaselineContainerClassName = // eslint-disable-next-line lingui/no-unlocalized-strings
'Monite-ContainerCssBaseline';
/**
 * Global styles for the container with the class name of the variable `ScopedCssBaselineContainerClassName`.
 */ function ContainerCssBaseline({ enableColorScheme = false }) {
    return /*#__PURE__*/ jsxRuntime.jsx(material.GlobalStyles, {
        styles: (theme)=>({
                [`.${ScopedCssBaselineContainerClassName}`]: _object_spread$3s(_object_spread_props$2e(_object_spread$3s({
                    // "html" styles https://github.com/mui/material-ui/blob/16cb18aac4e9311f1862ddc16f77e3c61f77e7c4/packages/mui-material/src/CssBaseline/CssBaseline.js#L7
                    WebkitFontSmoothing: 'antialiased',
                    MozOsxFontSmoothing: 'grayscale',
                    // Change from `box-sizing: content-box` so that `width`
                    // is not affected by `padding` or `border`.
                    boxSizing: 'border-box',
                    // Fix font resize problem in iOS
                    WebkitTextSizeAdjust: '100%'
                }, enableColorScheme && {
                    colorScheme: theme.palette.mode
                }), {
                    // "body" styles https://github.com/mui/material-ui/blob/16cb18aac4e9311f1862ddc16f77e3c61f77e7c4/packages/mui-material/src/CssBaseline/CssBaseline.js#L19C14-L19C18
                    color: theme.palette.text.primary
                }), theme.typography.body1)
            })
    });
}

function _define_property$3u(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3r(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3u(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Displays the status of a Counterpart.
 */ const CounterpartStatusChip = /*#__PURE__*/ React.forwardRef((inProps, ref)=>{
    const { status, variant, size } = styles$2.useThemeProps({
        props: inProps,
        name: 'MoniteCounterpartStatusChip'
    });
    const theme = styles$2.useTheme();
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(StyledChip$4, {
        ref: ref,
        className: "Monite-CounterpartStatusChip",
        label: getLabel(i18n, status),
        status: status,
        size: size !== null && size !== void 0 ? size : 'small',
        icon: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Circle, {
            sx: {
                '&.MuiChip-icon': {
                    fontSize: 10
                }
            }
        }),
        variant: variant !== null && variant !== void 0 ? variant : 'outlined',
        sx: {
            background: styles$2.lighten(theme.palette.text.primary, 0.9),
            color: theme.palette.text.primary,
            border: 'none'
        }
    });
});
const StyledChip$4 = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, _object_spread$3r({
        ref: ref
    }, props))), {
    name: 'MoniteCounterpartStatusChip',
    slot: 'root',
    shouldForwardProp: (prop)=>{
        switch(prop){
            case 'variant':
            case 'label':
            case 'color':
            case 'icon':
            case 'size':
                return true;
            default:
                return false;
        }
    }
})({});
const getLabel = (i18n, status)=>{
    switch(status){
        case 'customer':
            return i18n._({
                id: "876pfE"
            });
        case 'vendor':
            return i18n._({
                id: "lO6GxP"
            });
        default:
            console.error(`Unknown counterpart status: ${status}`);
            return i18n._({
                id: "Ef7StM"
            });
    }
};

// This file was generated automatically 
const apiVersion = '2024-05-25';

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const accountingConnectionsService = {
    getAccountingConnections: {
        schema: {
            method: 'get',
            url: '/accounting_connections',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAccountingConnections: {
        schema: {
            method: 'post',
            url: '/accounting_connections',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingConnectionsId: {
        schema: {
            method: 'get',
            url: '/accounting_connections/{connection_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAccountingConnectionsIdDisconnect: {
        schema: {
            method: 'post',
            url: '/accounting_connections/{connection_id}/disconnect',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAccountingConnectionsIdSync: {
        schema: {
            method: 'post',
            url: '/accounting_connections/{connection_id}/sync',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const accountingService = {
    getAccountingPayables: {
        schema: {
            method: 'get',
            url: '/accounting/payables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingPayablesId: {
        schema: {
            method: 'get',
            url: '/accounting/payables/{payable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingReceivables: {
        schema: {
            method: 'get',
            url: '/accounting/receivables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingReceivablesId: {
        schema: {
            method: 'get',
            url: '/accounting/receivables/{invoice_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const accountingSyncedRecordsService = {
    getAccountingSyncedRecords: {
        schema: {
            method: 'get',
            url: '/accounting_synced_records',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingSyncedRecordsId: {
        schema: {
            method: 'get',
            url: '/accounting_synced_records/{synced_record_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAccountingSyncedRecordsIdPush: {
        schema: {
            method: 'post',
            url: '/accounting_synced_records/{synced_record_id}/push',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const accountingTaxRatesService = {
    getAccountingTaxRates: {
        schema: {
            method: 'get',
            url: '/accounting_tax_rates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAccountingTaxRatesId: {
        schema: {
            method: 'get',
            url: '/accounting_tax_rates/{tax_rate_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const aiService = {
    getAiConversations: {
        schema: {
            method: 'get',
            url: '/ai/conversations',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAiConversations: {
        schema: {
            method: 'post',
            url: '/ai/conversations',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAiConversationsId: {
        schema: {
            method: 'get',
            url: '/ai/conversations/{conversation_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAiConversationsIdMessages: {
        schema: {
            method: 'post',
            url: '/ai/conversations/{conversation_id}/messages',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAiMessageFeedbacks: {
        schema: {
            method: 'post',
            url: '/ai/message_feedbacks',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAiMessageFeedbacksCommentary: {
        schema: {
            method: 'post',
            url: '/ai/message_feedbacks/commentary',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAiPrompts: {
        schema: {
            method: 'get',
            url: '/ai/prompts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAiPrompts: {
        schema: {
            method: 'post',
            url: '/ai/prompts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAiPromptsId: {
        schema: {
            method: 'get',
            url: '/ai/prompts/{prompt_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteAiPromptsId: {
        schema: {
            method: 'delete',
            url: '/ai/prompts/{prompt_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchAiPromptsId: {
        schema: {
            method: 'patch',
            url: '/ai/prompts/{prompt_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const analyticsService = {
    getAnalyticsCreditNotes: {
        schema: {
            method: 'get',
            url: '/analytics/credit_notes',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAnalyticsPayables: {
        schema: {
            method: 'get',
            url: '/analytics/payables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getAnalyticsReceivables: {
        schema: {
            method: 'get',
            url: '/analytics/receivables',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const approvalPoliciesService = {
    getApprovalPolicies: {
        schema: {
            method: 'get',
            url: '/approval_policies',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalPolicies: {
        schema: {
            method: 'post',
            url: '/approval_policies',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getApprovalPoliciesId: {
        schema: {
            method: 'get',
            url: '/approval_policies/{approval_policy_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteApprovalPoliciesId: {
        schema: {
            method: 'delete',
            url: '/approval_policies/{approval_policy_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchApprovalPoliciesId: {
        schema: {
            method: 'patch',
            url: '/approval_policies/{approval_policy_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getApprovalPoliciesIdProcesses: {
        schema: {
            method: 'get',
            url: '/approval_policies/{approval_policy_id}/processes',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getApprovalPoliciesIdProcessesId: {
        schema: {
            method: 'get',
            url: '/approval_policies/{approval_policy_id}/processes/{process_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalPoliciesIdProcessesIdCancel: {
        schema: {
            method: 'post',
            url: '/approval_policies/{approval_policy_id}/processes/{process_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getApprovalPoliciesIdProcessesIdSteps: {
        schema: {
            method: 'get',
            url: '/approval_policies/{approval_policy_id}/processes/{process_id}/steps',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const approvalRequestsService = {
    getApprovalRequests: {
        schema: {
            method: 'get',
            url: '/approval_requests',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalRequests: {
        schema: {
            method: 'post',
            url: '/approval_requests',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getApprovalRequestsId: {
        schema: {
            method: 'get',
            url: '/approval_requests/{approval_request_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalRequestsIdApprove: {
        schema: {
            method: 'post',
            url: '/approval_requests/{approval_request_id}/approve',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalRequestsIdCancel: {
        schema: {
            method: 'post',
            url: '/approval_requests/{approval_request_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postApprovalRequestsIdReject: {
        schema: {
            method: 'post',
            url: '/approval_requests/{approval_request_id}/reject',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const authService = {
    postAuthRevoke: {
        schema: {
            method: 'post',
            url: '/auth/revoke',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postAuthToken: {
        schema: {
            method: 'post',
            url: '/auth/token',
            mediaType: 'application/json'
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const bankAccountsService = {
    getBankAccounts: {
        schema: {
            method: 'get',
            url: '/bank_accounts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccounts: {
        schema: {
            method: 'post',
            url: '/bank_accounts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccountsCompleteVerification: {
        schema: {
            method: 'post',
            url: '/bank_accounts/complete_verification',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccountsStartVerification: {
        schema: {
            method: 'post',
            url: '/bank_accounts/start_verification',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getBankAccountsId: {
        schema: {
            method: 'get',
            url: '/bank_accounts/{bank_account_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteBankAccountsId: {
        schema: {
            method: 'delete',
            url: '/bank_accounts/{bank_account_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchBankAccountsId: {
        schema: {
            method: 'patch',
            url: '/bank_accounts/{bank_account_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccountsIdCompleteVerification: {
        schema: {
            method: 'post',
            url: '/bank_accounts/{bank_account_id}/complete_verification',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccountsIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/bank_accounts/{bank_account_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postBankAccountsIdRefreshVerification: {
        schema: {
            method: 'post',
            url: '/bank_accounts/{bank_account_id}/refresh_verification',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getBankAccountsIdVerifications: {
        schema: {
            method: 'get',
            url: '/bank_accounts/{bank_account_id}/verifications',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const batchPaymentsService = {
    postBatchPayments: {
        schema: {
            method: 'post',
            url: '/batch_payments',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getBatchPaymentsId: {
        schema: {
            method: 'get',
            url: '/batch_payments/{batch_payment_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const commentsService = {
    getComments: {
        schema: {
            method: 'get',
            url: '/comments',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postComments: {
        schema: {
            method: 'post',
            url: '/comments',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCommentsId: {
        schema: {
            method: 'get',
            url: '/comments/{comment_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCommentsId: {
        schema: {
            method: 'delete',
            url: '/comments/{comment_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCommentsId: {
        schema: {
            method: 'patch',
            url: '/comments/{comment_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const counterpartsService = {
    getCounterparts: {
        schema: {
            method: 'get',
            url: '/counterparts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterparts: {
        schema: {
            method: 'post',
            url: '/counterparts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdAddresses: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/addresses',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdAddresses: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/addresses',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdAddressesId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/addresses/{address_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsIdAddressesId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}/addresses/{address_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsIdAddressesId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}/addresses/{address_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdBankAccounts: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/bank_accounts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdBankAccounts: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/bank_accounts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdBankAccountsId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/bank_accounts/{bank_account_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsIdBankAccountsId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}/bank_accounts/{bank_account_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsIdBankAccountsId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}/bank_accounts/{bank_account_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdBankAccountsIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/bank_accounts/{bank_account_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdContacts: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/contacts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdContacts: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/contacts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdContactsId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/contacts/{contact_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsIdContactsId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}/contacts/{contact_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsIdContactsId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}/contacts/{contact_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdContactsIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/contacts/{contact_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdEinvoicingCredentials: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/einvoicing_credentials',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdEinvoicingCredentials: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/einvoicing_credentials',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdEinvoicingCredentialsId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/einvoicing_credentials/{credential_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsIdEinvoicingCredentialsId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}/einvoicing_credentials/{credential_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsIdEinvoicingCredentialsId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}/einvoicing_credentials/{credential_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdPartnerMetadata: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/partner_metadata',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putCounterpartsIdPartnerMetadata: {
        schema: {
            method: 'put',
            url: '/counterparts/{counterpart_id}/partner_metadata',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdVatIds: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/vat_ids',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCounterpartsIdVatIds: {
        schema: {
            method: 'post',
            url: '/counterparts/{counterpart_id}/vat_ids',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCounterpartsIdVatIdsId: {
        schema: {
            method: 'get',
            url: '/counterparts/{counterpart_id}/vat_ids/{vat_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCounterpartsIdVatIdsId: {
        schema: {
            method: 'delete',
            url: '/counterparts/{counterpart_id}/vat_ids/{vat_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCounterpartsIdVatIdsId: {
        schema: {
            method: 'patch',
            url: '/counterparts/{counterpart_id}/vat_ids/{vat_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const customVatRatesService = {
    getCustomVatRates: {
        schema: {
            method: 'get',
            url: '/custom_vat_rates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postCustomVatRates: {
        schema: {
            method: 'post',
            url: '/custom_vat_rates',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getCustomVatRatesId: {
        schema: {
            method: 'get',
            url: '/custom_vat_rates/{custom_vat_rate_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteCustomVatRatesId: {
        schema: {
            method: 'delete',
            url: '/custom_vat_rates/{custom_vat_rate_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchCustomVatRatesId: {
        schema: {
            method: 'patch',
            url: '/custom_vat_rates/{custom_vat_rate_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const dataExportsService = {
    getDataExports: {
        schema: {
            method: 'get',
            url: '/data_exports',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDataExports: {
        schema: {
            method: 'post',
            url: '/data_exports',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDataExportsExtraData: {
        schema: {
            method: 'get',
            url: '/data_exports/extra_data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDataExportsExtraData: {
        schema: {
            method: 'post',
            url: '/data_exports/extra_data',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDataExportsExtraDataId: {
        schema: {
            method: 'get',
            url: '/data_exports/extra_data/{extra_data_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteDataExportsExtraDataId: {
        schema: {
            method: 'delete',
            url: '/data_exports/extra_data/{extra_data_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchDataExportsExtraDataId: {
        schema: {
            method: 'patch',
            url: '/data_exports/extra_data/{extra_data_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDataExportsSupportedFormats: {
        schema: {
            method: 'get',
            url: '/data_exports/supported_formats',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDataExportsId: {
        schema: {
            method: 'get',
            url: '/data_exports/{document_export_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const deliveryNotesService = {
    getDeliveryNotes: {
        schema: {
            method: 'get',
            url: '/delivery_notes',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDeliveryNotes: {
        schema: {
            method: 'post',
            url: '/delivery_notes',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDeliveryNotesId: {
        schema: {
            method: 'get',
            url: '/delivery_notes/{delivery_note_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteDeliveryNotesId: {
        schema: {
            method: 'delete',
            url: '/delivery_notes/{delivery_note_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchDeliveryNotesId: {
        schema: {
            method: 'patch',
            url: '/delivery_notes/{delivery_note_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDeliveryNotesIdCancel: {
        schema: {
            method: 'post',
            url: '/delivery_notes/{delivery_note_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDeliveryNotesIdMarkAsDelivered: {
        schema: {
            method: 'post',
            url: '/delivery_notes/{delivery_note_id}/mark_as_delivered',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const documentTemplatesService = {
    getDocumentTemplates: {
        schema: {
            method: 'get',
            url: '/document_templates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDocumentTemplatesSystem: {
        schema: {
            method: 'get',
            url: '/document_templates/system',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDocumentTemplatesId: {
        schema: {
            method: 'get',
            url: '/document_templates/{document_template_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postDocumentTemplatesIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/document_templates/{document_template_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getDocumentTemplatesIdPreview: {
        schema: {
            method: 'get',
            url: '/document_templates/{document_template_id}/preview',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const einvoiceSearchService = {
    getEinvoiceSearch: {
        schema: {
            method: 'get',
            url: '/einvoice_search',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const einvoicingConnectionsService = {
    getEinvoicingConnections: {
        schema: {
            method: 'get',
            url: '/einvoicing_connections',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEinvoicingConnections: {
        schema: {
            method: 'post',
            url: '/einvoicing_connections',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEinvoicingConnectionsId: {
        schema: {
            method: 'get',
            url: '/einvoicing_connections/{einvoicing_connection_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteEinvoicingConnectionsId: {
        schema: {
            method: 'delete',
            url: '/einvoicing_connections/{einvoicing_connection_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEinvoicingConnectionsId: {
        schema: {
            method: 'patch',
            url: '/einvoicing_connections/{einvoicing_connection_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEinvoicingConnectionsIdNetworkCredentials: {
        schema: {
            method: 'post',
            url: '/einvoicing_connections/{einvoicing_connection_id}/network_credentials',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const entitiesService = {
    postEntities: {
        schema: {
            method: 'post',
            url: '/entities',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntities: {
        schema: {
            method: 'get',
            url: '/entities',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesMe: {
        schema: {
            method: 'get',
            url: '/entities/me',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntitiesMe: {
        schema: {
            method: 'patch',
            url: '/entities/me',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesId: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntitiesId: {
        schema: {
            method: 'patch',
            url: '/entities/{entity_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEntitiesIdActivate: {
        schema: {
            method: 'post',
            url: '/entities/{entity_id}/activate',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEntitiesIdDeactivate: {
        schema: {
            method: 'post',
            url: '/entities/{entity_id}/deactivate',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEntitiesIdDocuments: {
        schema: {
            method: 'post',
            url: '/entities/{entity_id}/documents',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putEntitiesIdLogo: {
        schema: {
            method: 'put',
            url: '/entities/{entity_id}/logo',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteEntitiesIdLogo: {
        schema: {
            method: 'delete',
            url: '/entities/{entity_id}/logo',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putEntitiesIdOnboardingData: {
        schema: {
            method: 'put',
            url: '/entities/{entity_id}/onboarding_data',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntitiesIdOnboardingData: {
        schema: {
            method: 'patch',
            url: '/entities/{entity_id}/onboarding_data',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdOnboardingData: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/onboarding_data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdOnboardingRequirements: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/onboarding_requirements',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdPartnerMetadata: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/partner_metadata',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putEntitiesIdPartnerMetadata: {
        schema: {
            method: 'put',
            url: '/entities/{entity_id}/partner_metadata',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdPaymentMethods: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/payment_methods',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putEntitiesIdPaymentMethods: {
        schema: {
            method: 'put',
            url: '/entities/{entity_id}/payment_methods',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntitiesIdSettings: {
        schema: {
            method: 'patch',
            url: '/entities/{entity_id}/settings',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdSettings: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/settings',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdSettingsNextDocumentNumbers: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/settings/next_document_numbers',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postEntitiesIdVatIds: {
        schema: {
            method: 'post',
            url: '/entities/{entity_id}/vat_ids',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdVatIds: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/vat_ids',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntitiesIdVatIdsId: {
        schema: {
            method: 'patch',
            url: '/entities/{entity_id}/vat_ids/{id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntitiesIdVatIdsId: {
        schema: {
            method: 'get',
            url: '/entities/{entity_id}/vat_ids/{id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteEntitiesIdVatIdsId: {
        schema: {
            method: 'delete',
            url: '/entities/{entity_id}/vat_ids/{id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const entityUsersService = {
    postEntityUsers: {
        schema: {
            method: 'post',
            url: '/entity_users',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntityUsers: {
        schema: {
            method: 'get',
            url: '/entity_users',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntityUsersMe: {
        schema: {
            method: 'get',
            url: '/entity_users/me',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntityUsersMe: {
        schema: {
            method: 'patch',
            url: '/entity_users/me',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntityUsersMyEntity: {
        schema: {
            method: 'get',
            url: '/entity_users/my_entity',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntityUsersMyEntity: {
        schema: {
            method: 'patch',
            url: '/entity_users/my_entity',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntityUsersMyRole: {
        schema: {
            method: 'get',
            url: '/entity_users/my_role',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEntityUsersId: {
        schema: {
            method: 'get',
            url: '/entity_users/{entity_user_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchEntityUsersId: {
        schema: {
            method: 'patch',
            url: '/entity_users/{entity_user_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteEntityUsersId: {
        schema: {
            method: 'delete',
            url: '/entity_users/{entity_user_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const eventsService = {
    getEvents: {
        schema: {
            method: 'get',
            url: '/events',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getEventsId: {
        schema: {
            method: 'get',
            url: '/events/{event_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const filesService = {
    postFiles: {
        schema: {
            method: 'post',
            url: '/files',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFiles: {
        schema: {
            method: 'get',
            url: '/files',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteFilesId: {
        schema: {
            method: 'delete',
            url: '/files/{file_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFilesId: {
        schema: {
            method: 'get',
            url: '/files/{file_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const financingInvoicesService = {
    getFinancingInvoices: {
        schema: {
            method: 'get',
            url: '/financing_invoices',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postFinancingInvoices: {
        schema: {
            method: 'post',
            url: '/financing_invoices',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const financingOffersService = {
    getFinancingOffers: {
        schema: {
            method: 'get',
            url: '/financing_offers',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const financingTokensService = {
    postFinancingTokens: {
        schema: {
            method: 'post',
            url: '/financing_tokens',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const frontendService = {
    getFrontendBankAccountMasks: {
        schema: {
            method: 'get',
            url: '/frontend/bank_account_masks',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFrontendBankAccountsCurrencyToSupportedCountries: {
        schema: {
            method: 'get',
            url: '/frontend/bank_accounts_currency_to_supported_countries',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFrontendDocumentTypeDescriptions: {
        schema: {
            method: 'get',
            url: '/frontend/document_type_descriptions',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFrontendOnboardingRequirements: {
        schema: {
            method: 'get',
            url: '/frontend/onboarding_requirements',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getFrontendPersonMask: {
        schema: {
            method: 'get',
            url: '/frontend/person_mask',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const internalService = {
    getInternalAccountingConnectionsIdSyncStatus: {
        schema: {
            method: 'get',
            url: '/internal/accounting_connections/{connection_id}/sync_status',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalCounterpartsAiSuggestions: {
        schema: {
            method: 'get',
            url: '/internal/counterparts/ai_suggestions',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalCurrencies: {
        schema: {
            method: 'get',
            url: '/internal/currencies',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalEntitiesIdLogo: {
        schema: {
            method: 'get',
            url: '/internal/entities/{entity_id}/logo',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalOnboardingLinksId: {
        schema: {
            method: 'get',
            url: '/internal/onboarding_links/{onboarding_link_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalOnboardingLinksIdAirwallexComponent: {
        schema: {
            method: 'get',
            url: '/internal/onboarding_links/{onboarding_link_id}/airwallex_component',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchInternalOnboardingLinksIdAirwallexComponent: {
        schema: {
            method: 'patch',
            url: '/internal/onboarding_links/{onboarding_link_id}/airwallex_component',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalOnboardingLinksIdAirwallexComponentAuth: {
        schema: {
            method: 'post',
            url: '/internal/onboarding_links/{onboarding_link_id}/airwallex_component/auth',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalOnboardingLinksIdRequestOtp: {
        schema: {
            method: 'post',
            url: '/internal/onboarding_links/{onboarding_link_id}/request_otp',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalOnboardingLinksIdStripe: {
        schema: {
            method: 'get',
            url: '/internal/onboarding_links/{onboarding_link_id}/stripe',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchInternalOnboardingLinksIdStripe: {
        schema: {
            method: 'patch',
            url: '/internal/onboarding_links/{onboarding_link_id}/stripe',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalOnboardingLinksIdVerifyOtp: {
        schema: {
            method: 'post',
            url: '/internal/onboarding_links/{onboarding_link_id}/verify_otp',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPayablesIdRevertPayment: {
        schema: {
            method: 'post',
            url: '/internal/payables/{payable_id}/revert_payment',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdAuthorize: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/authorize',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdAuthorizeEmbedded: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/authorize_embedded',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalPaymentIntentsIdAuthorizeEmbeddedId: {
        schema: {
            method: 'get',
            url: '/internal/payment_intents/{payment_intent_id}/authorize_embedded/{consent_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdAuthorizeEmbeddedIdSetScaCode: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/authorize_embedded/{consent_id}/set_sca_code',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdAuthorizeEmbeddedIdSetScaMethod: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/authorize_embedded/{consent_id}/set_sca_method',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalPaymentIntentsIdBanks: {
        schema: {
            method: 'get',
            url: '/internal/payment_intents/{payment_intent_id}/banks',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdConfirmPayment: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/confirm_payment',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentIntentsIdPayments: {
        schema: {
            method: 'post',
            url: '/internal/payment_intents/{payment_intent_id}/payments',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalPaymentLinksId: {
        schema: {
            method: 'get',
            url: '/internal/payment_links/{payment_link_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalPaymentLinksIdRegenerate: {
        schema: {
            method: 'post',
            url: '/internal/payment_links/{payment_link_id}/regenerate',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalPaymentPageTheme: {
        schema: {
            method: 'get',
            url: '/internal/payment_page_theme',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalQuotesId: {
        schema: {
            method: 'get',
            url: '/internal/quotes/{receivable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalQuotesIdAccept: {
        schema: {
            method: 'post',
            url: '/internal/quotes/{receivable_id}/accept',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalQuotesIdDecline: {
        schema: {
            method: 'post',
            url: '/internal/quotes/{receivable_id}/decline',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalSettings: {
        schema: {
            method: 'get',
            url: '/internal/settings',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalValidatorsLineItems: {
        schema: {
            method: 'post',
            url: '/internal/validators/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getInternalVatRates: {
        schema: {
            method: 'get',
            url: '/internal/vat_rates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postInternalVatRates: {
        schema: {
            method: 'post',
            url: '/internal/vat_rates',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteInternalVatRatesId: {
        schema: {
            method: 'delete',
            url: '/internal/vat_rates/{vat_rate_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchInternalVatRatesId: {
        schema: {
            method: 'patch',
            url: '/internal/vat_rates/{vat_rate_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const ledgerAccountsService = {
    getLedgerAccounts: {
        schema: {
            method: 'get',
            url: '/ledger_accounts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getLedgerAccountsId: {
        schema: {
            method: 'get',
            url: '/ledger_accounts/{ledger_account_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const mailTemplatesService = {
    getMailTemplates: {
        schema: {
            method: 'get',
            url: '/mail_templates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailTemplates: {
        schema: {
            method: 'post',
            url: '/mail_templates',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailTemplatesPreview: {
        schema: {
            method: 'post',
            url: '/mail_templates/preview',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getMailTemplatesSystem: {
        schema: {
            method: 'get',
            url: '/mail_templates/system',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getMailTemplatesId: {
        schema: {
            method: 'get',
            url: '/mail_templates/{template_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteMailTemplatesId: {
        schema: {
            method: 'delete',
            url: '/mail_templates/{template_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchMailTemplatesId: {
        schema: {
            method: 'patch',
            url: '/mail_templates/{template_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailTemplatesIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/mail_templates/{template_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const mailboxDomainsService = {
    getMailboxDomains: {
        schema: {
            method: 'get',
            url: '/mailbox_domains',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailboxDomains: {
        schema: {
            method: 'post',
            url: '/mailbox_domains',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteMailboxDomainsId: {
        schema: {
            method: 'delete',
            url: '/mailbox_domains/{domain_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailboxDomainsIdVerify: {
        schema: {
            method: 'post',
            url: '/mailbox_domains/{domain_id}/verify',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const mailboxesService = {
    getMailboxes: {
        schema: {
            method: 'get',
            url: '/mailboxes',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailboxes: {
        schema: {
            method: 'post',
            url: '/mailboxes',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMailboxesSearch: {
        schema: {
            method: 'post',
            url: '/mailboxes/search',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteMailboxesId: {
        schema: {
            method: 'delete',
            url: '/mailboxes/{mailbox_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const measureUnitsService = {
    getMeasureUnits: {
        schema: {
            method: 'get',
            url: '/measure_units',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postMeasureUnits: {
        schema: {
            method: 'post',
            url: '/measure_units',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getMeasureUnitsId: {
        schema: {
            method: 'get',
            url: '/measure_units/{unit_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteMeasureUnitsId: {
        schema: {
            method: 'delete',
            url: '/measure_units/{unit_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchMeasureUnitsId: {
        schema: {
            method: 'patch',
            url: '/measure_units/{unit_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const ocrTasksService = {
    getOcrTasks: {
        schema: {
            method: 'get',
            url: '/ocr_tasks',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postOcrTasks: {
        schema: {
            method: 'post',
            url: '/ocr_tasks',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postOcrTasksUploadFromFile: {
        schema: {
            method: 'post',
            url: '/ocr_tasks/upload_from_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getOcrTasksId: {
        schema: {
            method: 'get',
            url: '/ocr_tasks/{task_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const onboardingDocumentsService = {
    postOnboardingDocuments: {
        schema: {
            method: 'post',
            url: '/onboarding_documents',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const onboardingLinksService = {
    postOnboardingLinks: {
        schema: {
            method: 'post',
            url: '/onboarding_links',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const onboardingRequirementsService = {
    getOnboardingRequirements: {
        schema: {
            method: 'get',
            url: '/onboarding_requirements',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const overdueRemindersService = {
    getOverdueReminders: {
        schema: {
            method: 'get',
            url: '/overdue_reminders',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postOverdueReminders: {
        schema: {
            method: 'post',
            url: '/overdue_reminders',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getOverdueRemindersId: {
        schema: {
            method: 'get',
            url: '/overdue_reminders/{overdue_reminder_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteOverdueRemindersId: {
        schema: {
            method: 'delete',
            url: '/overdue_reminders/{overdue_reminder_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchOverdueRemindersId: {
        schema: {
            method: 'patch',
            url: '/overdue_reminders/{overdue_reminder_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const payableCreditNotesService = {
    getPayableCreditNotes: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotes: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesUploadFromFile: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/upload_from_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayableCreditNotesValidations: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes/validations',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putPayableCreditNotesValidations: {
        schema: {
            method: 'put',
            url: '/payable_credit_notes/validations',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesValidationsReset: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/validations/reset',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayableCreditNotesId: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes/{credit_note_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayableCreditNotesId: {
        schema: {
            method: 'delete',
            url: '/payable_credit_notes/{credit_note_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPayableCreditNotesId: {
        schema: {
            method: 'patch',
            url: '/payable_credit_notes/{credit_note_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdApprove: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/approve',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdCancel: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdCancelOcr: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/cancel_ocr',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayableCreditNotesIdLineItems: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes/{credit_note_id}/line_items',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putPayableCreditNotesIdLineItems: {
        schema: {
            method: 'put',
            url: '/payable_credit_notes/{credit_note_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdLineItems: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayableCreditNotesIdLineItemsId: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes/{credit_note_id}/line_items/{line_item_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayableCreditNotesIdLineItemsId: {
        schema: {
            method: 'delete',
            url: '/payable_credit_notes/{credit_note_id}/line_items/{line_item_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPayableCreditNotesIdLineItemsId: {
        schema: {
            method: 'patch',
            url: '/payable_credit_notes/{credit_note_id}/line_items/{line_item_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdReject: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/reject',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayableCreditNotesIdSubmitForApproval: {
        schema: {
            method: 'post',
            url: '/payable_credit_notes/{credit_note_id}/submit_for_approval',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayableCreditNotesIdValidate: {
        schema: {
            method: 'get',
            url: '/payable_credit_notes/{credit_note_id}/validate',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const payablePurchaseOrdersService = {
    getPayablePurchaseOrders: {
        schema: {
            method: 'get',
            url: '/payable_purchase_orders',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablePurchaseOrders: {
        schema: {
            method: 'post',
            url: '/payable_purchase_orders',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablePurchaseOrdersVariables: {
        schema: {
            method: 'get',
            url: '/payable_purchase_orders/variables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablePurchaseOrdersId: {
        schema: {
            method: 'get',
            url: '/payable_purchase_orders/{purchase_order_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayablePurchaseOrdersId: {
        schema: {
            method: 'delete',
            url: '/payable_purchase_orders/{purchase_order_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPayablePurchaseOrdersId: {
        schema: {
            method: 'patch',
            url: '/payable_purchase_orders/{purchase_order_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablePurchaseOrdersIdPreview: {
        schema: {
            method: 'post',
            url: '/payable_purchase_orders/{purchase_order_id}/preview',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablePurchaseOrdersIdSend: {
        schema: {
            method: 'post',
            url: '/payable_purchase_orders/{purchase_order_id}/send',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const payablesService = {
    getPayables: {
        schema: {
            method: 'get',
            url: '/payables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayables: {
        schema: {
            method: 'post',
            url: '/payables',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesAnalytics: {
        schema: {
            method: 'get',
            url: '/payables/analytics',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesStorecove: {
        schema: {
            method: 'post',
            url: '/payables/storecove',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesUploadFromFile: {
        schema: {
            method: 'post',
            url: '/payables/upload_from_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesValidations: {
        schema: {
            method: 'get',
            url: '/payables/validations',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putPayablesValidations: {
        schema: {
            method: 'put',
            url: '/payables/validations',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesValidationsReset: {
        schema: {
            method: 'post',
            url: '/payables/validations/reset',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesVariables: {
        schema: {
            method: 'get',
            url: '/payables/variables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesId: {
        schema: {
            method: 'get',
            url: '/payables/{payable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayablesId: {
        schema: {
            method: 'delete',
            url: '/payables/{payable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPayablesId: {
        schema: {
            method: 'patch',
            url: '/payables/{payable_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdApprovePaymentOperation: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/approve_payment_operation',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdAttachFile: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/attach_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdCancel: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdCancelOcr: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/cancel_ocr',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesIdHistory: {
        schema: {
            method: 'get',
            url: '/payables/{payable_id}/history',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesIdLineItems: {
        schema: {
            method: 'get',
            url: '/payables/{payable_id}/line_items',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putPayablesIdLineItems: {
        schema: {
            method: 'put',
            url: '/payables/{payable_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdLineItems: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesIdLineItemsId: {
        schema: {
            method: 'get',
            url: '/payables/{payable_id}/line_items/{line_item_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayablesIdLineItemsId: {
        schema: {
            method: 'delete',
            url: '/payables/{payable_id}/line_items/{line_item_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPayablesIdLineItemsId: {
        schema: {
            method: 'patch',
            url: '/payables/{payable_id}/line_items/{line_item_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdMarkAsPaid: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/mark_as_paid',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdMarkAsPartiallyPaid: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/mark_as_partially_paid',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdReject: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/reject',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdReopen: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/reopen',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdSubmitForApproval: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/submit_for_approval',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPayablesIdSuggestions: {
        schema: {
            method: 'get',
            url: '/payables/{payable_id}/suggestions',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePayablesIdSuggestions: {
        schema: {
            method: 'delete',
            url: '/payables/{payable_id}/suggestions',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPayablesIdValidate: {
        schema: {
            method: 'post',
            url: '/payables/{payable_id}/validate',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentIntentsService = {
    getPaymentIntents: {
        schema: {
            method: 'get',
            url: '/payment_intents',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentIntentsId: {
        schema: {
            method: 'get',
            url: '/payment_intents/{payment_intent_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPaymentIntentsId: {
        schema: {
            method: 'patch',
            url: '/payment_intents/{payment_intent_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentIntentsIdHistory: {
        schema: {
            method: 'get',
            url: '/payment_intents/{payment_intent_id}/history',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentLinksService = {
    postPaymentLinks: {
        schema: {
            method: 'post',
            url: '/payment_links',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentLinksId: {
        schema: {
            method: 'get',
            url: '/payment_links/{payment_link_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentLinksIdExpire: {
        schema: {
            method: 'post',
            url: '/payment_links/{payment_link_id}/expire',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentOnboardingLinksService = {
    postPaymentOnboardingLinks: {
        schema: {
            method: 'post',
            url: '/payment_onboarding_links',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentRecordsService = {
    getPaymentRecords: {
        schema: {
            method: 'get',
            url: '/payment_records',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentRecords: {
        schema: {
            method: 'post',
            url: '/payment_records',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentRecordsId: {
        schema: {
            method: 'get',
            url: '/payment_records/{payment_record_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPaymentRecordsId: {
        schema: {
            method: 'patch',
            url: '/payment_records/{payment_record_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentRecordsIdCancel: {
        schema: {
            method: 'post',
            url: '/payment_records/{payment_record_id}/cancel',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentRecordsIdMarkAsSucceeded: {
        schema: {
            method: 'post',
            url: '/payment_records/{payment_record_id}/mark_as_succeeded',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentRecordsIdStartProcessing: {
        schema: {
            method: 'post',
            url: '/payment_records/{payment_record_id}/start_processing',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentRemindersService = {
    getPaymentReminders: {
        schema: {
            method: 'get',
            url: '/payment_reminders',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentReminders: {
        schema: {
            method: 'post',
            url: '/payment_reminders',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentRemindersId: {
        schema: {
            method: 'get',
            url: '/payment_reminders/{payment_reminder_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePaymentRemindersId: {
        schema: {
            method: 'delete',
            url: '/payment_reminders/{payment_reminder_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPaymentRemindersId: {
        schema: {
            method: 'patch',
            url: '/payment_reminders/{payment_reminder_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const paymentTermsService = {
    getPaymentTerms: {
        schema: {
            method: 'get',
            url: '/payment_terms',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPaymentTerms: {
        schema: {
            method: 'post',
            url: '/payment_terms',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPaymentTermsId: {
        schema: {
            method: 'get',
            url: '/payment_terms/{payment_terms_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePaymentTermsId: {
        schema: {
            method: 'delete',
            url: '/payment_terms/{payment_terms_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPaymentTermsId: {
        schema: {
            method: 'patch',
            url: '/payment_terms/{payment_terms_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const personsService = {
    postPersons: {
        schema: {
            method: 'post',
            url: '/persons',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPersons: {
        schema: {
            method: 'get',
            url: '/persons',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getPersonsId: {
        schema: {
            method: 'get',
            url: '/persons/{person_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchPersonsId: {
        schema: {
            method: 'patch',
            url: '/persons/{person_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deletePersonsId: {
        schema: {
            method: 'delete',
            url: '/persons/{person_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPersonsIdDocuments: {
        schema: {
            method: 'post',
            url: '/persons/{person_id}/documents',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postPersonsIdOnboardingDocuments: {
        schema: {
            method: 'post',
            url: '/persons/{person_id}/onboarding_documents',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const productsService = {
    getProducts: {
        schema: {
            method: 'get',
            url: '/products',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postProducts: {
        schema: {
            method: 'post',
            url: '/products',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getProductsId: {
        schema: {
            method: 'get',
            url: '/products/{product_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteProductsId: {
        schema: {
            method: 'delete',
            url: '/products/{product_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchProductsId: {
        schema: {
            method: 'patch',
            url: '/products/{product_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const projectsService = {
    getProjects: {
        schema: {
            method: 'get',
            url: '/projects',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postProjects: {
        schema: {
            method: 'post',
            url: '/projects',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getProjectsId: {
        schema: {
            method: 'get',
            url: '/projects/{project_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteProjectsId: {
        schema: {
            method: 'delete',
            url: '/projects/{project_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchProjectsId: {
        schema: {
            method: 'patch',
            url: '/projects/{project_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const receiptsService = {
    getReceipts: {
        schema: {
            method: 'get',
            url: '/receipts',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceipts: {
        schema: {
            method: 'post',
            url: '/receipts',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceiptsUploadFromFile: {
        schema: {
            method: 'post',
            url: '/receipts/upload_from_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceiptsId: {
        schema: {
            method: 'get',
            url: '/receipts/{receipt_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteReceiptsId: {
        schema: {
            method: 'delete',
            url: '/receipts/{receipt_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchReceiptsId: {
        schema: {
            method: 'patch',
            url: '/receipts/{receipt_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceiptsIdAttachFile: {
        schema: {
            method: 'post',
            url: '/receipts/{receipt_id}/attach_file',
            mediaType: 'multipart/form-data',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceiptsIdLineItems: {
        schema: {
            method: 'get',
            url: '/receipts/{receipt_id}/line_items',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceiptsIdLineItems: {
        schema: {
            method: 'post',
            url: '/receipts/{receipt_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteReceiptsIdLineItemsId: {
        schema: {
            method: 'delete',
            url: '/receipts/{receipt_id}/line_items/{line_item_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchReceiptsIdLineItemsId: {
        schema: {
            method: 'patch',
            url: '/receipts/{receipt_id}/line_items/{line_item_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const receivablesService = {
    getReceivables: {
        schema: {
            method: 'get',
            url: '/receivables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivables: {
        schema: {
            method: 'post',
            url: '/receivables',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesRequiredFields: {
        schema: {
            method: 'get',
            url: '/receivables/required_fields',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesSearch: {
        schema: {
            method: 'post',
            url: '/receivables/search',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesVariables: {
        schema: {
            method: 'get',
            url: '/receivables/variables',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesId: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteReceivablesId: {
        schema: {
            method: 'delete',
            url: '/receivables/{receivable_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchReceivablesId: {
        schema: {
            method: 'patch',
            url: '/receivables/{receivable_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdAccept: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/accept',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdCancel: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdClone: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/clone',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdDecline: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/decline',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesIdHistory: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}/history',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesIdHistoryId: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}/history/{receivable_history_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdIssue: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/issue',
            security: [
                'HTTPBearer'
            ]
        }
    },
    putReceivablesIdLineItems: {
        schema: {
            method: 'put',
            url: '/receivables/{receivable_id}/line_items',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesIdMails: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}/mails',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesIdMailsId: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}/mails/{mail_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdMarkAsPaid: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/mark_as_paid',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdMarkAsPartiallyPaid: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/mark_as_partially_paid',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdMarkAsUncollectible: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/mark_as_uncollectible',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getReceivablesIdPdfLink: {
        schema: {
            method: 'get',
            url: '/receivables/{receivable_id}/pdf_link',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdPreview: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/preview',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdSend: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/send',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdSendTestReminder: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/send_test_reminder',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postReceivablesIdVerify: {
        schema: {
            method: 'post',
            url: '/receivables/{receivable_id}/verify',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const recurrencesService = {
    getRecurrences: {
        schema: {
            method: 'get',
            url: '/recurrences',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postRecurrences: {
        schema: {
            method: 'post',
            url: '/recurrences',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getRecurrencesId: {
        schema: {
            method: 'get',
            url: '/recurrences/{recurrence_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchRecurrencesId: {
        schema: {
            method: 'patch',
            url: '/recurrences/{recurrence_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postRecurrencesIdCancel: {
        schema: {
            method: 'post',
            url: '/recurrences/{recurrence_id}/cancel',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postRecurrencesIdPause: {
        schema: {
            method: 'post',
            url: '/recurrences/{recurrence_id}/pause',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postRecurrencesIdResume: {
        schema: {
            method: 'post',
            url: '/recurrences/{recurrence_id}/resume',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const rolesService = {
    postRoles: {
        schema: {
            method: 'post',
            url: '/roles',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getRoles: {
        schema: {
            method: 'get',
            url: '/roles',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getRolesId: {
        schema: {
            method: 'get',
            url: '/roles/{role_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchRolesId: {
        schema: {
            method: 'patch',
            url: '/roles/{role_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteRolesId: {
        schema: {
            method: 'delete',
            url: '/roles/{role_id}',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const settingsService = {
    patchSettings: {
        schema: {
            method: 'patch',
            url: '/settings',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getSettings: {
        schema: {
            method: 'get',
            url: '/settings',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const tagsService = {
    getTags: {
        schema: {
            method: 'get',
            url: '/tags',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postTags: {
        schema: {
            method: 'post',
            url: '/tags',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getTagsId: {
        schema: {
            method: 'get',
            url: '/tags/{tag_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteTagsId: {
        schema: {
            method: 'delete',
            url: '/tags/{tag_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchTagsId: {
        schema: {
            method: 'patch',
            url: '/tags/{tag_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const textTemplatesService = {
    getTextTemplates: {
        schema: {
            method: 'get',
            url: '/text_templates',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postTextTemplates: {
        schema: {
            method: 'post',
            url: '/text_templates',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getTextTemplatesId: {
        schema: {
            method: 'get',
            url: '/text_templates/{text_template_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteTextTemplatesId: {
        schema: {
            method: 'delete',
            url: '/text_templates/{text_template_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchTextTemplatesId: {
        schema: {
            method: 'patch',
            url: '/text_templates/{text_template_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postTextTemplatesIdMakeDefault: {
        schema: {
            method: 'post',
            url: '/text_templates/{text_template_id}/make_default',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const vatRatesService = {
    getVatRates: {
        schema: {
            method: 'get',
            url: '/vat_rates',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const webhookDeliveriesService = {
    getWebhookDeliveries: {
        schema: {
            method: 'get',
            url: '/webhook_deliveries',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

/**
 * This file was auto-generated by @openapi-qraft/cli.
 * Do not make direct changes to the file.
 */ const webhookSubscriptionsService = {
    getWebhookSubscriptions: {
        schema: {
            method: 'get',
            url: '/webhook_subscriptions',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postWebhookSubscriptions: {
        schema: {
            method: 'post',
            url: '/webhook_subscriptions',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    getWebhookSubscriptionsId: {
        schema: {
            method: 'get',
            url: '/webhook_subscriptions/{webhook_subscription_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    patchWebhookSubscriptionsId: {
        schema: {
            method: 'patch',
            url: '/webhook_subscriptions/{webhook_subscription_id}',
            mediaType: 'application/json',
            security: [
                'HTTPBearer'
            ]
        }
    },
    deleteWebhookSubscriptionsId: {
        schema: {
            method: 'delete',
            url: '/webhook_subscriptions/{webhook_subscription_id}',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postWebhookSubscriptionsIdDisable: {
        schema: {
            method: 'post',
            url: '/webhook_subscriptions/{webhook_subscription_id}/disable',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postWebhookSubscriptionsIdEnable: {
        schema: {
            method: 'post',
            url: '/webhook_subscriptions/{webhook_subscription_id}/enable',
            security: [
                'HTTPBearer'
            ]
        }
    },
    postWebhookSubscriptionsIdRegenerateSecret: {
        schema: {
            method: 'post',
            url: '/webhook_subscriptions/{webhook_subscription_id}/regenerate_secret',
            security: [
                'HTTPBearer'
            ]
        }
    }
};

const services = {
    accounting: accountingService,
    accountingConnections: accountingConnectionsService,
    accountingSyncedRecords: accountingSyncedRecordsService,
    accountingTaxRates: accountingTaxRatesService,
    ai: aiService,
    analytics: analyticsService,
    approvalPolicies: approvalPoliciesService,
    approvalRequests: approvalRequestsService,
    auth: authService,
    bankAccounts: bankAccountsService,
    batchPayments: batchPaymentsService,
    comments: commentsService,
    counterparts: counterpartsService,
    customVatRates: customVatRatesService,
    dataExports: dataExportsService,
    deliveryNotes: deliveryNotesService,
    documentTemplates: documentTemplatesService,
    einvoiceSearch: einvoiceSearchService,
    einvoicingConnections: einvoicingConnectionsService,
    entities: entitiesService,
    entityUsers: entityUsersService,
    events: eventsService,
    files: filesService,
    financingInvoices: financingInvoicesService,
    financingOffers: financingOffersService,
    financingTokens: financingTokensService,
    frontend: frontendService,
    internal: internalService,
    ledgerAccounts: ledgerAccountsService,
    mailTemplates: mailTemplatesService,
    mailboxDomains: mailboxDomainsService,
    mailboxes: mailboxesService,
    measureUnits: measureUnitsService,
    ocrTasks: ocrTasksService,
    onboardingDocuments: onboardingDocumentsService,
    onboardingLinks: onboardingLinksService,
    onboardingRequirements: onboardingRequirementsService,
    overdueReminders: overdueRemindersService,
    payableCreditNotes: payableCreditNotesService,
    payablePurchaseOrders: payablePurchaseOrdersService,
    payables: payablesService,
    paymentIntents: paymentIntentsService,
    paymentLinks: paymentLinksService,
    paymentOnboardingLinks: paymentOnboardingLinksService,
    paymentRecords: paymentRecordsService,
    paymentReminders: paymentRemindersService,
    paymentTerms: paymentTermsService,
    persons: personsService,
    products: productsService,
    projects: projectsService,
    receipts: receiptsService,
    receivables: receivablesService,
    recurrences: recurrencesService,
    roles: rolesService,
    settings: settingsService,
    tags: tagsService,
    textTemplates: textTemplatesService,
    vatRates: vatRatesService,
    webhookDeliveries: webhookDeliveriesService,
    webhookSubscriptions: webhookSubscriptionsService
};

function createAPIClient$1(options) {
    return react$1.qraftAPIClient(services, callbacks__namespace, options);
}

// This file was generated automatically
const packageVersion = '4.6.1';

function _define_property$3t(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3t(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2d(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2d(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2d(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$12(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$12(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$12(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const createAPIClient = (_param = {})=>{
    var { entityId } = _param, qraftClientOptions = _object_without_properties$12(_param, [
        "entityId"
    ]);
    const moniteRequestFn = (schema, requestInfo, options)=>{
        const predefinedHeaders = {
            'x-monite-version': apiVersion,
            'x-monite-sdk-version': packageVersion
        };
        if (isMoniteEntityIdPath(schema.url)) predefinedHeaders['x-monite-entity-id'] = entityId;
        return react$1.requestFn(schema, _object_spread_props$2d(_object_spread$3q({}, requestInfo), {
            headers: react$1.mergeHeaders(predefinedHeaders, requestInfo.headers)
        }), options);
    };
    return {
        api: createAPIClient$1(qraftClientOptions),
        requestFn: moniteRequestFn,
        version: apiVersion
    };
};
// TODO the REgExp should contain endpoints entity_users/me & entity_users/my_role. They are skipped for now because of workaround that will be fixed in the task https://monite.atlassian.net/browse/DEV-11719
const isMoniteEntityIdPath = (path)=>/^\/(?!auth|entities|entity_users\/my_entity|events|mail_templates|webhook_subscriptions|webhook_settings|receivables\/variables|settings|files|mailbox_domains|payable_purchase_orders|frontend\/bank_account_masks|frontend\/document_type_descriptions|frontend\/person_mask|frontend\/bank_accounts_currency_to_supported_countries|internal)\b/.test(path);

const FINANCING_LABEL = 'My Financing';
const ROW_TO_TAG_FINANCE_STATUS_MUI_MAP = {
    NEW: '#292929',
    DEFAULTED: '#CC394B',
    PAID: '#0DAA8E',
    FUNDED: '#3737FF',
    LATE: '#E27E46',
    REJECTED: '#CC394B',
    DRAFT: ''
};
const BACKGROUND_FINANCE_STATUS_MUI_MAP = {
    NEW: '#F2F2F2',
    DEFAULTED: '#FFE0E4',
    PAID: '#EEFBF9',
    FUNDED: '#F4F4FE',
    LATE: '#FFF3E9',
    REJECTED: '#FFE0E4',
    DRAFT: ''
};
const FINANCE_INVOICE_STATUS_TO_MUI_ICON_MAP = {
    NEW: iconsMaterial.AccessTime,
    DEFAULTED: iconsMaterial.BlockOutlined,
    PAID: iconsMaterial.PaidOutlined,
    FUNDED: iconsMaterial.CheckCircleOutline,
    LATE: iconsMaterial.ErrorOutline,
    REJECTED: iconsMaterial.CancelOutlined,
    DRAFT: iconsMaterial.AccessTime
};

const FILTER_TYPE_SEARCH$3 = 'search';
const FILTER_TYPE_STATUS$1 = 'status';
const FILTER_TYPE_DUE_DATE = 'due_date';
const FILTER_TYPE_SUMMARY_CARD = 'summary_card_filter';
const DEFAULT_FIELD_ORDER = [
    'document_id',
    'counterpart_id',
    'created_at',
    'due_date',
    'status',
    'amount',
    'amount_paid',
    'amount_to_pay',
    'pay'
];
const DEFAULT_CARDS_ORDER = [
    'all',
    'draft',
    'new',
    'approve_in_progress',
    'rejected',
    'waiting_to_be_paid',
    'partially_paid',
    'paid',
    'canceled'
];
const DEFAULT_REQUIRED_COLUMNS = [
    'document_id'
];

const getCountriesArray = (i18n)=>Object.entries(getCountries(i18n)).map(([code, label])=>({
            code: code,
            label
        }));
const getCountries = (i18n)=>({
        AF: i18n._({
            id: "VFCG/o"
        }),
        AX: i18n._({
            id: "o5lEK3"
        }),
        AL: i18n._({
            id: "fl/qbv"
        }),
        DZ: i18n._({
            id: "HgfQva"
        }),
        AS: i18n._({
            id: "Xp8e0M"
        }),
        AD: i18n._({
            id: "i7j+rI"
        }),
        AO: i18n._({
            id: "fFWMB8"
        }),
        AI: i18n._({
            id: "kRkTOo"
        }),
        AQ: i18n._({
            id: "W2auIP"
        }),
        AG: i18n._({
            id: "E9sbpw"
        }),
        AR: i18n._({
            id: "n25nMV"
        }),
        AM: i18n._({
            id: "uImFCC"
        }),
        AW: i18n._({
            id: "rauLEz"
        }),
        AU: i18n._({
            id: "QeKGx6"
        }),
        AT: i18n._({
            id: "SNQEUJ"
        }),
        AZ: i18n._({
            id: "ntRxPY"
        }),
        BS: i18n._({
            id: "WdBTIc"
        }),
        BH: i18n._({
            id: "4zHav4"
        }),
        BD: i18n._({
            id: "N6kXss"
        }),
        BB: i18n._({
            id: "56Z8bT"
        }),
        BY: i18n._({
            id: "Fax4U2"
        }),
        BE: i18n._({
            id: "C9G7k0"
        }),
        BZ: i18n._({
            id: "6cyLjb"
        }),
        BJ: i18n._({
            id: "nkEPgb"
        }),
        BM: i18n._({
            id: "V+Y2mD"
        }),
        BT: i18n._({
            id: "GTOXKV"
        }),
        BO: i18n._({
            id: "J3V4yP"
        }),
        BA: i18n._({
            id: "pZktS8"
        }),
        BW: i18n._({
            id: "qgi2wZ"
        }),
        BV: i18n._({
            id: "iSkah5"
        }),
        BR: i18n._({
            id: "P7k2N+"
        }),
        IO: i18n._({
            id: "ioIIOw"
        }),
        BN: i18n._({
            id: "Ju4XwE"
        }),
        BG: i18n._({
            id: "umGaDy"
        }),
        BF: i18n._({
            id: "0wg9EY"
        }),
        BI: i18n._({
            id: "2bZVF9"
        }),
        KH: i18n._({
            id: "w6uMH2"
        }),
        CM: i18n._({
            id: "0jQ4za"
        }),
        CA: i18n._({
            id: "RtHGDr"
        }),
        CV: i18n._({
            id: "SRy70x"
        }),
        KY: i18n._({
            id: "t1RF/q"
        }),
        CF: i18n._({
            id: "6yca6H"
        }),
        TD: i18n._({
            id: "skKTDB"
        }),
        CL: i18n._({
            id: "VAAqbc"
        }),
        CN: i18n._({
            id: "Rhcdj/"
        }),
        CX: i18n._({
            id: "JcJnn+"
        }),
        CC: i18n._({
            id: "gcFBCv"
        }),
        CO: i18n._({
            id: "MhCc7B"
        }),
        KM: i18n._({
            id: "n/rrHm"
        }),
        CG: i18n._({
            id: "kevRK3"
        }),
        CD: i18n._({
            id: "0yeqDC"
        }),
        CK: i18n._({
            id: "HKZDAB"
        }),
        CR: i18n._({
            id: "blW8gp"
        }),
        CI: i18n._({
            id: "XGvTNF"
        }),
        HR: i18n._({
            id: "eT0pTr"
        }),
        CU: i18n._({
            id: "fYHG5A"
        }),
        CY: i18n._({
            id: "xVtOyQ"
        }),
        CZ: i18n._({
            id: "3xjql7"
        }),
        DK: i18n._({
            id: "E/CKn7"
        }),
        DJ: i18n._({
            id: "CBjjAj"
        }),
        DM: i18n._({
            id: "9uxqj8"
        }),
        DO: i18n._({
            id: "FrBQGv"
        }),
        EC: i18n._({
            id: "MtZ4ZX"
        }),
        EG: i18n._({
            id: "NGditG"
        }),
        SV: i18n._({
            id: "08cLBp"
        }),
        GQ: i18n._({
            id: "BnWtS2"
        }),
        ER: i18n._({
            id: "jIhOia"
        }),
        EE: i18n._({
            id: "Ija6SC"
        }),
        ET: i18n._({
            id: "SjhaXQ"
        }),
        FK: i18n._({
            id: "3FHvXq"
        }),
        FO: i18n._({
            id: "7LrL7q"
        }),
        FJ: i18n._({
            id: "rx1loD"
        }),
        FI: i18n._({
            id: "n/d3zN"
        }),
        FR: i18n._({
            id: "+gY+iO"
        }),
        GF: i18n._({
            id: "Pls7ft"
        }),
        PF: i18n._({
            id: "X9yAes"
        }),
        TF: i18n._({
            id: "91A+y7"
        }),
        GA: i18n._({
            id: "PE5vOp"
        }),
        GM: i18n._({
            id: "0ttL3c"
        }),
        GE: i18n._({
            id: "26mZIT"
        }),
        DE: i18n._({
            id: "XTtR6a"
        }),
        GH: i18n._({
            id: "ja3lDX"
        }),
        GI: i18n._({
            id: "NCBDr7"
        }),
        GR: i18n._({
            id: "suigXz"
        }),
        GL: i18n._({
            id: "67xH8L"
        }),
        GD: i18n._({
            id: "XPW0U9"
        }),
        GP: i18n._({
            id: "sLECWi"
        }),
        GU: i18n._({
            id: "sG8Ixz"
        }),
        GT: i18n._({
            id: "OVrih8"
        }),
        GG: i18n._({
            id: "qN9XXd"
        }),
        GN: i18n._({
            id: "0FI1uz"
        }),
        GW: i18n._({
            id: "x76C/t"
        }),
        GY: i18n._({
            id: "YH2SkJ"
        }),
        HT: i18n._({
            id: "hcqzcm"
        }),
        HM: i18n._({
            id: "EgepXl"
        }),
        VA: i18n._({
            id: "y718b3"
        }),
        HN: i18n._({
            id: "G7r4Oi"
        }),
        HK: i18n._({
            id: "znAjDz"
        }),
        HU: i18n._({
            id: "tHPrTV"
        }),
        IS: i18n._({
            id: "2AB3u7"
        }),
        IN: i18n._({
            id: "7GbHlU"
        }),
        ID: i18n._({
            id: "y4CtQD"
        }),
        IR: i18n._({
            id: "a4gZnh"
        }),
        IQ: i18n._({
            id: "w9k801"
        }),
        IE: i18n._({
            id: "krAJef"
        }),
        IM: i18n._({
            id: "ZDGvnR"
        }),
        IL: i18n._({
            id: "rQFCoH"
        }),
        IT: i18n._({
            id: "MFljzs"
        }),
        JM: i18n._({
            id: "7dOxiL"
        }),
        JP: i18n._({
            id: "A1ET6E"
        }),
        JE: i18n._({
            id: "aMTfRY"
        }),
        JO: i18n._({
            id: "uqun6A"
        }),
        KZ: i18n._({
            id: "s9irlx"
        }),
        KE: i18n._({
            id: "QSZYwx"
        }),
        KI: i18n._({
            id: "yn1Jhl"
        }),
        KR: i18n._({
            id: "tPQi71"
        }),
        KP: i18n._({
            id: "0MeemP"
        }),
        KW: i18n._({
            id: "UYw39m"
        }),
        KG: i18n._({
            id: "rQdXWy"
        }),
        LA: i18n._({
            id: "ELRzPQ"
        }),
        LV: i18n._({
            id: "6/RHJc"
        }),
        LB: i18n._({
            id: "ss3YZQ"
        }),
        LS: i18n._({
            id: "0MAc+x"
        }),
        LR: i18n._({
            id: "A49wve"
        }),
        LY: i18n._({
            id: "si+1TP"
        }),
        LI: i18n._({
            id: "LZFxxH"
        }),
        LT: i18n._({
            id: "tPeAHE"
        }),
        LU: i18n._({
            id: "X46cnc"
        }),
        MO: i18n._({
            id: "BpogXV"
        }),
        MK: i18n._({
            id: "U2mFcW"
        }),
        MG: i18n._({
            id: "0zfPc5"
        }),
        MW: i18n._({
            id: "mpAmDi"
        }),
        MY: i18n._({
            id: "3CWdKb"
        }),
        MV: i18n._({
            id: "LToFQm"
        }),
        ML: i18n._({
            id: "myyHLb"
        }),
        MT: i18n._({
            id: "XMC+ix"
        }),
        MH: i18n._({
            id: "/W1CY2"
        }),
        MQ: i18n._({
            id: "z7ht1P"
        }),
        MR: i18n._({
            id: "0J/oR9"
        }),
        MU: i18n._({
            id: "fDPr0Q"
        }),
        YT: i18n._({
            id: "qAeqhI"
        }),
        MX: i18n._({
            id: "J6PdvT"
        }),
        FM: i18n._({
            id: "iMzuDa"
        }),
        MD: i18n._({
            id: "ZFfy9b"
        }),
        MC: i18n._({
            id: "qYYZGC"
        }),
        MN: i18n._({
            id: "tZtPRG"
        }),
        MS: i18n._({
            id: "IwXxWT"
        }),
        MA: i18n._({
            id: "C/IDOH"
        }),
        MZ: i18n._({
            id: "sBQFjV"
        }),
        MM: i18n._({
            id: "N3hvtG"
        }),
        NA: i18n._({
            id: "lQa3W0"
        }),
        NR: i18n._({
            id: "HTFZeF"
        }),
        NP: i18n._({
            id: "zrhWlq"
        }),
        NL: i18n._({
            id: "lTo/3/"
        }),
        AN: i18n._({
            id: "cqg+Qu"
        }),
        NC: i18n._({
            id: "c7mAvD"
        }),
        NZ: i18n._({
            id: "ADasb3"
        }),
        NI: i18n._({
            id: "cpNoc4"
        }),
        NE: i18n._({
            id: "1cvWEV"
        }),
        NG: i18n._({
            id: "2FumKI"
        }),
        NU: i18n._({
            id: "0WI/SI"
        }),
        NF: i18n._({
            id: "OKOh/2"
        }),
        MP: i18n._({
            id: "bqlZhX"
        }),
        NO: i18n._({
            id: "YPOHAm"
        }),
        OM: i18n._({
            id: "TDAbIp"
        }),
        PK: i18n._({
            id: "GBGf6U"
        }),
        PW: i18n._({
            id: "tPTbCz"
        }),
        PS: i18n._({
            id: "qxvS/n"
        }),
        PA: i18n._({
            id: "OUUlO8"
        }),
        PG: i18n._({
            id: "pn2ogq"
        }),
        PY: i18n._({
            id: "fr2N9b"
        }),
        PE: i18n._({
            id: "RsRRw3"
        }),
        PH: i18n._({
            id: "xR7k0Y"
        }),
        PN: i18n._({
            id: "czsjcX"
        }),
        PL: i18n._({
            id: "sfwBnA"
        }),
        PT: i18n._({
            id: "htCPf9"
        }),
        PR: i18n._({
            id: "eVk4WJ"
        }),
        QA: i18n._({
            id: "9jKy+T"
        }),
        RE: i18n._({
            id: "rSmISd"
        }),
        RO: i18n._({
            id: "mWoNJT"
        }),
        RU: i18n._({
            id: "7p7/5k"
        }),
        RW: i18n._({
            id: "IAwvQM"
        }),
        SH: i18n._({
            id: "fthr44"
        }),
        KN: i18n._({
            id: "Ym1S1O"
        }),
        LC: i18n._({
            id: "Fis8i8"
        }),
        PM: i18n._({
            id: "q/iNPB"
        }),
        VC: i18n._({
            id: "4nt45b"
        }),
        WS: i18n._({
            id: "zJfCcx"
        }),
        SM: i18n._({
            id: "bh3WAH"
        }),
        ST: i18n._({
            id: "Tr/sJa"
        }),
        SA: i18n._({
            id: "Iw7UoY"
        }),
        CS: i18n._({
            id: "gsy6gb"
        }),
        SN: i18n._({
            id: "ARtLGZ"
        }),
        SC: i18n._({
            id: "7YiXQN"
        }),
        SL: i18n._({
            id: "YCzKAA"
        }),
        SG: i18n._({
            id: "8+ImgH"
        }),
        SK: i18n._({
            id: "Chveds"
        }),
        SI: i18n._({
            id: "hXSTLN"
        }),
        SB: i18n._({
            id: "1vVROZ"
        }),
        SO: i18n._({
            id: "tMq1xU"
        }),
        ZA: i18n._({
            id: "JJ+vfH"
        }),
        GS: i18n._({
            id: "Un8OH5"
        }),
        ES: i18n._({
            id: "OigxPq"
        }),
        LK: i18n._({
            id: "vQPCWm"
        }),
        SD: i18n._({
            id: "9umCb1"
        }),
        SR: i18n._({
            id: "AEd2Vh"
        }),
        SJ: i18n._({
            id: "haT+mM"
        }),
        SZ: i18n._({
            id: "jeuZj4"
        }),
        SE: i18n._({
            id: "nnIui6"
        }),
        CH: i18n._({
            id: "c7yvtA"
        }),
        SY: i18n._({
            id: "FwimNc"
        }),
        TW: i18n._({
            id: "if5Kxg"
        }),
        TJ: i18n._({
            id: "9Iqild"
        }),
        TZ: i18n._({
            id: "Pw3pGz"
        }),
        TH: i18n._({
            id: "+tyx++"
        }),
        TL: i18n._({
            id: "XDJRcs"
        }),
        TG: i18n._({
            id: "trNmBM"
        }),
        TK: i18n._({
            id: "hLBqO+"
        }),
        TO: i18n._({
            id: "vGzZWo"
        }),
        TT: i18n._({
            id: "+OgRSX"
        }),
        TN: i18n._({
            id: "MsTUgs"
        }),
        TR: i18n._({
            id: "BbRvPY"
        }),
        TM: i18n._({
            id: "9kEOKZ"
        }),
        TC: i18n._({
            id: "VaHzq7"
        }),
        TV: i18n._({
            id: "VHdaJt"
        }),
        UG: i18n._({
            id: "KevOdr"
        }),
        UA: i18n._({
            id: "Gyc/04"
        }),
        AE: i18n._({
            id: "rwCsyF"
        }),
        GB: i18n._({
            id: "Eh7Dql"
        }),
        US: i18n._({
            id: "Mqy/Zy"
        }),
        UM: i18n._({
            id: "3VpD5h"
        }),
        UY: i18n._({
            id: "8HB/Mv"
        }),
        UZ: i18n._({
            id: "1iGIjH"
        }),
        VU: i18n._({
            id: "iWOlMs"
        }),
        VE: i18n._({
            id: "5YLAE6"
        }),
        VN: i18n._({
            id: "qjyHpe"
        }),
        VG: i18n._({
            id: "pvQ16z"
        }),
        VI: i18n._({
            id: "Rmyz2A"
        }),
        WF: i18n._({
            id: "5yalVC"
        }),
        EH: i18n._({
            id: "qP2+4s"
        }),
        YE: i18n._({
            id: "ZpORBp"
        }),
        ZM: i18n._({
            id: "kpgmML"
        }),
        ZW: i18n._({
            id: "AmGIGd"
        })
    });
const defaultAvailableCountries = [
    'AF',
    'AX',
    'AL',
    'DZ',
    'AS',
    'AD',
    'AO',
    'AI',
    'AQ',
    'AG',
    'AR',
    'AM',
    'AW',
    'AU',
    'AT',
    'AZ',
    'BS',
    'BH',
    'BD',
    'BB',
    'BY',
    'BE',
    'BZ',
    'BJ',
    'BM',
    'BT',
    'BO',
    'BA',
    'BW',
    'BV',
    'BR',
    'IO',
    'BN',
    'BG',
    'BF',
    'BI',
    'KH',
    'CM',
    'CA',
    'CV',
    'KY',
    'CF',
    'TD',
    'CL',
    'CN',
    'CX',
    'CC',
    'CO',
    'KM',
    'CG',
    'CD',
    'CK',
    'CR',
    'CI',
    'HR',
    'CU',
    'CY',
    'CZ',
    'DK',
    'DJ',
    'DM',
    'DO',
    'EC',
    'EG',
    'SV',
    'GQ',
    'ER',
    'EE',
    'ET',
    'FK',
    'FO',
    'FJ',
    'FI',
    'FR',
    'GF',
    'PF',
    'TF',
    'GA',
    'GM',
    'GE',
    'DE',
    'GH',
    'GI',
    'GR',
    'GL',
    'GD',
    'GP',
    'GU',
    'GT',
    'GG',
    'GN',
    'GW',
    'GY',
    'HT',
    'HM',
    'VA',
    'HN',
    'HK',
    'HU',
    'IS',
    'IN',
    'ID',
    'IR',
    'IQ',
    'IE',
    'IM',
    'IL',
    'IT',
    'JM',
    'JP',
    'JE',
    'JO',
    'KZ',
    'KE',
    'KI',
    'KR',
    'KP',
    'KW',
    'KG',
    'LA',
    'LV',
    'LB',
    'LS',
    'LR',
    'LY',
    'LI',
    'LT',
    'LU',
    'MO',
    'MK',
    'MG',
    'MW',
    'MY',
    'MV',
    'ML',
    'MT',
    'MH',
    'MQ',
    'MR',
    'MU',
    'YT',
    'MX',
    'FM',
    'MD',
    'MC',
    'MN',
    'MS',
    'MA',
    'MZ',
    'MM',
    'NA',
    'NR',
    'NP',
    'NL',
    'AN',
    'NC',
    'NZ',
    'NI',
    'NE',
    'NG',
    'NU',
    'NF',
    'MP',
    'NO',
    'OM',
    'PK',
    'PW',
    'PS',
    'PA',
    'PG',
    'PY',
    'PE',
    'PH',
    'PN',
    'PL',
    'PT',
    'PR',
    'QA',
    'RE',
    'RO',
    'RU',
    'RW',
    'SH',
    'KN',
    'LC',
    'PM',
    'VC',
    'WS',
    'SM',
    'ST',
    'SA',
    'SN',
    'SC',
    'SL',
    'SG',
    'SK',
    'SI',
    'SB',
    'SO',
    'ZA',
    'GS',
    'ES',
    'LK',
    'SD',
    'SR',
    'SJ',
    'SZ',
    'SE',
    'CH',
    'SY',
    'TW',
    'TJ',
    'TZ',
    'TH',
    'TL',
    'TG',
    'TK',
    'TO',
    'TT',
    'TN',
    'TR',
    'TM',
    'TC',
    'TV',
    'UG',
    'UA',
    'AE',
    'GB',
    'US',
    'UM',
    'UY',
    'UZ',
    'VU',
    'VE',
    'VN',
    'VG',
    'VI',
    'WF',
    'EH',
    'YE',
    'ZM',
    'ZW'
];
const countryCurrencyList = [
    {
        country: 'AF',
        currency: 'AFN'
    },
    {
        country: 'AX',
        currency: 'EUR'
    },
    {
        country: 'AL',
        currency: 'ALL'
    },
    {
        country: 'DZ',
        currency: 'DZD'
    },
    {
        country: 'AS',
        currency: 'USD'
    },
    {
        country: 'AD',
        currency: 'EUR'
    },
    {
        country: 'AO',
        currency: 'AOA'
    },
    {
        country: 'AI',
        currency: 'XCD'
    },
    {
        country: 'AQ',
        currency: ''
    },
    {
        country: 'AG',
        currency: 'XCD'
    },
    {
        country: 'AR',
        currency: 'ARS'
    },
    {
        country: 'AM',
        currency: 'AMD'
    },
    {
        country: 'AW',
        currency: 'AWG'
    },
    {
        country: 'AU',
        currency: 'AUD'
    },
    {
        country: 'AT',
        currency: 'EUR'
    },
    {
        country: 'AZ',
        currency: 'AZN'
    },
    {
        country: 'BS',
        currency: 'BSD'
    },
    {
        country: 'BH',
        currency: 'BHD'
    },
    {
        country: 'BD',
        currency: 'BDT'
    },
    {
        country: 'BB',
        currency: 'BBD'
    },
    {
        country: 'BY',
        currency: 'BYN'
    },
    {
        country: 'BE',
        currency: 'EUR'
    },
    {
        country: 'BZ',
        currency: 'BZD'
    },
    {
        country: 'BJ',
        currency: 'XOF'
    },
    {
        country: 'BM',
        currency: 'BMD'
    },
    {
        country: 'BT',
        currency: 'BTN'
    },
    {
        country: 'BO',
        currency: 'BOB'
    },
    {
        country: 'BA',
        currency: 'BAM'
    },
    {
        country: 'BW',
        currency: 'BWP'
    },
    {
        country: 'BV',
        currency: 'NOK'
    },
    {
        country: 'BR',
        currency: 'BRL'
    },
    {
        country: 'IO',
        currency: 'USD'
    },
    {
        country: 'BN',
        currency: 'BND'
    },
    {
        country: 'BG',
        currency: 'BGN'
    },
    {
        country: 'BF',
        currency: 'XOF'
    },
    {
        country: 'BI',
        currency: 'BIF'
    },
    {
        country: 'KH',
        currency: 'KHR'
    },
    {
        country: 'CM',
        currency: 'XAF'
    },
    {
        country: 'CA',
        currency: 'CAD'
    },
    {
        country: 'CV',
        currency: 'CVE'
    },
    {
        country: 'KY',
        currency: 'KYD'
    },
    {
        country: 'CF',
        currency: 'XAF'
    },
    {
        country: 'TD',
        currency: 'XAF'
    },
    {
        country: 'CL',
        currency: 'CLP'
    },
    {
        country: 'CN',
        currency: 'CNY'
    },
    {
        country: 'CX',
        currency: 'AUD'
    },
    {
        country: 'CC',
        currency: 'AUD'
    },
    {
        country: 'CO',
        currency: 'COP'
    },
    {
        country: 'KM',
        currency: 'KMF'
    },
    {
        country: 'CG',
        currency: 'XAF'
    },
    {
        country: 'CD',
        currency: 'CDF'
    },
    {
        country: 'CK',
        currency: 'NZD'
    },
    {
        country: 'CR',
        currency: 'CRC'
    },
    {
        country: 'CI',
        currency: 'XOF'
    },
    {
        country: 'HR',
        currency: 'EUR'
    },
    {
        country: 'CU',
        currency: 'CUP'
    },
    {
        country: 'CY',
        currency: 'EUR'
    },
    {
        country: 'CZ',
        currency: 'CZK'
    },
    {
        country: 'DK',
        currency: 'DKK'
    },
    {
        country: 'DJ',
        currency: 'DJF'
    },
    {
        country: 'DM',
        currency: 'XCD'
    },
    {
        country: 'DO',
        currency: 'DOP'
    },
    {
        country: 'EC',
        currency: 'USD'
    },
    {
        country: 'EG',
        currency: 'EGP'
    },
    {
        country: 'SV',
        currency: 'SVC'
    },
    {
        country: 'GQ',
        currency: 'XAF'
    },
    {
        country: 'ER',
        currency: 'ERN'
    },
    {
        country: 'EE',
        currency: 'EUR'
    },
    {
        country: 'ET',
        currency: 'ETB'
    },
    {
        country: 'FK',
        currency: 'FKP'
    },
    {
        country: 'FO',
        currency: 'DKK'
    },
    {
        country: 'FJ',
        currency: 'FJD'
    },
    {
        country: 'FI',
        currency: 'EUR'
    },
    {
        country: 'FR',
        currency: 'EUR'
    },
    {
        country: 'GF',
        currency: 'EUR'
    },
    {
        country: 'PF',
        currency: 'XPF'
    },
    {
        country: 'TF',
        currency: 'EUR'
    },
    {
        country: 'GA',
        currency: 'XAF'
    },
    {
        country: 'GM',
        currency: 'GMD'
    },
    {
        country: 'GE',
        currency: 'GEL'
    },
    {
        country: 'DE',
        currency: 'EUR'
    },
    {
        country: 'GH',
        currency: 'GHS'
    },
    {
        country: 'GI',
        currency: 'GIP'
    },
    {
        country: 'GR',
        currency: 'EUR'
    },
    {
        country: 'GL',
        currency: 'DKK'
    },
    {
        country: 'GD',
        currency: 'XCD'
    },
    {
        country: 'GP',
        currency: 'EUR'
    },
    {
        country: 'GU',
        currency: 'USD'
    },
    {
        country: 'GT',
        currency: 'GTQ'
    },
    {
        country: 'GG',
        currency: 'GBP'
    },
    {
        country: 'GN',
        currency: 'GNF'
    },
    {
        country: 'GW',
        currency: 'XOF'
    },
    {
        country: 'GY',
        currency: 'GYD'
    },
    {
        country: 'HT',
        currency: 'HTG'
    },
    {
        country: 'HM',
        currency: 'AUD'
    },
    {
        country: 'VA',
        currency: 'EUR'
    },
    {
        country: 'HN',
        currency: 'HNL'
    },
    {
        country: 'HK',
        currency: 'HKD'
    },
    {
        country: 'HU',
        currency: 'HUF'
    },
    {
        country: 'IS',
        currency: 'ISK'
    },
    {
        country: 'IN',
        currency: 'INR'
    },
    {
        country: 'ID',
        currency: 'IDR'
    },
    {
        country: 'IR',
        currency: 'IRR'
    },
    {
        country: 'IQ',
        currency: 'IQD'
    },
    {
        country: 'IE',
        currency: 'EUR'
    },
    {
        country: 'IM',
        currency: 'GBP'
    },
    {
        country: 'IL',
        currency: 'ILS'
    },
    {
        country: 'IT',
        currency: 'EUR'
    },
    {
        country: 'JM',
        currency: 'JMD'
    },
    {
        country: 'JP',
        currency: 'JPY'
    },
    {
        country: 'JE',
        currency: 'GBP'
    },
    {
        country: 'JO',
        currency: 'JOD'
    },
    {
        country: 'KZ',
        currency: 'KZT'
    },
    {
        country: 'KE',
        currency: 'KES'
    },
    {
        country: 'KI',
        currency: 'AUD'
    },
    {
        country: 'KR',
        currency: 'KRW'
    },
    {
        country: 'KP',
        currency: 'KPW'
    },
    {
        country: 'KW',
        currency: 'KWD'
    },
    {
        country: 'KG',
        currency: 'KGS'
    },
    {
        country: 'LA',
        currency: 'LAK'
    },
    {
        country: 'LV',
        currency: 'EUR'
    },
    {
        country: 'LB',
        currency: 'LBP'
    },
    {
        country: 'LS',
        currency: 'LSL'
    },
    {
        country: 'LR',
        currency: 'LRD'
    },
    {
        country: 'LY',
        currency: 'LYD'
    },
    {
        country: 'LI',
        currency: 'CHF'
    },
    {
        country: 'LT',
        currency: 'EUR'
    },
    {
        country: 'LU',
        currency: 'EUR'
    },
    {
        country: 'MO',
        currency: 'MOP'
    },
    {
        country: 'MK',
        currency: 'MKD'
    },
    {
        country: 'MG',
        currency: 'MGA'
    },
    {
        country: 'MW',
        currency: 'MWK'
    },
    {
        country: 'MY',
        currency: 'MYR'
    },
    {
        country: 'MV',
        currency: 'MVR'
    },
    {
        country: 'ML',
        currency: 'XOF'
    },
    {
        country: 'MT',
        currency: 'EUR'
    },
    {
        country: 'MH',
        currency: 'USD'
    },
    {
        country: 'MQ',
        currency: 'EUR'
    },
    {
        country: 'MR',
        currency: 'MRU'
    },
    {
        country: 'MU',
        currency: 'MUR'
    },
    {
        country: 'YT',
        currency: 'EUR'
    },
    {
        country: 'MX',
        currency: 'MXN'
    },
    {
        country: 'FM',
        currency: 'USD'
    },
    {
        country: 'MD',
        currency: 'MDL'
    },
    {
        country: 'MC',
        currency: 'EUR'
    },
    {
        country: 'MN',
        currency: 'MNT'
    },
    {
        country: 'MS',
        currency: 'XCD'
    },
    {
        country: 'MA',
        currency: 'MAD'
    },
    {
        country: 'MZ',
        currency: 'MZN'
    },
    {
        country: 'MM',
        currency: 'MMK'
    },
    {
        country: 'NA',
        currency: 'NAD'
    },
    {
        country: 'NR',
        currency: 'AUD'
    },
    {
        country: 'NP',
        currency: 'NPR'
    },
    {
        country: 'NL',
        currency: 'EUR'
    },
    {
        country: 'AN',
        currency: 'ANG'
    },
    {
        country: 'NC',
        currency: 'XPF'
    },
    {
        country: 'NZ',
        currency: 'NZD'
    },
    {
        country: 'NI',
        currency: 'NIO'
    },
    {
        country: 'NE',
        currency: 'XOF'
    },
    {
        country: 'NG',
        currency: 'NGN'
    },
    {
        country: 'NU',
        currency: 'NZD'
    },
    {
        country: 'NF',
        currency: 'AUD'
    },
    {
        country: 'MP',
        currency: 'USD'
    },
    {
        country: 'NO',
        currency: 'NOK'
    },
    {
        country: 'OM',
        currency: 'OMR'
    },
    {
        country: 'PK',
        currency: 'PKR'
    },
    {
        country: 'PW',
        currency: 'USD'
    },
    {
        country: 'PS',
        currency: ''
    },
    {
        country: 'PA',
        currency: 'PAB'
    },
    {
        country: 'PG',
        currency: 'PGK'
    },
    {
        country: 'PY',
        currency: 'PYG'
    },
    {
        country: 'PE',
        currency: 'PEN'
    },
    {
        country: 'PH',
        currency: 'PHP'
    },
    {
        country: 'PN',
        currency: 'NZD'
    },
    {
        country: 'PL',
        currency: 'PLN'
    },
    {
        country: 'PT',
        currency: 'EUR'
    },
    {
        country: 'PR',
        currency: 'USD'
    },
    {
        country: 'QA',
        currency: 'QAR'
    },
    {
        country: 'RE',
        currency: 'EUR'
    },
    {
        country: 'RO',
        currency: 'RON'
    },
    {
        country: 'RU',
        currency: 'RUB'
    },
    {
        country: 'RW',
        currency: 'RWF'
    },
    {
        country: 'SH',
        currency: 'SHP'
    },
    {
        country: 'KN',
        currency: 'XCD'
    },
    {
        country: 'LC',
        currency: 'XCD'
    },
    {
        country: 'PM',
        currency: 'EUR'
    },
    {
        country: 'VC',
        currency: 'XCD'
    },
    {
        country: 'WS',
        currency: 'WST'
    },
    {
        country: 'SM',
        currency: 'EUR'
    },
    {
        country: 'ST',
        currency: 'STN'
    },
    {
        country: 'SA',
        currency: 'SAR'
    },
    {
        country: 'CS',
        currency: 'RSD'
    },
    {
        country: 'SN',
        currency: 'XOF'
    },
    {
        country: 'SC',
        currency: 'SCR'
    },
    {
        country: 'SL',
        currency: 'SLE'
    },
    {
        country: 'SG',
        currency: 'SGD'
    },
    {
        country: 'SK',
        currency: 'EUR'
    },
    {
        country: 'SI',
        currency: 'EUR'
    },
    {
        country: 'SB',
        currency: 'SBD'
    },
    {
        country: 'SO',
        currency: 'SOS'
    },
    {
        country: 'ZA',
        currency: 'ZAR'
    },
    {
        country: 'GS',
        currency: ''
    },
    {
        country: 'ES',
        currency: 'EUR'
    },
    {
        country: 'LK',
        currency: 'LKR'
    },
    {
        country: 'SD',
        currency: 'SDG'
    },
    {
        country: 'SR',
        currency: 'SRD'
    },
    {
        country: 'SJ',
        currency: 'NOK'
    },
    {
        country: 'SZ',
        currency: 'SZL'
    },
    {
        country: 'SE',
        currency: 'SEK'
    },
    {
        country: 'CH',
        currency: 'CHF'
    },
    {
        country: 'SY',
        currency: 'SYP'
    },
    {
        country: 'TW',
        currency: 'TWD'
    },
    {
        country: 'TJ',
        currency: 'TJS'
    },
    {
        country: 'TZ',
        currency: 'TZS'
    },
    {
        country: 'TH',
        currency: 'THB'
    },
    {
        country: 'TL',
        currency: 'USD'
    },
    {
        country: 'TG',
        currency: 'XOF'
    },
    {
        country: 'TK',
        currency: 'NZD'
    },
    {
        country: 'TO',
        currency: 'TOP'
    },
    {
        country: 'TT',
        currency: 'TTD'
    },
    {
        country: 'TN',
        currency: 'TND'
    },
    {
        country: 'TR',
        currency: 'TRY'
    },
    {
        country: 'TM',
        currency: 'TMT'
    },
    {
        country: 'TC',
        currency: 'USD'
    },
    {
        country: 'TV',
        currency: 'AUD'
    },
    {
        country: 'UG',
        currency: 'UGX'
    },
    {
        country: 'UA',
        currency: 'UAH'
    },
    {
        country: 'AE',
        currency: 'AED'
    },
    {
        country: 'GB',
        currency: 'GBP'
    },
    {
        country: 'UM',
        currency: 'USD'
    },
    {
        country: 'US',
        currency: 'USD'
    },
    {
        country: 'UY',
        currency: 'UYU'
    },
    {
        country: 'UZ',
        currency: 'UZS'
    },
    {
        country: 'VU',
        currency: 'VUV'
    },
    {
        country: 'VE',
        currency: 'VEF'
    },
    {
        country: 'VN',
        currency: 'VND'
    },
    {
        country: 'VG',
        currency: 'USD'
    },
    {
        country: 'VI',
        currency: 'USD'
    },
    {
        country: 'WF',
        currency: 'XPF'
    },
    {
        country: 'EH',
        currency: 'MAD'
    },
    {
        country: 'YE',
        currency: 'YER'
    },
    {
        country: 'ZM',
        currency: 'ZMW'
    },
    {
        country: 'ZW',
        currency: 'ZWL'
    }
];

/**
 * Convert a monetary amount from major units (e.g., 12.34) to minor units (e.g., 1234)
 * Uses rounding to avoid floating point precision issues.
 *
 * @param amountMajor Amount in major units
 * @param exponent Currency exponent (default 2 for cents)
 * @returns Amount in minor units as integer
 */ const toMinorUnits = (amountMajor, exponent = 2)=>{
    const factor = Math.pow(10, exponent);
    return Math.round(amountMajor * factor);
};
/**
 * Convert a monetary amount from minor units (e.g., 1234) to major units (e.g., 12.34)
 *
 * @param amountMinor Amount in minor units
 * @param exponent Currency exponent (default 2 for cents)
 * @returns Amount in major units
 */ const fromMinorUnits = (amountMinor, exponent = 2)=>{
    const factor = Math.pow(10, exponent);
    return amountMinor / factor;
};
/**
 * Convert a monetary amount from major units to minor units using currency-specific data
 * Returns null if currency is not found in the currency list or if input is invalid
 *
 * @param amountMajor Amount in major units (string or number)
 * @param currency Currency code
 * @param currencyList Currency metadata from API
 * @returns Amount in minor units as integer, or null if currency not found or input is invalid/non-finite
 */ const toMinorUnitsWithCurrency = (amountMajor, currency, currencyList)=>{
    const currencyData = currencyList === null || currencyList === void 0 ? void 0 : currencyList[currency];
    if (!currencyData) {
        return null;
    }
    const isString = typeof amountMajor === 'string';
    const n = isString ? Number(amountMajor) : amountMajor;
    if (!Number.isFinite(n) || isString && amountMajor.trim() === '') {
        return null;
    }
    return toMinorUnits(n, currencyData.minor_units);
};
/**
 * Convert a monetary amount from minor units to major units using currency-specific data
 * Uses proper rounding to maintain precision based on currency's minor units
 * Returns null if currency is not found in the currency list or if input is invalid
 *
 * @param amountMinor Amount in minor units
 * @param currency Currency code
 * @param currencyList Currency metadata from API
 * @returns Amount in major units, or null if currency not found or input is invalid/non-finite
 */ const fromMinorUnitsWithCurrency = (amountMinor, currency, currencyList)=>{
    const currencyData = currencyList === null || currencyList === void 0 ? void 0 : currencyList[currency];
    if (!currencyData) {
        return null;
    }
    if (!Number.isFinite(amountMinor)) {
        return null;
    }
    const converted = fromMinorUnits(amountMinor, currencyData.minor_units);
    return Number(converted.toFixed(currencyData.minor_units));
};

const getCurrencies = (i18n)=>({
        AED: i18n._({
            id: "smIDaJ"
        }),
        AFN: i18n._({
            id: "0s9hFs"
        }),
        ALL: i18n._({
            id: "8/ipFL"
        }),
        AMD: i18n._({
            id: "arac1/"
        }),
        ANG: i18n._({
            id: "cqaAwi"
        }),
        AOA: i18n._({
            id: "WMO1+X"
        }),
        ARS: i18n._({
            id: "sHkcwT"
        }),
        AUD: i18n._({
            id: "aGmUAI"
        }),
        AWG: i18n._({
            id: "g4DY1c"
        }),
        AZN: i18n._({
            id: "C34yri"
        }),
        BAM: i18n._({
            id: "Fo8IsD"
        }),
        BBD: i18n._({
            id: "mG1SpX"
        }),
        BDT: i18n._({
            id: "OFbW3u"
        }),
        BGN: i18n._({
            id: "8CHWOC"
        }),
        BHD: i18n._({
            id: "hlm84A"
        }),
        BIF: i18n._({
            id: "EtVGgr"
        }),
        BMD: i18n._({
            id: "6geTbl"
        }),
        BND: i18n._({
            id: "tSPzV9"
        }),
        BOB: i18n._({
            id: "FGlXPz"
        }),
        BRL: i18n._({
            id: "Ygn65A"
        }),
        BSD: i18n._({
            id: "ydt0Tl"
        }),
        BTN: i18n._({
            id: "/AMmPq"
        }),
        BWP: i18n._({
            id: "nZqN7b"
        }),
        BYN: i18n._({
            id: "NtUHwE"
        }),
        BZD: i18n._({
            id: "ge7wu8"
        }),
        CAD: i18n._({
            id: "bzyYOo"
        }),
        CDF: i18n._({
            id: "guZi6+"
        }),
        CHF: i18n._({
            id: "UA8U+w"
        }),
        CLP: i18n._({
            id: "5TpkFx"
        }),
        CNY: i18n._({
            id: "uV0R+E"
        }),
        COP: i18n._({
            id: "W8y5Yk"
        }),
        CRC: i18n._({
            id: "bWd3WR"
        }),
        CVE: i18n._({
            id: "wHbSJG"
        }),
        CZK: i18n._({
            id: "bvWGm8"
        }),
        DJF: i18n._({
            id: "xqWL7j"
        }),
        DKK: i18n._({
            id: "9NxL0P"
        }),
        DOP: i18n._({
            id: "bmT5m3"
        }),
        DZD: i18n._({
            id: "m+zTKr"
        }),
        EGP: i18n._({
            id: "NFSe9y"
        }),
        ETB: i18n._({
            id: "JATUCE"
        }),
        EUR: i18n._({
            id: "q0fWax"
        }),
        FJD: i18n._({
            id: "UMAHMm"
        }),
        FKP: i18n._({
            id: "7rReDI"
        }),
        GBP: i18n._({
            id: "ypDg4R"
        }),
        GEL: i18n._({
            id: "r4JV1T"
        }),
        GHS: i18n._({
            id: "cud7j2"
        }),
        GIP: i18n._({
            id: "0EN8ce"
        }),
        GMD: i18n._({
            id: "ZH/yhw"
        }),
        GNF: i18n._({
            id: "UPftN8"
        }),
        GTQ: i18n._({
            id: "r0/Kqt"
        }),
        GYD: i18n._({
            id: "SK/R2a"
        }),
        HKD: i18n._({
            id: "+zYNlY"
        }),
        HNL: i18n._({
            id: "2X2BbP"
        }),
        HTG: i18n._({
            id: "8f9/TK"
        }),
        HUF: i18n._({
            id: "S3IIJn"
        }),
        IDR: i18n._({
            id: "+4LAZl"
        }),
        ILS: i18n._({
            id: "DHOTzN"
        }),
        INR: i18n._({
            id: "RZla6+"
        }),
        IQD: i18n._({
            id: "12L4FP"
        }),
        ISK: i18n._({
            id: "ZvMDtZ"
        }),
        JMD: i18n._({
            id: "coaY8z"
        }),
        JOD: i18n._({
            id: "hfR4mz"
        }),
        JPY: i18n._({
            id: "6DzmqI"
        }),
        KES: i18n._({
            id: "HsllL2"
        }),
        KGS: i18n._({
            id: "8ZZQ5y"
        }),
        KHR: i18n._({
            id: "/wsPTq"
        }),
        KMF: i18n._({
            id: "i34uId"
        }),
        KRW: i18n._({
            id: "wsZfno"
        }),
        KWD: i18n._({
            id: "In8hEd"
        }),
        KYD: i18n._({
            id: "+Lza98"
        }),
        KZT: i18n._({
            id: "63u8jK"
        }),
        LAK: i18n._({
            id: "Nx8xgB"
        }),
        LBP: i18n._({
            id: "S1aE/A"
        }),
        LKR: i18n._({
            id: "PZkhFT"
        }),
        LRD: i18n._({
            id: "9hUQmL"
        }),
        LSL: i18n._({
            id: "qoDZtU"
        }),
        LYD: i18n._({
            id: "VjhQ1M"
        }),
        MAD: i18n._({
            id: "4fC8E9"
        }),
        MDL: i18n._({
            id: "cCoAtl"
        }),
        MGA: i18n._({
            id: "fzy9U/"
        }),
        MKD: i18n._({
            id: "l33/LU"
        }),
        MMK: i18n._({
            id: "FKTdN9"
        }),
        MNT: i18n._({
            id: "2kYRUi"
        }),
        MOP: i18n._({
            id: "GZtgt0"
        }),
        MUR: i18n._({
            id: "/tV9ZB"
        }),
        MVR: i18n._({
            id: "3X6pZF"
        }),
        MWK: i18n._({
            id: "+SFW/0"
        }),
        MXN: i18n._({
            id: "TqoBLx"
        }),
        MYR: i18n._({
            id: "FqVVGq"
        }),
        MZN: i18n._({
            id: "jQrgg9"
        }),
        NAD: i18n._({
            id: "+aN2zp"
        }),
        NGN: i18n._({
            id: "BQMTGp"
        }),
        NIO: i18n._({
            id: "282UJL"
        }),
        NOK: i18n._({
            id: "4uJdwj"
        }),
        NPR: i18n._({
            id: "k5RhLf"
        }),
        NZD: i18n._({
            id: "P+OIQt"
        }),
        OMR: i18n._({
            id: "BFeaov"
        }),
        PAB: i18n._({
            id: "+z/TIb"
        }),
        PEN: i18n._({
            id: "98CaAA"
        }),
        PGK: i18n._({
            id: "maxSB8"
        }),
        PHP: i18n._({
            id: "ABbcVg"
        }),
        PKR: i18n._({
            id: "g3F/ND"
        }),
        PLN: i18n._({
            id: "SB+tBo"
        }),
        PYG: i18n._({
            id: "l4bK5V"
        }),
        QAR: i18n._({
            id: "iHnh3v"
        }),
        TMT: i18n._({
            id: "dFfiAt"
        }),
        RON: i18n._({
            id: "42soY0"
        }),
        RSD: i18n._({
            id: "KaEnmm"
        }),
        RUB: i18n._({
            id: "XjglO5"
        }),
        RWF: i18n._({
            id: "U2GxOw"
        }),
        SAR: i18n._({
            id: "pnYiFQ"
        }),
        SBD: i18n._({
            id: "2wyCgk"
        }),
        SCR: i18n._({
            id: "HxgYFh"
        }),
        SEK: i18n._({
            id: "bbVHl3"
        }),
        SGD: i18n._({
            id: "49XxJg"
        }),
        SHP: i18n._({
            id: "/2mIgx"
        }),
        SLE: i18n._({
            id: "eUQVZV"
        }),
        SOS: i18n._({
            id: "QnGL8d"
        }),
        SRD: i18n._({
            id: "m1mDpK"
        }),
        SSP: i18n._({
            id: "+RNxar"
        }),
        SVC: i18n._({
            id: "U8iJH/"
        }),
        SZL: i18n._({
            id: "RKseeU"
        }),
        THB: i18n._({
            id: "YBAdNl"
        }),
        TJS: i18n._({
            id: "Tx8tOO"
        }),
        TND: i18n._({
            id: "RAUgZW"
        }),
        TOP: i18n._({
            id: "7jBV+9"
        }),
        TRY: i18n._({
            id: "GiSunU"
        }),
        TTD: i18n._({
            id: "PJX9yG"
        }),
        TWD: i18n._({
            id: "jpstGb"
        }),
        TZS: i18n._({
            id: "58DPd4"
        }),
        UAH: i18n._({
            id: "PK0BUQ"
        }),
        UGX: i18n._({
            id: "FDsrq7"
        }),
        USD: i18n._({
            id: "QeSNDd"
        }),
        UYU: i18n._({
            id: "p55e9l"
        }),
        UZS: i18n._({
            id: "TImlpj"
        }),
        VND: i18n._({
            id: "ZRXHdm"
        }),
        VUV: i18n._({
            id: "DPUAwe"
        }),
        WST: i18n._({
            id: "GCFvqV"
        }),
        XAF: i18n._({
            id: "k2vQ/9"
        }),
        XCD: i18n._({
            id: "zgn8aj"
        }),
        XOF: i18n._({
            id: "oRrE/s"
        }),
        XPF: i18n._({
            id: "mNkqxA"
        }),
        YER: i18n._({
            id: "ST6sUv"
        }),
        ZAR: i18n._({
            id: "//Ty+s"
        }),
        ZMW: i18n._({
            id: "oFGYLl"
        })
    });
const defaultAvailableCurrencies = [
    'AED',
    'AFN',
    'ALL',
    'AMD',
    'ANG',
    'AOA',
    'ARS',
    'AUD',
    'AWG',
    'AZN',
    'BAM',
    'BBD',
    'BDT',
    'BGN',
    'BHD',
    'BIF',
    'BMD',
    'BND',
    'BOB',
    'BRL',
    'BSD',
    'BTN',
    'BWP',
    'BYN',
    'BZD',
    'CAD',
    'CDF',
    'CHF',
    'CLP',
    'CNY',
    'COP',
    'CRC',
    'CVE',
    'CZK',
    'DJF',
    'DKK',
    'DOP',
    'DZD',
    'EGP',
    'ETB',
    'EUR',
    'FJD',
    'FKP',
    'GBP',
    'GEL',
    'GHS',
    'GIP',
    'GMD',
    'GNF',
    'GTQ',
    'GYD',
    'HKD',
    'HNL',
    'HTG',
    'HUF',
    'IDR',
    'ILS',
    'INR',
    'IQD',
    'ISK',
    'JMD',
    'JOD',
    'JPY',
    'KES',
    'KGS',
    'KHR',
    'KMF',
    'KRW',
    'KWD',
    'KYD',
    'KZT',
    'LAK',
    'LBP',
    'LKR',
    'LRD',
    'LSL',
    'LYD',
    'MAD',
    'MDL',
    'MGA',
    'MKD',
    'MMK',
    'MNT',
    'MOP',
    'MUR',
    'MVR',
    'MWK',
    'MXN',
    'MYR',
    'MZN',
    'NAD',
    'NGN',
    'NIO',
    'NOK',
    'NPR',
    'NZD',
    'OMR',
    'PAB',
    'PEN',
    'PGK',
    'PHP',
    'PKR',
    'PLN',
    'PYG',
    'QAR',
    'TMT',
    'RON',
    'RSD',
    'RUB',
    'RWF',
    'SAR',
    'SBD',
    'SCR',
    'SEK',
    'SGD',
    'SHP',
    'SLE',
    'SOS',
    'SRD',
    'SSP',
    'SVC',
    'SZL',
    'THB',
    'TJS',
    'TND',
    'TOP',
    'TRY',
    'TTD',
    'TWD',
    'TZS',
    'UAH',
    'UGX',
    'USD',
    'UYU',
    'UZS',
    'VND',
    'VUV',
    'WST',
    'XAF',
    'XCD',
    'XOF',
    'XPF',
    'YER',
    'ZAR',
    'ZMW'
];
const getCurrenciesArray = (i18n)=>Object.entries(getCurrencies(i18n)).map(([code, label])=>({
            code: code,
            label
        }));
const filterOptions = (options, state)=>{
    const { inputValue } = state;
    const lowerCaseInput = inputValue.toLowerCase().trim();
    if (!lowerCaseInput) {
        return options;
    }
    return options.filter((option)=>option.code.toLowerCase().includes(lowerCaseInput) || option.label.toLowerCase().includes(lowerCaseInput));
};
const getGroupTitleForOption = (option, groups)=>{
    if (!groups) {
        return {
            title: '',
            index: Infinity
        };
    }
    for(let i = 0; i < groups.length; i++){
        const group = groups[i];
        if (group.predicate(option)) {
            return {
                title: group.title,
                index: i
            };
        }
    }
    return {
        title: '',
        index: groups.length
    };
};
const sortCurrencyOptionsByGroup = (options, groups)=>{
    if (!groups) {
        return options;
    }
    return [
        ...options
    ].sort((a, b)=>{
        const groupA = getGroupTitleForOption(a, groups);
        const groupB = getGroupTitleForOption(b, groups);
        if (groupA.index !== groupB.index) {
            return groupA.index - groupB.index;
        }
        if (groupA.title === '' && groupB.title === '') {
            return a.label.localeCompare(b.label);
        }
        return groupA.title.localeCompare(groupB.title);
    });
};
/**
 * Converts a currency rate from minor units (API format) to major units (UI display format)
 * Example: 2000 -> 20
 * Uses core currency conversion utilities for consistency and precision.
 * Rates always use 2 decimal places.
 * @param rateMinor The rate value in minor units (as received from API)
 * @returns The rate value in major units (for UI display)
 */ const rateMinorToMajor$1 = (rateMinor)=>{
    return fromMinorUnits(rateMinor, 2);
};
/**
 * Converts a currency rate from major units (UI display format) to minor units (API format)
 * Example: 20 -> 2000
 * Uses core currency conversion utilities for consistency and precision.
 * Rates always use 2 decimal places.
 * @param rateMajor The rate value in major units (from UI)
 * @returns The rate value in minor units (for API)
 */ const rateMajorToMinor$1 = (rateMajor)=>{
    return toMinorUnits(rateMajor, 2);
};

/**
 * Utility functions for handling user names and display logic
 */ /**
 * Combines first and last name into a full name string.
 * Handles both object and separate parameter formats.
 *
 * @param firstName - First name string or object with first_name and last_name properties
 * @param lastName - Last name string (only used when firstName is a string)
 * @returns Combined full name with proper spacing and trimming
 */ function getIndividualName(firstName, lastName) {
    const { first_name, last_name } = firstName && typeof firstName === 'object' ? firstName : {
        first_name: firstName,
        last_name: lastName
    };
    var _first_name_trim, _last_name_trim;
    return `${(_first_name_trim = first_name === null || first_name === void 0 ? void 0 : first_name.trim()) !== null && _first_name_trim !== void 0 ? _first_name_trim : ''} ${(_last_name_trim = last_name === null || last_name === void 0 ? void 0 : last_name.trim()) !== null && _last_name_trim !== void 0 ? _last_name_trim : ''}`.trim();
}
/**
 * Gets individual name with fallback to login if name is empty.
 * Useful for user display components that need to show something meaningful.
 *
 * @param user - User object with name and login properties
 * @returns Full name if available, otherwise login, or empty string
 */ function getIndividualNameWithFallback(user) {
    const fullName = getIndividualName(user.first_name || '', user.last_name || '');
    return fullName || user.login || '';
}
/**
 * Gets the display name for a user based on preferences.
 * Shows email if requested, otherwise shows full name with login fallback.
 *
 * @param user - User object with name, email, and login properties
 * @param showEmail - Whether to prioritize email over name
 * @returns Appropriate display name based on preferences
 */ function getUserDisplayName(user, showEmail = false) {
    if (showEmail && user.email) {
        return user.email;
    }
    return getIndividualNameWithFallback(user);
}

const createDayPluralForm = (i18n, days)=>i18n._({
        id: "oJvTyn",
        values: {
            days: days
        }
    });

function _define_property$3s(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3p(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3s(target, key, source[key]);
        });
    }
    return target;
}
const defaultPageSizeOptions = [
    20,
    50,
    100
];
const getDefaultComponentSettings = (i18n, componentSettings)=>{
    var _componentSettings_general, _componentSettings_approvalPolicies, _componentSettings_approvalRequests, _componentSettings_counterparts, _componentSettings_counterparts1, _componentSettings_payables, _componentSettings_payables1, _componentSettings_payables2, _componentSettings_payables3, _componentSettings_payables4, _componentSettings_payables5, _componentSettings_payables6, _componentSettings_payables7, _componentSettings_payables8, _componentSettings_payables9, _componentSettings_payables10, _componentSettings_payables11, _componentSettings_payables12, _componentSettings_payables13, _componentSettings_payables14, _componentSettings_payables15, _componentSettings_payables16, _componentSettings_payables17, _componentSettings_products, _componentSettings_receivables, _componentSettings_receivables1, _componentSettings_receivables2, _componentSettings_receivables3, _componentSettings_receivables4, _componentSettings_receivables5, _componentSettings_receivables6, _componentSettings_receivables7, _componentSettings_receivables8, _componentSettings_receivables9, _componentSettings_tags, _componentSettings_userRoles, _componentSettings_onboarding, _componentSettings_onboarding1, _componentSettings_onboarding2, _componentSettings_onboarding3, _componentSettings_onboarding4, _componentSettings_onboarding5, _componentSettings_onboarding6, _componentSettings_onboarding7, _componentSettings_onboarding8, _componentSettings_onboarding9, _componentSettings_templateSettings, _componentSettings_templateSettings1, _componentSettings_templateSettings2, _componentSettings_templateSettings3, _componentSettings_templateSettings4, _componentSettings_templateSettings5, _componentSettings_templateSettings6, _componentSettings_templateSettings7;
    var _componentSettings_payables_isShowingSummaryCards, _componentSettings_payables_ocrMismatchFields, _componentSettings_payables_enableGLCodes, _componentSettings_financing, _componentSettings_templateSettings_showTemplateSection, _componentSettings_templateSettings_showTemplatePreview, _componentSettings_templateSettings_availableTemplateIds, _componentSettings_templateSettings_showLogoSection, _componentSettings_templateSettings_enableDocumentNumberCustomisationTab, _componentSettings_templateSettings_enableOtherSettingsCustomisationTab, _componentSettings_templateSettings_availableARDocuments, _componentSettings_templateSettings_availableAPDocuments;
    return {
        general: {
            iconWrapper: _object_spread$3p({
                defaultProps: {
                    showCloseIcon: true
                }
            }, componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_general = componentSettings.general) === null || _componentSettings_general === void 0 ? void 0 : _componentSettings_general.iconWrapper)
        },
        approvalPolicies: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_approvalPolicies = componentSettings.approvalPolicies) === null || _componentSettings_approvalPolicies === void 0 ? void 0 : _componentSettings_approvalPolicies.pageSizeOptions) || defaultPageSizeOptions
        },
        approvalRequests: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_approvalRequests = componentSettings.approvalRequests) === null || _componentSettings_approvalRequests === void 0 ? void 0 : _componentSettings_approvalRequests.pageSizeOptions) || defaultPageSizeOptions
        },
        counterparts: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.pageSizeOptions) || defaultPageSizeOptions,
            customerTypes: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts1 = componentSettings.counterparts) === null || _componentSettings_counterparts1 === void 0 ? void 0 : _componentSettings_counterparts1.customerTypes) || [
                'customer',
                'vendor'
            ]
        },
        payables: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables = componentSettings.payables) === null || _componentSettings_payables === void 0 ? void 0 : _componentSettings_payables.pageSizeOptions) || defaultPageSizeOptions,
            isShowingSummaryCards: (_componentSettings_payables_isShowingSummaryCards = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables1 = componentSettings.payables) === null || _componentSettings_payables1 === void 0 ? void 0 : _componentSettings_payables1.isShowingSummaryCards) !== null && _componentSettings_payables_isShowingSummaryCards !== void 0 ? _componentSettings_payables_isShowingSummaryCards : true,
            fieldOrder: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables2 = componentSettings.payables) === null || _componentSettings_payables2 === void 0 ? void 0 : _componentSettings_payables2.fieldOrder) || DEFAULT_FIELD_ORDER,
            summaryCardFilters: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables3 = componentSettings.payables) === null || _componentSettings_payables3 === void 0 ? void 0 : _componentSettings_payables3.summaryCardFilters,
            requiredColumns: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables4 = componentSettings.payables) === null || _componentSettings_payables4 === void 0 ? void 0 : _componentSettings_payables4.requiredColumns) || DEFAULT_REQUIRED_COLUMNS,
            optionalFields: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables5 = componentSettings.payables) === null || _componentSettings_payables5 === void 0 ? void 0 : _componentSettings_payables5.optionalFields,
            ocrRequiredFields: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables6 = componentSettings.payables) === null || _componentSettings_payables6 === void 0 ? void 0 : _componentSettings_payables6.ocrRequiredFields,
            ocrMismatchFields: (_componentSettings_payables_ocrMismatchFields = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables7 = componentSettings.payables) === null || _componentSettings_payables7 === void 0 ? void 0 : _componentSettings_payables7.ocrMismatchFields) !== null && _componentSettings_payables_ocrMismatchFields !== void 0 ? _componentSettings_payables_ocrMismatchFields : {
                amount_to_pay: false,
                counterpart_bank_account_id: false
            },
            isTagsDisabled: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables8 = componentSettings.payables) === null || _componentSettings_payables8 === void 0 ? void 0 : _componentSettings_payables8.isTagsDisabled,
            enableGLCodes: (_componentSettings_payables_enableGLCodes = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables9 = componentSettings.payables) === null || _componentSettings_payables9 === void 0 ? void 0 : _componentSettings_payables9.enableGLCodes) !== null && _componentSettings_payables_enableGLCodes !== void 0 ? _componentSettings_payables_enableGLCodes : false,
            onSaved: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables10 = componentSettings.payables) === null || _componentSettings_payables10 === void 0 ? void 0 : _componentSettings_payables10.onSaved,
            onCanceled: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables11 = componentSettings.payables) === null || _componentSettings_payables11 === void 0 ? void 0 : _componentSettings_payables11.onCanceled,
            onSubmitted: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables12 = componentSettings.payables) === null || _componentSettings_payables12 === void 0 ? void 0 : _componentSettings_payables12.onSubmitted,
            onRejected: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables13 = componentSettings.payables) === null || _componentSettings_payables13 === void 0 ? void 0 : _componentSettings_payables13.onRejected,
            onApproved: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables14 = componentSettings.payables) === null || _componentSettings_payables14 === void 0 ? void 0 : _componentSettings_payables14.onApproved,
            onReopened: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables15 = componentSettings.payables) === null || _componentSettings_payables15 === void 0 ? void 0 : _componentSettings_payables15.onReopened,
            onDeleted: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables16 = componentSettings.payables) === null || _componentSettings_payables16 === void 0 ? void 0 : _componentSettings_payables16.onDeleted,
            onPay: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables17 = componentSettings.payables) === null || _componentSettings_payables17 === void 0 ? void 0 : _componentSettings_payables17.onPay
        },
        products: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_products = componentSettings.products) === null || _componentSettings_products === void 0 ? void 0 : _componentSettings_products.pageSizeOptions) || defaultPageSizeOptions
        },
        receivables: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.pageSizeOptions) || defaultPageSizeOptions,
            tab: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables1 = componentSettings.receivables) === null || _componentSettings_receivables1 === void 0 ? void 0 : _componentSettings_receivables1.tab) || 0,
            tabs: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables2 = componentSettings.receivables) === null || _componentSettings_receivables2 === void 0 ? void 0 : _componentSettings_receivables2.tabs) || [
                {
                    label: i18n._({
                        id: "F7nA5/"
                    }),
                    query: {
                        type: 'invoice'
                    }
                },
                {
                    label: i18n._({
                        id: "eWLklq"
                    }),
                    query: {
                        type: 'quote'
                    }
                },
                {
                    label: i18n._({
                        id: "Qj+gPx"
                    }),
                    query: {
                        type: 'credit_note'
                    }
                },
                {
                    label: FINANCING_LABEL,
                    query: {
                        type: 'financing'
                    }
                }
            ],
            enableEntityBankAccount: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables3 = componentSettings.receivables) === null || _componentSettings_receivables3 === void 0 ? void 0 : _componentSettings_receivables3.enableEntityBankAccount) || false,
            bankAccountCurrencies: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables4 = componentSettings.receivables) === null || _componentSettings_receivables4 === void 0 ? void 0 : _componentSettings_receivables4.bankAccountCurrencies) || defaultAvailableCurrencies,
            bankAccountCountries: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables5 = componentSettings.receivables) === null || _componentSettings_receivables5 === void 0 ? void 0 : _componentSettings_receivables5.bankAccountCountries) || defaultAvailableCountries,
            onCreate: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables6 = componentSettings.receivables) === null || _componentSettings_receivables6 === void 0 ? void 0 : _componentSettings_receivables6.onCreate,
            onUpdate: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables7 = componentSettings.receivables) === null || _componentSettings_receivables7 === void 0 ? void 0 : _componentSettings_receivables7.onUpdate,
            onDelete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables8 = componentSettings.receivables) === null || _componentSettings_receivables8 === void 0 ? void 0 : _componentSettings_receivables8.onDelete,
            onInvoiceSent: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables9 = componentSettings.receivables) === null || _componentSettings_receivables9 === void 0 ? void 0 : _componentSettings_receivables9.onInvoiceSent
        },
        tags: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_tags = componentSettings.tags) === null || _componentSettings_tags === void 0 ? void 0 : _componentSettings_tags.pageSizeOptions) || defaultPageSizeOptions
        },
        userRoles: {
            pageSizeOptions: (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_userRoles = componentSettings.userRoles) === null || _componentSettings_userRoles === void 0 ? void 0 : _componentSettings_userRoles.pageSizeOptions) || defaultPageSizeOptions
        },
        onboarding: {
            footerLogoUrl: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding = componentSettings.onboarding) === null || _componentSettings_onboarding === void 0 ? void 0 : _componentSettings_onboarding.footerLogoUrl,
            footerWebsiteUrl: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding1 = componentSettings.onboarding) === null || _componentSettings_onboarding1 === void 0 ? void 0 : _componentSettings_onboarding1.footerWebsiteUrl,
            hideFooter: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding2 = componentSettings.onboarding) === null || _componentSettings_onboarding2 === void 0 ? void 0 : _componentSettings_onboarding2.hideFooter,
            showContinueButton: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding3 = componentSettings.onboarding) === null || _componentSettings_onboarding3 === void 0 ? void 0 : _componentSettings_onboarding3.showContinueButton,
            allowedCurrencies: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding4 = componentSettings.onboarding) === null || _componentSettings_onboarding4 === void 0 ? void 0 : _componentSettings_onboarding4.allowedCurrencies,
            allowedCountries: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding5 = componentSettings.onboarding) === null || _componentSettings_onboarding5 === void 0 ? void 0 : _componentSettings_onboarding5.allowedCountries,
            onComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding6 = componentSettings.onboarding) === null || _componentSettings_onboarding6 === void 0 ? void 0 : _componentSettings_onboarding6.onComplete,
            onContinue: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding7 = componentSettings.onboarding) === null || _componentSettings_onboarding7 === void 0 ? void 0 : _componentSettings_onboarding7.onContinue,
            onWorkingCapitalOnboardingComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding8 = componentSettings.onboarding) === null || _componentSettings_onboarding8 === void 0 ? void 0 : _componentSettings_onboarding8.onWorkingCapitalOnboardingComplete,
            onPaymentsOnboardingComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding9 = componentSettings.onboarding) === null || _componentSettings_onboarding9 === void 0 ? void 0 : _componentSettings_onboarding9.onPaymentsOnboardingComplete
        },
        financing: (_componentSettings_financing = componentSettings === null || componentSettings === void 0 ? void 0 : componentSettings.financing) !== null && _componentSettings_financing !== void 0 ? _componentSettings_financing : {},
        templateSettings: {
            showTemplateSection: (_componentSettings_templateSettings_showTemplateSection = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.showTemplateSection) !== null && _componentSettings_templateSettings_showTemplateSection !== void 0 ? _componentSettings_templateSettings_showTemplateSection : true,
            showTemplatePreview: (_componentSettings_templateSettings_showTemplatePreview = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : _componentSettings_templateSettings1.showTemplatePreview) !== null && _componentSettings_templateSettings_showTemplatePreview !== void 0 ? _componentSettings_templateSettings_showTemplatePreview : true,
            availableTemplateIds: (_componentSettings_templateSettings_availableTemplateIds = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings2 = componentSettings.templateSettings) === null || _componentSettings_templateSettings2 === void 0 ? void 0 : _componentSettings_templateSettings2.availableTemplateIds) !== null && _componentSettings_templateSettings_availableTemplateIds !== void 0 ? _componentSettings_templateSettings_availableTemplateIds : [],
            showLogoSection: (_componentSettings_templateSettings_showLogoSection = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings3 = componentSettings.templateSettings) === null || _componentSettings_templateSettings3 === void 0 ? void 0 : _componentSettings_templateSettings3.showLogoSection) !== null && _componentSettings_templateSettings_showLogoSection !== void 0 ? _componentSettings_templateSettings_showLogoSection : true,
            enableDocumentNumberCustomisationTab: (_componentSettings_templateSettings_enableDocumentNumberCustomisationTab = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings4 = componentSettings.templateSettings) === null || _componentSettings_templateSettings4 === void 0 ? void 0 : _componentSettings_templateSettings4.enableDocumentNumberCustomisationTab) !== null && _componentSettings_templateSettings_enableDocumentNumberCustomisationTab !== void 0 ? _componentSettings_templateSettings_enableDocumentNumberCustomisationTab : true,
            enableOtherSettingsCustomisationTab: (_componentSettings_templateSettings_enableOtherSettingsCustomisationTab = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings5 = componentSettings.templateSettings) === null || _componentSettings_templateSettings5 === void 0 ? void 0 : _componentSettings_templateSettings5.enableOtherSettingsCustomisationTab) !== null && _componentSettings_templateSettings_enableOtherSettingsCustomisationTab !== void 0 ? _componentSettings_templateSettings_enableOtherSettingsCustomisationTab : true,
            availableARDocuments: (_componentSettings_templateSettings_availableARDocuments = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings6 = componentSettings.templateSettings) === null || _componentSettings_templateSettings6 === void 0 ? void 0 : _componentSettings_templateSettings6.availableARDocuments) !== null && _componentSettings_templateSettings_availableARDocuments !== void 0 ? _componentSettings_templateSettings_availableARDocuments : [
                'invoice',
                'credit_note',
                'quote',
                'delivery_note'
            ],
            availableAPDocuments: (_componentSettings_templateSettings_availableAPDocuments = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings7 = componentSettings.templateSettings) === null || _componentSettings_templateSettings7 === void 0 ? void 0 : _componentSettings_templateSettings7.availableAPDocuments) !== null && _componentSettings_templateSettings_availableAPDocuments !== void 0 ? _componentSettings_templateSettings_availableAPDocuments : [
                'purchase_order'
            ]
        }
    };
};

/*eslint-disable*/ const messages = JSON.parse("{\"+4LAZl\":[\"Indonesian Rupiah\"],\"+8+wMl\":[\"Edit term\"],\"+8o1tD\":[\"Issue invoice to make a payment record.\"],\"+Bo+ZG\":[\"Role \",[\"0\"],\" was updated\"],\"+DHRWw\":[\"Unspecified\"],\"+FsEVV\":[\"All invoices\"],\"+KQZ/P\":[\"Enable more fields\"],\"+Lza98\":[\"Cayman Islands Dollar\"],\"+NOtzV\":[\"IBAN:\"],\"+OZuUB\":[\"Mark as uncollectible invoice\"],\"+OgRSX\":[\"Trinidad And Tobago\"],\"+RNxar\":[\"South Sudanese Pound\"],\"+RcQS+\":[\"The bill will receive the “Canceled” status and will require no payment. You can't undo this action.\"],\"+S1wVd\":[\"Please enter a number\"],\"+SFW/0\":[\"Malawian Kwacha\"],\"+XwRvl\":[\"Delivery note\"],\"+aN2zp\":[\"Namibian Dollar\"],\"+gY+iO\":[\"France\"],\"+h0yfh\":[\"European VAT number (Denmark)\"],\"+hWNEf\":[\"Product not found\"],\"+iMfzK\":[\"Company name is required\"],\"+lnnqy\":[\"Routing number is required\"],\"+nl6Ta\":[\"You don’t have permissions to view this page.<0/>Contact your system administrator for details.\"],\"+oNtoi\":[\"Bill\"],\"+owF9u\":[\"Saudi Arabia VAT\"],\"+q3MkE\":[\"This invoice can’t be financed\"],\"+qWhGj\":[\"Add your entity's tax registration number to issue invoice\"],\"+r44uz\":[\"Tax Registration Number (UAE)\"],\"+t8YBO\":[\"View email\"],\"+tyx++\":[\"Thailand\"],\"+wNgM8\":[\"Payment terms is a required field\"],\"+wTFYB\":[\"Vendor Type\"],\"+xr0Re\":[\"Business owners\"],\"+z/TIb\":[\"Panamanian Balboa\"],\"+zYNlY\":[\"Hong Kong Dollar\"],\"+zy2Nq\":[\"Type\"],\"//Ty+s\":[\"South African Rand\"],\"/08peu\":[\"No GL codes found\"],\"/1hd7s\":[\"Create new tag\"],\"/2mIgx\":[\"Saint Helena Pound\"],\"/2scja\":[\"European VAT number (Poland)\"],\"/2spPD\":[\"Tag “\",[\"0\"],\"” was updated”\"],\"/AMmPq\":[\"Bhutanese Ngultrum\"],\"/AR9bc\":[\"Recurrence end date is a required field\"],\"/Fo5iQ\":[\"Late payment\"],\"/HA4nr\":[\"Please add any individual who owns 25% or more of your business.\"],\"/KqDEQ\":[\"Specialty Cleaning\"],\"/Lwm/p\":[\"Contact Person “\",[\"0\"],\"” has been created.\"],\"/MclV0\":[\"#INV-auto\"],\"/ORSXS\":[\"Executive\"],\"/R3vEU\":[\"Routing number must be 9 digits\"],\"/SIR4X\":[\"next on \",[\"0\"]],\"/SgoNA\":[\"Total Tax\"],\"/Ux+T4\":[\"Please, check the details of your payment record.\\n  You won’t be able to change or delete it after.\"],\"/VqQlR\":[\"Entity logo\"],\"/W1CY2\":[\"Marshall Islands\"],\"/Y5+Ze\":[\"U.S. Federal Government Agencies or Departments\"],\"/Zjk7B\":[\"Equal to \",[\"formattedValue\"]],\"/dqduX\":[\"Next page\"],\"/jQctM\":[\"To\"],\"/jZOZa\":[\"Service Fee\"],\"/lDBHm\":[\"FAQ\"],\"/lx8uf\":[\"No reminder\"],\"/n/HCO\":[\"Keywords\"],\"/o/2Tm\":[\"Expense\"],\"/rg8lL\":[\"Edit bill\"],\"/sZgWl\":[\"Greater than or equal to\"],\"/sa3hT\":[\"Chat \",[\"id\"]],\"/tV9ZB\":[\"Mauritian Rupee\"],\"/uUlFU\":[\"item\"],\"/wb6PF\":[\"Tax rate is a required field\"],\"/wsPTq\":[\"Cambodian Riel\"],\"0/wcJO\":[\"Bank Account\"],\"02Hiue\":[\"Jewelry Stores, Watches, Clocks, and Silverware Stores\"],\"055mqh\":[\"Failed to create payment record: \",[\"errorMessage\"]],\"06UY4J\":[\"You can set up to 2 early payment discounts per invoice.\"],\"073fHc\":[\"Item quantity\"],\"076hVE\":[\"News Dealers and Newsstands\"],\"08314m\":[\"Vendors\"],\"08cLBp\":[\"El Salvador\"],\"0Agn4i\":[\"Hungary tax number (adószám)\"],\"0BIqwq\":[\"Last updated on\"],\"0Bhqmy\":[\"Freezer and Locker Meat Provisioners\"],\"0CuAor\":[\"Conditions\"],\"0EN8ce\":[\"Gibraltar Pound\"],\"0F7Gar\":[\"Value Added Tax (Ukraine)\"],\"0FI1uz\":[\"Guinea\"],\"0H2P2L\":[\"Service \",[\"0\"],\" was updated.\"],\"0J/oR9\":[\"Mauritania\"],\"0MAc+x\":[\"Lesotho\"],\"0MeemP\":[\"North Korea\"],\"0NT6WY\":[\"You don’t have any approval policies yet.\"],\"0NqZiF\":[\"Please provide the following documents for the person\"],\"0R105c\":[\"PDF view\"],\"0SG/yN\":[\"Invoice currency\"],\"0SHRbP\":[\"Unfortunately, you can't cancel\"],\"0Vjr5J\":[\"Approval Policy\"],\"0W0FHK\":[\"Full name\"],\"0WBHQ6\":[\"Electric Razor Stores\"],\"0WI/SI\":[\"Niue\"],\"0X7HX1\":[\"Singaporean UEN\"],\"0ZHQo6\":[\"Amount must be a positive number\"],\"0ZQCF1\":[\"Auto Body Repair Shops\"],\"0caMy7\":[\"History\"],\"0eKWBS\":[\"Vat “\",[\"0\"],\"” has been updated.\"],\"0gB+2V\":[\"The specified counterpart has not been saved yet.\"],\"0gS7M5\":[\"Display Name\"],\"0jQ4za\":[\"Cameroon\"],\"0jSvU6\":[\"Days after must be at most 9999\"],\"0jm21S\":[\"Invoice Number is required\"],\"0p28dS\":[\"Failed to mark invoice as paid: \",[\"errorMessage\"]],\"0s9hFs\":[\"Afghan Afghani\"],\"0ttL3c\":[\"Gambia\"],\"0uN3hk\":[\"Tax Identification Number (Hungary)\"],\"0wg9EY\":[\"Burkina Faso\"],\"0yeqDC\":[\"Congo, Democratic Republic\"],\"0zfPc5\":[\"Madagascar\"],\"1+AuKP\":[\"The vendor name on the bill doesn’t exactly match the saved counterpart, so AI selected the closest option.\"],\"1/la1y\":[\"Bill Pay\"],\"12L4FP\":[\"Iraqi Dinar\"],\"12cMyG\":[\"All users from list, one by one\"],\"15oset\":[\"Wrecking and Salvage Yards\"],\"16rK7G\":[\"Quebec Sales Tax (Canada)\"],\"17ybUC\":[\"Cancel bill?\"],\"1KNHI6\":[\"Invoice \",[\"0\"]],\"1MTDBK\":[\"Layout and logo\"],\"1MXzXf\":[\"Russian KPP\"],\"1Qaqmd\":[\"You don't have permission to issue this document. Please, contact your system administrator for details.\"],\"1TfTXq\":[\"Russian INN\"],\"1UzENP\":[\"No\"],\"1VXZAl\":[\"Number of approvals must be positive\"],\"1VxwdW\":[\"Add a bank account to receive transfers of funds to your business.\"],\"1Y0u8h\":[\"My entity profile\"],\"1ZaQUH\":[\"Last name\"],\"1cvWEV\":[\"Niger\"],\"1fUjAq\":[\"VAT Exempt Rationale\"],\"1gUYFw\":[\"Classic\"],\"1gj2RY\":[\"Total (\",[\"0\"],\")\"],\"1hKEom\":[\"Priority\"],\"1iGIjH\":[\"Uzbekistan\"],\"1odaFW\":[\"Advertising Services\"],\"1qFa5a\":[\"Remind\"],\"1t/NnN\":[\"Reject\"],\"1vVROZ\":[\"Solomon Islands\"],\"1xOA+d\":[\"Recurrence start date is a required field\"],\"1xzYv5\":[\"Item name is required\"],\"1y3C0K\":[\"Wig and Toupee Stores\"],\"217NKk\":[\"File is being processed...\"],\"21Z4/g\":[\"Australian Taxation Office Reference Number\"],\"24BqWB\":[\"Employer Identification Number (USA)\"],\"26mZIT\":[\"Georgia\"],\"27CDdQ\":[\"Antique Shops\"],\"282UJL\":[\"Nicaraguan Córdoba\"],\"28YIl8\":[\"Common settings\"],\"2A6b+t\":[\"Counterpart Close\"],\"2AB3u7\":[\"Iceland\"],\"2AX2/p\":[\"iteration-\",[\"0\"],\"-\",[\"index\"]],\"2C7H4P\":[\"days before due date\"],\"2CtMzK\":[\"Thai VAT\"],\"2Eoi/a\":[\"View details\"],\"2FYpfJ\":[\"More\"],\"2Fu3L0\":[\"You don’t have any bills yet\"],\"2FumKI\":[\"Nigeria\"],\"2KWxyn\":[\"Approval request\"],\"2MIa39\":[\"Failed to delete VAT.\"],\"2NLrKj\":[\"Amount, (excl.) tax\"],\"2PSejx\":[\"Overdue payment\"],\"2QReIf\":[\"ZIP code is required\"],\"2RJuow\":[\"Canadian QST number (Québec)\"],\"2RbU7q\":[\"Update PDF files for paid invoices\"],\"2S83qK\":[\"Correspondence Schools\"],\"2SywUf\":[\"Pay in\"],\"2TpJxV\":[\"Reminder has been created\"],\"2V2MxR\":[\"Bank name:\"],\"2X2BbP\":[\"Honduran Lempira\"],\"2ZGQoS\":[\"NOT allowed\"],\"2b+3Yt\":[\"European VAT number (Latvia)\"],\"2bZVF9\":[\"Burundi\"],\"2c7OCc\":[\"Shoe Stores\"],\"2dMp7y\":[\"SOFORT\"],\"2ejk7c\":[\"Towing Services\"],\"2k47u1\":[\"Date is required\"],\"2kYRUi\":[\"Mongolian Tugrik\"],\"2knO/H\":[\"The financing service is currently unavailable. Please reload the page or try again later.\"],\"2lJ2E3\":[\"|\"],\"2nWlNO\":[\"Keyword should be at most 25 characters long\"],\"2qCVo1\":[\"Orthopedic Goods - Prosthetic Devices\"],\"2rxDOh\":[\"The bill status will change to Rejected, skipping the approval flow.\"],\"2vxHm+\":[\"TUI Travel - Germany\"],\"2wyCgk\":[\"Solomon Islands Dollar\"],\"2ySTC3\":[\"End of the month\"],\"2yldVE\":[\"Tag “\",[\"0\"],\"” renamed to “\",[\"1\"],\"”\"],\"2yzrM/\":[\"Add a date when the product will be delivered or the service provided\"],\"2zrsQk\":[\"Supports JPEG and PNG up to 10mb\"],\"3+UjnC\":[\"New Zealand GST number\"],\"30tWAf\":[\"Malaysian SST number\"],\"33DX5M\":[\"Front of your additional identify document\"],\"3503Rk\":[\"Payable “\",[\"0\"],\"” has been reopened\"],\"3AlHxr\":[\"You don’t have any quotes yet.\"],\"3CWdKb\":[\"Malaysia\"],\"3FHvXq\":[\"Falkland Islands (Malvinas)\"],\"3G3BPM\":[\"Commercial Photography, Art and Graphics\"],\"3GI0LB\":[\"Goods and Services Tax (India)\"],\"3IQoBG\":[\"Card payment\"],\"3KIJF5\":[\"Invoices that are due within 7 days cannot be financed. Overdue invoices cannot be financed. The loan sum must be within your remaining limit.\"],\"3LDCpD\":[\"This action can't be undone.\"],\"3LpaID\":[\"Ukrainian VAT\"],\"3N06ae\":[\"Add new bank account\"],\"3RKHmX\":[\"Add another executive\"],\"3SHNmn\":[\"National Registry of Legal Entities (Brazil)\"],\"3TSz9S\":[\"Minimize\"],\"3VpD5h\":[\"United States Outlying Islands\"],\"3X6pZF\":[\"Maldivian Rufiyaa\"],\"3XIgKU\":[\"User roles\"],\"3aahr0\":[\"thumb up\"],\"3dGVaB\":[\"Failed to duplicate invoice.\"],\"3ePf9m\":[\"You can’t delete a default account. To delete a default bank account, you must first assign a new default account for the same currency.\"],\"3eynKL\":[\"Routing Number\"],\"3gTfUP\":[\"Access funding through the invoice list, within the invoice details, or the 'My Financing' tab. If approved, you will receive the invoice amount instantly, minus the fee associated with the payment offer chosen.\"],\"3hoNxe\":[\"Mark as uncollectible\"],\"3j790V\":[\"Funding for \",[\"repaymentAmount\"]],\"3wV73y\":[\"City\"],\"3wfZhO\":[\"AI Assistant\"],\"3xjql7\":[\"Czech Republic\"],\"4+tgrm\":[\"Template settings\"],\"40Qd7H\":[\"Every first day of the month\"],\"42soY0\":[\"Romanian Leu\"],\"44VV9b\":[\"Individual person\"],\"45O6zJ\":[\"Created on\"],\"49OhsH\":[\"Remaining limit\"],\"49XxJg\":[\"Singapore Dollar\"],\"4EtxOh\":[\"Type of code\"],\"4FIJf2\":[\"Marked as uncollectible\"],\"4FT/4T\":[\"Total amount for <0>\",[\"totalPendingInvoices\"],\"</0> canceled \",[\"invoicesPluralForm\"],\": <1>\",[\"pendingInvoicesTotalAmountWithCreditNotes\"],\"</1>\"],\"4StVS4\":[\"Updated at\"],\"4Vi0UQ\":[\"You have no chats yet\"],\"4WK0VU\":[\"Payment terms\"],\"4X5e5M\":[\"You have items in\"],\"4Y5H+g\":[\"Terms\"],\"4ba0NE\":[\"Scheduled\"],\"4fC8E9\":[\"Moroccan Dirham\"],\"4fL/V7\":[\"Pay\"],\"4g5fID\":[\"Submit invoice\"],\"4gJqNA\":[\"Chiropodists, Podiatrists\"],\"4m4EuK\":[\"TAX ID\"],\"4mDzmC\":[\"Travel Agencies, Tour Operators\"],\"4nFLJR\":[\"Due to regulations, we’re required to collect information about a company’s directors.\"],\"4nacqC\":[\"Recurring invoice\"],\"4nt45b\":[\"Saint Vincent And Grenadines\"],\"4pZng4\":[\"Comment (optional)\"],\"4pwejF\":[\"First name is required\"],\"4sGAxA\":[\"Name is a required field\"],\"4u6Kov\":[\"Policy name cannot exceed 255 characters\"],\"4uJdwj\":[\"Norwegian Krone\"],\"4xJysX\":[\"Simplified, fast funding for your growing business\"],\"4zHav4\":[\"Bahrain\"],\"5+3XEC\":[\"Create user role\"],\"5+6UBx\":[\"The counterpart details in the bill don’t fully match the saved counterpart. Consider editing the saved counterpart or creating a new one.\"],\"50YTeH\":[\"Auto Service Shops\"],\"51L6sx\":[\"Scheduled reminders\"],\"52e4Ly\":[\"Number of items\"],\"52sXLa\":[\"For this reminder to be sent for your invoice, please make sure to set payment terms that include a discount\"],\"56Z8bT\":[\"Barbados\"],\"56jJiL\":[\"Home Supply Warehouse Stores\"],\"56pMyW\":[\"Deliver invoice later or download PDF\"],\"58DPd4\":[\"Tanzanian Shilling\"],\"5A2SuH\":[\"Bank Account has been deleted.\"],\"5E6fHi\":[\"Convert this invoice into recurring template\"],\"5G6yki\":[\"Item quantity must be positive\"],\"5GDmlP\":[\"Hold on, we’re processing the file you’ve uploaded.\"],\"5GYt2C\":[\"Save to prompt library\"],\"5HYWB0\":[\"Department\"],\"5MTwnp\":[\"Tailors, Alterations\"],\"5N30dV\":[\"Tell us more\"],\"5OSG1G\":[\"You don't have permission to delete this document. Please, contact your system administrator for details.\"],\"5Oi2Q0\":[\"Other countries\"],\"5Pckp5\":[\"Updating the invoice\"],\"5Q0hrS\":[\"Detective Agencies\"],\"5R6nOT\":[\"European VAT number (Romania)\"],\"5RPpvZ\":[\"Payable \\\"\",[\"0\"],\"\\\" has been reopened\"],\"5TpkFx\":[\"Chilean Peso\"],\"5UbV8Z\":[\"Manually recorded\"],\"5VCYz4\":[\"You can not create receivable with a type other than “\",[\"invoice\"],\"”\"],\"5VCoDw\":[\"Disabling reminders prevents sending any payment reminders to this counterpart.\"],\"5Xrexx\":[\"Failed to Load \",[\"entityName\"]],\"5YLAE6\":[\"Venezuela\"],\"5ZOPWl\":[\"Add another owner\"],\"5a/xG1\":[\"Country flag\"],\"5ad2f4\":[\"Account number\"],\"5dJK4M\":[\"Roles\"],\"5ekgoT\":[\"Variety Stores\"],\"5i6NPR\":[\"General Services\"],\"5iNp0b\":[\"Last 4 digits of Social Security number\"],\"5iR0O7\":[\"Invalid issuance\"],\"5ossQX\":[\"Motorcycle Shops and Dealers\"],\"5pa77O\":[\"Resume application\"],\"5qUwEB\":[\"Unit label is required\"],\"5rEWHX\":[\"Are you sure you want to quit without saving?\"],\"5tT0+u\":[\"Invalid email format\"],\"5xqOaV\":[\"Every \",[\"0\"],\" day of month\"],\"5xxFrU\":[\"Start of the month\"],\"5yalVC\":[\"Wallis And Futuna\"],\"6+usB6\":[\"Receive payments to\"],\"6/RHJc\":[\"Latvia\"],\"6/dCYd\":[\"Overview\"],\"6/utKi\":[\"Payment failed or cancelled\"],\"621rYf\":[\"Payment\"],\"63+LPh\":[[\"0\"],\"/\",[\"1\"],\" issued\"],\"63u8jK\":[\"Kazakhstani Tenge\"],\"64puzR\":[\"(.pdf, .png, .jpg supported)\"],\"67xH8L\":[\"Greenland\"],\"68ETRW\":[\"Payment Details\"],\"6C3POP\":[\"You can set a different period length and the date of issuance. The starting date cannot be updated.\"],\"6Crb9c\":[\"Go to Docs\"],\"6DzmqI\":[\"Japanese Yen\"],\"6K88PJ\":[\"Account holder name\"],\"6WdDG7\":[\"Page\"],\"6XclCT\":[\"Metal Service Centers\"],\"6YtxFj\":[\"Name\"],\"6bVwLn\":[\"Cost Center\"],\"6cyLjb\":[\"Belize\"],\"6geTbl\":[\"Bermudian Dollar\"],\"6hlq+R\":[\"Fulfillment date\"],\"6jogzt\":[\"Parking Lots, Garages\"],\"6koo0E\":[\"Automotive Parts and Accessories Stores\"],\"6mbe4b\":[\"Individuals\"],\"6mnJvf\":[\"Sort code must be 6 digits\"],\"6oTsos\":[\"Submit message\"],\"6pF/vl\":[\"Please review the terms and conditions and accept them to continue.\"],\"6sNAKP\":[\"Registered business address\"],\"6ws9A3\":[\"Apple Pay\"],\"6ySfA5\":[\"The specified vendor has not been saved yet.\"],\"6yca6H\":[\"Central African Republic\"],\"6zS1ps\":[\"No conditions\"],\"7/tK/O\":[\"Approval policy\"],\"70WSsK\":[\"In Approval\"],\"72c5Qo\":[\"Total\"],\"73PNcD\":[\"Or if you applied for accounts payable financing, upload/select the uploaded invoice you've received from your vendor.\"],\"76l9pC\":[\"Early payment discounts\"],\"79gjt+\":[\"Medical, Dental, Ophthalmic, and Hospital Equipment and Supplies\"],\"7BDsqQ\":[\"Document Type\"],\"7CzYGX\":[[\"label\"],\" cannot be empty or only whitespace\"],\"7EOx4l\":[\"Period starts on\"],\"7EZZzq\":[\"Taxpayer Identification Number (Russia)\"],\"7GXCYG\":[\"Or select the file on your computer.\"],\"7GbHlU\":[\"India\"],\"7GuLRn\":[\"Motor Freight Carriers and Trucking - Local and Long Distance, Moving and Storage Companies, and Local Delivery Services\"],\"7HMW9p\":[\"Railroads\"],\"7ISoDV\":[\"Make recurring\"],\"7In/FY\":[\"Failed to create\"],\"7Jbzt9\":[\"Marinas, Service and Supplies\"],\"7L01XJ\":[\"Actions\"],\"7LrL7q\":[\"Faroe Islands\"],\"7RHa+A\":[\"Video Amusement Game Supplies\"],\"7VpPHA\":[\"Confirm\"],\"7Y0yde\":[\"Contact Person has been deleted.\"],\"7YiXQN\":[\"Seychelles\"],\"7d/si/\":[\"At least 1 reminder is required\"],\"7dOxiL\":[\"Jamaica\"],\"7dl8Sj\":[\"Script in Monite Script\"],\"7eCViC\":[\"Cancel receivable \\\"\",[\"0\"],\"\\\"?\"],\"7frLP2\":[\"Industrial Supplies (Not Elsewhere Classified)\"],\"7gmeVf\":[\"Policy name\"],\"7hTpH6\":[\"Discount Stores\"],\"7jBV+9\":[\"Tongan Paʻanga\"],\"7jTc2G\":[\"Legal Services, Attorneys\"],\"7kb4LU\":[\"Approved\"],\"7mRvJz\":[\"Edit tags\"],\"7p7/5k\":[\"Russian Federation\"],\"7pchF2\":[\"days after due date\"],\"7rReDI\":[\"Falkland Islands Pound\"],\"7xiLIS\":[[\"0\"],\"% fee\"],\"7yyrX2\":[\"Date of birth cannot be in the future.\"],\"8+ImgH\":[\"Singapore\"],\"8/brI5\":[\"Name is required\"],\"8/ipFL\":[\"Albanian Lek\"],\"846VYr\":[\"Financing is blocked due to a violation of the agreed-upon terms. Please, contact the provider for further details.\"],\"85rbPg\":[\"Condition type\"],\"86saq4\":[\"Business Registration Number (South Korea)\"],\"876pfE\":[\"Customer\"],\"8CHWOC\":[\"Bulgarian Lev\"],\"8D/rLM\":[\"Failed to create VAT.\"],\"8EDFEE\":[\"Manual payment record\"],\"8Gr3Ou\":[\"Account representative\"],\"8HB/Mv\":[\"Uruguay\"],\"8I8aCu\":[\"Kenya Revenue Authority Personal Identification Number (PIN)\"],\"8IFjQT\":[\"European VAT number (Czech Republic)\"],\"8Lx2X7\":[\"Payment received\"],\"8QmfyE\":[\"Singaporean GST\"],\"8X/MAz\":[\"Something went wrong. If this issue persists please contact us through\\nthe chat icon in the bottom right or email us at help@getargon.ai\"],\"8YnEBd\":[\"Picture/Video Production\"],\"8ZZQ5y\":[\"Kyrgystani Som\"],\"8aP9NY\":[\"You haven’t accepted the offer and it has expired\"],\"8aa0ek\":[\"We're required to collect information about any executives or senior managers who have significant management responsibility for this business.\"],\"8bT1lb\":[\"Edit tag ”\",[\"0\"],\"”\"],\"8f9/TK\":[\"Haitian Gourde\"],\"8faOjQ\":[\"Create New\"],\"8l+Koi\":[\"Choose document\"],\"8lc3YZ\":[\"Per document\"],\"8lwBDN\":[\"Failed to update Counterpart.\"],\"8m+tJ3\":[\"Minimum Quantity\"],\"8mKvV1\":[\"Business Number (Canada)\"],\"8n2ci9\":[\"Counterpart not found. Please create a counterpart first.\"],\"8nuATv\":[\"This person is an executive or senior manager with significant management responsibility.\"],\"8ows4t\":[\"Approval Policies\"],\"8pIAr/\":[\"Time is required\"],\"8s5Va2\":[\"Value Added Tax (Israel)\"],\"8tjQCz\":[\"Explore\"],\"8u38C2\":[\"Delete Counterpart \\\"\",[\"0\"],\"\\\"?\"],\"8v+KGc\":[\"View recurrence\"],\"8voF+I\":[\"Camera and Photographic Supply Stores\"],\"9+2Czn\":[\"Charitable and Social Service Organizations - Fundraising\"],\"91A+y7\":[\"French Southern Territories\"],\"93LzK9\":[\"Set your entity's VAT ID and Tax ID to issue invoice\"],\"968fdN\":[[\"0\"],\" Processing\"],\"96VdND\":[\"Insurance - Default\"],\"97V3d9\":[\"Create product or service\"],\"98CaAA\":[\"Peruvian Sol\"],\"999ffy\":[\"Document number\"],\"9Aj3KP\":[\"Edit \",[\"0\"],\" profile\"],\"9BruTc\":[\"Why?\"],\"9Dhbdv\":[\"Back of your additional document\"],\"9GjPE+\":[\"Add your first bill\"],\"9Gr+ae\":[\"Are you the only person who owns 25% or more of the company?\"],\"9H1zVJ\":[\"Issued\"],\"9HMUlN\":[\"Roofing/Siding, Sheet Metal\"],\"9HvliP\":[\"Amount paid\"],\"9IeWGI\":[\"Delete bank account?\"],\"9Iqild\":[\"Tajikistan\"],\"9NxL0P\":[\"Danish Krone\"],\"9NyAH9\":[\"Skipped\"],\"9O830A\":[\"Choose from device\"],\"9OpVZg\":[\"Edit profile\"],\"9QjoSU\":[\"Create “Before due date” reminder\"],\"9W65z2\":[\"Due to an error, the OCR failed to read the data from the document. Please input the data manually.\"],\"9WZk86\":[\"Canadian PST number (British Columbia)\"],\"9X/uxB\":[\"TOTAL\"],\"9YMG/1\":[\"Create User Role\"],\"9Ywg3d\":[\"Account Number\"],\"9bUrgl\":[\"Japanese Corporate Number (Hōjin Bangō)\"],\"9cDpsw\":[\"Permissions\"],\"9eJNeH\":[\"Currency for the invoice amount\"],\"9hUQmL\":[\"Liberian Dollar\"],\"9jKy+T\":[\"Qatar\"],\"9kEOKZ\":[\"Turkmenistan\"],\"9mPkyb\":[\"Set a \",[\"0\"],\" for this customer to issue invoice\"],\"9mcJ/7\":[\"No roles found\"],\"9uI/2w\":[\"for Yosemite Labs GmbH\"],\"9ucD2q\":[\"You won't be able to use it to create new invoices, but it won't affect the existing invoices with this term and their future copies.\"],\"9umCb1\":[\"Sudan\"],\"9uxqj8\":[\"Dominica\"],\"9xxjeO\":[\"Payable \\\"\",[\"0\"],\"\\\" has been approved\"],\"A+idAY\":[\"Item tax\"],\"A+xNU6\":[\"Credit Notes\"],\"A/Hq74\":[\"Landscaping Services\"],\"A0YeN7\":[\"Recurrence has been canceled\"],\"A1ET6E\":[\"Japan\"],\"A1O7j9\":[\"Counseling Services\"],\"A1taO8\":[\"Search\"],\"A49wve\":[\"Liberia\"],\"A7OIfZ\":[\"Real Estate Agents and Managers - Rentals\"],\"AAuEV/\":[\"Taxpayer Identification Number (Indonesia)\"],\"ABbcVg\":[\"Philippine Peso\"],\"ADasb3\":[\"New Zealand\"],\"AEJb+2\":[\"Vat type\"],\"AEd2Vh\":[\"Suriname\"],\"AFTjZU\":[\"Issue failed\"],\"AIAJLG\":[\"I confirm that any person owning 25% or more of \",[\"entityName\"],\" or any person with significant management responsibility of \",[\"entityName\"],\"has their information provided.\"],\"AJVEIe\":[\"Grocery Stores, Supermarkets\"],\"AKXNIb\":[\"Any unsaved changes will be lost.\"],\"AKwjJV\":[\"It can take up to 48 hours. We'll notify you about the results.\"],\"ANUDBp\":[\"Product Close\"],\"APIWMD\":[\"Total tax (\",[\"0\"],\"%)\"],\"AQK14J\":[\"Simple\"],\"ARtLGZ\":[\"Senegal\"],\"AS46IG\":[\"Ownership declaration\"],\"ASTAv6\":[\"Delete “\",[\"0\"],\"”?\"],\"ATGYL1\":[\"Email address\"],\"AXNRKV\":[\"Telecommunication Equipment and Telephone Sales\"],\"AXnS/Y\":[\"Sales and Service Tax (Malaysia)\"],\"AXqNoF\":[\"Delete Counterpart “\",[\"0\"],\"“?\"],\"Aa+kmZ\":[\"There are unsaved changes. If you leave, they will be lost.\"],\"AabQyr\":[\"Funded\"],\"AbZ/VP\":[\"Item tax must be 100 or less\"],\"AmGIGd\":[\"Zimbabwe\"],\"Any1Z3\":[\"Payable “\",[\"0\"],\"” has been force reopened\"],\"Ao5/G1\":[\"Florists\"],\"Aq9fqf\":[\"Electrical Services\"],\"AsvXfV\":[\"All customers\"],\"AwasP/\":[\"Recurrence was cancelled, no new invoices will be issued\"],\"AwrjXY\":[\"Registered Number (Japan)\"],\"AzO8Ac\":[\"Read more >\"],\"B/l4En\":[\"Delete \",[\"type\"],\" “\",[\"name\"],\"”?\"],\"B0hhs1\":[\"Korean BRN\"],\"B18lI4\":[\"Reminders are disabled for this customer. You can enable them in the customer's details.\"],\"B1QgOu\":[\"Amount is required\"],\"B72BE5\":[\"Miscellaneous Specialty Retail\"],\"B73rS0\":[\"Security number\"],\"B7zEcF\":[\"Payment reminders\"],\"BA0G/o\":[\"no policy\"],\"BDiIpw\":[\"VAT type\"],\"BEAJFS\":[\"Create new item\"],\"BFeaov\":[\"Omani Rial\"],\"BGN72B\":[\"Secondary address line (optional)\"],\"BM4WV+\":[\"Entity type\"],\"BOqY23\":[\"Create new\"],\"BQMTGp\":[\"Nigerian Naira\"],\"BWMUJE\":[\"Name & description\"],\"BWsfCp\":[\"Products delete confirmation\"],\"BbRvPY\":[\"Turkey\"],\"BeBv4C\":[\"Apply for financing\"],\"Bf6oDC\":[\"You don’t have any tags yet.\"],\"Bh6o5y\":[\"Bank account delete confirmation\"],\"BhpnTo\":[\"Welding Repair\"],\"BjJA0S\":[\"Billiard/Pool Establishments\"],\"Bl42QR\":[\"Payment info\"],\"BmQaMa\":[\"approvals required\"],\"Bn9+El\":[\"default\"],\"BnANLt\":[\"Total Tax (\",[\"taxRate\"],\"%)\"],\"BnC6rI\":[\"Any \",[\"0\"],\" users from the list\"],\"BnWtS2\":[\"Equatorial Guinea\"],\"Bpcfaf\":[\"Create Counterpart - Individual\"],\"BpeFLX\":[\"Get paid now\"],\"BpogXV\":[\"Macao\"],\"Bqt0mr\":[\"You can create your first tag.\"],\"BuJ3vH\":[\"Edit record\"],\"BwJKBw\":[\"of\"],\"BzEFor\":[\"or\"],\"BzfzPK\":[\"Items\"],\"C/IDOH\":[\"Morocco\"],\"C0uyNO\":[\"Select customer\"],\"C34yri\":[\"Azerbaijani Manat\"],\"C3n/2R\":[\"Customer is a required field\"],\"C6F4kN\":[\"Failed to update receivable line items: \",[\"errorMessage\"]],\"C97zmi\":[\"Reminder \",[\"0\"]],\"C9G7k0\":[\"Belgium\"],\"CBjjAj\":[\"Djibouti\"],\"CBokKt\":[\"Tourist Attractions and Exhibits\"],\"CFKq+l\":[\"Edit my entity profile\"],\"CIqx62\":[\"Greater than or equal to \",[\"formattedValue\"]],\"CIv1hT\":[\"Cruise Lines\"],\"CKGulT\":[\"Quick Copy, Repro, and Blueprint\"],\"CQBuvz\":[\"Select invoice currency\"],\"CQDXe+\":[\"Update to match bill: \"],\"Ca3sej\":[\"Discount date 2\"],\"Carlqi\":[\"Item price must be a number\"],\"CcK+Ft\":[\"PDF\"],\"Ccybri\":[\"Apply for a monthly plan loans to manage your business more efficiently\"],\"Cd0pe2\":[\"Security Brokers/Dealers\"],\"Ce56wo\":[\"Tax Payments - Government Agencies\"],\"CfwkSt\":[\"There is no receivable by provided id: \",[\"0\"]],\"CgbtpU\":[\"Przelewy24\"],\"ChBdq8\":[\"Only my approvals\"],\"Chveds\":[\"Slovakia\"],\"CjOOjg\":[\"Less than \",[\"formattedValue\"]],\"CounterpartDetails--CounterpartOrganizationForm--businessAddressSection--caption\":[\"🚫\"],\"CsaDy8\":[\"Approval policies\"],\"CtjFCU\":[\"Books, Periodicals, and Newspapers\"],\"Cy7FkU\":[\"Loading payment page...\"],\"CzygNg\":[\"Payable\"],\"D2fH8j\":[\"Tax is a required field\"],\"D5TW2z\":[\"Counterpart is required\"],\"D6nVvu\":[\"Company details\"],\"D7DGyx\":[\"Failed to delete product.\"],\"D8LH3t\":[\"Department Stores\"],\"DBpIDP\":[\"Delete Contact Person “\",[\"0\"],\"“?\"],\"DDmKR9\":[\"Send draft\"],\"DGCx5V\":[\"Currency is required\"],\"DHOTzN\":[\"Israeli New Shekel\"],\"DKlVkz\":[\"Boat Dealers\"],\"DL/UVt\":[\"Deleting it won't affect your items.\"],\"DLNgVH\":[\"Issue\"],\"DOKcDS\":[\"Spanish NIF number (previously Spanish CIF number)\"],\"DPUAwe\":[\"Vanuatu Vatu\"],\"DPfwMq\":[\"Done\"],\"DTINAy\":[\"(Optional) Feel free to add specific details\"],\"DVDp+1\":[\"Photo Developing\"],\"DVvbK7\":[\"Edit VAT ID\"],\"DYlwPh\":[\"Contact Person\"],\"DaUOge\":[\"Custom prefix (15 chars max)\"],\"DadFlr\":[\"Quotes are signed virtually, both parties get the signed version via email\"],\"DbmdP8\":[\"Please use some of the rows before adding new ones.\"],\"Dcxka7\":[\"Pay\"],\"Delete {type} “{name}”?\":[\"Delete \",[\"type\"],\" “\",[\"name\"],\"”?\"],\"DgvTYe\":[\"Line 1\"],\"Dh+FIh\":[\"Date of birth\"],\"DkyYG5\":[\"Force Reject\"],\"Du6bPw\":[\"Address\"],\"Du6whA\":[\"It looks like the phone number is too short.\"],\"Due\":[\"Due\"],\"Due date Name\":[\"Due date\"],\"DyYoTc\":[\"Delete “\",[\"0\"],\"“?\"],\"E+kiJx\":[[\"0\",\"select\",{\"credit_note\":[\"Credit Note has been sent\"],\"invoice\":[\"Invoice has been sent\"],\"quote\":[\"Quote has been sent\"],\"other\":[\"Receivable has been sent\"]}]],\"E/8A4V\":[\"Entity\"],\"E/CKn7\":[\"Denmark\"],\"E0l+Ui\":[\"Betting/Casino Gambling\"],\"E17MwY\":[\"European VAT number (Greece)\"],\"E2Hv57\":[\"Manual Cash Disburse\"],\"E2QSZr\":[\"Cable, Satellite, and Other Pay Television and Radio\"],\"E5Wr9l\":[\"Confirmation dialog\"],\"E5i9XO\":[\"South African VAT number\"],\"E9sbpw\":[\"Antigua And Barbuda\"],\"ECPuHE\":[\"Auto and Home Supply Stores\"],\"EDnxOn\":[\"You can disable it later in the PDF settings\"],\"EEcsR2\":[\"Create your first product or service\"],\"EJHmN5\":[\"Video Tape Rental Stores\"],\"ELRzPQ\":[\"Lao People\\\"s Democratic Republic\"],\"ELmFjb\":[\"Postal Services - Government Only\"],\"EN9hn6\":[\"\\n        Your amount available for financing additional invoices.\\n      \"],\"EOb4+y\":[\"Number of approvals required must be a number\"],\"EPg6xy\":[\"Company or personal website URL\"],\"EUhWK5\":[\"Accept ownership declaration\"],\"EVpphi\":[\"International Bank Account Number (required for EUR)\"],\"EXmmXa\":[\"Failed to \",[\"0\"],\" payment link. Please try again.\"],\"EYONgp\":[\"Bank account\"],\"EaXWba\":[\"Please add any individual who owns 25% or more of the company.\"],\"EdFIzQ\":[\"+ Add reminder\"],\"EdQY6l\":[\"None\"],\"Ef7StM\":[\"Unknown\"],\"EgepXl\":[\"Heard Island & Mcdonald Islands\"],\"Eh/k7n\":[\"Equipment Rental\"],\"Eh7Dql\":[\"United Kingdom\"],\"EjxtPT\":[\"Edit company\"],\"EkH9pt\":[\"Update\"],\"EpqMwY\":[\"State or province (if applicable)\"],\"EtVGgr\":[\"Burundian Franc\"],\"EvJqgQ\":[\"Non-FI, Money Orders\"],\"Ew9ioA\":[\"Icelandic VAT\"],\"EwQ+7V\":[\"Set as default for this currency\"],\"Ewz2RF\":[\"Cancel Invoice\"],\"F2qklq\":[\"The Credit note to this invoice “\",[\"0\"],\"” was created earlier. Following that you can’t cancel invoice.\"],\"F4IM4+\":[\"excl. Tax\"],\"F6pfE9\":[\"Active\"],\"F77WSp\":[\"Front of your additional document\"],\"F7muDl\":[\"2.540,00$\"],\"F7nA5/\":[\"Invoices\"],\"F8bH9h\":[\"Please provide information about an executive or senior manager who has significant management responsibility for this business.\"],\"F9M2fD\":[\"Value Added Tax (Georgia)\"],\"F9cvwz\":[\"Account name\"],\"FAsbRB\":[\"Recorded by\"],\"FCD+Yb\":[\"Edit payment term\"],\"FDsrq7\":[\"Ugandan Shilling\"],\"FG7vqH\":[\"Partially Paid\"],\"FGEMuN\":[\"Drop image here\"],\"FGlXPz\":[\"Bolivian Boliviano\"],\"FJjriG\":[\"Create a reminder preset\"],\"FKTdN9\":[\"Burmese Kyat\"],\"FQBaXG\":[\"Activate\"],\"FUyQsW\":[\"Manage measure units\"],\"FYZT+1\":[\"VAT ID and Tax ID\"],\"Fax4U2\":[\"Belarus\"],\"FcQAR4\":[\"No counterparts yet\"],\"FhRWVB\":[\"There are no items here\"],\"FhYMo6\":[\"Approval flow\"],\"Fis8i8\":[\"Saint Lucia\"],\"Fo8IsD\":[\"Bosnia and Herzegovina Convertible Mark\"],\"FqVVGq\":[\"Malaysian Ringgit\"],\"Fr56KK\":[\"Invoice was marked as uncollectible.\"],\"FrBQGv\":[\"Dominican Republic\"],\"Fre5xK\":[\"Payment reminder error\"],\"Frs6n+\":[\"Value Added Tax (Saudi Arabia)\"],\"Fry+Qr\":[\"Used Merchandise and Secondhand Stores\"],\"Fs+py6\":[\"Search by name\"],\"FsXH3H\":[\"Any user from the list\"],\"Fv9Vqi\":[\"Template settings tabs\"],\"FwimNc\":[\"Syrian Arab Republic\"],\"FxPLjW\":[\"Always display selected fields on the form (where available)\"],\"Fxf4jq\":[\"Description (optional)\"],\"Fy66nr\":[\"Failed to create Counterpart.\"],\"G+00/E\":[[\"0\"],\" paid / \",[\"1\"],\" due\"],\"G/YiKB\":[\"You can't delete a default account. To delete a default bank account, you must first assign a new default account for the same currency.\"],\"G1qY3M\":[\"Close product details\"],\"G4Ryny\":[\"Hospitals\"],\"G6boaK\":[\"A provider can’t offer you financing\"],\"G7r4Oi\":[\"Honduras\"],\"G9vlqe\":[[\"0\"],\" (\",[\"code\"],\")\"],\"GAQ1Os\":[\"Edit your entity profile to update your information.\"],\"GAVtr2\":[\"Fund your sales/purchases\"],\"GBGf6U\":[\"Pakistan\"],\"GC98fF\":[\"Payable \",[\"0\"],\" uploaded successfully\"],\"GCCr49\":[\"If this error recurs, contact your admin.\"],\"GCFvqV\":[\"Samoan Tala\"],\"GCulwQ\":[\"Edit Product Close\"],\"GDvlUT\":[\"Role\"],\"GFvFFP\":[\"Value Added Tax identification number\"],\"GFwCP6\":[\"Clothing Rental\"],\"GGWsTU\":[\"Canceled\"],\"GMFIw4\":[\"Automotive Tire Stores\"],\"GNG6r1\":[\"Secretarial Support Services\"],\"GNd/Iv\":[\"Hardware Stores\"],\"GRimyo\":[\"Set up bank account to add payment info\\nand set a QR code\"],\"GS+Mus\":[\"Export\"],\"GTOXKV\":[\"Bhutan\"],\"GV93s+\":[\"Edit contact person\"],\"GW2v/o\":[\"Transportation Services (Not Elsewhere Classified)\"],\"GY9Kwl\":[\"Create payment term\"],\"GYSXJw\":[\"Wrong file format. Please, upload the file in JPEG or PNG format.\"],\"GZtgt0\":[\"Macanese Pataca\"],\"Gcj//v\":[\"Unit label\"],\"GeTSU+\":[\"You don’t have any \",[\"0\"],\" yet.\"],\"Gg97TJ\":[\"Invoice Number *\"],\"GiSunU\":[\"Turkish Lira\"],\"Gj7rFo\":[\"It’s required to add any individual who is on the governing board of the company.\\n\"],\"GloT7f\":[\"Please try to reload.\"],\"GmBHgL\":[\"Back of your additional identity document\"],\"GmhwUJ\":[\"No Quotes\"],\"GpShIE\":[\"Back of your identity document\"],\"GqhSP0\":[\"Photographic Studios\"],\"GtmO8/\":[\"from\"],\"Gx5cly\":[\"Replace items\"],\"Gyc/04\":[\"Ukraine\"],\"H+y9X2\":[\"Edit bank account\"],\"H0ShEF\":[\"Payments\"],\"H6Ma8Z\":[\"Discount\"],\"HAVs6k\":[\"Document prefix and number\"],\"HAk4s+\":[\"New incoming invoice\"],\"HDiLCp\":[\"Mark invoice as uncollectible?\"],\"HE5syK\":[\"No rules\"],\"HF6C2L\":[\"Phone Number\"],\"HHQLnC\":[\"1st discount period\"],\"HKZDAB\":[\"Cook Islands\"],\"HQrKT/\":[\"Measure unit is a required field\"],\"HRBSOk\":[\"You can not create receivable with a type other than \\\"\",[\"invoice\"],\"\\\"\"],\"HSIt19\":[\"Issue at\"],\"HTFZeF\":[\"Nauru\"],\"HXw4+w\":[\"Don’t wait for your client to pay\"],\"HY5rFE\":[\"Who are my customers?\"],\"HaRXnI\":[\"Non-FI, Stored Value Card Purchase/Load\"],\"HahySZ\":[\"Settings updated successfully.\"],\"HcBBqj\":[\"Bancontact\"],\"HcF1hq\":[\"An invoice can only contain items in the selected currency.\"],\"HeN0vw\":[\"financial plans enabled\"],\"HgfQva\":[\"Algeria\"],\"Hh+2sg\":[\"Edit User Role\"],\"HjIa0/\":[\"Computer Network Services\"],\"HjO7AQ\":[\"No Tax ID available\"],\"HjWVjB\":[\"Payables\"],\"HmpVeZ\":[\"discount\"],\"HnTqVe\":[\"Thank you for completing onboarding for payments services. We will review the information submitted, and notify you when complete.\"],\"HpK/8d\":[\"Reload\"],\"HptUxX\":[\"Number\"],\"HsllL2\":[\"Kenyan Shilling\"],\"HvvWyf\":[\"Please enter a phone number.\"],\"Hx4zgC\":[\"Stationery Stores, Office, and School Supply Stores\"],\"HxgYFh\":[\"Seychellois Rupee\"],\"I4Dq1m\":[\"Invoice \",[\"0\"],\" from \",[\"entityName\"]],\"I72Oe1\":[\"Funding details\"],\"I8gLs0\":[\"For \",[\"invoiceAmount\"],\" | Issued \",[\"issueDate\"]],\"IAVxV9\":[\"Incl. tax\"],\"IAwvQM\":[\"Rwanda\"],\"ICsA6P\":[\"You have unsaved changes\"],\"IFpQdv\":[\"Create Credit Note\"],\"IJqoCF\":[\"This person owns 25% or more of the company.\"],\"ILMknU\":[\"Construction Materials (Not Elsewhere Classified)\"],\"IN2VR0\":[\"Bank Name\"],\"INKhSX\":[\"Policy will be applied if document matches <0>ALL</0> of the following conditions:\"],\"IPMF63\":[\"Liechtensteinian UID number\"],\"IQOOEz\":[\"Japanese Registered Foreign Businesses' Registration Number (Tōroku Kokugai Jigyōsha no Tōroku Bangō)\"],\"IQkFfi\":[\"Your application is in review\"],\"ITtI9G\":[\"Value Added Tax (Switzerland)\"],\"IU7sBy\":[\"Modern\"],\"IcBKOw\":[\"Processing payment...\"],\"Icgalf\":[[\"0\",\"plural\",{\"one\":[\"invoice\"],\"two\":[\"invoices\"],\"few\":[\"invoices\"],\"many\":[\"invoices\"],\"zero\":[\"invoices\"],\"other\":[\"invoices\"]}]],\"Icyy+w\":[\"Add to prompts\"],\"IiuqFb\":[\"Create Counterpart – Company\"],\"Ija6SC\":[\"Estonia\"],\"Ilt4Fa\":[\"iDEAL\"],\"In8hEd\":[\"Kuwaiti Dinar\"],\"Ino+EO\":[\"Health and Beauty Spas\"],\"IounKn\":[\"INV-auto\"],\"IqIO9/\":[\"Payable “\",[\"0\"],\"” has been canceled\"],\"IqKCNQ\":[\"Row\"],\"IrI9pg\":[\"End date\"],\"Is4Pcd\":[\"Total taxes\"],\"Itn+J7\":[\"What can I help you with?\"],\"IuMGvq\":[\"Invoice\"],\"Iw7UoY\":[\"Saudi Arabia\"],\"IwXxWT\":[\"Montserrat\"],\"Ixc8y4\":[\"No option found.\"],\"J/Upwb\":[\"days\"],\"J/hVSQ\":[[\"0\"]],\"J3EsIX\":[\"All items\"],\"J3V4yP\":[\"Bolivia\"],\"J4tDjP\":[\"European VAT number (Sweden)\"],\"J51kW5\":[\"Product was deleted.\"],\"J5mmIg\":[\"Motor Homes Dealers\"],\"J69wfn\":[\"Religious Organizations\"],\"J6PdvT\":[\"Mexico\"],\"J6WI1B\":[\"Select file\"],\"J6e4kp\":[\"Invoice #\"],\"J9mZzB\":[\"My financing\"],\"JATUCE\":[\"Ethiopian Birr\"],\"JCB8BJ\":[\"Choose counterpart type:\"],\"JCJRgs\":[\"Issue invoice and email it to a customer\"],\"JDvawG\":[\"Please provide a valid date.\"],\"JE0w0F\":[\"copy text\"],\"JFYrMR\":[\"Delete payment term?\"],\"JI20V0\":[\"Failed to create payment term, please try again.\"],\"JJ+vfH\":[\"South Africa\"],\"JM8EcC\":[\"Invoice issue date\"],\"JNCzPW\":[\"Country\"],\"JSpjg7\":[\"Access Restricted\"],\"JX30IV\":[[\"0\"],\" / \",[\"1\"],\" issued\"],\"JXaffl\":[\"Greater than\"],\"JYE1PA\":[\"Preview email\"],\"JcJnn+\":[\"Christmas Island\"],\"Jfw6Qh\":[\"European VAT number (Estonia)\"],\"JkJZSx\":[\"Invoice was cancelled and won't be paid.\"],\"JlFcis\":[\"Send\"],\"JmHsD2\":[\"Get your business moving and accelerate growth with quick and easy access to funding. Multiple options available.\"],\"JodIk0\":[\"Once updated, you won't be able to revert the PDFs.\"],\"JpohL9\":[\"Tax\"],\"JqEW8Q\":[\"Min digits (25 max)\"],\"Ju4XwE\":[\"Brunei Darussalam\"],\"Jwys4y\":[\"Payment reminders will be sent automatically to this counterpart.\"],\"Jxe19b\":[\"Send\"],\"K0vw1f\":[\"Failed to delete Counterpart.\"],\"K16LHb\":[\"How does invoice financing work?\"],\"K2Ydoi\":[\"Create counterpart\"],\"K3nLD3\":[\"2nd discount period\"],\"K47k8R\":[\"Product\"],\"K5QeDO\":[\"Intra-Company Purchases\"],\"K6hdpo\":[\"Mens, Womens Clothing Stores\"],\"K7LnQg\":[\"Greater than \",[\"formattedValue\"]],\"K7tIrx\":[\"Category\"],\"K9UqnH\":[\"Entity VAT is a required field\"],\"KCm2is\":[\"Overdue reminder\"],\"KDw4GX\":[\"Try again\"],\"KE5U+e\":[\"Please get in touch with the provider if you still wish to receive financing.\"],\"KEeJZb\":[\"Fines - Government Administrative Entities\"],\"KG0z6j\":[\"To delete this role, remove it from all users\"],\"KH5s01\":[\"All users from the list\"],\"KKl+x9\":[\"Display bank account details on PDF\"],\"KMdYRY\":[\"Download PDF\"],\"KNcly1\":[\"VAT ID \",[\"0\"]],\"KOLI61\":[\"Your Tax ID\"],\"KP8XyF\":[\"Miscellaneous Food Stores - Convenience Stores and Specialty Markets\"],\"KTFebB\":[\"European VAT number (Germany)\"],\"KUeXcx\":[\"Legal name\"],\"KV5B3G\":[\"Apply for loans\"],\"KWsCqG\":[\"Settled\"],\"KaEnmm\":[\"Serbian Dinar\"],\"KattWT\":[\"Stamp and Coin Stores\"],\"Kbwvno\":[\"Memo\"],\"KeiQNu\":[\"Product \",[\"0\"],\" was updated.\"],\"KevOdr\":[\"Uganda\"],\"KfdDVS\":[\"Chemicals and Allied Products (Not Elsewhere Classified)\"],\"Kj7tIb\":[\"Invalid IBAN\"],\"KkOzUW\":[\"Vat ID\"],\"KmA7HS\":[\"Approval Status\"],\"Kogm/W\":[\"Repay now\"],\"KpnwJK\":[\"Delete \\\"\",[\"0\"],\"\\\"?\"],\"KvVocI\":[\"Linked documents\"],\"Kw49B/\":[\"Set your entity's \",[\"0\"],\" to issue invoice\"],\"Kz0F5M\":[\"Trailer Parks, Campgrounds\"],\"Kz0awa\":[\"No active payment methods available. The email will be sent without a payment link\"],\"L064fX\":[\"PDF Layout\"],\"L2fpNd\":[\"Results per page\"],\"LIDS1l\":[\"Description cannot exceed 255 characters\"],\"LMJziE\":[\"Paints, Varnishes, and Supplies\"],\"LN9k4z\":[\"Due to late payment your financing is currently on hold. Please, contact the provider for further details.\"],\"LOB4gr\":[\"Including tax\"],\"LOchFp\":[\"Payment not allowed\"],\"LOl1PQ\":[\"Tax Identification Number (Chile)\"],\"LToFQm\":[\"Maldives\"],\"LVecP9\":[\"User Roles\"],\"LYYVee\":[\"Medical Services\"],\"LZFxxH\":[\"Liechtenstein\"],\"LamdvU\":[\"Document numbers, both current and future, must be a maximum of 21 characters\"],\"LbPPLi\":[\"Add new rule\"],\"LcyTY9\":[\"Make default\"],\"Lg0nT2\":[\"Close AI Sidebar\"],\"LhMjLm\":[\"Time\"],\"LoE6pF\":[[\"name\"],\" document template has been set as the default.\"],\"LqTjQv\":[\"Plumbing, Heating Equipment, and Supplies\"],\"LrLE2V\":[\"Bank transfer\"],\"LtI9AS\":[\"Owner\"],\"LxtyIU\":[\"Payable “\",[\"0\"],\"” has been submitted\"],\"LzmZxM\":[\"Invoice Reminder type is not provided\"],\"M1RnFv\":[\"Expired\"],\"M1YrNh\":[\"Add another director\"],\"M1cChr\":[\"Issue Date\"],\"M2NuNS\":[\"Close role editor\"],\"M2sCHs\":[\"Set a VAT ID and Tax ID for this customer to issue invoice\"],\"M5w1yh\":[\"Users with this role\"],\"M6IFwT\":[\"Error updating approval policy\"],\"M77m54\":[\"Sports Clubs/Fields\"],\"M7SqjM\":[\"Reopen\"],\"M7kdus\":[\"Item tax must be a number between 0 and 100\"],\"M8JEZi\":[\"Invoice date\"],\"M9Ed6U\":[\"Home address\"],\"MBblDr\":[\"Try adjusting your search or filter.\"],\"MC+UcD\":[\"Australian Registered Body Number (Australia)\"],\"MCYsTh\":[\"European VAT number (Austria)\"],\"MFljzs\":[\"Italy\"],\"MGdK0K\":[\"Close invoice creation\"],\"MHrjPM\":[\"Title\"],\"MILoeL\":[\"Services\"],\"MKBJbz\":[\"Music Stores-Musical Instruments, Pianos, and Sheet Music\"],\"MKc709\":[\"You can’t undo this action.\"],\"MMPNO2\":[\"Set your entity's Tax ID to issue invoice\"],\"MMpOlx\":[\"Repayment sum\"],\"MQZ+qK\":[\"The vendor details in the bill don’t fully match the saved counterpart.\"],\"MR54EK\":[\"Unfortunately, you can’t cancel\"],\"MRZSMR\":[\"The IBAN should correspond to the chosen country - \",[\"country\"],\".\"],\"MRsZEF\":[\"Receivable type quote is not supported. Only invoice is supported.\"],\"MSIfPx\":[\"Give me all invoices I still have unpaid\"],\"MTQqrg\":[\"Payment status\"],\"MTqQMG\":[\"Not set\"],\"MUa8SB\":[\"Paid in full\"],\"MVGER/\":[\"Name cannot exceed 255 characters\"],\"MY/To5\":[\"Malaysian FRP number\"],\"MYggMZ\":[\"Amount due\"],\"McU8nI\":[\"Roles & Approvals\"],\"MeDJKf\":[\"Sort Code\"],\"MhCc7B\":[\"Colombia\"],\"MhyecB\":[\"Invoice Number\"],\"Mj7m37\":[\"Or add bill manually\"],\"Mlias8\":[\"Example: NET 30, –2%/10 days, –1%/20 days\"],\"MmJy4F\":[\"Duty Free Stores\"],\"MoGyzt\":[\"Please list all individuals who are members of the governing board of the company.\"],\"MqJtNb\":[\"Prompt Library\"],\"Mqy/Zy\":[\"United States\"],\"Mr1Gi4\":[\"Pawn Shops\"],\"MsTUgs\":[\"Tunisia\"],\"MtZ4ZX\":[\"Ecuador\"],\"MvTCyk\":[\"Role not found\"],\"MwcOtB\":[\"Add text\"],\"Mxm2Pc\":[\"No users assigned\"],\"N0cqEh\":[\"Front of your identify document\"],\"N0e1EM\":[\"Ambulance Services\"],\"N0pjoN\":[\"Telecommunication Services\"],\"N0qXpE\":[\"Products\"],\"N2C89m\":[\"Reference\"],\"N3BQW1\":[\"There is no counterpart by provided id: \",[\"0\"]],\"N3hvtG\":[\"Myanmar\"],\"N40H+G\":[\"All\"],\"N6Pxr9\":[\"View all\"],\"N6j2JH\":[\"Edit \",[\"0\"]],\"N6kXss\":[\"Bangladesh\"],\"NBdIgR\":[\"Comment\"],\"NCBDr7\":[\"Gibraltar\"],\"NCIYDF\":[\"Created by\"],\"NDes8k\":[\"There is no invoice for the provided id: \",[\"0\"]],\"NFSe9y\":[\"Egyptian Pound\"],\"NGditG\":[\"Egypt\"],\"NHGjxs\":[\"Trigger in Monite Script\"],\"NHJM/H\":[\"No separator\"],\"NICUmW\":[\"Director\"],\"NO/Z5d\":[\"Preset Name must be 255 characters or less\"],\"NPMqlC\":[\"Womens Ready-To-Wear Stores\"],\"NQ6aDA\":[\"Drag and drop the image here.\"],\"NQ8llq\":[\"Add item\"],\"NQArSl\":[\"Item tax must be 0 or greater\"],\"NRawgp\":[\"Failed to a create payment link. Please try again.\"],\"NT7r0P\":[\"Review terms and sign\"],\"NUNSDw\":[\"Delete invoice\"],\"NY/x1b\":[\"Address line 1\"],\"NaHtmo\":[\"Scheduled invoices\"],\"NapOX1\":[\"Continue with no executives\"],\"Naqg3G\":[\"No file provided\"],\"NbxaXy\":[\"Required for USD and GBP currencies\"],\"Ne/z8V\":[\"Can't be greater than 20\"],\"Nen7JD\":[\"Dating/Escort Services\"],\"NihQNk\":[\"Customers\"],\"NirHWT\":[\"Reminders are disabled for this customer, and no email address has been added for it. Please update the details or turn off reminders.\"],\"NlmmCk\":[\"Finance invoice\"],\"Nm/3Sm\":[\"Theatrical Ticket Agencies\"],\"NrYZ3H\":[\"Total Amount\"],\"NrjgdM\":[\"Fireplace, Fireplace Screens, and Accessories Stores\"],\"NtUHwE\":[\"Belarusian Ruble\"],\"Nu4oKW\":[\"Description\"],\"NuxEgy\":[\"Counterpart bank account is required\"],\"Nx8xgB\":[\"Laotian Kip\"],\"NxahIk\":[\"Added by\"],\"NyruWg\":[\"Laundry, Cleaning Services\"],\"Nz9As9\":[\"Pay in \",[\"0\"],\" days\"],\"O3oNi5\":[\"Email\"],\"O9zUj0\":[\"Can't be less than 1\"],\"OA1ARC\":[\"Already updated PDFs can't be reverted to the default view\"],\"OATosa\":[\"Approval policy has been deleted\"],\"OBeM8S\":[\"Recurrence was completed, all invoices were issued\"],\"OFbW3u\":[\"Bangladeshi Taka\"],\"OHVBR5\":[\"Amount paid on \",[\"0\"]],\"OJx3wK\":[\"Not available\"],\"OKOh/2\":[\"Norfolk Island\"],\"OL3W//\":[\"A counterpart with this name exists but has not been specified in the document.\"],\"OLpUEo\":[\"This invoice will change its status, and you won't be able to receive or log any payment against it.\"],\"ONShjI\":[\"Select GL code\"],\"ONlNeq\":[\"All loans are subject to credit approval. Your terms may vary. Flourish Capital loans are issued by Kanmon. California Loans are made pursuant to a Department of Financial Protection and Innovation California Lenders Law License. Read more about Kanmon\"],\"OSRvgd\":[\"Contact person\"],\"OUUlO8\":[\"Panama\"],\"OVrih8\":[\"Guatemala\"],\"OX9j2H\":[\"SEPA Credit\"],\"OYCMq7\":[\"NET\"],\"OYHzN1\":[\"Tags\"],\"OZdaTZ\":[\"Person\"],\"OabVnK\":[\"Counterpart “\",[\"0\"],\"” has been created.\"],\"ObfjF0\":[\"Copy payment link\"],\"Oi71Bx\":[\"Accept Service Agreement\"],\"OigxPq\":[\"Spain\"],\"OjPw/f\":[\"Pay in the first \",[\"0\"],\" days\"],\"OkbY/k\":[\"Please provide information about your business.\"],\"OlnOso\":[\"Note to customer\"],\"On0aF2\":[\"Website\"],\"OtNQEq\":[\"Income Tax Number (Malaysia)\"],\"OyWSU1\":[\"You can't change the country the entity is registered in\"],\"P+9YZ/\":[\"Stationary, Office Supplies, Printing and Writing Paper\"],\"P+OIQt\":[\"New Zealand Dollar\"],\"P+x4mP\":[\"Doctors\"],\"P2PNFH\":[\"Artists Supply and Craft Shops\"],\"P2he1F\":[\"Product \",[\"0\"],\" was created.\"],\"P2sM9u\":[\"Roles and Policies tabs\"],\"P3d5qF\":[\"No Tags\"],\"P5lXg5\":[\"Update PDF file with payment info\"],\"P7ghPN\":[\"- the loan sum exceeds your remaining limit.\"],\"P7k2N+\":[\"Brazil\"],\"PE5vOp\":[\"Gabon\"],\"PECOrR\":[\"Units is required\"],\"PEVwDN\":[\"Sewing, Needlework, Fabric, and Piece Goods Stores\"],\"PFLZOw\":[\"Payment record was created\"],\"PFsKfU\":[\"Account number is required\"],\"PJX9yG\":[\"Trinidad and Tobago Dollar\"],\"PK0BUQ\":[\"Ukrainian Hryvnia\"],\"POdIrN\":[\"Address Line 1\"],\"PPcets\":[\"Set as default\"],\"PRRPn+\":[\"Price per unit\"],\"PSP1MZ\":[\"Role Name\"],\"PSrVjR\":[\"Select invoices you would like to finance and send them for review.\"],\"PUfTsf\":[\"Delete receivable?\"],\"PWhHOt\":[\"Give me the total amount of receivables overdue by more than 30 days\"],\"PXOPc5\":[\"information...\"],\"PZCqeW\":[\"Please try again later.\"],\"PZkhFT\":[\"Sri Lankan Rupee\"],\"Paid\":[\"Paid\"],\"PcDkYV\":[\"Photographic, Photocopy, Microfilm Equipment, and Supplies\"],\"PcKWwp\":[\"Tax rate cannot be negative\"],\"Pd629B\":[\"View\"],\"PhJu+G\":[\"Computer Repair\"],\"PiH3UR\":[\"Copied!\"],\"PlbLIk\":[\"VAT Value\"],\"Pls7ft\":[\"French Guiana\"],\"PoCXbi\":[\"Todo task mute\"],\"PpLva2\":[\"Action menu\"],\"PqfYW9\":[\"for \",[\"0\"]],\"PrLJUa\":[\"Terms and conditions\"],\"PrPX0w\":[\"Invoice total\"],\"PuG6ji\":[\"BIC\"],\"PuO1Ve\":[[\"0\"],\"% advance rate, Pay in \",[\"1\"],\" days, \",[\"2\"],\"% fee\"],\"Pv9sPh\":[\"Discount cannot be negative\"],\"Pw3pGz\":[\"Tanzania\"],\"PzmMD6\":[\"Payment reminder\"],\"Q+Sw8B\":[\"6-digit code required for non-EUR and non-USD currencies\"],\"Q033BY\":[\"Product Name\"],\"Q0M5b1\":[\"Drop the file here to upload\"],\"Q2lUR2\":[\"Currency\"],\"Q7/mYt\":[\"Payment processing services for \",[\"entityName\"],\" are provided by Stripe and are subject to the <0>Stripe Connected Account Agreement</0>, which includes the <1>Stripe Terms of Service</1> (collectively, the “Stripe Services Agreement”). By agreeing to these terms or continuing to operate as \",[\"entityName\"],\" on \",[\"platformName\"],\", you agree to be bound by the Stripe Services Agreement, as the same may be modified by Stripe from time to time. As a condition of \",[\"platformName\"],\" enabling payment processing services through Stripe, you agree to provide \",[\"platformName\"],\" accurate and complete information about you and your business, and you authorize \",[\"platformName\"],\" to share it and transaction information related to your use of the payment processing services provided by Stripe.\"],\"Q86McD\":[\"Cancel recurrence confirmation\"],\"Q92GO+\":[\"Direct Marketing - Inbound Telemarketing\"],\"Q9fSvX\":[\"Affirm\"],\"QB4Z9M\":[\"Fast Food Restaurants\"],\"QBQXiF\":[\"Recurrence\"],\"QDHkr8\":[\"Airlines, Air Carriers\"],\"QDkkHT\":[\"Measure unit\"],\"QG8+pV\":[\"Days after must be at most 10000\"],\"QGqBr+\":[\"Primary address line\"],\"QJAsEi\":[\"Last day of the month\"],\"QKTS84\":[\"Durable Goods (Not Elsewhere Classified)\"],\"QKgwS0\":[\"No Approval Policies\"],\"QLbn1Q\":[\"Cancel recurrence\"],\"QNmwVc\":[\"Error updating payment term\"],\"QOQq/s\":[\"Legal business name\"],\"QSAICZ\":[\"Your VAT ID\"],\"QSZYwx\":[\"Kenya\"],\"QT1Rm6\":[\"You can continue to the next step\"],\"QTE5a2\":[\"European VAT number (Malta)\"],\"QUuzW2\":[\"Less than or equal to\"],\"QV1+Qi\":[\"Aquariums\"],\"QZ0UQ/\":[\"Invoice delete confirmation\"],\"QZDeNo\":[\"Package Stores-Beer, Wine, and Liquor\"],\"QbilUm\":[\"Enter a valid email address\"],\"Qcl8La\":[\"Are you sure you want to cancel this recurring invoice?\"],\"QeKGx6\":[\"Australia\"],\"QeSNDd\":[\"United States Dollar\"],\"QgPtNA\":[\"Delete\"],\"Qj+gPx\":[\"Credit notes\"],\"QlK352\":[\"Snowmobile Dealers\"],\"Qmr3jO\":[\"Prompts\"],\"QnGL8d\":[\"Somali Shilling\"],\"Qo+afj\":[\"Business Registration (Hong Kong)\"],\"Qoq+GP\":[\"Read more\"],\"QpgBEp\":[[\"0\"],\" days\"],\"QqXGUk\":[\"Goods and Services Tax (Singapore)\"],\"QrPLE3\":[\"Cancel without saving?\"],\"QrPXF7\":[\"Search by number or vendor\"],\"QrhaVg\":[\"Units\"],\"QrqqXQ\":[\"Record payment\"],\"QsNWTM\":[\"Add contact\"],\"QszVne\":[\"Delete “\",[\"0\"],\"” tag???\"],\"QuE/Ym\":[\"Candy, Nut, and Confectionery Stores\"],\"R00EhU\":[\"Government Services (Not Elsewhere Classified)\"],\"R2CEyZ\":[\"Counterpart not found\"],\"R4DYJL\":[[\"bankAccountName\"],\" (Default)\"],\"R53qXO\":[\"Create invoice\"],\"R8qg6k\":[\"Commercial Footwear\"],\"R9GvPf\":[\"You don’t have any products or services yet\"],\"RA55Iu\":[\"Company name\"],\"RAUgZW\":[\"Tunisian Dinar\"],\"RCWkQd\":[\"Delete \\\"\",[\"0\"],\"\\\" tag?\"],\"RGxIBt\":[\"Uniforms, Commercial Clothing\"],\"RHZR9H\":[\"Precious Stones and Metals, Watches and Jewelry\"],\"RIjnkH\":[\"Invoices cannot be financed if:\"],\"RK4mVN\":[\"Upload payable files\"],\"RKseeU\":[\"Swazi Lilangeni\"],\"ROPK7D\":[\"Bank name\"],\"ROQqBe\":[\"Upload a document here.\"],\"ROZu5e\":[\"Cancel receivable?\"],\"RPpPTc\":[\"Enable email reminders\"],\"RS0o7b\":[\"State\"],\"RW8Abh\":[\"Discount date 1\"],\"RWw9Lg\":[\"Close modal\"],\"RZla6+\":[\"Indian Rupee\"],\"Rdhz6Y\":[\"Payment due\"],\"Re9bA2\":[\"Any user that has user role\"],\"ReInK4\":[\"Digital Goods – Large Digital Goods Merchant\"],\"RgSrTP\":[\"A friendly name for this bank account\"],\"RhQWz/\":[\"Payment details\"],\"Rhcdj/\":[\"China\"],\"RiFslz\":[\"Financing\"],\"RkK9le\":[\"iteration-\",[\"0\"]],\"Rm37aF\":[\"This information is not correct\"],\"Rmyz2A\":[\"Virgin Islands, U.S.\"],\"RsRRw3\":[\"Peru\"],\"RtEjhl\":[\"Amount due (\",[\"0\"],\")\"],\"RtHGDr\":[\"Canada\"],\"RuKpoG\":[\"Failed to retrieve payment link. Please try again.\"],\"Rzc+gp\":[\"Brazilian CPF number\"],\"Rzrhw1\":[\"Value must be at most '255' characters\"],\"S+fQ9k\":[\"Edit tag\"],\"S02NRM\":[\"Entity bank account\"],\"S0UwWX\":[\"Please enter a valid phone number.\"],\"S1aE/A\":[\"Lebanese Pound\"],\"S1uvGV\":[\"Delete receivable “\",[\"documentId\"],\"”?\"],\"S3IIJn\":[\"Hungarian Forint\"],\"S4oJK/\":[\"Switzerland VAT number\"],\"S8gy7K\":[\"Industry\"],\"SB+tBo\":[\"Polish Złoty\"],\"SBqADG\":[\"No Credit Notes\"],\"SCKlBJ\":[\"Small Appliance Repair\"],\"SHV6g0\":[\"Financed Invoices\"],\"SJnhQ+\":[\"Petroleum and Petroleum Products\"],\"SK/R2a\":[\"Guyanese Dollar\"],\"SKQ2F3\":[\"Tax identification number\"],\"SL0Q0h\":[\"Failed to create Contact Person.\"],\"SN0sP/\":[\"Opticians, Eyeglasses\"],\"SNQEUJ\":[\"Austria\"],\"SNhucU\":[\"Carpet/Upholstery Cleaning\"],\"SO1yIh\":[\"If you switch the invoice currency and add corresponding items, it will automatically replace the previously added ones.\"],\"SQ4Lb4\":[\"Address line 1 is required\"],\"SRy70x\":[\"Cape Verde\"],\"ST6sUv\":[\"Yemeni Rial\"],\"SUQ3DW\":[\"Taiwanese VAT\"],\"SUZ9jI\":[\"Please list all business executives from the company.\"],\"SV2ROL\":[\"Please upload the required documents to continue.\"],\"SWnN1L\":[\"Business address\"],\"SYj/pH\":[\"Item quantity must be greater than 0\"],\"SZyRXh\":[\"European VAT number (Italy)\"],\"Sbkwmo\":[\"Gift, Card, Novelty, and Souvenir Shops\"],\"Scheduled for {amount} on {date}\":[\"Scheduled for \",[\"amount\"],\" on \",[\"date\"]],\"Scheduled {date}\":[\"Scheduled \",[\"date\"]],\"Sdv6pQ\":[\"Chat history\"],\"SeD1C8\":[\"Failed to update receivable: \",[\"errorMessage\"]],\"SgduFH\":[\"Line Items\"],\"SjJZHR\":[\"Unknown payment method\"],\"SjhaXQ\":[\"Ethiopia\"],\"SoS628\":[\"Account holder name is required\"],\"SokYM5\":[\"You can create your first approval policy.\"],\"Son+lM\":[\"Document prefix must contain at least 1 symbol\"],\"SpByzI\":[[\"0\"],\" payment for \",[\"1\"],\" processing\"],\"SrBzjo\":[\"Item Name\"],\"SsSy5T\":[\"You can't set reminders because they are disabled for this customer. You can enable them in the customer details.\"],\"SteimB\":[\"Create new counterpart\"],\"Sxm8rQ\":[\"Users\"],\"Sy30wx\":[\"Expense_Receipt_May2025.pdf\"],\"T0yTBU\":[\"You don’t have any roles yet.\"],\"T2bD3m\":[\"Delete “\",[\"0\"],\"” tag?\"],\"T3bXxK\":[\"Service\"],\"T3h/1q\":[\"Custom prefix (50 chars max)\"],\"T41dcM\":[\"Todo task\"],\"T5E8os\":[\"Logo was removed.\"],\"T95l6D\":[\"Mexican RFC number\"],\"TDAbIp\":[\"Oman\"],\"TGM/OV\":[\"Repayment on\"],\"TH3Irz\":[\"Permission\"],\"TImlpj\":[\"Uzbekistan Som\"],\"TJBHlP\":[\"Standard\"],\"TJBMkt\":[\"Min number of digits\"],\"TJowrx\":[\"If amount is\"],\"TMLAx2\":[\"Required\"],\"TMOcTz\":[\"Default currency switch\"],\"TNe5xv\":[\"Taxicabs/Limousines\"],\"TPILzR\":[\"You can create your first role.\"],\"TPS6x1\":[\"Antique Reproductions\"],\"TQBJVF\":[\"Policy Name\"],\"TSIucq\":[\"Preview of \",[\"0\"]],\"TTfTw+\":[\"Invoice financing\"],\"TUPCh3\":[\"Bill #\",[\"payableId\"],\" has been deleted\"],\"TWUOb8\":[\"Add contact person\"],\"TWzp+9\":[\"VAT total\"],\"TY83dO\":[\"Something went wrong. If this issue persists please contact us through\\n            the chat icon in the bottom right or email us at help@getargon.ai\"],\"TdCVfB\":[\"Dry Cleaners\"],\"TeS101\":[\"Loading invoice details\"],\"TgtNLO\":[\"Item quantity must be a number\"],\"Tjcddd\":[\"Get paid\"],\"TkPaoo\":[\"Family Clothing Stores\"],\"TmEvit\":[\"Are you sure you want to regenerate this PDF file to contain the amount paid and amount due sums?\"],\"TmwJ8/\":[\"Please, add at least 1 item to proceed with this invoice\"],\"Tnk1Zx\":[\"Vat “\",[\"0\"],\"” has been created.\"],\"Total\":[\"Total\"],\"TpfZs5\":[\"Nondurable Goods (Not Elsewhere Classified)\"],\"TqoBLx\":[\"Mexican Peso\"],\"Tr/sJa\":[\"Sao Tome And Principe\"],\"TthS+R\":[\"Tolls/Bridge Fees\"],\"Ttw+e+\":[\"VAT ID\"],\"TvsoUX\":[\"Verify that you represent this business\"],\"Tw+LMx\":[\"Please enter your IBAN number.\"],\"Tx8tOO\":[\"Tajikistani Somoni\"],\"Txbj2m\":[\"There is no reminder by provided id: \",[\"reminderId\"]],\"Ty2Tu/\":[\"Unit \",[\"0\"],\" was deleted from the list.\"],\"Tz0i8g\":[\"Settings\"],\"TzHRlj\":[[\"0\"],\" \",[\"1\"],\" before\"],\"U+kwBO\":[\"Roles from the list\"],\"U16eyH\":[\"Provide documents\"],\"U1mqrC\":[\"Information Retrieval Services\"],\"U2GxOw\":[\"Rwandan Franc\"],\"U2mFcW\":[\"Macedonia\"],\"U3Y3M6\":[[\"0\"],\" x \",[\"1\"]],\"U4aiMW\":[\"Postal code\"],\"U8iJH/\":[\"Salvadoran Colón\"],\"UA8U+w\":[\"Swiss Franc\"],\"UCxRMK\":[\"Mailbox\"],\"UEQ0FI\":[\"European VAT number (Bulgaria)\"],\"UFeLUQ\":[\"Airports, Flying Fields\"],\"UGFmiA\":[\"Payment term successfully deleted\"],\"UHDGIH\":[\"/\"],\"UJmAAK\":[\"Subject\"],\"UKqdzv\":[\"Bank account holder name\"],\"UL8A9w\":[\"Tag\"],\"UMAHMm\":[\"Fijian Dollar\"],\"UMi+yY\":[\"Payable not found\"],\"UPftN8\":[\"Guinean Franc\"],\"UQitBZ\":[\"No payment reminders available\"],\"URAE3q\":[\"Paused\"],\"URkvuv\":[\"To create a preset you need to fill out all the required fields\"],\"URmyfc\":[\"Details\"],\"UUABbG\":[\"Buying/Shopping Services\"],\"UVEEPq\":[\"Failed to update Bank Account.\"],\"UVNjzZ\":[\"Tax Preparation Services\"],\"UWCk+J\":[\"Tax rate as percentage (0-100)\"],\"UYSe5Y\":[\"Edit template settings\"],\"UYkMwx\":[\"You can include details about the warranty, insurance, liability, late payment fees and any other important notes\"],\"UYw39m\":[\"Kuwait\"],\"UZFKY7\":[\"Your customers can make direct bank transfers outside the payment links\"],\"UZJWKB\":[\"Leave page\"],\"UabgBd\":[\"Body is required\"],\"UbRKMZ\":[\"Pending\"],\"Ucdj62\":[\"Edit\"],\"UgT6EY\":[\"Save and continue\"],\"Ui+ixx\":[\"It will remain in all the documents where it is added. You can’t undo this action.\"],\"UjEiXJ\":[\"Date when the invoice was issued\"],\"UkonCq\":[\"Delete \\\"\",[\"name\"],\"\\\" unit?\"],\"Un8OH5\":[\"South Georgia And Sandwich Isl.\"],\"UqyaMe\":[\"Elementary, Secondary Schools\"],\"V+Y2mD\":[\"Bermuda\"],\"V/M8GC\":[\"Business URL\"],\"V/u7H2\":[\"You don’t have any invoices yet.\"],\"V0O+gh\":[\"Sports and Riding Apparel Stores\"],\"V0nEPn\":[\"Product type is required\"],\"V1EGGU\":[\"First name\"],\"V1Pe1X\":[\"Financing date\"],\"V3MCts\":[\"Preset name\"],\"VAAqbc\":[\"Chile\"],\"VCKI5a\":[\"days before discount date 2\"],\"VEf5xA\":[\"Invalid URL. Please ensure it starts with 'http://' or 'https://'.\"],\"VFCG/o\":[\"Afghanistan\"],\"VHdaJt\":[\"Tuvalu\"],\"VIfUjY\":[\"Good response\"],\"VN6bRX\":[\"European VAT number (Ireland)\"],\"VQApLJ\":[\"Approval type\"],\"VQYmkA\":[\"Invoice from \",[\"entityName\"]],\"VSANA+\":[\"Financing is not available for your business anymore. Please, contact the provider for further details.\"],\"VTDxQD\":[\"Cancel Recurring Invoice\"],\"VVqLAM\":[\"It is an entity having legal status as an individual.\"],\"VWEssG\":[\"Federal Tax Identification Number or EIN\"],\"VYKe2X\":[\"Professional Services\"],\"VYaCry\":[\"And add items created with it.\"],\"VZ7lPX\":[\"Credit applied on \",[\"0\"]],\"VZcVnl\":[\"You can record a payment if you've already received it.\"],\"VaHzq7\":[\"Turks And Caicos Islands\"],\"VaUs17\":[\"Bank Identifier Code for international transfers\"],\"Vam7wJ\":[\"Include current year prefix\"],\"VatpuT\":[\"Political Organizations\"],\"VbWX2u\":[\"Quantity\"],\"Ve90uG\":[\"Default for Currency\"],\"Vi2Pqx\":[\"by\"],\"VjhQ1M\":[\"Libyan Dinar\"],\"VopDnl\":[\"Bacs Direct Debit\"],\"VqvJZo\":[\"Wires, Money Orders\"],\"VrYnty\":[\"Full Social Security Number\"],\"VvaBCT\":[\"It must be in the \\\"Issued\\\" or \\\"Partially paid\\\" statuses and have more than 7 days till overdue.\"],\"VwHnrg\":[\"Mobile Home Dealers\"],\"VwmFKO\":[\"Truck StopIteration\"],\"VyiELv\":[\"Repayment on \",[\"repaymentDate\"]],\"Vz+J55\":[\"Educational Services\"],\"VzdGDx\":[\"Unsupported file type for \",[\"0\"]],\"W+pwCq\":[\"Days before must be at least 1\"],\"W0PZsI\":[\"Payment reminders are disabled for this customer. Please enable them in the customer details or turn them off.\"],\"W2Q6SA\":[\"No payments have been received for this invoice.\"],\"W2auIP\":[\"Antarctica\"],\"W3asPp\":[\"Mark uncollectible\"],\"W5aZzz\":[\"Other settings\"],\"W8y5Yk\":[\"Colombian Peso\"],\"WAjFYI\":[\"Start date\"],\"WCfw96\":[\"You won’t be able to use it to create new invoices, but it won’t affect the existing invoices with this term and their future copies.\"],\"WFwJas\":[\"No overdue reminders available\"],\"WHX87L\":[\"All documents are provided\"],\"WJeAbr\":[\"Pay out the financed sum:\"],\"WLdLX2\":[\"Reminder has been updated\"],\"WMO1+X\":[\"Angolan Kwanza\"],\"WNVNlc\":[\"The following fields are required:\"],\"WQSL1h\":[\"Tax Identification Number (Slovenia)\"],\"WRRjA9\":[\"No tags found\"],\"WRxTcy\":[\"Miscellaneous Business Services\"],\"WUbvJS\":[\"Front of your additional identity document\"],\"WXMLLy\":[\"Unique Entity Number (Singapore)\"],\"WY0vs6\":[\"US ACH\"],\"Wbt7FA\":[\"Insurance Underwriting, Premiums\"],\"WdBTIc\":[\"Bahamas\"],\"WdHDN+\":[\"Entity user\"],\"WdetUP\":[\"Personal identification number\"],\"WfpxR6\":[\"Item tax cannot be negative\"],\"Wg71Rb\":[\"Overdue reminders\"],\"WhzUpN\":[\"Processing file\"],\"Wj4zia\":[\"Edit preset\"],\"WjBoh0\":[\"Create new product or service\"],\"WjOQ6i\":[\"Delete bill\"],\"Wje2rF\":[\"Natural Persons Register (Brazil)\"],\"Wk10i0\":[\"Agree & Submit\"],\"WkCpK4\":[\"Trigger in Monite Script is required\"],\"WmM0wT\":[\"Any \",[\"value\"],\" users from the list\"],\"WmffQ0\":[\"There may be a mismatch between the OCR data and payable data. Please review the details\"],\"Wmg+p5\":[\"European VAT number (Croatia)\"],\"WmsOil\":[\"Failed to create payment link. Please try again.\"],\"Wq6Wcm\":[\"Please enter a valid email address.\"],\"WvGOBg\":[\"Convert invoice into recurring template\"],\"Wx2NzT\":[\"Issued on\"],\"WyawXJ\":[\"Car Rental Agencies\"],\"X2rrlw\":[\"Subtotal\"],\"X46cnc\":[\"Luxembourg\"],\"X7pkpC\":[\"Issue date\"],\"X8xXZu\":[\"Payment record\"],\"X9/nIz\":[[\"days_after\"],\" \",[\"day_plural\"],\" overdue\"],\"X9yAes\":[\"French Polynesia\"],\"XBAfW0\":[\"Court Costs, Including Alimony and Child Support - Courts of Law\"],\"XDJRcs\":[\"Timor-Leste\"],\"XEb3iO\":[\"Select month\"],\"XGHSPU\":[\"Commercial Equipment (Not Elsewhere Classified)\"],\"XGvTNF\":[\"Cote D\\\"Ivoire\"],\"XGymvz\":[\"Add an executive\"],\"XHVMHc\":[\"Sort code\"],\"XJuIPd\":[\"Create “Overdue” reminder\"],\"XMC+ix\":[\"Malta\"],\"XOnZEJ\":[\"No \",[\"entityName\"],\" Found\"],\"XOxXXw\":[\"Line item\"],\"XPW0U9\":[\"Grenada\"],\"XQLBln\":[\"Heating, Plumbing, A/C\"],\"XRdp4f\":[\"Financing menu\"],\"XRsDt/\":[\"Miscellaneous Recreation Services\"],\"XSEMno\":[\"ZIP or postal code\"],\"XSIM6+\":[\"Failed to load PDF Viewer\"],\"XTtR6a\":[\"Germany\"],\"XU89dJ\":[\"Record payment manually\"],\"XWEDt7\":[\"Dance Hall, Studios, Schools\"],\"Xanmvm\":[\"Type of VAT identification\"],\"XeVWm5\":[\"This form must be completed by someone with control and management of your business. If that's not you, ask the right person.\"],\"XhXKVM\":[\"There is no role by provided id: \",[\"id\"]],\"XheobN\":[\"Remove person\"],\"XhzAfk\":[\"Business Identification Number (Liechtenstein)\"],\"XicmhT\":[\"Due date\"],\"XjglO5\":[\"Russian Ruble\"],\"XmRZR1\":[\"Value Added Tax (Iceland)\"],\"XmV0+h\":[\"To is required\"],\"XmWhVD\":[\"to get discount\"],\"Xp8e0M\":[\"American Samoa\"],\"XpgGAV\":[\"You can create your first approval request.\"],\"Y/N4xI\":[\"Hi \",[\"0\"],\",\\n\\n          Please find the invoice attached as discussed.\\n\\n          Kind Regards,\\n          \",[\"1\"]],\"Y0Jaj3\":[\"Invoice number\"],\"Y0Mp8n\":[\"Account Holder Name\"],\"Y0RuQd\":[\"Required for non-EUR and non-GBP currencies\"],\"Y1I638\":[\"Error creating approval policy\"],\"Y5D7cY\":[\"Financial Institutions\"],\"Y6ibXl\":[\"There's no default email address added for the selected customer. Please, add it to send reminders.\"],\"Y6mj6W\":[\"Amusement Parks/Carnivals\"],\"Y7Tsdm\":[\"Receivable\"],\"Y8XkSS\":[\"Direct Marketing - Insurance Services\"],\"YBAdNl\":[\"Thai Baht\"],\"YBt9YP\":[\"Beta\"],\"YCzKAA\":[\"Sierra Leone\"],\"YDoRgd\":[\"You can't undo this action.\"],\"YFGreB\":[\"Create Quote\"],\"YFr/8K\":[\"Description must be 255 characters or less\"],\"YH2SkJ\":[\"Guyana\"],\"YI3MpI\":[\"Concrete Work Services\"],\"YJC18a\":[\"Contact Person has been made default.\"],\"YJkB/N\":[\"Bank account \",[\"0\"]],\"YJy3qA\":[\"One Stop Shop Value Added Tax (EU)\"],\"YL3Qw1\":[\"No TAX ID available\"],\"YLt1+6\":[\"To add a discount you need to fill out all the fields\"],\"YNugMO\":[\"You don’t have any counterparts yet.\"],\"YOowcq\":[\"Due Date\"],\"YPOHAm\":[\"Norway\"],\"YSd1ls\":[\"Invoice not found\"],\"YWbcjD\":[\"The first invoice is to be issued on the nearest date that matches the settings.\"],\"YYBvaQ\":[\"Manage measure units \"],\"YaLcbB\":[\"Door-To-Door Sales\"],\"YcR/yl\":[\"Less than or equal to \",[\"formattedValue\"]],\"Yd4qWl\":[\"Provincial Sales Tax (British Columbia, Canada)\"],\"YeUQpx\":[\"Created at\"],\"Yfyiir\":[\"Direct Marketing - Outbound Telemarketing\"],\"YgZNxq\":[\"Loan sum\"],\"Ygn65A\":[\"Brazilian Real\"],\"YjtTAK\":[\"Payables purchase order\"],\"Ym1S1O\":[\"Saint Kitts And Nevis\"],\"Yo+p+2\":[\"Edit address\"],\"YrZkBL\":[\"Edit Customer Close\"],\"YxhvdU\":[\"Users from list - One by one\"],\"Yxwxxw\":[\"Download draft\"],\"Z+aWGY\":[\"Display signature section on a Quote\"],\"Z1UHHp\":[\"via link\"],\"Z3FXyt\":[\"Loading...\"],\"Z3vYqA\":[\"Edit the settings for this recurring invoice\"],\"Z78rWB\":[\"Item tax percentage\"],\"Z7ZKvj\":[\"The review for the persons has been completed. You can proceed to the next step.\"],\"Z7ZXbT\":[\"Approve\"],\"ZBihIR\":[\"European VAT number (Portugal)\"],\"ZC4IiQ\":[\"Create Invoice\"],\"ZD5+vM\":[\"Invalid date\"],\"ZDGvnR\":[\"Isle Of Man\"],\"ZFfy9b\":[\"Moldova\"],\"ZH/yhw\":[\"Gambian Dalasi\"],\"ZJY8kF\":[\"Update “Before due date” reminder\"],\"ZJweaV\":[\"Goods and Services Tax/Harmonized Sales Tax (Canada)\"],\"ZM+SK/\":[\"A provider can't offer you financing\"],\"ZP6VSb\":[\"Your amount available for financing additional invoices.\"],\"ZQ3BJq\":[\"Set a billing address for this customer to issue invoice\"],\"ZQAlTE\":[\"Truck/Utility Trailer Rentals\"],\"ZRXHdm\":[\"Vietnamese Đồng\"],\"ZTd+q5\":[\"You can create your first credit note.\"],\"ZWyGXN\":[\"New tag “\",[\"0\"],\"” created\"],\"ZaK8eI\":[\"Close manage measure units\"],\"ZaU6RQ\":[\"You don't have permissions to view this page.\"],\"Zd+wG4\":[\"No product or service found\"],\"Zd9vAk\":[\"Monthly recurrence\"],\"ZhQQ1F\":[\"Architectural/Surveying Services\"],\"ZhhOwV\":[\"Quote\"],\"ZmoeQU\":[[\"0\"],\"%discount\"],\"ZpORBp\":[\"Yemen\"],\"ZsZeV2\":[\"Email is required\"],\"Ztme7I\":[\"No roles assigned\"],\"ZuLy43\":[\"Phone number\"],\"ZvMDtZ\":[\"Icelandic Króna\"],\"Zy/UuU\":[\"You don’t have any credit notes yet.\"],\"a0Xfqe\":[\"Northern Ireland VAT number\"],\"a2ymVw\":[\"There is no product by provided id: \",[\"id\"]],\"a4gZnh\":[\"Iran, Islamic Republic Of\"],\"a4xYoA\":[\"Search chats\"],\"a5d5W6\":[\"Drag & Drop it here to save for administrative purposes.\"],\"a7u1N9\":[\"Price\"],\"a8A+R4\":[\"It’s required to add any individual who is on the governing board, owns 25% or more of the company or otherwise has significant management control of the company.\"],\"aB+RQ4\":[\"Veterinary Services\"],\"aG28ZY\":[\"Who needs to approve the document and how:\"],\"aGmUAI\":[\"Australian Dollar\"],\"aHKcKc\":[\"Previous page\"],\"aI3Wg2\":[\"You haven't accepted the offer and it has expired\"],\"aKVeaw\":[\"Business/Secretarial Schools\"],\"aMTfRY\":[\"Jersey\"],\"aOcOxA\":[\"Tax rate must be 0 or greater\"],\"aPtihf\":[\"European VAT number (Finland)\"],\"aSwfbR\":[\"Unit\"],\"aYEinA\":[\"Current status\"],\"ad2b58\":[\"Car and Truck Dealers (Used Only) Sales, Service, Repairs Parts and Leasing\"],\"aeFT9o\":[\"Car Washes\"],\"ag4gw/\":[\"Dear client, as discussed, please find attached our invoice:\"],\"anX8zB\":[\"No email address is added for the selected customer. Please add it to the customer details or turn off the reminders.\"],\"ap6LQ1\":[[\"0\"],\"% advance rate\"],\"apAIAH\":[\"Electrical Parts and Equipment\"],\"aply0P\":[\"Special Trade Services\"],\"arac1/\":[\"Armenian Dram\"],\"av9ba1\":[\"Payment flow started\"],\"aysoyn\":[\"Update PDF File\"],\"ayxkVX\":[\"Transaction\"],\"azd7EE\":[\"Edit invoice\"],\"b+rFLm\":[\"Testing Laboratories\"],\"b4Oui7\":[\"Country is required\"],\"b5EKHf\":[\"Florists Supplies, Nursery Stock, and Flowers\"],\"b67AzS\":[\"User role\"],\"bBqjzX\":[\"Minimum number of approvals required must be at least 1\"],\"bCh+iY\":[\"VAT information\"],\"bDqm4t\":[\"Products & Services\"],\"bGQplw\":[\"Body\"],\"bKkKUu\":[\"Scheduled for \",[\"0\"],\" on \",[\"formattedDate\"]],\"bKp9GC\":[\"Drag and drop files or click to upload\"],\"bLt/0J\":[\"Workflow\"],\"bNKBTv\":[\"Canadian PST number (Saskatchewan)\"],\"bTmvc+\":[\"Carpentry Services\"],\"bVCouM\":[\"Request size limit exceeded\"],\"bWd3WR\":[\"Costa Rican Colón\"],\"bWmJ0A\":[\"No items yet\"],\"bXeimc\":[\"Issue and Send\"],\"bZGK9Z\":[\"Dairy Products Stores\"],\"bZZcFh\":[\"Close invoice details\"],\"baRfoX\":[\"Tent and Awning Shops\"],\"bayexc\":[\"Close role edit\"],\"bbVHl3\":[\"Swedish Krona\"],\"bcTsWa\":[\"days before discount date 1\"],\"bdHUd5\":[\"Subtotal\",[\"0\"]],\"bgunN+\":[\"Every last day of the month\"],\"bh3WAH\":[\"San Marino\"],\"bhYVxz\":[\"Company logo\"],\"bjAYbJ\":[\"Country where VAT is registered\"],\"bjDavV\":[\"Lumber, Building Materials Stores\"],\"bjO8Oh\":[\"Enter full amount due of\"],\"blW8gp\":[\"Costa Rica\"],\"bm/7ez\":[\"Display signature section display options\"],\"bmQLn5\":[\"Add Rule\"],\"bmT5m3\":[\"Dominican Peso\"],\"bnwuKo\":[\"Surname\"],\"bqlZhX\":[\"Northern Mariana Islands\"],\"buVRfc\":[\"Please, check the details of your payment record.\\nYou won’t be able to change or delete it after.\"],\"bumqpS\":[\"Request was approved\"],\"bvPnBf\":[\"Employment/Temp Agencies\"],\"bvWGm8\":[\"Czech Koruna\"],\"bxDACV\":[\"Tax rate must be 100 or less\"],\"bzMKg7\":[\"Accepted\"],\"bzyYOo\":[\"Canadian Dollar\"],\"c2fShE\":[\"Add specific details\"],\"c4hxBA\":[\"Duplicate\"],\"c4ofxw\":[\"It must be in the “Issued” or “Partially paid” statuses and have more than 7 days till overdue.\"],\"c65HJI\":[\"Select someone\"],\"c6YG3V\":[\"Something went wrong. Please try again\"],\"c7mAvD\":[\"New Caledonia\"],\"c7yvtA\":[\"Switzerland\"],\"c8ZqBz\":[\"Entity VAT IDs\"],\"c8qQAm\":[\"Payment term updated\"],\"cCdqpN\":[\"Percent ownership\"],\"cCoAtl\":[\"Moldovan Leu\"],\"cDiHt4\":[\"Invoice details\"],\"cG9XpL\":[\"Receivable type \",[\"0\"],\" is not supported. Only invoice is supported.\"],\"cGorJI\":[\"Can't be less than \",[\"0\"]],\"cK2oG/\":[\"Name, country, city\"],\"cK9+xQ\":[\"VAT Country\"],\"cLySCP\":[\"Quantity must be greater than or equal to the smallest amount\"],\"cM5lGq\":[\"Hotels, Motels, and Resorts\"],\"cOQg+L\":[\"Force Reject bill?\"],\"cPRqM/\":[\"Scheduled \",[\"formattedDate\"]],\"cPlOFC\":[\"User allowed to approve\"],\"cShSqt\":[\"Purchase order\"],\"cT/a0K\":[\"Giropay\"],\"cVpzb9\":[\"VAT Type\"],\"cVyltm\":[\"Smallest amount\"],\"cXOw12\":[\"Line 2\"],\"cbinwq\":[\"Payable “\",[\"0\"],\"” has been rejected\"],\"ccVY/K\":[\"Email preview\"],\"cnGeoo\":[\"Delete\"],\"coQJvu\":[\"Counterpart bank account\"],\"coaY8z\":[\"Jamaican Dollar\"],\"cormHa\":[\"Address line 2\"],\"cpNoc4\":[\"Nicaragua\"],\"cpRr4Z\":[\"Philippines Taxpayer Identification Number (TIN)\"],\"cqaAwi\":[\"Netherlands Antillean Guilder\"],\"cqg+Qu\":[\"Netherlands Antilles\"],\"cri3mL\":[\"Edit user role\"],\"ct34lz\":[\"Drug Stores and Pharmacies\"],\"cu6iol\":[\"Close dialog\"],\"cuSt3x\":[\"Don't wait for your client to pay\"],\"cud7j2\":[\"Ghanaian Cedi\"],\"cxratx\":[\"Failed to create Bank Account.\"],\"cyd90K\":[\"Electronic signature for quotes\"],\"czWKuq\":[\"Bulgaria Unified Identification Code\"],\"czroG/\":[\"Payment record by\"],\"czsjcX\":[\"Pitcairn\"],\"d+F6q9\":[\"Created\"],\"d4/7Xi\":[\"PDF Viewer\"],\"d4dtCj\":[\"No Approval Requests\"],\"d6VkcA\":[\"Sort code must be 6 characters\"],\"dCvRc0\":[\"Child Care Services\"],\"dE+klf\":[\"Laundries\"],\"dEgA5A\":[\"Cancel\"],\"dFfiAt\":[\"Turkmenistan Manat\"],\"dJW40d\":[\"Postal Code\"],\"dNGmZQ\":[\"Update Vat Id\"],\"dQbJa+\":[\"Close counterpart\"],\"dTafjT\":[\"BLIK\"],\"dU3HpG\":[\"thumb down\"],\"dU8ZD6\":[\"Counterparts\"],\"dVQ/BC\":[\"Routing number\"],\"dXVikn\":[\"File \",[\"0\"],\" size exceeds \",[\"maxFileSizeInMB\"],\" MB limit.\"],\"dYG1SM\":[\"Art Dealers and Galleries\"],\"dcI7QV\":[\"VAT is a required field\"],\"ddrz1m\":[\"Overdue\"],\"dejGov\":[\"No items\"],\"dgVjFu\":[\"Repayment date\"],\"dhhmTi\":[\"Motor Vehicle Supplies and New Parts\"],\"dhr+Bc\":[\"Bank Account has been set as default.\"],\"djKhFm\":[\"Masonry, Stonework, and Plaster\"],\"dkHU7c\":[\"Financing plan\"],\"dm2vYF\":[\"Not specified\"],\"dp8BCb\":[\"Total tax\"],\"dswLtM\":[\"You don’t have any approval requests yet.\"],\"duCVgY\":[\"No bills yet\"],\"dvQFn0\":[\"Shipping address\"],\"dwErLy\":[\"The bill will receive the “Canceled” status and will require no payment. You can’t undo this action.\"],\"dxd1/G\":[\"Create customer\"],\"dyxrW0\":[\"You might need to update draft documents created with this bank account to ensure a correct payment.\"],\"dzZ1ju\":[\"Invoice Date\"],\"dzZuIH\":[\"Change document currency\"],\"e+BJWH\":[\"No default email for selected Counterpart. Reminders will not be sent.\"],\"e0NrBM\":[\"Project\"],\"e8OK2D\":[\"Excluding tax\"],\"e8Smkt\":[\"European VAT number (Spain)\"],\"eDJVHR\":[\"SEPA Debit\"],\"eKC+EC\":[\"-\"],\"ePK91l\":[\"Edit\"],\"eQ4O9e\":[\"Description is required\"],\"eQsQim\":[\"Medical and Dental Labs\"],\"eR9AJJ\":[\"- they are already overdue.\"],\"eSp+Gz\":[\"Bank account number (not required for EUR)\"],\"eSwxMQ\":[\"Book Stores\"],\"eT0pTr\":[\"Croatia\"],\"eUQVZV\":[\"Sierra Leonean Leone\"],\"eVk4WJ\":[\"Puerto Rico\"],\"eWKPd2\":[\"Automatically update all future PDF files\"],\"eWLklq\":[\"Quotes\"],\"eX9J2M\":[\"Value Added Tax (Norway)\"],\"eYN2mT\":[\"Add someone new\"],\"eajIuJ\":[\"Failed to set Bank Account as default.\"],\"ebGy2F\":[\"There is no invoice for the provided id: \",[\"invoiceId\"]],\"ebniIL\":[\"File successfully attached\"],\"ejeJqN\":[[\"0\",\"select\",{\"credit_note\":[\"Credit Note has been canceled\"],\"invoice\":[\"Invoice has been canceled\"],\"quote\":[\"Quote has been canceled\"],\"other\":[\"Receivable has been canceled\"]}]],\"ekCRTP\":[\"Rejected\"],\"elcT6X\":[\"Cancel receivable “\",[\"0\"],\"”?\"],\"enHjGX\":[\"Payment link is still loading. Please wait a moment and try again.\"],\"eneWvv\":[\"Draft\"],\"erARDd\":[\"List all customers who have overdue payments for more than 60 days\"],\"erOoDj\":[\"You can create your first quote.\"],\"esA84t\":[\"I am a member of the governing board of the company.\"],\"euc6Ns\":[\"Duplicate\"],\"ew0GFK\":[\"Vat Type\"],\"f/l1S2\":[\"Business details\"],\"f/soQa\":[\"Delete Bank Account “\",[\"name\"],\"“?\"],\"f3Xcwg\":[[\"0\"],\" has been issued\"],\"f5ENpX\":[\"Miscellaneous Apparel and Accessory Shops\"],\"f5mV0n\":[\"Payable \\\"\",[\"0\"],\"\\\" has been submitted\"],\"f7Flaj\":[\"Deleting it won’t affect your items.\"],\"f7R/rb\":[\"Payable “\",[\"0\"],\"” has been force approved\"],\"fByw/g\":[\"Individual\"],\"fDPr0Q\":[\"Mauritius\"],\"fDdnGg\":[[\"0\",\"select\",{\"credit_note\":[\"Credit Note has been deleted\"],\"invoice\":[\"Invoice has been deleted\"],\"quote\":[\"Quote has been deleted\"],\"other\":[\"Receivable has been deleted\"]}]],\"fFWMB8\":[\"Angola\"],\"fG3oVT\":[\"Courier Services\"],\"fGX+Xc\":[\"Cancel invoice\"],\"fGy0MP\":[\"Item price\"],\"fHYOKc\":[\"Please accept Ownership Declaration to proceed.\"],\"fMHwMV\":[\"Close new product or service form\"],\"fOInUy\":[\"Furniture Repair, Refinishing\"],\"fQJFcz\":[\"We’re required to collect information about any executives or senior managers who have significant management responsibility for this business.\"],\"fU7pLE\":[\"Payable “\",[\"0\"],\"” has been force rejected\"],\"fUWP+p\":[\"Document design\"],\"fYHG5A\":[\"Cuba\"],\"fYxSjE\":[\"Next order #\"],\"fZ5Vnu\":[\"Received\"],\"fa1V8w\":[\"Set on issuance\"],\"fcTU/f\":[\"Computers, Peripherals, and Software\"],\"fh9mfj\":[\"Single user\"],\"fj5byd\":[\"N/A\"],\"fjBaWX\":[\"Physical signature for quotes\"],\"fl/qbv\":[\"Albania\"],\"fl8EjE\":[\"Add Discount\"],\"fpNNnx\":[\"State / Area / Province is required\"],\"fr2N9b\":[\"Paraguay\"],\"fsWuKc\":[\"Approval Request\"],\"fthr44\":[\"Saint Helena\"],\"fuME7C\":[\"Tire Retreading and Repair\"],\"fyZZKF\":[\"Done, continue\"],\"fzy9U/\":[\"Malagasy Ariary\"],\"g+Tsn9\":[[\"days_before\"],\" \",[\"day_plural\"],\" before overdue\"],\"g/aH3e\":[\"Price per unit must be 0 or greater\"],\"g2TI3R\":[\"Motorcycle Shops, Dealers\"],\"g2UNkE\":[\"Powered by\"],\"g3F/ND\":[\"Pakistani Rupee\"],\"g4CDlc\":[\"Digital Goods Media – Books, Movies, Music\"],\"g4DY1c\":[\"Aruban Florin\"],\"g5GqS8\":[\"EPS\"],\"gCAJqu\":[\"Approval policy updated\"],\"gDrz1Q\":[\"Video Game Arcades\"],\"gEXytm\":[\"Nursing/Personal Care\"],\"gIFcgb\":[\"This form must be completed by someone with control and management of your business. If that’s not you, ask the right person.\"],\"gV8PY3\":[\"Cancel bill\"],\"gWkqfi\":[\"Item ID\"],\"gcFBCv\":[\"Cocos (Keeling) Islands\"],\"ge7wu8\":[\"Belize Dollar\"],\"gervVv\":[\"Goods and Services Tax (New Zealand)\"],\"gghnV/\":[\"Mens and Boys Clothing and Accessories Stores\"],\"ggoRZH\":[\"Payable \\\"\",[\"0\"],\"\\\" has been updated\"],\"gh5Lzt\":[\"Access restricted\"],\"ghJu2Z\":[\"Platform/Monite\"],\"giiiDv\":[\"Please find the invoice attached as discussed.\\n\\n          Kind Regards,\\n          \",[\"0\"]],\"gjjZxF\":[\"Script in Monite Script is required\"],\"gkD8Wx\":[\"Edit customer\"],\"gpr5Nc\":[\"Corporate Number (Japan)\"],\"grKEHv\":[\"Keyword should be at least 2 characters long\"],\"grzW/z\":[\"Childrens and Infants Wear Stores\"],\"gsy6gb\":[\"Serbia and Montenegro\"],\"guZi6+\":[\"Congolese Franc\"],\"gukxZ5\":[\"Onboarding\"],\"gvrLbY\":[\"Cleaning and Maintenance\"],\"gwk5gg\":[\"Address Line 2\"],\"gz2anp\":[\"Total, tax\"],\"gz6UQ3\":[\"Maximize\"],\"gzEjAL\":[\"Billing address\"],\"gzQihq\":[\"VAT \",[\"0\"],\"%\"],\"gzbyr5\":[\"Your AI Assistant chat history will be shown here\"],\"h+6rx1\":[\"Membership Organizations\"],\"h1nBFH\":[\"Hearing Aids Sales and Supplies\"],\"h2srRi\":[\"Invoice has been marked as paid\"],\"h3lZI6\":[\"Please, check the details of your payment record.\\nYou won't be able to change or delete it after.\"],\"h3wYtp\":[\"This invoice can't be financed\"],\"h6zvpR\":[\"All types\"],\"hBxNhw\":[[\"overdueDays\"],\" \",[\"0\"],\" overdue\"],\"hEtOBf\":[\"Georgian VAT\"],\"hFthoo\":[\"Examples\"],\"hGK0TC\":[\"You can create your first invoice.\"],\"hIQkLb\":[\"New chat\"],\"hJmWGP\":[\"Counterpart VAT ID\"],\"hLBqO+\":[\"Tokelau\"],\"hQAFvC\":[\"Civic, Social, Fraternal Associations\"],\"hQRttt\":[\"Submit\"],\"hT27T9\":[\"Australian Business Number (AU ABN)\"],\"hTtSCa\":[\"Add new condition\"],\"hTuDYM\":[\"Vat IDs\"],\"hVPa4O\":[\"Select an option\"],\"hWTSIp\":[\"Edit documents for person\"],\"hWf3BS\":[\"Choose how to get paid.\"],\"hXIoNa\":[\"Contact your system administrator for details.\"],\"hXSTLN\":[\"Slovenia\"],\"hYgDIe\":[\"Create\"],\"ha5oW+\":[\"Unit \",[\"0\"],\" was added to the list\"],\"haJ2Hb\":[\"Less than\"],\"haT+mM\":[\"Svalbard And Jan Mayen\"],\"hcqzcm\":[\"Haiti\"],\"he3ygx\":[\"Copy\"],\"he73TN\":[\"Verify identity\"],\"hehnjM\":[\"Amount\"],\"hfR4mz\":[\"Jordanian Dinar\"],\"hgr8eo\":[\"items\"],\"hiuHta\":[\"Hobby, Toy, and Game Shops\"],\"hlm84A\":[\"Bahraini Dinar\"],\"hm3a0E\":[\"Commuter Transport, Ferries\"],\"hnjiDa\":[\"Add discount\"],\"ho7L1/\":[\"Floor Covering Stores\"],\"hol1rf\":[\"Unrecognized error. Please contact support.\"],\"hsfFiu\":[\"For bookkeeping purposes, this is a write-off and has tax implications.\"],\"htCPf9\":[\"Portugal\"],\"htLvaW\":[\"VAT Total\"],\"hvZwVx\":[\"Convert\"],\"hyKYKd\":[\"Computer Software Stores\"],\"hzefBH\":[\"Direct Marketing - Subscription\"],\"i+JLHQ\":[\"Preset Name is required\"],\"i/w1ws\":[\"Bakeries\"],\"i34uId\":[\"Comorian Franc\"],\"i3sdQC\":[\"Your bank account must be a checking account.\"],\"i7j+rI\":[\"Andorra\"],\"iB+XuA\":[\".\"],\"iG7KNr\":[\"Logo\"],\"iG9cNW\":[\"Onboarding completed!\"],\"iGTeZc\":[\"Preset Name\"],\"iH77oe\":[\"Reminder has been deleted\"],\"iH8pgl\":[\"Back\"],\"iHXj5C\":[\"Timeshares\"],\"iHnh3v\":[\"Qatari Rial\"],\"iJcU0G\":[\"All units\"],\"iMfjVs\":[\"Tax information\"],\"iMzuDa\":[\"Micronesia, Federated States Of\"],\"iP/qnN\":[\"Update to match bill:\"],\"iPT3EJ\":[\"Bicycle Shops\"],\"iSkah5\":[\"Bouvet Island\"],\"iVCxQk\":[\"It is a non-human legal entity, i.e. an organisation recognised by law as a legal person.\"],\"iWOlMs\":[\"Vanuatu\"],\"iYuP0C\":[\"Available items\"],\"iZcj2X\":[\"Based on\"],\"iZnIAs\":[\"Miscellaneous Auto Dealers\"],\"iapc71\":[\"Financed invoices\"],\"icB5BS\":[\"Taxes total\"],\"if+kEf\":[\"Bad response\"],\"if5Kxg\":[\"Taiwan\"],\"ii0qn/\":[\"Subject is required\"],\"iibMCk\":[\"Electronics Repair Shops\"],\"ijdxGX\":[\"Must be a reachable, unique URL that describes the account's business.\"],\"io/pP3\":[\"This invoice can be financed\"],\"ioIIOw\":[\"British Indian Ocean Territory\"],\"iqDRNR\":[\"Discount \",[\"0\"]],\"irzD7v\":[\"The number of days in Discount must be less than of Due days\"],\"isRobC\":[\"New\"],\"izvbFN\":[\"Close role details\"],\"j10h7r\":[\"Failed to remove logo.\"],\"j1F5x4\":[\"Unified Identification Code (Bulgaria)\"],\"j48oOO\":[\"Create an invoice:\"],\"j5aAEG\":[\"Vocational/Trade Schools\"],\"j7MHRl\":[\"Invoice date is required\"],\"j7ycPO\":[\"Create from email\"],\"jBMG/v\":[\"Next order number must be more than the last issued\"],\"jBtpMP\":[\"All statuses\"],\"jE9Ez4\":[\"Minimum number of approvals required\"],\"jFvv1W\":[\"Business directors\"],\"jIhOia\":[\"Eritrea\"],\"jOl3EA\":[\"Barber and Beauty Shops\"],\"jPR71c\":[\"GL code\"],\"jQ9NnD\":[\"Discounted subtotal\"],\"jQiIL4\":[\"No Receivables\"],\"jQrgg9\":[\"Mozambican Metical\"],\"jURfv2\":[\"Dec 20, 2024\"],\"jVjc3M\":[\"European VAT number (France)\"],\"ja3lDX\":[\"Ghana\"],\"jackz0\":[\"Applied policy\"],\"jblpWK\":[\"Credit note\"],\"jdk1KR\":[\"Direct Marketing - Travel\"],\"jeuZj4\":[\"Swaziland\"],\"jfMJTf\":[\"Invoices will auto-regenerate reflecting payments made and the remaining due amount.\"],\"jg4hUG\":[\"European One Stop Shop VAT number for non-Union scheme\"],\"jkAezv\":[\"Managers and owners must be under 120 years old.\"],\"jm3o/S\":[\"Can't be greater than 25\"],\"joLIQz\":[\"Allowed\"],\"jp7EVM\":[\"Add a bank account to receive payments\"],\"jpNk2r\":[\"Add bank account\"],\"jpctdh\":[\"View\"],\"jpstGb\":[\"New Taiwan Dollar\"],\"jqVo/k\":[\"here.\"],\"jqwZQU\":[\"Issued documents\"],\"jspKxp\":[\"Name must be 100 characters or less\"],\"jtWDj2\":[\"Passenger Railways\"],\"jwCZvT\":[\"VAT ID or Tax ID\"],\"jwVRuk\":[\"Bill to\"],\"jxNgi8\":[\"The counterpart details in the bill don't fully match the saved counterpart. Consider editing the saved counterpart or creating a new one.\"],\"jy8rBA\":[\"Try another document\"],\"k+E5eD\":[\"Before due date\"],\"k0KIeE\":[\"Invoice duplicate has been created.\"],\"k1ifdL\":[\"Processing...\"],\"k1l3zO\":[\"Update contact\"],\"k2vQ/9\":[\"Central African CFA Franc\"],\"k4U7kc\":[\"European VAT number (Luxembourg)\"],\"k5RhLf\":[\"Nepalese Rupee\"],\"kES4x3\":[\"This invoice doesn't have a file attached.\"],\"kIz76E\":[\"Consulting, Public Relations\"],\"kNHqSR\":[\"Reason for Payment Code (Russia)\"],\"kRYxEt\":[\"Add VAT ID\"],\"kRkTOo\":[\"Anguilla\"],\"kTJvUE\":[\"There is no payable by provided id: \",[\"id\"]],\"kTcX1q\":[\"Household Appliance Stores\"],\"kY+q3P\":[[\"label\"],\" is required\"],\"kdTa7K\":[\"Agricultural Cooperative\"],\"keuS3r\":[\"Delete confirmation\"],\"kevRK3\":[\"Congo\"],\"kfYy7y\":[\"Days before must be at most 10000\"],\"khBZkl\":[\"VAT\"],\"khTXFy\":[\"VAT IDs\"],\"kkxdDJ\":[\"Subtotal excl. tax\"],\"kl0vze\":[\"Update Approval Policy\"],\"kokZdR\":[[\"issueDate\"]],\"kpCS0V\":[\"Edit individual\"],\"kpgmML\":[\"Zambia\"],\"krAJef\":[\"Ireland\"],\"kuJ9+O\":[\"Minimum quantity must be 0 or greater\"],\"l1jcVv\":[\"Item tax cannot exceed 100%\"],\"l2KTqf\":[\"Slovenia tax number (davčna številka)\"],\"l33/LU\":[\"Macedonian Denar\"],\"l4bK5V\":[\"Paraguayan Guarani\"],\"l5AsIM\":[\"Hardware, Equipment, and Supplies\"],\"l75CjT\":[\"Yes\"],\"l7fStm\":[\"Utilities\"],\"l9wkiK\":[\"All future invoices will be issued based on this invoice\"],\"lEA483\":[\"Colleges, Universities\"],\"lFcvwY\":[[\"repaymentDate\"]],\"lH1vAg\":[\"Printed quotes are signed physically\"],\"lKH9fP\":[\"Delete \\\"\",[\"name\"],\"\\\" unit and associated items?\"],\"lM+wML\":[\"If you applied for accounts receivable financing, issue an invoice and deliver it to your customer via email or any other channel.\"],\"lO6GxP\":[\"Vendor\"],\"lPRj1T\":[\"Item price must be 0 or greater\"],\"lQa3W0\":[\"Namibia\"],\"lRF0rw\":[\"Unit \",[\"0\"],\" was updated\"],\"lRjaGm\":[\"Edit Condition\"],\"lTfWiC\":[\"No products or services yet\"],\"lTo/3/\":[\"Netherlands\"],\"lZBRaU\":[\"Customers & Vendors\"],\"laxC/u\":[\"The vendor details in the bill don't fully match the saved counterpart.\"],\"lbI+wx\":[\"Luggage and Leather Goods Stores\"],\"lcSVnT\":[\"The bill status will change to Approved, skipping the approval flow.\"],\"lgUJg7\":[\"Pakistan National Tax Number (NTN) or Registration Number\"],\"ll0IU3\":[\"Israel VAT\"],\"lmybGC\":[\"Entity documents\"],\"lseAbR\":[\"United Kingdom VAT number\"],\"luNjrA\":[\"BIC/SWIFT:\"],\"lwY/5B\":[\"Automobile Associations\"],\"m+elvG\":[\"Tax ID\"],\"m+zTKr\":[\"Algerian Dinar\"],\"m0tWjd\":[\"Add a business executive\"],\"m16xKo\":[\"Add\"],\"m1mDpK\":[\"Surinamese Dollar\"],\"m3SGom\":[\"Klarna\"],\"m3lDGx\":[\"Policy name is required\"],\"m4ylKP\":[\"Your tax information\"],\"m7+OW8\":[\"Religious Goods Stores\"],\"m8DPX1\":[\"There are no items created with this measure unit.\"],\"mAnvri\":[\"Value Added Tax (Taiwan)\"],\"mCk5iK\":[\"Send failed\"],\"mG1SpX\":[\"Barbadian Dollar\"],\"mGll95\":[\"The template you set as the default will apply to all documents you issue in the future.\"],\"mH95nT\":[\"Tax ID \",[\"counterpart_tax_id\"]],\"mL8mpF\":[\"Contact persons\"],\"mNkqxA\":[\"CFP Franc\"],\"mOjKS5\":[\"Social Security Number\"],\"mP5mj1\":[\"Due to regulatory guidelines, we’re required to collect information on anyone who has significant ownership of your business.\"],\"mQdJGk\":[\"The full sum will be withdrawn from your bank account automatically on the date specified in the selected offer. You can also pay out the sum earlier via the 'Pay out' button.\"],\"mRgPe2\":[\"This can be a website, social media profile link or any other unique reachable URL that describes the account's business nature.\"],\"mUquLi\":[\"In review\"],\"mUv9U4\":[\"Sales\"],\"mWZm+0\":[\"Accounting/Bookkeeping Services\"],\"mWoNJT\":[\"Romania\"],\"mYGY3B\":[\"Date\"],\"mYgWDX\":[\"Set this counterpart as:\"],\"mZW+k8\":[\"Product name\"],\"maxSB8\":[\"Papua New Guinean Kina\"],\"mdPcYL\":[\"Your application was approved\"],\"mdwIrC\":[\"Edit recurrence settings\"],\"mgKw3w\":[[\"name\"],\" template has been set as the default.\"],\"mjLDL1\":[\"New counterpart\"],\"mom71O\":[\"Try adjusting your search or filter criteria\"],\"mpAmDi\":[\"Malawi\"],\"mpby9d\":[\"Contact support\"],\"mqqEVK\":[\"Managers and owners must be at least 18 years old to use this service.\"],\"mrDYPq\":[\"Number of days is required\"],\"mrW6ZN\":[\"View customer's details\"],\"mvP/25\":[\"Terms and Conditions\"],\"myyHLb\":[\"Mali\"],\"n/d3zN\":[\"Finland\"],\"n/rrHm\":[\"Comoros\"],\"n0CXlN\":[\"Continue with no directors\"],\"n0QetD\":[\"Can't be a negative number\"],\"n20Hd+\":[\"Bail and Bond Payments (payment to the surety for the bond, not the actual bond paid to the government agency)\"],\"n25nMV\":[\"Argentina\"],\"n5D6Fs\":[\"Indian GST number\"],\"n6BMKe\":[\"You don’t have permission to issue this document. Please, contact your system administrator for details.\"],\"n89h5a\":[\"Save for later\"],\"nDDLax\":[\"Add a director\"],\"nEaubQ\":[\"Canadian PST number (Manitoba)\"],\"nEbQ3K\":[\"Description must be 250 characters or less\"],\"nKeK0m\":[\"Boat Rentals and Leases\"],\"nMMJrU\":[\"Miscellaneous Home Furnishing Specialty Stores\"],\"nMfBUv\":[\"Force Approve bill?\"],\"nR9cab\":[\"You can create your first \",[\"0\"],\".\"],\"nW+RXF\":[\"If the error recurs, contact support.\"],\"nXzZHa\":[\"European VAT number (Cyprus)\"],\"nYCEyk\":[\"Delete \",[\"type\"],\" “\",[\"name\"],\"“?\"],\"nZqN7b\":[\"Botswana Pula\"],\"nbfdhU\":[\"Integrations\"],\"nc0G7w\":[\"- they are due within 7 days.\"],\"nhKOac\":[\"Tax number\"],\"nhMhRr\":[\"Thank you for your feedback!\"],\"niu+rf\":[[\"0\"],\" tax\"],\"nkEPgb\":[\"Benin\"],\"nmNCya\":[\"Record Stores\"],\"nnIui6\":[\"Sweden\"],\"nnh6EU\":[\"Counterpart bank account ID\"],\"noSwjz\":[\"There is no such counterpart yet, you can create it in respective section.\"],\"np/2yA\":[\"Counterpart\"],\"np3t06\":[\"Australian Business Number (Australia)\"],\"npseWo\":[\"Provincial Sales Tax (Manitoba, Canada)\"],\"nszRAC\":[\"SWIFT / BIC\"],\"ntRxPY\":[\"Azerbaijan\"],\"nwtY4N\":[\"Something went wrong\"],\"nyfbuw\":[\"No Roles\"],\"o1evUu\":[\"You don't have permission to update this document. Please, contact your system administrator for details.\"],\"o1zvNS\":[\"Last update\"],\"o4i/O7\":[\"Approval policy created\"],\"o5lEK3\":[\"Aland Islands\"],\"o6jUOf\":[\"Payable \\\"\",[\"0\"],\"\\\" has been canceled\"],\"o7q+Pw\":[\"Credit applied \",[\"0\"]],\"o9IeN0\":[\"Update “Overdue” reminder\"],\"oBfIzk\":[\"Upload payable file\"],\"oEz6gv\":[\"Didn’t follow prompt input\"],\"oFGYLl\":[\"Zambian Kwacha\"],\"oGkzfm\":[[\"0\"],\"% discount\"],\"oJ0iuj\":[\"Credit Reporting Agencies\"],\"oJvTyn\":[[\"days\",\"plural\",{\"one\":[\"day\"],\"two\":[\"days\"],\"few\":[\"days\"],\"many\":[\"days\"],\"zero\":[\"days\"],\"other\":[\"days\"]}]],\"oMYVua\":[\"Direct Marketing - Combination Catalog and Retail Merchant\"],\"oNNPST\":[[\"0\"],\" \",[\"1\"],\" after\"],\"oO/tB4\":[\"Current offer\"],\"oPdWeV\":[\"products or services\"],\"oRNrne\":[[\"GENERAL_ERROR_MESSAGE\"]],\"oRrE/s\":[\"West African CFA Franc\"],\"oW3yYY\":[\"This month\"],\"oWXNE5\":[\"Qty\"],\"oZBPYz\":[\"Uncollectible\"],\"oaBfzi\":[\"Close payable details\"],\"oaOuCy\":[\"Tell us more about your business\"],\"oby0ZC\":[\"Draft or already issued invoices will keep this bank account. If required, you will need to manually update those invoices with new account information.\"],\"of6Gde\":[\"Osteopaths\"],\"omAUDO\":[\"Item name\"],\"onnG9m\":[\"Request was rejected\"],\"onzVeZ\":[\"Created from recurrence\"],\"oqtRp4\":[\"Bank Account “\",[\"0\"],\"” has been updated.\"],\"orbhbR\":[\"Chilean TIN\"],\"otmOOj\":[\"Invoice \",[\"documentId\"]],\"ovBPCi\":[\"Default\"],\"ozrWfa\":[\"Add a business owner\"],\"p0wVVh\":[\"A/C, Refrigeration Repair\"],\"p1yaeu\":[\"Payable \\\"\",[\"0\"],\"\\\" has been created\"],\"p4lH4w\":[\"Partially pay\"],\"p55e9l\":[\"Uruguayan Peso\"],\"pBNikV\":[\"Dentists, Orthodontists\"],\"pBQBnu\":[\"Automated Cash Disburse\"],\"pCNKOH\":[\"Womens Accessory and Specialty Shops\"],\"pEO/nB\":[\"Quantity is a required field\"],\"pEYmxC\":[\"Create new Counterpart\"],\"pGxPcN\":[\"Jan 19, 2025 (30 days)\"],\"pH94qh\":[\"Back of your additional identify document\"],\"pHkbZK\":[\"First day of the month\"],\"pHx2eA\":[\"Email must be a valid email\"],\"pJ67B8\":[\"Qty x Price\"],\"pNHJMU\":[\"Business phone number\"],\"pQkna/\":[\"Add a note that will be displayed below the line items\"],\"pTt03+\":[\"Payable \\\"\",[\"0\"],\"\\\" has been rejected\"],\"pVV24B\":[\"Caterers\"],\"pVZUS0\":[\"ZIP code\"],\"pY1DVj\":[\"Get a small business loan plan to manage finances more efficiently.\"],\"pZktS8\":[\"Bosnia And Herzegovina\"],\"pa0wil\":[\"Convert and activate\"],\"pfKLo+\":[\"Equal to\"],\"pfa8F0\":[\"Display name\"],\"pkEgEu\":[\"Role \",[\"0\"],\" was created\"],\"pn2ogq\":[\"Papua New Guinea\"],\"pnYiFQ\":[\"Saudi Riyal\"],\"pvQ16z\":[\"Virgin Islands, British\"],\"pz2XTt\":[\"Delete VAT ID “\",[\"value\"],\"“?\"],\"q/iNPB\":[\"Saint Pierre And Miquelon\"],\"q0fWax\":[\"Euro\"],\"q0lMi9\":[\"Fuel Dealers (Non Automotive)\"],\"q2+WzE\":[\"New Chat\"],\"q2cqoh\":[\"All future iterations of this invoice will be canceled.\"],\"q96NsD\":[\"A fully paid invoice can be updated to contain the amount paid and the amount due sum\"],\"qAeqhI\":[\"Mayotte\"],\"qBzGWY\":[\"The number of days in Discount 2 must be more than the number of Discount 1 days\"],\"qE5oGm\":[\"Miscellaneous Repair Shops\"],\"qEue6Q\":[\" or \"],\"qIPho4\":[\"Canadian GST/HST number\"],\"qLNHmF\":[\"This bank account will receive payments for your invoices\"],\"qLXPu5\":[\"Document templates\"],\"qMgKul\":[\"Job title\"],\"qMoMjs\":[\"Golf Courses - Public\"],\"qN9XXd\":[\"Guernsey\"],\"qP2+4s\":[\"Western Sahara\"],\"qR9Dcb\":[\"Stylish\"],\"qSSvJs\":[\"Electronics Stores\"],\"qVlH/N\":[\"Piece Goods, Notions, and Other Dry Goods\"],\"qVu+m+\":[\"Bowling Alleys\"],\"qXy795\":[\"No \",[\"entityName\"]],\"qY2FQd\":[\"Recurrence has been created\"],\"qYYZGC\":[\"Monaco\"],\"qa1AJc\":[\"European VAT number (Netherlands)\"],\"qaVlVz\":[\"This action can’t be undone.\"],\"qapYmX\":[\"Persons review\"],\"qasuya\":[\"Add a dedicated space for signature on PDF\"],\"qg28sK\":[\"Due to regulations, we're required to collect information about a company's directors.\"],\"qgi2wZ\":[\"Botswana\"],\"qh34x/\":[\"Role has been deleted\"],\"qjIFCp\":[\"Telegraph Services\"],\"qjyHpe\":[\"Vietnam\"],\"qnwrxC\":[\"Glassware, Crystal Stores\"],\"qoDZtU\":[\"Lesotho Loti\"],\"qpC74J\":[\"No users found\"],\"qq17MG\":[\"Item price cannot be negative\"],\"qq9wHN\":[\"Drapery, Window Covering, and Upholstery Stores\"],\"qqRcBm\":[\"Invoice to “\",[\"0\"],\"” was created\"],\"qqWcBV\":[\"Completed\"],\"qr0gpK\":[\"Delete tag\"],\"qriZwv\":[\"United Arab Emirates TRN\"],\"qsMofq\":[\"Users from the list - Any\"],\"qxvS/n\":[\"Palestinian Territory, Occupied\"],\"r+AV22\":[\"Due date is required\"],\"r/7YW1\":[\"Reminders are disabled for this Entity.\"],\"r/mz/U\":[\"Add new bill\"],\"r0/Kqt\":[\"Guatemalan Quetzal\"],\"r1a0ie\":[\"Recurring\"],\"r2evaI\":[\"Value Added Tax (EU)\"],\"r4JV1T\":[\"Georgian Lari\"],\"r5itpS\":[\"Force Approve\"],\"r6+y3S\":[\"Edit customer's profile\"],\"r6JWMs\":[\"Furniture, Home Furnishings, and Equipment Stores, Except Appliances\"],\"rBSujv\":[\"Miscellaneous General Services\"],\"rDyKlz\":[\"Postal code is required\"],\"rErCCy\":[\"This person is a member of the governing board of the company.\"],\"rKNNgt\":[\"European VAT number (Slovakia)\"],\"rNqTKZ\":[\"Prefix\"],\"rOFGja\":[\"Please correct the errors in persons information.\"],\"rPDQQK\":[\"Tax Identification Code (Spain)\"],\"rQFCoH\":[\"Israel\"],\"rQdXWy\":[\"Kyrgyzstan\"],\"rSRyAh\":[\"Add number\"],\"rSmISd\":[\"Reunion\"],\"rV1P/F\":[\"All items in the invoice must be in this currency. Remove items that don’t match it.\"],\"rVAhkq\":[\"Reminders are disabled for this Counterpart.\"],\"rX502K\":[\"European VAT number (Belgium)\"],\"rXVzgP\":[\"Prefix separator\"],\"rYRNgS\":[\"Compose email\"],\"raPOB4\":[\"Contact Person “\",[\"0\"],\"” has been updated.\"],\"rauLEz\":[\"Aruba\"],\"rdUucN\":[\"Preview\"],\"rdr/lC\":[\"Add an owner\"],\"rdsyU3\":[[\"INVOICE_DOCUMENT_AUTO_ID\"]],\"rgp8XV\":[\"Approve request\"],\"riRxNt\":[\"You can not create receivable with a type other than “\",[\"0\"],\"”\"],\"rvVvXX\":[\"What can I help with?\"],\"rwCsyF\":[\"United Arab Emirates\"],\"rx1loD\":[\"Fiji\"],\"rx89EM\":[\"Close reminder's creation\"],\"s0R032\":[\"The start date for the recurrence shouldn’t be in the past\"],\"s1qJMQ\":[\"Due to regulatory guidelines, we're required to collect information on anyone who has significant ownership of your business.\"],\"s2QZS6\":[\"Companies\"],\"s9irlx\":[\"Kazakhstan\"],\"sANGlx\":[\"Contact phone number\"],\"sAi6o+\":[\"VAT Value is required\"],\"sBQFjV\":[\"Mozambique\"],\"sCj2fE\":[\"Value Added Tax (South Africa)\"],\"sCtyHQ\":[\"Upload files\"],\"sEuyOL\":[\"Malaysian ITN\"],\"sG8Ixz\":[\"Guam\"],\"sGQlOS\":[\"Counterpart “\",[\"0\"],\"” has been updated.\"],\"sHkcwT\":[\"Argentine Peso\"],\"sIMb2X\":[\"To (including)\"],\"sLECWi\":[\"Guadeloupe\"],\"sN5Irg\":[\"Has tags\"],\"sNCgfA\":[\"Digital Goods – Games\"],\"sO0IGO\":[\"No info\"],\"sOxJ5w\":[\"European VAT number (Slovenia)\"],\"sTESFt\":[\"Sporting Goods Stores\"],\"sTOo7Z\":[\"IBAN country code must match the selected country.\"],\"sUzsUD\":[\"Failed to update Address.\"],\"sW4knR\":[\"Public Warehousing and Storage - Farm Products, Refrigerated Goods, Household Goods, and Storage\"],\"sXK9VD\":[\"Created by user\"],\"sZUeby\":[\"Item quantity must be a whole number\"],\"sbwbC0\":[\"Payment Method\"],\"scQhHH\":[\"Direct Marketing - Catalog Merchant\"],\"sdPY8k\":[\"Cosmetic Stores\"],\"sfIOlH\":[\"IBAN\"],\"sfwBnA\":[\"Poland\"],\"si+1TP\":[\"Libyan Arab Jamahiriya\"],\"skKTDB\":[\"Chad\"],\"smIDaJ\":[\"United Arab Emirates Dirham\"],\"snfAiu\":[\"Please find the invoice attached as discussed.\\nKind Regards,\\n\",[\"0\"]],\"spEvuE\":[\"There is no invoice by provided id: \",[\"0\"]],\"sr9jZd\":[\"Failed to load GL codes\"],\"ss3YZQ\":[\"Lebanon\"],\"st7yJi\":[\"Failed to generate email preview\"],\"suigXz\":[\"Greece\"],\"sxj3fg\":[\"Address “\",[\"0\"],\"” has been updated.\"],\"syeXJl\":[\"VAT mode\"],\"t/YqKh\":[\"Remove\"],\"t0aFnn\":[\"Set a VAT ID for this customer to issue invoice\"],\"t1RF/q\":[\"Cayman Islands\"],\"t2yvkg\":[\"Payment term created\"],\"t309pR\":[\"Period ends on\"],\"t4QPXL\":[\"Disc.\"],\"t66LGz\":[\"Failed to update Contact Person.\"],\"t6sVML\":[\"Direct Marketing - Other\"],\"t8C8m4\":[\"Set your entity's VAT ID to issue invoice\"],\"t9koU2\":[\"Price Per Unit\"],\"tCtpV4\":[\"Issue\"],\"tCyvAw\":[\"Attach a file\"],\"tHPrTV\":[\"Hungary\"],\"tInLbE\":[\"Value Added Tax (United Kingdom)\"],\"tK+u46\":[\"Reminder emails\"],\"tK6yIE\":[[\"0\"],\" - \",[\"1\"]],\"tMk9hc\":[\"Federal Retailers Permit (Malaysia)\"],\"tMq1xU\":[\"Somalia\"],\"tPQi71\":[\"Korea\"],\"tPTbCz\":[\"Palau\"],\"tPeAHE\":[\"Lithuania\"],\"tQ8TNt\":[\"No items created in\"],\"tSPzV9\":[\"Brunei Dollar\"],\"tSdgUi\":[\"Create an item with this currency to add it\"],\"tWlxkZ\":[\"Please, check the list of products and services that will get deleted:\"],\"tXkhj/\":[\"Start\"],\"tZtPRG\":[\"Mongolia\"],\"tZygJN\":[\"Shoe Repair/Hat Cleaning\"],\"te9ILh\":[\"Set a recurrence period to issue invoices automatically\"],\"tfDRzk\":[\"Save\"],\"tfIdY7\":[\"Counterpart Bank Account\"],\"tlJeSP\":[[\"0\"],\" has been updated\"],\"trMdae\":[\"Amount paid \",[\"0\"]],\"trNmBM\":[\"Togo\"],\"ttScXi\":[\"Front of your identity document\"],\"ttunJK\":[\"Legal name of person\"],\"tvxZw8\":[\"Drinking Places\"],\"txuH6H\":[\"Requested on\"],\"u+hA/j\":[\"GL Code\"],\"u/kWBT\":[\"Payable “\",[\"0\"],\"” has been created\"],\"u2HXZY\":[\"Failed to update\"],\"u2qg7J\":[\"Display bank display options\"],\"u2z0ER\":[\"Issue and send\"],\"u415js\":[\"Days after must be at least 1\"],\"uAQUqI\":[\"Status\"],\"uE0HSq\":[\"State / Area / Province\"],\"uGLRYC\":[\"Drugs, Drug Proprietaries, and Druggist Sundries\"],\"uGYOUp\":[\"Users allowed to approve\"],\"uGiLl/\":[\"Cigar Stores and Stands\"],\"uITuF/\":[\"Miscellaneous Publishing and Printing\"],\"uIUvwE\":[\"Receivables tabs\"],\"uImFCC\":[\"Armenia\"],\"uN/mEu\":[\"Create your first counterpart.\"],\"uNz5FV\":[\"Credit applied\"],\"uTP6Tf\":[\"Close tag form\"],\"uUr1p6\":[\"Financing plan \",[\"0\"]],\"uV0R+E\":[\"Chinese Yuan\"],\"uVib3c\":[\"Set reminders\"],\"uVivwa\":[\"Vendor auto-matched by AI\"],\"uaXc1s\":[\"When you set up the recurrence all future invoices will be issued based on this invoice template. After that you won’t be able to change the invoice template.\"],\"ucgZ0o\":[\"Organization\"],\"uj0brB\":[\"Business website\"],\"ujfv9y\":[\"Issue only\"],\"umGaDy\":[\"Bulgaria\"],\"uqun6A\":[\"Jordan\"],\"utFpXp\":[\"Error deleting payment term\"],\"uvhshm\":[\"Must match the name on your bank account exactly.\"],\"v/OJUt\":[\"This invoice doesn’t have a file attached.\"],\"v4nCHK\":[\"Paid\"],\"v5UgLB\":[\"Office and Commercial Furniture\"],\"v690zz\":[\"Create new counterpart:\"],\"v6xNQm\":[\"No Counterparts\"],\"v8/IVX\":[\"Minimalist\"],\"v8gXQ8\":[\"Add reminder\"],\"v9EobU\":[\"Typesetting, Plate Making, and Related Services\"],\"v9j1Tg\":[\"If the error recurs, contact support, please.\"],\"v9ldLs\":[\"Failed to update VAT.\"],\"vCYA7v\":[\"Bus Lines\"],\"vGjmyl\":[\"Deleted\"],\"vGzZWo\":[\"Tonga\"],\"vIaEVn\":[\"Can't be more than the amount due\"],\"vJj5iV\":[\"Approval chain\"],\"vLqIGd\":[\"Auto Paint Shops\"],\"vLyv1R\":[\"Hide\"],\"vOyUlD\":[\"In range\"],\"vQPCWm\":[\"Sri Lanka\"],\"vQavew\":[\"Delete receivable “\",[\"0\"],\"”?\"],\"vResgj\":[\"Country Clubs\"],\"vSO4HJ\":[\"Hi \",[\"0\"],\",\\nPlease find the invoice attached as discussed.\\nKind Regards,\\n\",[\"1\"]],\"vUnMMm\":[\"The setting will apply to all your future documents\"],\"vVFZDh\":[\"They will contact you if your credit score improves and you can reapply.\"],\"vY3/R1\":[\"Optometrists, Ophthalmologist\"],\"vYOUOk\":[\"Add a comment\"],\"vZfgKK\":[\"Email address for notifications and communication\"],\"vZiSIj\":[\"Motion Picture Theaters\"],\"vaWO6R\":[\"Failed to delete Unit.\"],\"vc2mpQ\":[\"Please, review the offered credit limit and approved financing plans.\"],\"ve9JTU\":[\"Last name is required\"],\"vf1Cge\":[\"ID of counterpart's bank account\"],\"vfzxmF\":[\"Edit Rule\"],\"vgo1MW\":[\"Receivable type not supported\"],\"vjQju1\":[\"Nurseries, Lawn and Garden Supply Stores\"],\"vkewyf\":[\"VAT value\"],\"vmHY+X\":[\"Update to match bill\"],\"vn1vZp\":[\"Car and Truck Dealers (New &amp; Used) Sales, Service, Repairs Parts and Leasing\"],\"vntT9p\":[\"Pet Shops, Pet Food, and Supplies\"],\"vodFrH\":[\"It’s required to add any individual who is on the governing board of the company.\"],\"vojz3y\":[\"Chiropractors\"],\"vpNs0s\":[\"Offer a discount to your customer if they pay early.\"],\"vr+2CX\":[\"Swimming Pools Sales\"],\"vuwCUY\":[\"Reminder not found\"],\"vvRWYR\":[\"Glass, Paint, and Wallpaper Stores\"],\"vzj8gL\":[\"Provincial Sales Tax (Saskatchewan, Canada)\"],\"w+HNKD\":[\"Recreational Vehicle Rentals\"],\"w+vEG4\":[\"If you leave this page, you will lose all the changes you have made.\"],\"w/MGpg\":[\"Select 'Get Paid Now':\"],\"w/Sphq\":[\"Attachments\"],\"w1ZzO+\":[\"From (including)\"],\"w24fs1\":[\"Invoice cancel confirmation\"],\"w3ole0\":[\"Already updated PDFs can’t be reverted to the default view\"],\"w4Tw6q\":[\"Edit Approval Policy\"],\"w5PURb\":[\"Must be at least 0.01\"],\"w6cwVF\":[\"Edit recurring settings\"],\"w6uMH2\":[\"Cambodia\"],\"w8ulZC\":[\"Counterpart has been deleted.\"],\"w9dLMW\":[[\"label\"]],\"w9k801\":[\"Iraq\"],\"wDJF5w\":[\"VAT has been deleted.\"],\"wF14js\":[\"Create Approval Policy\"],\"wF2wqQ\":[\"Unknown date\"],\"wHbSJG\":[\"Cape Verdean Escudo\"],\"wI0q5O\":[\"Custom prefix\"],\"wKpaSq\":[\"All items in the invoice must be in this currency. Remove items that don't match it.\"],\"wN/Y7f\":[\"Massage Parlors\"],\"wN8V8r\":[\"Payable “\",[\"0\"],\"” has been approved\"],\"wNlNKU\":[\"Brazilian CNPJ number\"],\"wOvEXk\":[\"Value Added Tax (Thailand)\"],\"wRL7Wp\":[\"Search chats...\"],\"wSwaLS\":[\"No logo\"],\"wX2Tuz\":[\"from \",[\"0\"]],\"wXnGnw\":[\"When you set up the recurrence all future invoices will be issued based on this invoice template. After that you won't be able to change the invoice template.\"],\"wZGDhG\":[\"Wholesale Clubs\"],\"wZYUg8\":[\"Enable update paid invoices pdf\"],\"wa/FyP\":[\"Overdue reminder error\"],\"wcGeDE\":[\"Bank accounts\"],\"wdobN7\":[\"Set by payment term\"],\"whWSxp\":[\"Invoice will be issued with items in the selected currency\"],\"whqkbS\":[\"Add a note to be displayed below the line items\"],\"wl7gRe\":[\"Close recurrence details\"],\"wo/hLg\":[\"Removing an executive role from this person is not allowed\"],\"wpT1VN\":[\"Condition\"],\"wpULnc\":[\"IBAN is required\"],\"wsZfno\":[\"South Korean Won\"],\"wslH+H\":[\"Amount must be a number\"],\"wtuVU4\":[\"Frequency\"],\"wuhHPE\":[\"Recurring\"],\"wwjUcl\":[\"I own 25% or more of the company.\"],\"wwrAsK\":[\"Please fill in all required fields\"],\"wxS7xA\":[\"Are you the only person on the governing board of the company?\"],\"wymfGb\":[\"Failed to delete Bank Account.\"],\"wyvvK4\":[\"Vat Value\"],\"x+8FHu\":[\"You can add a document number to have it in the PDF\"],\"x1kWQc\":[\"VAT exemption rationale\"],\"x1qyce\":[\"No more than 3 reminders are allowed\"],\"x5OxFe\":[\"Federal Taxpayers Registry (Mexico)\"],\"x76C/t\":[\"Guinea-Bissau\"],\"x7XJsh\":[\"Exterminating Services\"],\"x9SxJC\":[\"Business executives\"],\"x9ecE4\":[\"Attach file\"],\"xD9ABo\":[\"Back to edit\"],\"xDAtGP\":[\"Message\"],\"xDr/ct\":[\"End\"],\"xGVfLh\":[\"Continue\"],\"xGx4S0\":[\"Vendor auto-matched by AI. The vendor name on the bill doesn’t exactly match the saved counterpart, so AI selected the closest option.\"],\"xIfKEA\":[\"All categories\"],\"xJDYwn\":[[\"0\"],\" has been created\"],\"xPOgjC\":[\"Product name is required\"],\"xR7k0Y\":[\"Philippines\"],\"xUq/Xy\":[\"Furriers and Fur Shops\"],\"xVtOyQ\":[\"Cyprus\"],\"xWEvuo\":[\"Ask AI\"],\"xiEnTs\":[\"Sporting/Recreation Camps\"],\"xjGjLI\":[\"Set up bank account to add payment info and set a QR code\"],\"xkRDL7\":[\"Bands, Orchestras\"],\"xonzEV\":[\"Uploading \",[\"0\"]],\"xowcRf\":[\"Terms of Service\"],\"xqWL7j\":[\"Djiboutian Franc\"],\"xrnwUJ\":[\"Eating Places, Restaurants\"],\"xsq1Zt\":[\"Indonesian NPWP number\"],\"xv4aXl\":[\"Digital Goods – Applications (Excludes Games)\"],\"xxCtZv\":[\"Rows per page\"],\"xz2uEk\":[\"Failed to create receivable: \",[\"errorMessage\"]],\"y/pTgc\":[\"Tax rate cannot exceed 100%\"],\"y04aXn\":[\"Min digits (20 max)\"],\"y3Hef1\":[\"Display name must be 200 characters or less\"],\"y3aU20\":[\"Save changes\"],\"y4CtQD\":[\"Indonesia\"],\"y4njaO\":[\"Typewriter Stores\"],\"y718b3\":[\"Holy See (Vatican City State)\"],\"y79lo5\":[\"Funeral Services, Crematories\"],\"y7vvb2\":[\"SWIFT/BIC code\"],\"y96k+z\":[\"Users from the list\"],\"yETUOh\":[\"Reject request\"],\"yFUhHz\":[\"Close approval policy details\"],\"yKH3gi\":[\"Invalid website URL. Please ensure it starts with 'http://' or 'https://'.\"],\"yKnHs1\":[\"Cancel\"],\"yLO5sB\":[\"Ask AI...\"],\"yOOsg0\":[\"Usually it takes no more than 1–2 minutes.\"],\"yPrbsy\":[\"Recipients\"],\"yQEKYc\":[\"European VAT number (Lithuania)\"],\"yRsSBw\":[\"Approvals\"],\"yTL1cK\":[\"European VAT number (Hungary)\"],\"yVDNVY\":[\"There was an error loading \",[\"0\"],\".\"],\"yVL0V5\":[\"No payments yet\"],\"yVp3jm\":[\"Back of your identify document\"],\"yYTfuK\":[\"Vat value\"],\"yaJRV9\":[\"Bank Account “\",[\"0\"],\"” has been created.\"],\"ybKOj4\":[\"Google Pay\"],\"ybR9Pv\":[\"Watch/Jewelry Repair\"],\"yc+u3y\":[\"Miscellaneous General Merchandise\"],\"ycQdQ5\":[\"Canadian BN\"],\"ydt0Tl\":[\"Bahamian Dollar\"],\"yl6zvN\":[\"City is required\"],\"ylCEUu\":[\"Payable “\",[\"0\"],\"” has been updated\"],\"ylQd2j\":[\"Flow\"],\"yn1Jhl\":[\"Kiribati\"],\"ynPFZs\":[\"Minimum quantity\"],\"ynXXmt\":[\"Failed to submit Payable with AI suggestion. Please try editing the Payable and submit again.\"],\"younfv\":[\"Please accept Service Agreement to proceed.\"],\"yp6qTa\":[\"Delete trigger\"],\"ypDg4R\":[\"British Pound Sterling\"],\"ypFlT3\":[\"Any user with role\"],\"yqcZCI\":[\"Users or Roles\"],\"yxlSra\":[\"The start date for the recurrence shouldn't be in the past\"],\"yz1CR5\":[\"Computer Programming\"],\"yz7wBu\":[\"Close\"],\"z/4dot\":[\"Create Vat Id\"],\"z/qFop\":[\"Hong Kong BR number\"],\"z03j6r\":[\"Tag “\",[\"0\"],\"” was deleted\"],\"z1dTLo\":[\"Added on\"],\"z7NuSN\":[\"Norwegian VAT number\"],\"z7Zkpt\":[\"Update bank account\"],\"z7ht1P\":[\"Martinique\"],\"zAYz1t\":[\"Add Condition\"],\"zC1aVl\":[\"Recurrence has been updated\"],\"zCexn+\":[\"Quit without saving\"],\"zF4GwJ\":[\"The Credit note to this invoice \",[\"0\"],\" was created earlier. Following that you can’t cancel invoice.\"],\"zHg6Ls\":[\"Sales tax\"],\"zJfCcx\":[\"Samoa\"],\"zMIL7t\":[\"Automated Fuel Dispensers\"],\"zNOioy\":[\"Approval Requests\"],\"zR6XHV\":[\"Delete receivable \\\"\",[\"0\"],\"\\\"?\"],\"zTm8gV\":[\"Service Stations\"],\"zTuJ1X\":[\"No bills found\"],\"zVkIrp\":[\"Edit settings\"],\"zVoBoY\":[\"Set a Tax ID for this customer to issue invoice\"],\"zWlFzN\":[\"You can create your first counterpart.\"],\"zYhNW9\":[\"Priority is required\"],\"zZS+i1\":[\"Provide documents for persons\"],\"zelwwH\":[\"Criteria\"],\"zfW1eY\":[[\"days_before\"],\" \",[\"day_plural\"],\" till overdue\"],\"zgn8aj\":[\"East Caribbean Dollar\"],\"zk/xKI\":[\"Send invoice\"],\"zmwvG2\":[\"Phone\"],\"znAjDz\":[\"Hong Kong\"],\"zp5uQy\":[\"Payments history\"],\"zpyHOK\":[\"All items with this measure unit will get deleted, too.\"],\"zq6ta3\":[\"Service \",[\"0\"],\" was created.\"],\"zrTf0T\":[\"Continue with no owners\"],\"zrhWlq\":[\"Nepal\"],\"ztGxi6\":[\"Declined\"],\"zu5gZ1\":[\"Reconciliation\"],\"zucql+\":[\"Menu\"],\"zvKydJ\":[\"Add a person\"],\"zvjAaH\":[\"Failed to submit Payable with AI suggestion. Plese try editing the Payable and re-submit.\"],\"{count} Processing\":[[\"count\"],\" Processing\"],\"{count} payment for {amount} processing\":[[\"count\"],\" payment for \",[\"amount\"],\" processing\"]}");

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore-next-line
function compileLinguiDynamicMessages(messages) {
    const compiledMessages = {};
    for (const [messageKey, messageItem] of Object.entries(messages)){
        // 1. Multiple messages with different contexts and the same key
        if (isMessageObject(messageItem) || Array.isArray(messageItem) && messageItem.every(isMessageObject)) {
            for (const message of Array.isArray(messageItem) ? messageItem : [
                messageItem
            ]){
                const { msgstr, msgctxt = '' } = message;
                const compiledMsgstr = compileMessage.compileMessage(msgstr || messageKey);
                // Lingui uses generated key for the compile-time translations
                compiledMessages[generateLinguiMessageId(messageKey, msgctxt)] = compiledMsgstr;
                // Messages with the context used in compile-time translations
                if (!msgctxt) {
                    // Lingui uses plain key for the runtime translations
                    compiledMessages[messageKey] = compiledMsgstr;
                }
            }
        } else if (typeof messageItem === 'string') {
            const compiledMsgstr = compileMessage.compileMessage(messageItem || messageKey);
            // Lingui uses generated key for the compile-time translations
            compiledMessages[generateLinguiMessageId(messageKey, undefined)] = compiledMsgstr;
            // Lingui uses plain key for the runtime translations
            compiledMessages[messageKey] = compiledMsgstr;
        } else if (Array.isArray(messageItem)) {
            compiledMessages[messageKey] = messageItem;
        }
    }
    return compiledMessages;
}
const isMessageObject = (message)=>{
    if (!message) return false;
    if (typeof message !== 'object') return false;
    if (!('msgstr' in message)) return false;
    return Object.keys(message).every((key)=>key === 'msgctxt' || key === 'msgstr');
};
/**
 * Generates LinguiJS hashed message id base on the message id and context
 *
 * @param messageId `msgid` field from the PO file
 * @param context `msgctxt` field from the PO file
 */ function generateLinguiMessageId(messageId, context = '') {
    return generateMessageId.generateMessageId(messageId, context);
}

function asyncGeneratorStep$15(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$15(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$15(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$15(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$3r(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3o(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3r(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2c(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2c(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2c(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Provides a dynamic `i18n` for the children components.
 * Under the hood, it compiles the provided `locale.messages` by the Customer
 * to the format that `@lingui` can understand.
 *
 * @example
 * ```tsx
 * <I18nLoader locale={locale}>
 *   {(i18n) => <I18nProvider i18n={i18n}>{children}</I18nProvider>}
 * </I18nLoader>
 * ```
 */ const I18nLoader = ({ locale, children })=>{
    const previousLocaleMessages = React.useRef(locale.messages);
    const stableLocaleMessages = React.useMemo(()=>{
        if (deepEqual__default.default(locale.messages, previousLocaleMessages.current)) return previousLocaleMessages.current;
        return previousLocaleMessages.current = locale.messages;
    }, [
        locale.messages
    ]);
    const Provider = React.useMemo(()=>{
        return /*#__PURE__*/ React.lazy(()=>_async_to_generator$15(function*() {
                return {
                    default: yield createDynamicI18nProvider({
                        code: locale.code,
                        messages: stableLocaleMessages
                    })
                };
            })());
    }, [
        locale.code,
        stableLocaleMessages
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(React.Suspense, {
        fallback: null,
        children: /*#__PURE__*/ jsxRuntime.jsx(Provider, {
            children: children
        })
    });
};
const createDynamicI18nProvider = (locale)=>_async_to_generator$15(function*() {
        const [linguiCompiledMessages, dateFnsLocale] = yield Promise.all([
            locale.messages ? compileLinguiDynamicMessages(locale.messages) : Promise.resolve(),
            loadDateFnsLocale(locale.code)
        ]);
        return function CompiledLinguiI18n({ children }) {
            const i18n = React.useMemo(()=>{
                return core.setupI18n({
                    locale: locale.code,
                    messages: {
                        [locale.code]: _object_spread$3o({}, messages, linguiCompiledMessages)
                    }
                });
            }, []);
            return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                children: children(i18n, dateFnsLocale)
            });
        };
    })();
const loadDateFnsLocale = (localeCode)=>_async_to_generator$15(function*() {
        const localeCodeParts = localeCode.split('-');
        const localeCodeCommon = localeCodeParts[0];
        const localeCodeFull = localeCodeParts.join('');
        const isDateFnsLocaleSupported = (code)=>code in dateFnsLocales;
        try {
            if (isDateFnsLocaleSupported(localeCodeFull)) {
                return dateFnsLocales[localeCodeFull]().then((module)=>module.default);
            }
            if (isDateFnsLocaleSupported(localeCodeCommon)) {
                return dateFnsLocales[localeCodeCommon]().then((module)=>module.default);
            }
        } catch (error) {
            console.error('DateFnsLocale has not been loaded: ', error);
        }
        return dateFnsLocales.en().then((module)=>module.default);
    })();
const dateFnsLocales = {
    af: ()=>import('date-fns/locale/af'),
    ar: ()=>import('date-fns/locale/ar'),
    arDZ: ()=>import('date-fns/locale/ar-DZ'),
    arEG: ()=>import('date-fns/locale/ar-EG'),
    arMA: ()=>import('date-fns/locale/ar-MA'),
    arSA: ()=>import('date-fns/locale/ar-SA'),
    arTN: ()=>import('date-fns/locale/ar-TN'),
    az: ()=>import('date-fns/locale/az'),
    be: ()=>import('date-fns/locale/be'),
    beTarask: ()=>import('date-fns/locale/be-tarask'),
    bg: ()=>import('date-fns/locale/bg'),
    bn: ()=>import('date-fns/locale/bn'),
    bs: ()=>import('date-fns/locale/bs'),
    ca: ()=>import('date-fns/locale/ca'),
    cs: ()=>import('date-fns/locale/cs'),
    cy: ()=>import('date-fns/locale/cy'),
    da: ()=>import('date-fns/locale/da'),
    de: ()=>import('date-fns/locale/de'),
    deAT: ()=>import('date-fns/locale/de-AT'),
    el: ()=>import('date-fns/locale/el'),
    en: ()=>import('date-fns/locale/en-US'),
    enAU: ()=>import('date-fns/locale/en-AU'),
    enCA: ()=>import('date-fns/locale/en-CA'),
    enGB: ()=>import('date-fns/locale/en-GB'),
    enIE: ()=>import('date-fns/locale/en-IE'),
    enIN: ()=>import('date-fns/locale/en-IN'),
    enNZ: ()=>import('date-fns/locale/en-NZ'),
    enUS: ()=>import('date-fns/locale/en-US'),
    enZA: ()=>import('date-fns/locale/en-ZA'),
    eo: ()=>import('date-fns/locale/eo'),
    es: ()=>import('date-fns/locale/es'),
    et: ()=>import('date-fns/locale/et'),
    eu: ()=>import('date-fns/locale/eu'),
    faIR: ()=>import('date-fns/locale/fa-IR'),
    fi: ()=>import('date-fns/locale/fi'),
    fr: ()=>import('date-fns/locale/fr'),
    frCA: ()=>import('date-fns/locale/fr-CA'),
    frCH: ()=>import('date-fns/locale/fr-CH'),
    fy: ()=>import('date-fns/locale/fy'),
    gd: ()=>import('date-fns/locale/gd'),
    gl: ()=>import('date-fns/locale/gl'),
    gu: ()=>import('date-fns/locale/gu'),
    he: ()=>import('date-fns/locale/he'),
    hi: ()=>import('date-fns/locale/hi'),
    hr: ()=>import('date-fns/locale/hr'),
    ht: ()=>import('date-fns/locale/ht'),
    hu: ()=>import('date-fns/locale/hu'),
    hy: ()=>import('date-fns/locale/hy'),
    id: ()=>import('date-fns/locale/id'),
    is: ()=>import('date-fns/locale/is'),
    it: ()=>import('date-fns/locale/it'),
    itCH: ()=>import('date-fns/locale/it-CH'),
    ja: ()=>import('date-fns/locale/ja'),
    jaHira: ()=>import('date-fns/locale/ja-Hira'),
    ka: ()=>import('date-fns/locale/ka'),
    kk: ()=>import('date-fns/locale/kk'),
    km: ()=>import('date-fns/locale/km'),
    kn: ()=>import('date-fns/locale/kn'),
    ko: ()=>import('date-fns/locale/ko'),
    lb: ()=>import('date-fns/locale/lb'),
    lt: ()=>import('date-fns/locale/lt'),
    lv: ()=>import('date-fns/locale/lv'),
    mk: ()=>import('date-fns/locale/mk'),
    mn: ()=>import('date-fns/locale/mn'),
    ms: ()=>import('date-fns/locale/ms'),
    mt: ()=>import('date-fns/locale/mt'),
    nb: ()=>import('date-fns/locale/nb'),
    nl: ()=>import('date-fns/locale/nl'),
    nlBE: ()=>import('date-fns/locale/nl-BE'),
    nn: ()=>import('date-fns/locale/nn'),
    oc: ()=>import('date-fns/locale/oc'),
    pl: ()=>import('date-fns/locale/pl'),
    pt: ()=>import('date-fns/locale/pt'),
    ptBR: ()=>import('date-fns/locale/pt-BR'),
    ro: ()=>import('date-fns/locale/ro'),
    ru: ()=>import('date-fns/locale/ru'),
    sk: ()=>import('date-fns/locale/sk'),
    sl: ()=>import('date-fns/locale/sl'),
    sq: ()=>import('date-fns/locale/sq'),
    sr: ()=>import('date-fns/locale/sr'),
    srLatn: ()=>import('date-fns/locale/sr-Latn'),
    sv: ()=>import('date-fns/locale/sv'),
    ta: ()=>import('date-fns/locale/ta'),
    te: ()=>import('date-fns/locale/te'),
    th: ()=>import('date-fns/locale/th'),
    tr: ()=>import('date-fns/locale/tr'),
    ug: ()=>import('date-fns/locale/ug'),
    uk: ()=>import('date-fns/locale/uk'),
    uz: ()=>import('date-fns/locale/uz'),
    uzCyrl: ()=>import('date-fns/locale/uz-Cyrl'),
    vi: ()=>import('date-fns/locale/vi'),
    zhCN: ()=>import('date-fns/locale/zh-CN'),
    zhHK: ()=>import('date-fns/locale/zh-HK'),
    zhTW: ()=>import('date-fns/locale/zh-TW')
};
function getLocaleWithDefaults(locale) {
    var _locale_currencyNumberFormat, _locale_currencyNumberFormat1, _locale_dateFormat, _locale_dateFormat1, _locale_dateFormat2, _locale_dateFormat3, _locale_dateFormat4, _locale_dateFormat5, _locale_dateFormat6, _locale_dateFormat7, _locale_dateFormat8, _locale_dateFormat9, _locale_dateFormat10, _locale_dateFormat11, _locale_dateFormat12, _locale_dateFormat13, _locale_dateFormat14, _locale_dateFormat15, _locale_dateFormat16, _locale_dateFormat17, _locale_dateFormat18, _locale_dateFormat19;
    var _locale_code;
    const code = (_locale_code = locale === null || locale === void 0 ? void 0 : locale.code) !== null && _locale_code !== void 0 ? _locale_code : typeof navigator === 'undefined' ? 'en' : navigator.language;
    var _locale_currencyNumberFormat_localeCode, _locale_currencyNumberFormat_display, _locale_dateFormat_year, _locale_dateFormat_month, _locale_dateFormat_day, _locale_dateFormat_year1, _locale_dateFormat_month1, _locale_dateFormat_day1, _locale_dateFormat_hour, _locale_dateFormat_minute;
    return _object_spread_props$2c(_object_spread$3o({}, locale), {
        code,
        currencyNumberFormat: {
            localeCode: (_locale_currencyNumberFormat_localeCode = locale === null || locale === void 0 ? void 0 : (_locale_currencyNumberFormat = locale.currencyNumberFormat) === null || _locale_currencyNumberFormat === void 0 ? void 0 : _locale_currencyNumberFormat.localeCode) !== null && _locale_currencyNumberFormat_localeCode !== void 0 ? _locale_currencyNumberFormat_localeCode : code,
            display: (_locale_currencyNumberFormat_display = locale === null || locale === void 0 ? void 0 : (_locale_currencyNumberFormat1 = locale.currencyNumberFormat) === null || _locale_currencyNumberFormat1 === void 0 ? void 0 : _locale_currencyNumberFormat1.display) !== null && _locale_currencyNumberFormat_display !== void 0 ? _locale_currencyNumberFormat_display : 'symbol'
        },
        dateFormat: _object_spread_props$2c(_object_spread$3o({}, (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat = locale.dateFormat) === null || _locale_dateFormat === void 0 ? void 0 : _locale_dateFormat.weekday) && {
            weekday: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat1 = locale.dateFormat) === null || _locale_dateFormat1 === void 0 ? void 0 : _locale_dateFormat1.weekday
        }), {
            year: (_locale_dateFormat_year = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat2 = locale.dateFormat) === null || _locale_dateFormat2 === void 0 ? void 0 : _locale_dateFormat2.year) !== null && _locale_dateFormat_year !== void 0 ? _locale_dateFormat_year : 'numeric',
            month: (_locale_dateFormat_month = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat3 = locale.dateFormat) === null || _locale_dateFormat3 === void 0 ? void 0 : _locale_dateFormat3.month) !== null && _locale_dateFormat_month !== void 0 ? _locale_dateFormat_month : 'short',
            day: (_locale_dateFormat_day = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat4 = locale.dateFormat) === null || _locale_dateFormat4 === void 0 ? void 0 : _locale_dateFormat4.day) !== null && _locale_dateFormat_day !== void 0 ? _locale_dateFormat_day : '2-digit'
        }),
        dateTimeFormat: _object_spread$3o(_object_spread_props$2c(_object_spread$3o({}, (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat5 = locale.dateFormat) === null || _locale_dateFormat5 === void 0 ? void 0 : _locale_dateFormat5.weekday) && {
            weekday: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat6 = locale.dateFormat) === null || _locale_dateFormat6 === void 0 ? void 0 : _locale_dateFormat6.weekday
        }), {
            year: (_locale_dateFormat_year1 = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat7 = locale.dateFormat) === null || _locale_dateFormat7 === void 0 ? void 0 : _locale_dateFormat7.year) !== null && _locale_dateFormat_year1 !== void 0 ? _locale_dateFormat_year1 : 'numeric',
            month: (_locale_dateFormat_month1 = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat8 = locale.dateFormat) === null || _locale_dateFormat8 === void 0 ? void 0 : _locale_dateFormat8.month) !== null && _locale_dateFormat_month1 !== void 0 ? _locale_dateFormat_month1 : 'short',
            day: (_locale_dateFormat_day1 = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat9 = locale.dateFormat) === null || _locale_dateFormat9 === void 0 ? void 0 : _locale_dateFormat9.day) !== null && _locale_dateFormat_day1 !== void 0 ? _locale_dateFormat_day1 : '2-digit',
            hour: (_locale_dateFormat_hour = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat10 = locale.dateFormat) === null || _locale_dateFormat10 === void 0 ? void 0 : _locale_dateFormat10.hour) !== null && _locale_dateFormat_hour !== void 0 ? _locale_dateFormat_hour : '2-digit',
            minute: (_locale_dateFormat_minute = locale === null || locale === void 0 ? void 0 : (_locale_dateFormat11 = locale.dateFormat) === null || _locale_dateFormat11 === void 0 ? void 0 : _locale_dateFormat11.minute) !== null && _locale_dateFormat_minute !== void 0 ? _locale_dateFormat_minute : '2-digit'
        }), (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat12 = locale.dateFormat) === null || _locale_dateFormat12 === void 0 ? void 0 : _locale_dateFormat12.second) && {
            second: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat13 = locale.dateFormat) === null || _locale_dateFormat13 === void 0 ? void 0 : _locale_dateFormat13.second
        }, (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat14 = locale.dateFormat) === null || _locale_dateFormat14 === void 0 ? void 0 : _locale_dateFormat14.timeZoneName) && {
            timeZoneName: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat15 = locale.dateFormat) === null || _locale_dateFormat15 === void 0 ? void 0 : _locale_dateFormat15.timeZoneName
        }, (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat16 = locale.dateFormat) === null || _locale_dateFormat16 === void 0 ? void 0 : _locale_dateFormat16.hour12) && {
            hour12: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat17 = locale.dateFormat) === null || _locale_dateFormat17 === void 0 ? void 0 : _locale_dateFormat17.hour12
        }, (locale === null || locale === void 0 ? void 0 : (_locale_dateFormat18 = locale.dateFormat) === null || _locale_dateFormat18 === void 0 ? void 0 : _locale_dateFormat18.timeZone) && {
            timeZone: locale === null || locale === void 0 ? void 0 : (_locale_dateFormat19 = locale.dateFormat) === null || _locale_dateFormat19 === void 0 ? void 0 : _locale_dateFormat19.timeZone
        })
    });
}

const MoniteQraftContext = React.createContext(undefined);

const getAPIErrorMessage = (i18n, error, defaultMessage)=>{
    var _error_detail;
    if (error instanceof Error) return error.message;
    if ('error' in error && 'message' in error.error) return error.error.message;
    if ('detail' in error && Array.isArray(error.detail)) return (_error_detail = error.detail) === null || _error_detail === void 0 ? void 0 : _error_detail.map((detail)=>detail.msg).join(', ');
    if ('message' in error && error.message === 'Request size limit exceeded') {
        return i18n._({
            id: "bVCouM"
        });
    }
    return defaultMessage !== null && defaultMessage !== void 0 ? defaultMessage : i18n._({
        id: "Ef7StM"
    });
};

const createQueryClient = (i18n, sentryHub)=>new reactQuery.QueryClient({
        mutationCache: new reactQuery.MutationCache({
            onError: (err, _variables, _context, mutation)=>{
                /**
         * If this mutation has an `onError` callback defined
         *  skip global error handling.
         */ if (mutation.options.onError) {
                    return;
                }
                const message = getAPIErrorMessage(i18n, err);
                if (message) {
                    reactHotToast.toast.error(message, {
                        id: message
                    });
                } else {
                    reactHotToast.toast.error(i18n._({
                        id: "hol1rf"
                    }));
                }
                sentryHub === null || sentryHub === void 0 ? void 0 : sentryHub.captureException(err);
            }
        }),
        /**
     * Default Options
     *
     * @see https://tanstack.com/query/v4/docs/react/reference/QueryClient
     */ defaultOptions: {
            queries: {
                /**
         * We want to refetch on window focus only
         *  if the query is not in `error` state.
         * Otherwise, we will get an error over and over again
         *  if the query is in `error` state and user
         *  will try to focus on the window.
         */ refetchOnWindowFocus: (query)=>query.state.status !== 'error',
                refetchOnMount: true,
                refetchOnReconnect: true,
                refetchIntervalInBackground: false,
                retry: false,
                /** Make `staleTime` to 1 minute */ staleTime: 1000 * 60 * 1
            }
        }
    });

/**
 * Hook that tracks whether the component is currently mounted.
 * Useful for preventing state updates on unmounted components.
 *
 * @returns A ref object with current boolean indicating mount status
 */ const useIsMounted = ()=>{
    const isMountedRef = React.useRef(false);
    React.useEffect(()=>{
        isMountedRef.current = true;
        return ()=>{
            isMountedRef.current = false;
        };
    }, []);
    return isMountedRef;
};

function _define_property$3q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
class SentryFactory {
    /**
   * Initialize Sentry with all provided `tags` and `environment`
   */ create() {
        /**
     * We shouldn't enable `Sentry` for production until we are
     *  on 100% sure that all customer's data is ignored
     */ const sentryEnvironment = this.config.environment;
        const isLocalhost = typeof document !== 'undefined' && document.location.hostname === 'localhost';
        const isDevelopmentRuntime = typeof process !== 'undefined' && typeof process.env === 'object' ? process.env.NODE_ENV === 'development' || process.env.TESTS === 'true' || process.env.TESTS === '1' : false;
        const debug = sentryEnvironment === 'dev';
        const enabled = sentryEnvironment !== 'production' && !isDevelopmentRuntime && !isLocalhost;
        const client = new react$2.BrowserClient({
            dsn: 'https://6639ef68c6db10ad889794dbd6822dca@o310686.ingest.sentry.io/4505629057286144',
            environment: sentryEnvironment,
            release: packageVersion,
            transport: react$2.makeFetchTransport,
            stackParser: react$2.defaultStackParser,
            integrations: [
                new react$2.BrowserProfilingIntegration(),
                new react$2.BrowserTracing()
            ],
            tracesSampleRate: 1.0,
            replaysSessionSampleRate: 1.0,
            replaysOnErrorSampleRate: 1.0,
            debug: debug,
            enabled: enabled
        });
        const hub = new react$2.Hub(client);
        hub.configureScope((scope)=>{
            scope.setTags({
                entityId: this.config.entityId,
                packageVersion,
                apiVersion
            });
        });
        return hub;
    }
    constructor(config){
        _define_property$3q(this, "config", void 0);
        this.config = config;
    }
}

/* eslint-disable lingui/no-unlocalized-strings */ const getTheme$1 = (theme)=>{
    var _theme_colors, _theme_colors1, _theme_colors2, _theme_colors3, _theme_colors4, _theme_colors5, _theme_colors6, _theme_colors7, _theme_colors8, _theme_colors9, _theme_colors10, _theme_typography, _theme_typography1, _theme_typography_h1, _theme_typography2, _theme_typography_h11, _theme_typography3, _theme_typography_h12, _theme_typography4, _theme_typography_h13, _theme_typography5, _theme_typography_h2, _theme_typography6, _theme_typography_h21, _theme_typography7, _theme_typography_h22, _theme_typography8, _theme_typography_h23, _theme_typography9, _theme_typography_h3, _theme_typography10, _theme_typography_h31, _theme_typography11, _theme_typography_h32, _theme_typography12, _theme_typography_h33, _theme_typography13, _theme_typography_subtitle1, _theme_typography14, _theme_typography_subtitle11, _theme_typography15, _theme_typography_subtitle12, _theme_typography16, _theme_typography_subtitle13, _theme_typography17, _theme_typography_subtitle2, _theme_typography18, _theme_typography_subtitle21, _theme_typography19, _theme_typography_subtitle22, _theme_typography20, _theme_typography_subtitle23, _theme_typography21, _theme_typography_body1, _theme_typography22, _theme_typography_body11, _theme_typography23, _theme_typography_body12, _theme_typography24, _theme_typography_body2, _theme_typography25, _theme_typography_body21, _theme_typography26, _theme_typography_body22, _theme_typography27, _theme_components_invoiceStatusChip, _theme_components, _theme_components_invoiceStatusChip1, _theme_components1, _theme_components_invoiceStatusChip2, _theme_components2, _theme_components_payableStatusChip, _theme_components3, _theme_components_payableStatusChip1, _theme_components4, _theme_components_payableStatusChip2, _theme_components5, _theme_components_approvalRequestStatusChip, _theme_components6, _theme_components_approvalRequestStatusChip1, _theme_components7, _theme_components_approvalRequestStatusChip2, _theme_components8, _theme_components_invoiceRecurrenceStatusChip, _theme_components9, _theme_components_invoiceRecurrenceStatusChip1, _theme_components10, _theme_components_invoiceRecurrenceStatusChip2, _theme_components11, _theme_components_invoiceRecurrenceIterationStatusChip, _theme_components12, _theme_components_invoiceRecurrenceIterationStatusChip1, _theme_components13, _theme_components_invoiceRecurrenceIterationStatusChip2, _theme_components14, _theme_components_counterpartStatusChip, _theme_components15, _theme_components_counterpartStatusChip1, _theme_components16, _theme_components_approvalStatusChip, _theme_components17, _theme_components_approvalStatusChip1, _theme_components18, _theme_components_approvalStatusChip2, _theme_components19;
    var _theme_borderRadius, _theme_spacing, _theme_typography_fontSize, _theme_typography_h1_fontSize, _theme_typography_h1_fontWeight, _theme_typography_h1_lineHeight, _theme_typography_h1_textTransform, _theme_typography_h2_fontSize, _theme_typography_h2_fontWeight, _theme_typography_h2_lineHeight, _theme_typography_h2_textTransform, _theme_typography_h3_fontSize, _theme_typography_h3_fontWeight, _theme_typography_h3_lineHeight, _theme_typography_h3_textTransform, _theme_typography_subtitle1_fontSize, _theme_typography_subtitle1_fontWeight, _theme_typography_subtitle1_lineHeight, _theme_typography_subtitle1_textTransform, _theme_typography_subtitle2_fontSize, _theme_typography_subtitle2_fontWeight, _theme_typography_subtitle2_lineHeight, _theme_typography_subtitle2_textTransform, _theme_typography_body1_fontSize, _theme_typography_body1_fontWeight, _theme_typography_body1_lineHeight, _theme_typography_body2_fontSize, _theme_typography_body2_fontWeight, _theme_typography_body2_lineHeight;
    return {
        borderRadius: (_theme_borderRadius = theme.borderRadius) !== null && _theme_borderRadius !== void 0 ? _theme_borderRadius : 6,
        buttonBorderRadius: 8,
        spacing: (_theme_spacing = theme.spacing) !== null && _theme_spacing !== void 0 ? _theme_spacing : 8,
        colors: {
            primary: ((_theme_colors = theme.colors) === null || _theme_colors === void 0 ? void 0 : _theme_colors.primary) || '#3737FF',
            primaryForeground: ((_theme_colors1 = theme.colors) === null || _theme_colors1 === void 0 ? void 0 : _theme_colors1.primaryForeground) || '#ffffff',
            secondary: ((_theme_colors2 = theme.colors) === null || _theme_colors2 === void 0 ? void 0 : _theme_colors2.secondary) || '#707070',
            neutral: ((_theme_colors3 = theme.colors) === null || _theme_colors3 === void 0 ? void 0 : _theme_colors3.neutral) || '#707070',
            info: ((_theme_colors4 = theme.colors) === null || _theme_colors4 === void 0 ? void 0 : _theme_colors4.info) || ((_theme_colors5 = theme.colors) === null || _theme_colors5 === void 0 ? void 0 : _theme_colors5.primary) || '#3737FF',
            success: ((_theme_colors6 = theme.colors) === null || _theme_colors6 === void 0 ? void 0 : _theme_colors6.success) || '#1FBCA0',
            warning: ((_theme_colors7 = theme.colors) === null || _theme_colors7 === void 0 ? void 0 : _theme_colors7.warning) || '#C78032',
            error: ((_theme_colors8 = theme.colors) === null || _theme_colors8 === void 0 ? void 0 : _theme_colors8.error) || '#CC394B',
            background: ((_theme_colors9 = theme.colors) === null || _theme_colors9 === void 0 ? void 0 : _theme_colors9.background) || '#FFFFFF',
            text: ((_theme_colors10 = theme.colors) === null || _theme_colors10 === void 0 ? void 0 : _theme_colors10.text) || '#292929'
        },
        typography: {
            fontFamily: (theme === null || theme === void 0 ? void 0 : (_theme_typography = theme.typography) === null || _theme_typography === void 0 ? void 0 : _theme_typography.fontFamily) || '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif',
            fontSize: (_theme_typography_fontSize = theme === null || theme === void 0 ? void 0 : (_theme_typography1 = theme.typography) === null || _theme_typography1 === void 0 ? void 0 : _theme_typography1.fontSize) !== null && _theme_typography_fontSize !== void 0 ? _theme_typography_fontSize : 16,
            h1: {
                fontSize: (_theme_typography_h1_fontSize = (_theme_typography2 = theme.typography) === null || _theme_typography2 === void 0 ? void 0 : (_theme_typography_h1 = _theme_typography2.h1) === null || _theme_typography_h1 === void 0 ? void 0 : _theme_typography_h1.fontSize) !== null && _theme_typography_h1_fontSize !== void 0 ? _theme_typography_h1_fontSize : 48,
                fontWeight: (_theme_typography_h1_fontWeight = (_theme_typography3 = theme.typography) === null || _theme_typography3 === void 0 ? void 0 : (_theme_typography_h11 = _theme_typography3.h1) === null || _theme_typography_h11 === void 0 ? void 0 : _theme_typography_h11.fontWeight) !== null && _theme_typography_h1_fontWeight !== void 0 ? _theme_typography_h1_fontWeight : 600,
                lineHeight: (_theme_typography_h1_lineHeight = (_theme_typography4 = theme.typography) === null || _theme_typography4 === void 0 ? void 0 : (_theme_typography_h12 = _theme_typography4.h1) === null || _theme_typography_h12 === void 0 ? void 0 : _theme_typography_h12.lineHeight) !== null && _theme_typography_h1_lineHeight !== void 0 ? _theme_typography_h1_lineHeight : '68px',
                textTransform: (_theme_typography_h1_textTransform = (_theme_typography5 = theme.typography) === null || _theme_typography5 === void 0 ? void 0 : (_theme_typography_h13 = _theme_typography5.h1) === null || _theme_typography_h13 === void 0 ? void 0 : _theme_typography_h13.textTransform) !== null && _theme_typography_h1_textTransform !== void 0 ? _theme_typography_h1_textTransform : 'none'
            },
            h2: {
                fontSize: (_theme_typography_h2_fontSize = (_theme_typography6 = theme.typography) === null || _theme_typography6 === void 0 ? void 0 : (_theme_typography_h2 = _theme_typography6.h2) === null || _theme_typography_h2 === void 0 ? void 0 : _theme_typography_h2.fontSize) !== null && _theme_typography_h2_fontSize !== void 0 ? _theme_typography_h2_fontSize : 34,
                fontWeight: (_theme_typography_h2_fontWeight = (_theme_typography7 = theme.typography) === null || _theme_typography7 === void 0 ? void 0 : (_theme_typography_h21 = _theme_typography7.h2) === null || _theme_typography_h21 === void 0 ? void 0 : _theme_typography_h21.fontWeight) !== null && _theme_typography_h2_fontWeight !== void 0 ? _theme_typography_h2_fontWeight : 640,
                lineHeight: (_theme_typography_h2_lineHeight = (_theme_typography8 = theme.typography) === null || _theme_typography8 === void 0 ? void 0 : (_theme_typography_h22 = _theme_typography8.h2) === null || _theme_typography_h22 === void 0 ? void 0 : _theme_typography_h22.lineHeight) !== null && _theme_typography_h2_lineHeight !== void 0 ? _theme_typography_h2_lineHeight : '40px',
                textTransform: (_theme_typography_h2_textTransform = (_theme_typography9 = theme.typography) === null || _theme_typography9 === void 0 ? void 0 : (_theme_typography_h23 = _theme_typography9.h2) === null || _theme_typography_h23 === void 0 ? void 0 : _theme_typography_h23.textTransform) !== null && _theme_typography_h2_textTransform !== void 0 ? _theme_typography_h2_textTransform : 'none'
            },
            h3: {
                fontSize: (_theme_typography_h3_fontSize = (_theme_typography10 = theme.typography) === null || _theme_typography10 === void 0 ? void 0 : (_theme_typography_h3 = _theme_typography10.h3) === null || _theme_typography_h3 === void 0 ? void 0 : _theme_typography_h3.fontSize) !== null && _theme_typography_h3_fontSize !== void 0 ? _theme_typography_h3_fontSize : 24,
                fontWeight: (_theme_typography_h3_fontWeight = (_theme_typography11 = theme.typography) === null || _theme_typography11 === void 0 ? void 0 : (_theme_typography_h31 = _theme_typography11.h3) === null || _theme_typography_h31 === void 0 ? void 0 : _theme_typography_h31.fontWeight) !== null && _theme_typography_h3_fontWeight !== void 0 ? _theme_typography_h3_fontWeight : 600,
                lineHeight: (_theme_typography_h3_lineHeight = (_theme_typography12 = theme.typography) === null || _theme_typography12 === void 0 ? void 0 : (_theme_typography_h32 = _theme_typography12.h3) === null || _theme_typography_h32 === void 0 ? void 0 : _theme_typography_h32.lineHeight) !== null && _theme_typography_h3_lineHeight !== void 0 ? _theme_typography_h3_lineHeight : '32px',
                textTransform: (_theme_typography_h3_textTransform = (_theme_typography13 = theme.typography) === null || _theme_typography13 === void 0 ? void 0 : (_theme_typography_h33 = _theme_typography13.h3) === null || _theme_typography_h33 === void 0 ? void 0 : _theme_typography_h33.textTransform) !== null && _theme_typography_h3_textTransform !== void 0 ? _theme_typography_h3_textTransform : 'none'
            },
            subtitle1: {
                fontSize: (_theme_typography_subtitle1_fontSize = (_theme_typography14 = theme.typography) === null || _theme_typography14 === void 0 ? void 0 : (_theme_typography_subtitle1 = _theme_typography14.subtitle1) === null || _theme_typography_subtitle1 === void 0 ? void 0 : _theme_typography_subtitle1.fontSize) !== null && _theme_typography_subtitle1_fontSize !== void 0 ? _theme_typography_subtitle1_fontSize : 20,
                fontWeight: (_theme_typography_subtitle1_fontWeight = (_theme_typography15 = theme.typography) === null || _theme_typography15 === void 0 ? void 0 : (_theme_typography_subtitle11 = _theme_typography15.subtitle1) === null || _theme_typography_subtitle11 === void 0 ? void 0 : _theme_typography_subtitle11.fontWeight) !== null && _theme_typography_subtitle1_fontWeight !== void 0 ? _theme_typography_subtitle1_fontWeight : 600,
                lineHeight: (_theme_typography_subtitle1_lineHeight = (_theme_typography16 = theme.typography) === null || _theme_typography16 === void 0 ? void 0 : (_theme_typography_subtitle12 = _theme_typography16.subtitle1) === null || _theme_typography_subtitle12 === void 0 ? void 0 : _theme_typography_subtitle12.lineHeight) !== null && _theme_typography_subtitle1_lineHeight !== void 0 ? _theme_typography_subtitle1_lineHeight : '24px',
                textTransform: (_theme_typography_subtitle1_textTransform = (_theme_typography17 = theme.typography) === null || _theme_typography17 === void 0 ? void 0 : (_theme_typography_subtitle13 = _theme_typography17.subtitle1) === null || _theme_typography_subtitle13 === void 0 ? void 0 : _theme_typography_subtitle13.textTransform) !== null && _theme_typography_subtitle1_textTransform !== void 0 ? _theme_typography_subtitle1_textTransform : 'none'
            },
            subtitle2: {
                fontSize: (_theme_typography_subtitle2_fontSize = (_theme_typography18 = theme.typography) === null || _theme_typography18 === void 0 ? void 0 : (_theme_typography_subtitle2 = _theme_typography18.subtitle2) === null || _theme_typography_subtitle2 === void 0 ? void 0 : _theme_typography_subtitle2.fontSize) !== null && _theme_typography_subtitle2_fontSize !== void 0 ? _theme_typography_subtitle2_fontSize : 18,
                fontWeight: (_theme_typography_subtitle2_fontWeight = (_theme_typography19 = theme.typography) === null || _theme_typography19 === void 0 ? void 0 : (_theme_typography_subtitle21 = _theme_typography19.subtitle2) === null || _theme_typography_subtitle21 === void 0 ? void 0 : _theme_typography_subtitle21.fontWeight) !== null && _theme_typography_subtitle2_fontWeight !== void 0 ? _theme_typography_subtitle2_fontWeight : 600,
                lineHeight: (_theme_typography_subtitle2_lineHeight = (_theme_typography20 = theme.typography) === null || _theme_typography20 === void 0 ? void 0 : (_theme_typography_subtitle22 = _theme_typography20.subtitle2) === null || _theme_typography_subtitle22 === void 0 ? void 0 : _theme_typography_subtitle22.lineHeight) !== null && _theme_typography_subtitle2_lineHeight !== void 0 ? _theme_typography_subtitle2_lineHeight : '24px',
                textTransform: (_theme_typography_subtitle2_textTransform = (_theme_typography21 = theme.typography) === null || _theme_typography21 === void 0 ? void 0 : (_theme_typography_subtitle23 = _theme_typography21.subtitle2) === null || _theme_typography_subtitle23 === void 0 ? void 0 : _theme_typography_subtitle23.textTransform) !== null && _theme_typography_subtitle2_textTransform !== void 0 ? _theme_typography_subtitle2_textTransform : 'none'
            },
            body1: {
                fontSize: (_theme_typography_body1_fontSize = (_theme_typography22 = theme.typography) === null || _theme_typography22 === void 0 ? void 0 : (_theme_typography_body1 = _theme_typography22.body1) === null || _theme_typography_body1 === void 0 ? void 0 : _theme_typography_body1.fontSize) !== null && _theme_typography_body1_fontSize !== void 0 ? _theme_typography_body1_fontSize : 16,
                fontWeight: (_theme_typography_body1_fontWeight = (_theme_typography23 = theme.typography) === null || _theme_typography23 === void 0 ? void 0 : (_theme_typography_body11 = _theme_typography23.body1) === null || _theme_typography_body11 === void 0 ? void 0 : _theme_typography_body11.fontWeight) !== null && _theme_typography_body1_fontWeight !== void 0 ? _theme_typography_body1_fontWeight : 500,
                lineHeight: (_theme_typography_body1_lineHeight = (_theme_typography24 = theme.typography) === null || _theme_typography24 === void 0 ? void 0 : (_theme_typography_body12 = _theme_typography24.body1) === null || _theme_typography_body12 === void 0 ? void 0 : _theme_typography_body12.lineHeight) !== null && _theme_typography_body1_lineHeight !== void 0 ? _theme_typography_body1_lineHeight : '24px'
            },
            body2: {
                fontSize: (_theme_typography_body2_fontSize = (_theme_typography25 = theme.typography) === null || _theme_typography25 === void 0 ? void 0 : (_theme_typography_body2 = _theme_typography25.body2) === null || _theme_typography_body2 === void 0 ? void 0 : _theme_typography_body2.fontSize) !== null && _theme_typography_body2_fontSize !== void 0 ? _theme_typography_body2_fontSize : 14,
                fontWeight: (_theme_typography_body2_fontWeight = (_theme_typography26 = theme.typography) === null || _theme_typography26 === void 0 ? void 0 : (_theme_typography_body21 = _theme_typography26.body2) === null || _theme_typography_body21 === void 0 ? void 0 : _theme_typography_body21.fontWeight) !== null && _theme_typography_body2_fontWeight !== void 0 ? _theme_typography_body2_fontWeight : 400,
                lineHeight: (_theme_typography_body2_lineHeight = (_theme_typography27 = theme.typography) === null || _theme_typography27 === void 0 ? void 0 : (_theme_typography_body22 = _theme_typography27.body2) === null || _theme_typography_body22 === void 0 ? void 0 : _theme_typography_body22.lineHeight) !== null && _theme_typography_body2_lineHeight !== void 0 ? _theme_typography_body2_lineHeight : '20px'
            }
        },
        components: {
            invoiceStatusChip: {
                icon: ((_theme_components = theme.components) === null || _theme_components === void 0 ? void 0 : (_theme_components_invoiceStatusChip = _theme_components.invoiceStatusChip) === null || _theme_components_invoiceStatusChip === void 0 ? void 0 : _theme_components_invoiceStatusChip.icon) || false,
                size: ((_theme_components1 = theme.components) === null || _theme_components1 === void 0 ? void 0 : (_theme_components_invoiceStatusChip1 = _theme_components1.invoiceStatusChip) === null || _theme_components_invoiceStatusChip1 === void 0 ? void 0 : _theme_components_invoiceStatusChip1.size) || 'small',
                variant: ((_theme_components2 = theme.components) === null || _theme_components2 === void 0 ? void 0 : (_theme_components_invoiceStatusChip2 = _theme_components2.invoiceStatusChip) === null || _theme_components_invoiceStatusChip2 === void 0 ? void 0 : _theme_components_invoiceStatusChip2.variant) || 'filled'
            },
            payableStatusChip: {
                icon: ((_theme_components3 = theme.components) === null || _theme_components3 === void 0 ? void 0 : (_theme_components_payableStatusChip = _theme_components3.payableStatusChip) === null || _theme_components_payableStatusChip === void 0 ? void 0 : _theme_components_payableStatusChip.icon) || false,
                size: ((_theme_components4 = theme.components) === null || _theme_components4 === void 0 ? void 0 : (_theme_components_payableStatusChip1 = _theme_components4.payableStatusChip) === null || _theme_components_payableStatusChip1 === void 0 ? void 0 : _theme_components_payableStatusChip1.size) || 'small',
                variant: ((_theme_components5 = theme.components) === null || _theme_components5 === void 0 ? void 0 : (_theme_components_payableStatusChip2 = _theme_components5.payableStatusChip) === null || _theme_components_payableStatusChip2 === void 0 ? void 0 : _theme_components_payableStatusChip2.variant) || 'filled'
            },
            approvalRequestStatusChip: {
                icon: ((_theme_components6 = theme.components) === null || _theme_components6 === void 0 ? void 0 : (_theme_components_approvalRequestStatusChip = _theme_components6.approvalRequestStatusChip) === null || _theme_components_approvalRequestStatusChip === void 0 ? void 0 : _theme_components_approvalRequestStatusChip.icon) || false,
                size: ((_theme_components7 = theme.components) === null || _theme_components7 === void 0 ? void 0 : (_theme_components_approvalRequestStatusChip1 = _theme_components7.approvalRequestStatusChip) === null || _theme_components_approvalRequestStatusChip1 === void 0 ? void 0 : _theme_components_approvalRequestStatusChip1.size) || 'small',
                variant: ((_theme_components8 = theme.components) === null || _theme_components8 === void 0 ? void 0 : (_theme_components_approvalRequestStatusChip2 = _theme_components8.approvalRequestStatusChip) === null || _theme_components_approvalRequestStatusChip2 === void 0 ? void 0 : _theme_components_approvalRequestStatusChip2.variant) || 'filled'
            },
            invoiceRecurrenceStatusChip: {
                icon: ((_theme_components9 = theme.components) === null || _theme_components9 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceStatusChip = _theme_components9.invoiceRecurrenceStatusChip) === null || _theme_components_invoiceRecurrenceStatusChip === void 0 ? void 0 : _theme_components_invoiceRecurrenceStatusChip.icon) || false,
                size: ((_theme_components10 = theme.components) === null || _theme_components10 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceStatusChip1 = _theme_components10.invoiceRecurrenceStatusChip) === null || _theme_components_invoiceRecurrenceStatusChip1 === void 0 ? void 0 : _theme_components_invoiceRecurrenceStatusChip1.size) || 'small',
                variant: ((_theme_components11 = theme.components) === null || _theme_components11 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceStatusChip2 = _theme_components11.invoiceRecurrenceStatusChip) === null || _theme_components_invoiceRecurrenceStatusChip2 === void 0 ? void 0 : _theme_components_invoiceRecurrenceStatusChip2.variant) || 'filled'
            },
            invoiceRecurrenceIterationStatusChip: {
                icon: ((_theme_components12 = theme.components) === null || _theme_components12 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceIterationStatusChip = _theme_components12.invoiceRecurrenceIterationStatusChip) === null || _theme_components_invoiceRecurrenceIterationStatusChip === void 0 ? void 0 : _theme_components_invoiceRecurrenceIterationStatusChip.icon) || false,
                size: ((_theme_components13 = theme.components) === null || _theme_components13 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceIterationStatusChip1 = _theme_components13.invoiceRecurrenceIterationStatusChip) === null || _theme_components_invoiceRecurrenceIterationStatusChip1 === void 0 ? void 0 : _theme_components_invoiceRecurrenceIterationStatusChip1.size) || 'small',
                variant: ((_theme_components14 = theme.components) === null || _theme_components14 === void 0 ? void 0 : (_theme_components_invoiceRecurrenceIterationStatusChip2 = _theme_components14.invoiceRecurrenceIterationStatusChip) === null || _theme_components_invoiceRecurrenceIterationStatusChip2 === void 0 ? void 0 : _theme_components_invoiceRecurrenceIterationStatusChip2.variant) || 'filled'
            },
            counterpartStatusChip: {
                size: ((_theme_components15 = theme.components) === null || _theme_components15 === void 0 ? void 0 : (_theme_components_counterpartStatusChip = _theme_components15.counterpartStatusChip) === null || _theme_components_counterpartStatusChip === void 0 ? void 0 : _theme_components_counterpartStatusChip.size) || 'small',
                variant: ((_theme_components16 = theme.components) === null || _theme_components16 === void 0 ? void 0 : (_theme_components_counterpartStatusChip1 = _theme_components16.counterpartStatusChip) === null || _theme_components_counterpartStatusChip1 === void 0 ? void 0 : _theme_components_counterpartStatusChip1.variant) || 'filled'
            },
            approvalStatusChip: {
                icon: ((_theme_components17 = theme.components) === null || _theme_components17 === void 0 ? void 0 : (_theme_components_approvalStatusChip = _theme_components17.approvalStatusChip) === null || _theme_components_approvalStatusChip === void 0 ? void 0 : _theme_components_approvalStatusChip.icon) || false,
                size: ((_theme_components18 = theme.components) === null || _theme_components18 === void 0 ? void 0 : (_theme_components_approvalStatusChip1 = _theme_components18.approvalStatusChip) === null || _theme_components_approvalStatusChip1 === void 0 ? void 0 : _theme_components_approvalStatusChip1.size) || 'small',
                variant: ((_theme_components19 = theme.components) === null || _theme_components19 === void 0 ? void 0 : (_theme_components_approvalStatusChip2 = _theme_components19.approvalStatusChip) === null || _theme_components_approvalStatusChip2 === void 0 ? void 0 : _theme_components_approvalStatusChip2.variant) || 'filled'
            }
        }
    };
};

const getPrimaryColors = (mainColor, foregroundColor)=>{
    return {
        dark: chroma__default.default(mainColor).darken(0.3).saturate(0.2).hex(),
        main: mainColor,
        light: chroma__default.default.mix(mainColor, '#ffffff', 0.94).hex(),
        // Improved progression using mix/desaturate/darken approach
        10: chroma__default.default(mainColor).darken(2.2).saturate(0.5).hex(),
        20: chroma__default.default(mainColor).darken(1.8).saturate(0.3).hex(),
        25: chroma__default.default(mainColor).darken(1.4).saturate(0.2).hex(),
        30: chroma__default.default(mainColor).darken(1.0).saturate(0.1).hex(),
        40: chroma__default.default(mainColor).darken(0.5).hex(),
        50: mainColor,
        55: chroma__default.default(mainColor).brighten(0.3).desaturate(0.1).hex(),
        60: chroma__default.default.mix(mainColor, '#ffffff', 0.25).desaturate(0.1).hex(),
        65: chroma__default.default.mix(mainColor, '#ffffff', 0.4).desaturate(0.2).hex(),
        75: chroma__default.default.mix(mainColor, '#ffffff', 0.6).desaturate(0.3).hex(),
        80: chroma__default.default.mix(mainColor, '#ffffff', 0.7).desaturate(0.4).hex(),
        85: chroma__default.default.mix(mainColor, '#ffffff', 0.8).desaturate(0.5).hex(),
        90: chroma__default.default.mix(mainColor, '#ffffff', 0.85).desaturate(0.3).hex(),
        95: chroma__default.default.mix(mainColor, '#ffffff', 0.9).desaturate(0.4).hex(),
        100: chroma__default.default.mix(mainColor, '#ffffff', 0.95).desaturate(0.5).hex(),
        foreground: {
            main: foregroundColor
        }
    };
};

const getSecondaryColors = (mainColor)=>{
    return {
        main: mainColor,
        dark: chroma__default.default(mainColor).darken(1.2).saturate(0.2).hex()
    };
};

const getNeutralColors = (mainColor)=>{
    return {
        '10': chroma__default.default(mainColor).darken(2.5).hex(),
        '30': chroma__default.default(mainColor).darken(1.5).hex(),
        '50': mainColor,
        '70': chroma__default.default(mainColor).brighten(0.7).hex(),
        '80': chroma__default.default(mainColor).brighten(2.3).hex(),
        '90': chroma__default.default(mainColor).brighten(2.68).hex(),
        '95': chroma__default.default(mainColor).brighten(2.84).hex()
    };
};

const getSeverityColors = (mainColor)=>({
        main: mainColor,
        light: chroma__default.default(mainColor).alpha(0.25).hex(),
        dark: chroma__default.default(mainColor).alpha(1).hex()
    });

const getTextColors = (baseColor)=>{
    const primaryAlpha = chroma__default.default(baseColor).alpha();
    return {
        primary: baseColor,
        secondary: chroma__default.default(baseColor).alpha(primaryAlpha * 0.81).css(),
        disabled: chroma__default.default(baseColor).alpha(primaryAlpha * 0.62).css()
    };
};

const getFormControlStyles = (palette, theme, filterControlWidth)=>{
    const moniteTheme = getTheme$1(theme);
    return {
        styleOverrides: {
            root: {
                '&[hidden]': {
                    display: 'none',
                    visibility: 'hidden',
                    opacity: 0
                },
                '& .MuiInputBase-root': {
                    minHeight: '48px',
                    backgroundColor: palette.neutral['95'],
                    borderRadius: moniteTheme.borderRadius * 2,
                    '& > .MuiOutlinedInput-notchedOutline': {
                        top: 0,
                        '> legend': {
                            display: 'none'
                        }
                    },
                    '&:not(.Mui-disabled):hover fieldset.MuiOutlinedInput-notchedOutline': {
                        borderColor: 'transparent'
                    },
                    '.MuiSelect-icon': {
                        color: palette.text.primary
                    },
                    '&.Mui-focused': {
                        backgroundColor: palette.neutral['80'],
                        borderColor: 'transparent',
                        boxShadow: `0 0 0 4px ${chroma__default.default(palette.primary.main).alpha(0.24).hex()}`
                    },
                    '&.Mui-error': {
                        border: `1px solid ${palette.error.main}`,
                        boxShadow: `0 0 0 4px ${chroma__default.default(palette.error.main).alpha(0.24).hex()}`
                    },
                    '&.MuiInputBase-adornedEnd': {
                        paddingRight: 8
                    }
                },
                'label+.MuiInputBase-root': {
                    marginTop: 0
                },
                '&:hover': {
                    '&.MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                        backgroundColor: palette.neutral['90'],
                        border: `1px solid ${palette.primary['40']}`
                    },
                    '& .MuiFormLabel-root.MuiFormLabel-filled': {
                        '+ .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                            backgroundColor: 'transparent',
                            border: `1px solid ${palette.primary['40']}`
                        }
                    }
                },
                '&:not(.Monite-FilterControl):not(.Monite-Selector):hover': {
                    '& .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                        border: `1px solid ${palette.primary['40']}`
                    },
                    '& .MuiInputAdornment-root .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                        borderColor: 'transparent'
                    },
                    '& .MuiFormLabel-root': {
                        '+ .MuiInputBase-root:not(.Mui-focused)': {
                            backgroundColor: 'transparent',
                            border: `1px solid ${palette.primary['40']}`
                        }
                    }
                },
                '&:not(.Monite-Selector):not(.Monite-FilterControl) .MuiFormLabel-root': {
                    fontSize: '14px',
                    color: ' rgba(112, 112, 112, 1)',
                    backgroundColor: 'transparent',
                    '&:hover, &.Mui-focused': {
                        backgroundColor: 'transparent',
                        '& > .MuiOutlinedInput-notchedOutline': {
                            backgroundColor: 'transparent'
                        }
                    },
                    '&.Mui-required > .MuiFormLabel-asterisk': {
                        display: 'none'
                    },
                    '&.Mui-required::after': {
                        content: '"●"',
                        position: 'relative',
                        bottom: '2px',
                        left: '4px',
                        color: ' rgba(255, 71, 93, 1)'
                    },
                    '+ .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                        backgroundColor: 'transparent',
                        border: `1px solid ${palette.neutral['80']}`
                    },
                    '+ .MuiInputBase-root.Mui-focused': {
                        backgroundColor: 'transparent',
                        border: `1px solid ${palette.primary.main}`
                    },
                    '&:not(.Monite-Selector) > .MuiInputLabel-root > .MuiFormLabel-asterisk': {
                        display: 'none'
                    },
                    '& .MuiOutlinedInput-notchedOutline': {
                        top: 0
                    },
                    // Hide border cutout
                    '& .MuiOutlinedInput-notchedOutline legend': {
                        display: 'none'
                    },
                    '& .MuiOutlinedInput-root': {
                        left: 0,
                        top: 0,
                        '&:hover .MuiOutlinedInput-notchedOutline': {
                            borderColor: 'transparent'
                        }
                    },
                    // Monite Filter Control styles
                    '&.Monite-FilterControl': {
                        height: '40px',
                        minHeight: '40px',
                        maxHeight: '40px',
                        maxWidth: filterControlWidth,
                        width: '100%',
                        '& .MuiInputBase-root': {
                            marginTop: 0,
                            height: '40px',
                            minHeight: '40px',
                            maxHeight: '40px',
                            borderRadius: moniteTheme.borderRadius * 2,
                            color: palette.text.primary,
                            fontWeight: 500,
                            backgroundColor: palette.neutral['95'],
                            padding: '0 6px',
                            '&.Mui-focused': {
                                backgroundColor: chroma__default.default(palette.primary.main).alpha(0.05).hex()
                            }
                        },
                        '&:hover': {
                            '& .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                                border: 'none'
                            },
                            '.MuiFormLabel-root.MuiFormLabel-filled': {
                                opacity: 0,
                                '+ .MuiInputBase-root:not(.Mui-disabled):not(.Mui-focused)': {
                                    backgroundColor: chroma__default.default(palette.primary.main).alpha(0.12).hex()
                                }
                            }
                        },
                        '& .MuiSelect-select': {
                            fontSize: '14px',
                            '&:focus': {
                                backgroundColor: 'transparent'
                            }
                        },
                        '& .MuiFormLabel-root': {
                            position: 'absolute',
                            zIndex: 1,
                            left: '45px',
                            top: '10px',
                            fontSize: '14px',
                            maxWidth: 'calc(100% - 52px)',
                            textOverflow: 'ellipsis',
                            pointerEvents: 'none',
                            '&.MuiFormLabel-filled': {
                                opacity: 0,
                                '+ .MuiInputBase-root': {
                                    color: palette.primary.main,
                                    backgroundColor: chroma__default.default(palette.primary.main).alpha(0.05).hex(),
                                    '.MuiSelect-icon, .MuiSvgIcon-root, .MuiSvgIcon-root>*': {
                                        color: palette.primary.main
                                    }
                                }
                            }
                        },
                        '& .MuiInputLabel-root': {
                            fontWeight: 500,
                            color: palette.text.secondary
                        },
                        '& .MuiIconButton-root': {
                            marginRight: '-6px'
                        },
                        '& .MuiInputAdornment-positionEnd .MuiSvgIcon-root, & .MuiIconButton-root .MuiSvgIcon-root': {
                            width: '20px',
                            height: '20px',
                            '> *': {
                                color: palette.text.primary
                            }
                        },
                        '&.Monite-DateFilterControl': {
                            'input::placeholder': {
                                opacity: 0
                            }
                        },
                        '& .MuiInputBase-input:not(.MuiSelect-select)': {
                            padding: '0 0 0 8px',
                            fontSize: '14px',
                            textOverflow: 'ellipsis',
                            '& + .MuiInputAdornment-root': {
                                marginLeft: 0
                            }
                        }
                    },
                    '&.Monite-SearchField': {
                        maxWidth: '400px',
                        width: '100%',
                        '& label': {
                            color: 'secondary.main'
                        }
                    }
                }
            }
        }
    };
};

function _define_property$3p(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3n(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3p(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2b(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2b(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2b(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getErrorColors = (mainColor)=>_object_spread_props$2b(_object_spread$3n({}, getSeverityColors(mainColor)), {
        '10': '#D42623',
        '25': '#DF5C5A',
        '50': '#EA9391',
        '75': '#F4C9C8',
        '100': '#FCF1F1'
    });

function _define_property$3o(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3m(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3o(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2a(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2a(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2a(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getSuccessColors = (mainColor)=>_object_spread_props$2a(_object_spread$3m({}, getSeverityColors(mainColor)), {
        10: '#12705f',
        30: '#0dac8e',
        50: '#1fbca0',
        60: '#4dd6bd',
        80: '#ace5da',
        90: '#ccf0e9',
        95: '#eefbf9'
    });

function _define_property$3n(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3l(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3n(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$29(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$29(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$29(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getWarningColors = (mainColor)=>_object_spread_props$29(_object_spread$3l({}, getSeverityColors(mainColor)), {
        '10': '#996600',
        '30': '#cc8000',
        '50': '#ff9900',
        '60': '#ffb333',
        '80': '#ffd999',
        '90': '#ffe6cc',
        '95': '#fff3ee'
    });

/* eslint lingui/no-unlocalized-strings: 0 */ function _define_property$3m(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3k(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3m(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$28(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$28(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$28(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
// Replaces color constant like 'divider', 'primary.main', 'neutral.80' with actual color value
function renderColor(strVal, palette) {
    if (strVal.includes('.')) {
        let temporaryValue = palette;
        strVal.split('.').forEach((key)=>{
            temporaryValue = temporaryValue && temporaryValue[key];
        });
        // noinspection SuspiciousTypeOfGuard
        if (temporaryValue && typeof temporaryValue === 'string') return temporaryValue;
    } else if (typeof palette[strVal] === 'string') return palette[strVal];
    return strVal;
}
const colorProps = [
    'color',
    'backgroundColor',
    'bgcolor',
    'borderColor',
    'borderRightColor',
    'borderLeftColor',
    'borderTopColor',
    'borderBottomColor',
    'fill',
    '--DataGrid-rowBorderColor'
];
// Replaces color constants like 'divider', 'primary.main', 'neutral.80' with actual color values
function renderColors(components, palette) {
    const output = Array.isArray(components) ? [] : {};
    Object.keys(components).forEach((key)=>{
        const prop = key;
        if (!components.hasOwnProperty(prop)) return;
        const propValue = components[prop];
        // noinspection SuspiciousTypeOfGuard
        if (typeof propValue === 'string' && colorProps.includes(key)) {
            output[prop] = renderColor(propValue, palette);
        } else if (utils.isPlainObject(propValue) || Array.isArray(propValue)) {
            output[prop] = renderColors(propValue, palette);
        } else {
            output[prop] = propValue;
        }
    });
    return output;
}
const getTheme = (theme)=>{
    var _moniteTheme_typography_body1, _moniteTheme_typography_body11, _moniteTheme_typography_body12, _moniteTheme_typography_body2, _moniteTheme_typography_body21, _moniteTheme_typography_body22;
    const moniteTheme = getTheme$1(theme);
    const statusBackgroundColors = {
        draft: '#000',
        new: '#3737FF',
        approve_in_progress: '#3737FF',
        paid: '#007F33',
        waiting_to_be_paid: '#3737FF',
        rejected: '#CC394B',
        partially_paid: '#9033D9',
        canceled: '#E75300',
        all: '#F4F4FE'
    };
    const palette = {
        primary: getPrimaryColors(moniteTheme.colors.primary, moniteTheme.colors.primaryForeground),
        secondary: getSecondaryColors(moniteTheme.colors.secondary),
        neutral: getNeutralColors(moniteTheme.colors.neutral),
        info: getSeverityColors(moniteTheme.colors.info),
        success: getSuccessColors(moniteTheme.colors.success),
        warning: getWarningColors(moniteTheme.colors.warning),
        error: getErrorColors(moniteTheme.colors.error),
        background: {
            default: moniteTheme.colors.background,
            paper: '#ffffff'
        },
        text: getTextColors(moniteTheme.colors.text),
        status: statusBackgroundColors,
        divider: getNeutralColors(moniteTheme.colors.neutral)['80']
    };
    const statusColors = {
        black: {
            color: '#292929',
            backgroundColor: '#F2F2F2'
        },
        blue: {
            color: '#3737FF',
            backgroundColor: '#F4F4FE'
        },
        violet: {
            color: '#A06DC8',
            backgroundColor: '#FBF1FC'
        },
        green: {
            color: '#0DAA8E',
            backgroundColor: '#EEFBF9'
        },
        orange: {
            color: '#E27E46',
            backgroundColor: '#FFF5EB'
        },
        red: {
            color: '#CC394B',
            backgroundColor: '#FFE0E4'
        }
    };
    // Array of colours for counterpart 'logos'. A random color will be used
    // from the array. See: calculateColorIndex
    const counterpartColors = [
        'rgba(0,0,255,0.05)',
        'rgba(255,0,32,0.05)',
        'rgba(0,255,220,0.05)',
        'rgba(225,1,251,0.05)',
        'rgba(255,123,0,0.05)'
    ];
    const defaultMoniteTypography = {
        fontFamily: moniteTheme.typography.fontFamily,
        fontSize: moniteTheme.typography.fontSize,
        fontWeightMedium: 400,
        fontWeightBold: 500,
        h1: {
            fontSize: moniteTheme.typography.h1.fontSize,
            fontWeight: moniteTheme.typography.h1.fontWeight,
            lineHeight: moniteTheme.typography.h1.lineHeight,
            textTransform: moniteTheme.typography.h1.textTransform,
            color: palette.text.primary
        },
        h2: {
            fontSize: moniteTheme.typography.h2.fontSize,
            fontWeight: moniteTheme.typography.h2.fontWeight,
            lineHeight: moniteTheme.typography.h2.lineHeight,
            textTransform: moniteTheme.typography.h2.textTransform,
            color: palette.text.primary
        },
        h3: {
            fontSize: moniteTheme.typography.h3.fontSize,
            fontWeight: moniteTheme.typography.h3.fontWeight,
            lineHeight: moniteTheme.typography.h3.lineHeight,
            textTransform: moniteTheme.typography.h3.textTransform,
            color: palette.text.primary
        },
        subtitle1: {
            fontSize: moniteTheme.typography.subtitle1.fontSize,
            fontWeight: moniteTheme.typography.subtitle1.fontWeight,
            lineHeight: moniteTheme.typography.subtitle1.lineHeight,
            textTransform: moniteTheme.typography.subtitle1.textTransform
        },
        subtitle2: {
            fontSize: moniteTheme.typography.subtitle2.fontSize,
            fontWeight: moniteTheme.typography.subtitle2.fontWeight,
            lineHeight: moniteTheme.typography.subtitle2.lineHeight,
            textTransform: moniteTheme.typography.subtitle2.textTransform
        },
        body1: {
            fontSize: (_moniteTheme_typography_body1 = moniteTheme.typography.body1) === null || _moniteTheme_typography_body1 === void 0 ? void 0 : _moniteTheme_typography_body1.fontSize,
            fontWeight: (_moniteTheme_typography_body11 = moniteTheme.typography.body1) === null || _moniteTheme_typography_body11 === void 0 ? void 0 : _moniteTheme_typography_body11.fontWeight,
            lineHeight: (_moniteTheme_typography_body12 = moniteTheme.typography.body1) === null || _moniteTheme_typography_body12 === void 0 ? void 0 : _moniteTheme_typography_body12.lineHeight
        },
        body2: {
            fontSize: (_moniteTheme_typography_body2 = moniteTheme.typography.body2) === null || _moniteTheme_typography_body2 === void 0 ? void 0 : _moniteTheme_typography_body2.fontSize,
            fontWeight: (_moniteTheme_typography_body21 = moniteTheme.typography.body2) === null || _moniteTheme_typography_body21 === void 0 ? void 0 : _moniteTheme_typography_body21.fontWeight,
            lineHeight: (_moniteTheme_typography_body22 = moniteTheme.typography.body2) === null || _moniteTheme_typography_body22 === void 0 ? void 0 : _moniteTheme_typography_body22.lineHeight,
            color: 'rgba(0, 0, 0, 0.56)'
        },
        caption: {
            fontSize: '1rem',
            fontWeight: 500
        },
        overline: {
            fontSize: '1.5rem',
            lineHeight: 1
        },
        button: {
            textTransform: 'none',
            fontWeight: 500
        }
    };
    const typography = Object.assign({}, defaultMoniteTypography, {});
    const filterControlWidth = '160px';
    const defaultMoniteComponents = {
        MuiAlert: {
            styleOverrides: {
                root: {
                    borderRadius: '.5em',
                    '&.MuiAlert-colorInfo': {
                        backgroundColor: chroma__default.default(palette.info.main).alpha(0.05).hex(),
                        '.MuiAlert-icon, .MuiAlert-message': {
                            color: palette.info.main
                        }
                    },
                    '&.MuiAlert-colorSuccess': {
                        backgroundColor: chroma__default.default(palette.success.main).alpha(0.05).hex(),
                        '.MuiAlert-icon, .MuiAlert-message': {
                            color: palette.success.main
                        }
                    },
                    '&.MuiAlert-colorWarning': {
                        backgroundColor: chroma__default.default(palette.warning.main).alpha(0.05).hex(),
                        '.MuiAlert-icon, .MuiAlert-message': {
                            color: palette.warning.main
                        }
                    },
                    '&.MuiAlert-colorError': {
                        backgroundColor: chroma__default.default(palette.error.main).alpha(0.05).hex(),
                        '.MuiAlert-icon, .MuiAlert-message': {
                            color: palette.error.main
                        }
                    }
                }
            }
        },
        MuiTypography: {
            styleOverrides: {
                root: {
                    '&.Monite-SummaryCard-StatusTypography': {
                        fontSize: 14
                    },
                    '&.Monite-SummaryCard-AmountTypography': {
                        fontSize: 20,
                        marginTop: 4
                    }
                }
            }
        },
        MuiFormLabel: {
            styleOverrides: {
                root: {
                    '&.Mui-disabled': {
                        color: 'black'
                    }
                }
            }
        },
        MuiInputLabel: {
            defaultProps: {
                shrink: true
            },
            styleOverrides: {
                root: {
                    fontSize: '14px',
                    transform: 'none',
                    position: 'static',
                    color: 'black',
                    minHeight: '28px',
                    '&.Mui-disabled': {
                        color: 'black'
                    }
                },
                asterisk: {
                    color: statusColors.red.color,
                    transform: 'scale(2) translate(6px, 2px)',
                    display: 'inline-block',
                    width: '20px'
                }
            }
        },
        MuiInputBase: {
            styleOverrides: {
                root: {
                    fontWeight: 400,
                    borderRadius: moniteTheme.borderRadius * 2.67,
                    minHeight: '40px',
                    border: '1px solid transparent',
                    '&:before, &:after': {
                        display: 'none',
                        content: 'none',
                        visibility: 'hidden'
                    },
                    '& .MuiInputBase-input': {
                        height: '40px',
                        lineHeight: '40px',
                        padding: '0 14px',
                        boxSizing: 'border-box'
                    },
                    '& .MuiInputBase-inputAdornedStart': {
                        display: 'flex',
                        alignItems: 'center'
                    }
                }
            }
        },
        MuiOutlinedInput: {
            styleOverrides: {
                // Editor borders
                notchedOutline: {
                    borderColor: 'neutral.80'
                },
                root: {
                    '&.Mui-disabled .MuiOutlinedInput-notchedOutline, .MuiOutlinedInput-notchedOutline': {
                        borderColor: 'neutral.80'
                    }
                }
            }
        },
        MuiFormControl: getFormControlStyles(palette, theme, filterControlWidth),
        MuiSelect: {
            styleOverrides: {
                root: {
                    '&.Monite-NakedField': {
                        '& .MuiSelect-select': {
                            paddingLeft: '0'
                        },
                        '& .MuiOutlinedInput-notchedOutline': {
                            borderStyle: 'none'
                        }
                    },
                    '&.Monite-RecipientSelector': {
                        '& .MuiChip-root': {
                            backgroundColor: 'transparent',
                            borderColor: 'divider',
                            borderWidth: '1px',
                            borderStyle: 'solid',
                            padding: '7px 8px',
                            '& .MuiChip-label': {
                                color: 'text.primary'
                            }
                        },
                        '& .MuiSelect-icon': {
                            backgroundColor: 'primary.80',
                            borderRadius: moniteTheme.borderRadius * 2.67,
                            width: '32px',
                            height: '32px',
                            transform: 'translate(7px, -2px)',
                            path: {
                                fill: 'primary.main',
                                transform: 'scale(0.6) translate(8px, 8px)'
                            }
                        }
                    }
                }
            }
        },
        MuiStack: {
            styleOverrides: {
                root: {
                    '&.Monite-Filters': {
                        backgroundColor: moniteTheme.colors.background,
                        padding: moniteTheme.spacing * 1.8,
                        marginBottom: 0,
                        '& > *': {
                            flexBasis: 'fit-content',
                            flexGrow: 1
                        },
                        '& .Monite-Filters-Group': {
                            marginLeft: '16px'
                        }
                    }
                }
            }
        },
        MuiFormControlLabel: {
            styleOverrides: {
                root: {
                    // Align checkbox with the label next to if the label occupies multiple lines
                    '&.MuiFormControlLabel-labelPlacementEnd': {
                        alignItems: 'flex-start',
                        '.MuiFormControlLabel-label': {
                            padding: '9px 0'
                        }
                    },
                    '&.Monite-FilterControl': {
                        marginLeft: 0,
                        marginRight: 0,
                        alignItems: 'center',
                        width: 'auto',
                        '& .MuiTypography-root': {
                            fontSize: '14px',
                            lineHeight: '20px'
                        }
                    }
                },
                label: {
                    fontWeight: 400,
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            }
        },
        MuiAutocomplete: {
            styleOverrides: {
                root: {
                    '& > .MuiFormControl-root > .MuiInputBase-root': {
                        paddingTop: 0,
                        paddingBottom: 0
                    },
                    '& .MuiInput-root .MuiInput-input, & .MuiInput-root.MuiInputBase-sizeSmall': {
                        padding: '0 14px'
                    },
                    '& > .Monite-Selector': {
                        '& > .MuiInputBase-root': {
                            border: '1px solid transparent',
                            '&:hover': {
                                '&:not(.Mui-disabled):not(.Mui-focused)': {
                                    boxShadow: `0 0 0 4px ${chroma__default.default(palette.primary.main).alpha(0.24).hex()}`
                                }
                            },
                            '& > .MuiInputAdornment-root': {
                                '&.MuiInputAdornment-positionStart': {
                                    marginRight: '16px'
                                },
                                '&.MuiInputAdornment-positionEnd': {
                                    marginLeft: '0',
                                    '& + input:not(:placeholder-shown)': {
                                        opacity: 0
                                    },
                                    '& + input::placeholder': {
                                        color: 'rgba(184, 184, 184, 1)'
                                    }
                                }
                            },
                            '&.MuiInputBase-adornedStart.MuiInputBase-formControl': {
                                padding: '16px',
                                height: '70px',
                                lineHeight: '70px',
                                backgroundColor: 'transparent',
                                '&.Mui-focused > .MuiOutlinedInput-notchedOutline': {
                                    borderColor: 'transparent'
                                }
                            },
                            '&:hover > .MuiOutlinedInput-notchedOutline': {
                                borderColor: '#dedede'
                            },
                            '& > .MuiOutlinedInput-notchedOutline': {
                                top: 0,
                                '> legend': {
                                    display: 'none'
                                }
                            }
                        },
                        '& > .MuiFormLabel-root': {
                            fontSize: '1.25rem',
                            paddingBottom: '1rem',
                            '& > .MuiInputLabel-asterisk': {
                                display: 'none'
                            }
                        },
                        '&.isSimplified': {
                            marginBottom: '2rem',
                            background: 'transparent',
                            '& > .MuiInputBase-root': {
                                paddingRight: '1rem'
                            },
                            '& > .MuiInputLabel-root': {
                                fontSize: '14px',
                                color: 'rgba(112, 112, 112, 1)',
                                paddingBottom: '0',
                                '&::after': {
                                    content: '"●"',
                                    position: 'relative',
                                    bottom: '2px',
                                    left: '4px',
                                    color: 'rgba(255, 71, 93, 1)'
                                }
                            },
                            '& > .MuiInputLabel-root > .MuiFormLabel-asterisk': {
                                display: 'none'
                            }
                        }
                    },
                    '& > .Item-Selector > .MuiInputBase-root.MuiInputBase-formControl.MuiAutocomplete-inputRoot': {
                        paddingRight: '1em',
                        '&.MuiInputBase-adornedStart.MuiInputBase-formControl': {
                            padding: '8px 12px',
                            height: '40px',
                            lineHeight: '40px'
                        }
                    },
                    '&.Monite-FilterControl': {
                        height: '40px',
                        minHeight: '40px',
                        maxHeight: '40px',
                        maxWidth: filterControlWidth,
                        width: '100%'
                    },
                    '&.Monite-Label-Hidden .MuiInputLabel-root.MuiFormLabel-root': {
                        display: 'none'
                    }
                },
                popper: {
                    paddingTop: '0.5rem'
                }
            }
        },
        MuiTextField: {
            defaultProps: {
                InputLabelProps: {
                    shrink: true
                }
            },
            styleOverrides: {
                root: {
                    '&.Monite-NakedField': {
                        '& .MuiInputBase-root': {
                            minHeight: '32px',
                            padding: 0,
                            '& .MuiInputBase-input': {
                                height: '32px',
                                lineHeight: '32px',
                                padding: 0
                            },
                            '& .MuiOutlinedInput-notchedOutline': {
                                borderStyle: 'none'
                            }
                        },
                        '& .MuiFormHelperText-root.Mui-error': {
                            marginLeft: 0
                        }
                    },
                    '&.Monite-AiSearchField': {
                        '& .MuiInputBase-root': {
                            paddingRight: '12px',
                            '& .MuiInputBase-input': {
                                '&::placeholder': {
                                    opacity: 0.88,
                                    fontWeight: 500,
                                    fontSize: '14px',
                                    lineHeight: '16px',
                                    padding: '16px 10px'
                                }
                            },
                            '& .MuiOutlinedInput-notchedOutline': {
                                borderStyle: 'none'
                            }
                        }
                    }
                }
            }
        },
        MuiDrawer: {
            variants: [
                {
                    props: {
                        variant: 'permanent'
                    },
                    style: {
                        backgroundColor: 'menu.background',
                        '& .MuiPaper-root': {
                            backgroundColor: 'menu.background',
                            borderRight: 0
                        }
                    }
                }
            ]
        },
        MuiList: {
            styleOverrides: {
                root: {
                    '&.NavigationList': {
                        margin: '0px 12px',
                        '& .MuiListItem-root': {
                            marginTop: 8,
                            '& .Mui-selected': {
                                '& span': {
                                    color: 'secondary.dark'
                                }
                            }
                        },
                        '.MuiListItemButton-root': {
                            borderRadius: moniteTheme.borderRadius * 2,
                            padding: '8px 12px'
                        },
                        '.MuiListItemIcon-root': {
                            minWidth: 25
                        },
                        '.MuiListItemIcon-root .MuiSvgIcon-root': {
                            width: '20px',
                            height: '20px',
                            marginRight: '5px'
                        },
                        '.MuiCollapse-root': {
                            marginTop: -8,
                            marginLeft: 12
                        },
                        '& .MuiSvgIcon-root': {
                            color: 'secondary.dark',
                            '& > path': {
                                color: 'secondary.dark'
                            }
                        }
                    }
                }
            }
        },
        MuiButtonBase: {
            defaultProps: {
                disableRipple: true
            }
        },
        MuiButton: {
            styleOverrides: {
                root: {
                    // Button shouldn't grow inside containers that force it to grow
                    maxHeight: '48px',
                    '&.ThemeSelect': {
                        borderRadius: moniteTheme.borderRadius
                    },
                    '&.ThemeSelect .ThemeSelect-modeLabel': {
                        display: 'flex'
                    },
                    '&.MuiButton-sizeSmall': {
                        fontSize: '14px'
                    },
                    '&.Monite-withShadow, &.Monite-withShadow:hover': {
                        boxShadow: '0px 1px 1px 0px rgba(0, 0, 0, 0.1)'
                    }
                },
                containedPrimary: {
                    padding: '.75em 1.25em',
                    backgroundColor: 'primary.main',
                    lineHeight: '1.4',
                    borderRadius: moniteTheme.buttonBorderRadius,
                    boxShadow: 'none',
                    '&:hover': {
                        backgroundColor: 'primary.60',
                        borderRadius: moniteTheme.buttonBorderRadius,
                        boxShadow: 'none'
                    },
                    '&:active': {
                        backgroundColor: 'primary.dark',
                        borderRadius: moniteTheme.buttonBorderRadius,
                        boxShadow: 'none'
                    },
                    '&:disabled': {
                        color: 'neutral.70',
                        backgroundColor: 'neutral.90',
                        borderColor: 'neutral.90',
                        boxShadow: 'none'
                    }
                },
                outlinedPrimary: {
                    padding: '.75em 1.25em',
                    color: 'primary.30',
                    backgroundColor: 'primary.90',
                    border: 'none',
                    borderRadius: moniteTheme.buttonBorderRadius,
                    boxShadow: 'none',
                    '&:hover': {
                        backgroundColor: 'primary.80',
                        border: 'none',
                        boxShadow: 'none'
                    },
                    '&:active': {
                        backgroundColor: 'primary.70',
                        border: 'none',
                        boxShadow: 'none'
                    },
                    '&:disabled': {
                        color: 'neutral.70',
                        backgroundColor: 'neutral.90',
                        border: 'none',
                        boxShadow: 'none'
                    }
                },
                textPrimary: {
                    padding: '.75em 1.25em',
                    color: 'primary.30',
                    backgroundColor: 'transparent',
                    border: 'none',
                    boxShadow: 'none',
                    '&:hover': {
                        backgroundColor: 'primary.90',
                        border: 'none',
                        boxShadow: 'none'
                    },
                    '&:active': {
                        backgroundColor: 'primary.70',
                        border: 'none',
                        boxShadow: 'none'
                    },
                    '&:disabled': {
                        color: 'neutral.70',
                        backgroundColor: 'neutral.90',
                        border: 'none',
                        boxShadow: 'none'
                    }
                }
            }
        },
        MuiPopover: {
            styleOverrides: {
                paper: {
                    border: 'none',
                    width: 240
                }
            }
        },
        MuiPopper: {
            defaultProps: {
                disablePortal: true
            }
        },
        MuiAvatar: {
            styleOverrides: {
                root: {
                    '&.MuiAvatar-colored': {
                        margin: 0,
                        color: 'text.primary',
                        fontSize: '16px',
                        fontWeight: 600,
                        lineHeight: '40px',
                        width: '40px',
                        height: '40px',
                        '&.MuiAvatar-0': {
                            backgroundColor: counterpartColors[0]
                        },
                        '&.MuiAvatar-1': {
                            backgroundColor: counterpartColors[1]
                        },
                        '&.MuiAvatar-2': {
                            backgroundColor: counterpartColors[2]
                        },
                        '&.MuiAvatar-3': {
                            backgroundColor: counterpartColors[3]
                        },
                        '&.MuiAvatar-4': {
                            backgroundColor: counterpartColors[4]
                        }
                    }
                }
            }
        },
        MuiChip: {
            styleOverrides: {
                root: {
                    backgroundColor: 'primary.light',
                    borderRadius: moniteTheme.borderRadius * 1.33,
                    color: 'primary.main',
                    fontSize: '14px',
                    lineHeight: '16px',
                    fontWeight: 500,
                    padding: '7px 8px',
                    '& .MuiChip-avatar': {
                        marginLeft: 0,
                        marginRight: '4px'
                    },
                    gap: 8
                },
                label: {
                    padding: '0'
                },
                deleteIcon: {
                    margin: '0 -2px 0 6px'
                }
            }
        },
        MuiDataGrid: {
            defaultProps: {
                columnHeaderHeight: 55,
                rowHeight: 48,
                density: 'standard'
            },
            styleOverrides: {
                root: {
                    color: palette.text.primary,
                    backgroundColor: palette.background.default,
                    borderTopLeftRadius: 0,
                    borderTopRightRadius: 0,
                    borderWidth: 0,
                    borderBottomLeftRadius: moniteTheme.borderRadius * 2,
                    borderBottomRightRadius: moniteTheme.borderRadius * 2,
                    '--DataGrid-rowBorderColor': 'divider',
                    '--DataGrid-containerBackground': moniteTheme.colors.background,
                    '& .MuiDataGrid-withBorderColor': {
                        borderColor: 'divider'
                    },
                    '&.MuiDataGrid-withBorderColor': {
                        borderColor: 'divider'
                    },
                    '& div[role="presentation"] + .MuiDataGrid-cell, & div[role="presentation"] + .MuiDataGrid-columnHeader': {
                        borderLeftStyle: 'none',
                        borderLeftWidth: '0'
                    }
                },
                columnHeader: {
                    overflow: 'visible',
                    borderLeftStyle: 'solid',
                    borderLeftWidth: '0px',
                    borderLeftColor: 'divider',
                    padding: '0 15.5px',
                    background: moniteTheme.colors.background,
                    '& .MuiDataGrid-columnHeaderTitle': {
                        color: palette.text,
                        fontWeight: 600,
                        fontSize: '14px',
                        lineHeight: '17.57px'
                    }
                },
                columnSeparator: {
                    border: 0
                },
                cell: {
                    '&[role="gridcell"]': {
                        borderLeftStyle: 'solid',
                        borderLeftWidth: '0px',
                        borderLeftColor: 'divider'
                    },
                    '&.Monite-Cell-Highlight': {
                        color: 'neutral.10'
                    },
                    '.MuiDataGrid-cellOffsetLeft + &': {
                        borderLeftStyle: 'none',
                        borderLeftWidth: '0'
                    },
                    padding: '0 12px',
                    fontWeight: 400,
                    fontSize: '15px',
                    '& span.Monite-DueDateCell-OverdueDays': {
                        fontSize: '12px'
                    },
                    // Align counterpart avatar with the cell header
                    '&[data-field="counterpart_id"], &[data-field="counterpart_name"], &[data-field="was_created_by_user_id"]': {
                        '.MuiChip-root': {
                            paddingLeft: 0
                        }
                    },
                    '&[data-field="actions"]': {
                        textOverflow: 'clip'
                    },
                    '& .Monite-TextOverflowContainer': {
                        display: 'block',
                        whiteSpace: 'nowrap',
                        overflow: 'hidden',
                        textOverflow: 'ellipsis'
                    },
                    '&:focus': {
                        outline: 'none'
                    },
                    '& .MuiChip-label': {
                        fontWeight: 600,
                        fontSize: '13px',
                        letterSpacing: '0.098px'
                    }
                },
                footerContainer: {
                    padding: '8px 0',
                    '& .Monite-RowsPerPageSelector div[role="combobox"]': {
                        lineHeight: '40px',
                        fontSize: '13px',
                        color: 'text.secondary'
                    },
                    '& .Monite-TablePagination-PreviousPageButton': {
                        padding: '8px',
                        border: '1px solid',
                        borderColor: 'neutral.80',
                        borderRadius: '4px',
                        marginRight: '6px'
                    },
                    '& .Monite-TablePagination-NextPageButton': {
                        padding: '8px',
                        border: '1px solid',
                        borderColor: 'neutral.80',
                        borderRadius: '4px'
                    }
                }
            }
        },
        MuiTableHead: {
            styleOverrides: {
                root: {
                    '& .MuiTableCell-head': {
                        fontWeight: 500,
                        color: 'neutral.50',
                        verticalAlign: 'bottom'
                    }
                }
            }
        },
        MuiTableRow: {
            styleOverrides: {
                root: {
                    '&:not(.Monite-CreateReceivable-ItemsSection-Table) .MuiTableCell-root': {
                        borderColor: 'neutral.80'
                    },
                    '&.Monite-CreateReceivable-ItemsSection-Table': {
                        '.MuiTableCell-root': {
                            borderBottom: 'none',
                            padding: '8px 12px 8px 0',
                            '& .MuiFormControl-root .MuiInputBase-root': {
                                backgroundColor: '#fff'
                            }
                        },
                        'th.MuiTableCell-root': {
                            padding: '0 12px 0 0'
                        },
                        '+ .MuiTableRow-root .MuiTableCell-root': {
                            paddingLeft: 0
                        }
                    },
                    '&:last-child .MuiTableCell-body': {
                        borderBottom: 'none'
                    }
                }
            }
        },
        MuiTabs: {
            styleOverrides: {
                root: {
                    borderBottom: '1px solid',
                    borderColor: 'neutral.80',
                    minHeight: 'unset',
                    '& .MuiTab-root': {
                        backgroundColor: 'transparent',
                        color: 'text.primary',
                        padding: '16px',
                        minHeight: 'unset',
                        boxSizing: 'border-box',
                        textTransform: 'none',
                        '&:hover': {
                            backgroundColor: 'transparent'
                        },
                        '&:active': {
                            backgroundColor: 'transparent'
                        }
                    },
                    '& .MuiTab-root.Mui-selected': {
                        backgroundColor: 'transparent',
                        color: 'text.primary',
                        '&:hover': {
                            backgroundColor: 'transparent'
                        },
                        '&:active': {
                            backgroundColor: 'transparent'
                        }
                    }
                },
                indicator: {
                    borderRadius: 10,
                    backgroundColor: palette.primary.main,
                    height: '4px'
                }
            }
        },
        MuiCard: {
            styleOverrides: {
                root: {
                    '&.Monite-SummaryCard': {
                        display: 'flex',
                        borderRadius: moniteTheme.borderRadius * 1.67,
                        backgroundColor: palette.background.default,
                        outline: '3px solid',
                        outlineColor: 'transparent',
                        border: '1px solid',
                        borderColor: palette.neutral['90'],
                        transition: 'border-color 0.1s ease-in-out, outline-color 0.2s ease-in-out',
                        boxShadow: 'none'
                    },
                    '&.Monite-SummaryCard-selected, &.Monite-SummaryCard:hover, &.Monite-SummaryCard:active, &.Monite-SummaryCard:focus': {
                        borderColor: palette.primary.main,
                        borderWidth: '1px',
                        outlineColor: palette.primary['80']
                    },
                    '&.Monite-SummaryCard-all': {
                        minWidth: '118px'
                    }
                }
            }
        },
        MuiCardContent: {
            styleOverrides: {
                root: {
                    padding: '24px 32px'
                }
            }
        },
        MuiPaper: {
            styleOverrides: {
                root: {
                    backgroundImage: 'none',
                    borderRadius: moniteTheme.borderRadius * 2.67,
                    borderColor: 'neutral.80'
                },
                elevation: {
                    '&.MuiTableContainer-root': {
                        boxShadow: 'none'
                    }
                },
                rounded: {
                    '&.Monite-PayableDetailsForm-Items': {
                        // Align delete button with the editor
                        'button[aria-label="delete"]': {
                            width: '40px',
                            height: '40px',
                            marginTop: '24px',
                            svg: {
                                width: '20px',
                                height: 'auto'
                            }
                        },
                        // Align total with the editor right side
                        '.Monite-PayableDetailsForm-Item .Monite-PayableDetailsForm-Item-Total': {
                            marginRight: '10.8%'
                        }
                    }
                }
            }
        },
        MuiDialog: {
            styleOverrides: {
                root: {
                    backgroundImage: 'none'
                }
            }
        },
        MuiDialogActions: {
            styleOverrides: {
                root: {
                    padding: '1em 1.5em'
                }
            }
        },
        MuiDialogTitle: {
            styleOverrides: {
                root: {
                    '&.MuiTypography-h6': {
                        padding: '12px 24px',
                        '.MuiToolbar-root': {
                            padding: '0 0 0 16px'
                        }
                    }
                }
            }
        },
        MuiDialogContent: {
            styleOverrides: {
                root: {
                    margin: 0,
                    padding: '24px 32px 40px',
                    '> form': {
                        maxWidth: 'min(940px, 100%)',
                        margin: '0 auto'
                    }
                }
            }
        },
        MuiFormHelperText: {
            styleOverrides: {
                root: {
                    fontSize: '12px'
                }
            }
        },
        MuiSwitch: {
            styleOverrides: {
                root: {
                    width: '55px',
                    height: '40px',
                    '& > .MuiButtonBase-root.Mui-checked': {
                        left: '-10px'
                    },
                    '& > .MuiSwitch-track': {
                        height: '20px',
                        position: 'relative',
                        bottom: '3px',
                        width: '40px',
                        left: '-2px',
                        borderRadius: '12px'
                    },
                    '& > .MuiSwitch-switchBase.Mui-checked': {
                        transform: 'translateX(25px)',
                        '&::after': {
                            content: '""',
                            position: 'absolute',
                            top: '12px',
                            left: '11px',
                            width: '16px',
                            height: '16px',
                            color: '#fff',
                            backgroundImage: `url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='${encodeURIComponent('#fff')}'><path d='M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4z'/></svg>")`,
                            backgroundSize: 'contain',
                            backgroundRepeat: 'no-repeat'
                        }
                    },
                    '& > .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {
                        background: 'rgba(203, 203, 254, 1)',
                        opacity: 1
                    },
                    '& > .MuiSwitch-input': {
                        left: 0
                    }
                }
            }
        },
        MoniteApprovalRequestStatusChip: {
            defaultProps: {
                icon: moniteTheme.components.approvalRequestStatusChip.icon,
                size: moniteTheme.components.approvalRequestStatusChip.size,
                variant: moniteTheme.components.approvalRequestStatusChip.variant
            }
        },
        MoniteInvoiceRecurrenceStatusChip: {
            defaultProps: {
                icon: moniteTheme.components.invoiceRecurrenceStatusChip.icon,
                size: moniteTheme.components.invoiceRecurrenceStatusChip.size,
                variant: moniteTheme.components.invoiceRecurrenceStatusChip.variant
            }
        },
        MoniteInvoiceRecurrenceIterationStatusChip: {
            defaultProps: {
                icon: moniteTheme.components.invoiceRecurrenceIterationStatusChip.icon,
                size: moniteTheme.components.invoiceRecurrenceIterationStatusChip.size,
                variant: moniteTheme.components.invoiceRecurrenceIterationStatusChip.variant
            }
        },
        MoniteInvoiceStatusChip: {
            defaultProps: {
                icon: moniteTheme.components.invoiceStatusChip.icon,
                size: moniteTheme.components.invoiceStatusChip.size,
                variant: moniteTheme.components.invoiceStatusChip.variant
            },
            styleOverrides: {
                root: {
                    fontSize: '13px'
                }
            },
            variants: [
                {
                    props: {
                        status: 'draft'
                    },
                    style: statusColors.black
                },
                {
                    props: {
                        status: 'issued'
                    },
                    style: statusColors.blue
                },
                {
                    props: {
                        status: 'accepted'
                    },
                    style: statusColors.green
                },
                {
                    props: {
                        status: 'expired'
                    },
                    style: statusColors.red
                },
                {
                    props: {
                        status: 'declined'
                    },
                    style: statusColors.red
                },
                {
                    props: {
                        status: 'recurring'
                    },
                    style: statusColors.green
                },
                {
                    props: {
                        status: 'partially_paid'
                    },
                    style: statusColors.violet
                },
                {
                    props: {
                        status: 'paid'
                    },
                    style: statusColors.green
                },
                {
                    props: {
                        status: 'overdue'
                    },
                    style: statusColors.orange
                },
                {
                    props: {
                        status: 'uncollectible'
                    },
                    style: statusColors.red
                },
                {
                    props: {
                        status: 'canceled'
                    },
                    style: statusColors.orange
                },
                {
                    props: {
                        status: 'deleted'
                    },
                    style: statusColors.black
                }
            ]
        },
        MonitePayableStatusChip: {
            defaultProps: {
                icon: moniteTheme.components.payableStatusChip.icon,
                size: moniteTheme.components.payableStatusChip.size,
                variant: moniteTheme.components.payableStatusChip.variant
            },
            styleOverrides: {
                root: {
                    fontSize: '13px'
                }
            },
            variants: [
                {
                    props: {
                        status: 'draft'
                    },
                    style: statusColors.black
                },
                {
                    props: {
                        status: 'new'
                    },
                    style: statusColors.blue
                },
                {
                    props: {
                        status: 'approve_in_progress'
                    },
                    style: statusColors.orange
                },
                {
                    props: {
                        status: 'waiting_to_be_paid'
                    },
                    style: statusColors.blue
                },
                {
                    props: {
                        status: 'partially_paid'
                    },
                    style: statusColors.violet
                },
                {
                    props: {
                        status: 'paid'
                    },
                    style: statusColors.green
                },
                {
                    props: {
                        status: 'canceled'
                    },
                    style: statusColors.orange
                },
                {
                    props: {
                        status: 'rejected'
                    },
                    style: statusColors.red
                }
            ]
        },
        MoniteCounterpartStatusChip: {
            defaultProps: {},
            styleOverrides: {
                root: {
                    height: '24px',
                    padding: '7px 8px',
                    backgroundColor: 'transparent',
                    color: 'text.primary',
                    borderColor: 'neutral.80'
                }
            }
        }
    };
    const components = renderColors(defaultMoniteComponents, palette);
    return {
        spacing: moniteTheme.spacing,
        palette: _object_spread_props$28(_object_spread$3k({}, palette), {
            status: statusBackgroundColors
        }),
        shape: {
            borderRadius: moniteTheme.borderRadius
        },
        typography,
        components
    };
};

function _define_property$3l(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3j(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3l(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$27(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$27(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$27(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Create a theme with the default component's `defaultProps`
 */ const createThemeWithDefaults = (theme = {})=>{
    const themeOptions = getTheme(theme);
    return material.createTheme(themeOptions, {
        components: {}
    }, {
        components: _object_spread_props$27(_object_spread$3j({}, createComponentsThemeDefaultProps([
            'MuiMenu',
            'MuiModal',
            'MuiPopper',
            'MuiDialogTitle',
            'MuiDialogContent',
            'MuiDialogActions',
            'MuiDivider'
        ], {
            classes: {
                root: ScopedCssBaselineContainerClassName
            }
        }), createComponentsThemeDefaultProps([
            'MuiGrid',
            'MuiDialog'
        ], {
            classes: {
                container: ScopedCssBaselineContainerClassName
            }
        })), {
            MuiStack: {
                defaultProps: {
                    className: ScopedCssBaselineContainerClassName
                }
            },
            MuiAutocomplete: {
                defaultProps: {
                    classes: {
                        popper: ScopedCssBaselineContainerClassName
                    }
                }
            }
        })
    });
};
/**
 * Create a `defaultProps` for the given MUI component list
 */ function createComponentsThemeDefaultProps(componentList, defaultProps) {
    return componentList.reduce((acc, key)=>{
        acc[key] = {
            defaultProps
        };
        return acc;
    }, {});
}

function asyncGeneratorStep$14(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$14(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$14(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$14(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$3k(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3i(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3k(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$26(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$26(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$26(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$11(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$11(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$11(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * @internal
 */ const MoniteContext = /*#__PURE__*/ React.createContext(null);
/**
 * @internal
 */ function useMoniteContext() {
    const moniteContext = React.useContext(MoniteContext);
    if (!moniteContext) {
        throw new Error('Could not find MoniteContext. Make sure that you are using "MoniteProvider" component before calling this hook.');
    }
    return moniteContext;
}
/**
 * @internal
 */ const MoniteContextProvider = (_param)=>{
    var { locale, children } = _param, restProps = _object_without_properties$11(_param, [
        "locale",
        "children"
    ]);
    const defaultedLocale = getLocaleWithDefaults(locale);
    return /*#__PURE__*/ jsxRuntime.jsx(I18nLoader, {
        locale: defaultedLocale,
        children: (i18n, datePickerAdapterLocale)=>/*#__PURE__*/ jsxRuntime.jsx(ContextProvider, _object_spread_props$26(_object_spread$3i({}, restProps), {
                i18n: i18n,
                locale: defaultedLocale,
                dateFnsLocale: datePickerAdapterLocale,
                children: children
            }))
    });
};
const ContextProvider = ({ monite, locale, i18n, dateFnsLocale, theme: userTheme, componentSettings, children })=>{
    const { entityId, apiUrl, fetchToken } = monite;
    let environment;
    if (apiUrl) {
        if (apiUrl.match(/dev/)) {
            environment = 'dev';
        } else if (apiUrl.match(/sandbox/)) {
            environment = 'sandbox';
        } else {
            environment = 'production';
        }
    } else {
        environment = 'sandbox';
    }
    const sentryHub = React.useMemo(()=>{
        return typeof window !== 'undefined' && typeof document !== 'undefined' // Check if we are in the browser
         ? new SentryFactory({
            environment,
            entityId
        }).create() : undefined;
    }, [
        entityId,
        environment
    ]);
    const queryClient = React.useMemo(()=>createQueryClient(i18n, sentryHub), [
        i18n,
        sentryHub
    ]);
    const { api, version, requestFn } = React.useMemo(()=>createAPIClient({
            entityId: entityId,
            context: MoniteQraftContext
        }), [
        entityId
    ]);
    const theme = React.useMemo(()=>createThemeWithDefaults(userTheme), [
        userTheme
    ]);
    const isMountedRef = useIsMounted();
    const cleanup = React.useMemo(()=>()=>{
            if (!isMountedRef.current) return;
            (()=>_async_to_generator$14(function*() {
                    try {
                        yield queryClient.cancelQueries();
                        queryClient.clear();
                        queryClient.unmount();
                    } catch (error) {
                        console.warn(error);
                    }
                })())();
        }, [
        queryClient,
        isMountedRef
    ]);
    React.useEffect(()=>{
        queryClient.mount();
        return ()=>{
            cleanup();
        };
    }, [
        queryClient,
        cleanup
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteContext.Provider, {
        value: {
            api,
            version,
            environment,
            entityId,
            theme: theme,
            componentSettings: getDefaultComponentSettings(i18n, componentSettings),
            queryClient,
            sentryHub,
            i18n,
            locale,
            dateFnsLocale,
            apiUrl: apiUrl || 'https://api.sandbox.monite.com/v1',
            fetchToken,
            requestFn
        },
        children: children
    });
};

/**
 * Creates an Emotion cache which is mounted to the `root` element
 * of the Drop In Component if it exists, or to the `document.head` otherwise.
 */ const EmotionCacheProvider = ({ cacheKey, children })=>{
    const rootElements = useRootElements();
    const [emotionCache] = React.useState(()=>createCache__default.default({
            key: cacheKey,
            container: rootElements.styles
        }));
    return /*#__PURE__*/ jsxRuntime.jsx(react$3.CacheProvider, {
        value: emotionCache,
        children: children
    });
};

const MoniteI18nProvider = ({ children })=>{
    const { i18n, dateFnsLocale } = useMoniteContext();
    return /*#__PURE__*/ jsxRuntime.jsx(react.I18nProvider, {
        i18n: i18n,
        children: /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.LocalizationProvider, {
            dateAdapter: AdapterDateFns.AdapterDateFns,
            adapterLocale: dateFnsLocale,
            children: children
        })
    }, i18n.locale);
};

function _define_property$3j(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3h(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3j(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$25(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$25(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$25(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$10(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$10(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$10(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const Transition = /*#__PURE__*/ React.forwardRef(function Transition(props, ref) {
    const { alignDialog } = props, otherProps = _object_without_properties$10(props, [
        "alignDialog"
    ]);
    if (alignDialog) {
        let direction;
        switch(alignDialog){
            case 'left':
                direction = 'right';
                break;
            case 'right':
                direction = 'left';
                break;
        }
        return /*#__PURE__*/ jsxRuntime.jsx(material.Slide, _object_spread$3h({
            direction: direction,
            ref: ref
        }, otherProps));
    }
    return /*#__PURE__*/ jsxRuntime.jsx(material.Fade, _object_spread$3h({
        ref: ref
    }, otherProps));
});
const DialogContext = /*#__PURE__*/ React.createContext(undefined);
const useDialog = ()=>{
    return React.useContext(DialogContext);
};
const Dialog$1 = /*#__PURE__*/ React.forwardRef((props, ref)=>{
    const { alignDialog, onClosed } = props, otherProps = _object_without_properties$10(props, [
        "alignDialog",
        "onClosed"
    ]);
    const { root } = useRootElements();
    const parentDialog = useDialog();
    const handleClose = (event, reason)=>{
        // Disable closing through through backdrop clicks.
        // Only allow closing through explicit close actions (like close button) and ESC key.
        if (reason !== 'backdropClick') {
            var _props_onClose;
            // If this is a nested dialog and ESC was pressed, prevent the event from bubbling up
            if (reason === 'escapeKeyDown' && parentDialog) {
                var _event_stopPropagation;
                (_event_stopPropagation = event.stopPropagation) === null || _event_stopPropagation === void 0 ? void 0 : _event_stopPropagation.call(event);
            }
            (_props_onClose = props.onClose) === null || _props_onClose === void 0 ? void 0 : _props_onClose.call(props, event, reason);
        }
    };
    return /*#__PURE__*/ jsxRuntime.jsx(DialogContext.Provider, {
        value: {
            isDialogContent: true,
            onClose: handleClose
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Dialog, _object_spread_props$25(_object_spread$3h({
            ref: ref
        }, otherProps), {
            open: props.open,
            container: root,
            TransitionComponent: Transition,
            TransitionProps: {
                alignDialog: alignDialog,
                onExited: onClosed
            },
            onClose: handleClose,
            classes: {
                container: [
                    ScopedCssBaselineContainerClassName,
                    alignDialog && `MuiDialog-container__align-${alignDialog}`
                ].filter(Boolean).join(' '),
                paper: alignDialog && `MuiDialog-paper__align-${alignDialog}`
            },
            slotProps: props.fullScreen ? {
                backdrop: {
                    style: {
                        background: 'none'
                    }
                }
            } : {},
            css: /*#__PURE__*/ react$3.css(".MuiDialog-container__align-right{justify-content:right;}.MuiDialog-container__align-left{justify-content:left;}.MuiDialog-paper__align-left,.MuiDialog-paper__align-right{width:50%;height:100%;max-height:none;margin:0;border-radius:0;}"),
            children: props.children
        }))
    });
});

function cn(...inputs) {
    return tailwindMerge.twMerge(clsx.clsx(inputs));
}

const CenteredContentBox = ({ children, className })=>/*#__PURE__*/ jsxRuntime.jsx("div", {
        className: cn('mtw:flex mtw:items-center mtw:justify-center mtw:h-full mtw:w-full', className),
        children: children
    });

function _define_property$3i(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3g(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3i(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$24(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$24(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$24(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$$(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$$(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$$(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * IconWrapper component
 *
 * A customizable wrapper for icon buttons that allows:
 * - Compatibility with Material UI theming.
 * - Accessibility features, including a customizable `aria-label`.
 * - Optional tooltips for additional context.
 * - Dynamic icon swapping on hover if `isDynamic` is enabled.
 * - Integration of custom event handlers (onClick, onHover, onFocus, onBlur).
 *
 * @component
 * @example
 * <IconWrapper
 *   icon={<CustomIcon />}
 *   fallbackIcon={<ArrowBackIcon />}
 *   tooltip="Go back"
 *   onClick={() => console.log('Icon clicked')}
 *   isDynamic={true}
 * />
 *
 * @param {ReactNode} [icon] - A custom icon to display, which can be any React node, SVG, image, or component.
 * @param {ReactNode} [fallbackIcon] - A fallback icon used when `icon` is not provided.
 * @param {string} [tooltip] - Tooltip text displayed on hover.
 * @param {'inherit' | 'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning'} [color="default"] - Icon color, using MUI theme colors.
 * @param {SxProps<Theme>} [sx] - MUI system properties for custom styling.
 * @param {() => void} onClick - Callback executed on button click.
 * @param {boolean} [isDynamic=false] - Determines if icon should change on hover.
 * @param {string} [ariaLabelOverride] - Custom `aria-label` for screen readers, defaults based on icon.
 * @param {React.MouseEvent<HTMLButtonElement>} [onHover] - Callback for hover events.
 * @param {React.FocusEvent<HTMLButtonElement>} [onFocus] - Callback for focus events.
 * @param {React.FocusEvent<HTMLButtonElement>} [onBlur] - Callback for blur events.
 *
 * @returns {JSX.Element} The IconWrapper component
 */ const IconWrapper = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { icon, fallbackIcon, tooltip, onClick = ()=>{}, onHover, onFocus, onBlur, ariaLabelOverride, isDynamic = false } = _param, props = _object_without_properties$$(_param, [
        "icon",
        "fallbackIcon",
        "tooltip",
        "onClick",
        "onHover",
        "onFocus",
        "onBlur",
        "ariaLabelOverride",
        "isDynamic"
    ]);
    var _componentSettings_general;
    const { componentSettings } = useMoniteContext();
    const providerProps = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_general = componentSettings.general) === null || _componentSettings_general === void 0 ? void 0 : _componentSettings_general.iconWrapper;
    const [displayIcon, setDisplayIcon] = React.useState(providerProps.icon || providerProps.fallbackIcon || /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {}));
    React.useEffect(()=>{
        setDisplayIcon(providerProps.icon || providerProps.fallbackIcon || /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {}));
    }, [
        providerProps.icon,
        providerProps.fallbackIcon
    ]);
    const handleMouseEnter = (event)=>{
        onHover === null || onHover === void 0 ? void 0 : onHover(event);
        if (isDynamic) {
            setDisplayIcon(/*#__PURE__*/ jsxRuntime.jsx(ArrowBackIcon__default.default, {}));
        }
    };
    const handleMouseLeave = ()=>{
        setDisplayIcon(providerProps.icon || providerProps.fallbackIcon || /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {}));
    };
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const ariaLabel = ariaLabelOverride || 'Icon button';
    const renderIconButton = ()=>/*#__PURE__*/ jsxRuntime.jsx(IconButton__default.default, _object_spread_props$24(_object_spread$3g({
            ref: ref,
            onClick: onClick,
            onMouseEnter: handleMouseEnter,
            onMouseLeave: handleMouseLeave,
            onFocus: (event)=>onFocus === null || onFocus === void 0 ? void 0 : onFocus(event),
            onBlur: (event)=>onBlur === null || onBlur === void 0 ? void 0 : onBlur(event),
            "aria-label": ariaLabel
        }, props), {
            children: displayIcon
        }));
    return tooltip ? /*#__PURE__*/ jsxRuntime.jsx(Tooltip__default.default, {
        title: tooltip,
        children: renderIconButton()
    }) : renderIconButton();
});

const Error$1 = (props)=>{
    const dialogContext = useDialog();
    const { i18n } = react.useLingui();
    const title = i18n._({
        id: "nwtY4N"
    });
    const description = props.error.toString();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            dialogContext && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                padding: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 11
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 1,
                        children: /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            onClick: dialogContext.onClose,
                            color: "inherit",
                            "aria-label": "close",
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                    alignItems: "center",
                    spacing: 2,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(SearchOffIcon__default.default, {
                                fontSize: "large",
                                color: "error"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            alignItems: "center",
                            spacing: 1,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "h3",
                                    children: title
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body2",
                                    children: description
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    spacing: 2,
                                    direction: "row",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "contained",
                                            onClick: props.resetError,
                                            endIcon: /*#__PURE__*/ jsxRuntime.jsx(CachedIcon__default.default, {
                                                fontSize: "small"
                                            }),
                                            children: i18n._({
                                                id: "KDw4GX"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "outlined",
                                            href: "https://docs.monite.com/docs/support",
                                            endIcon: /*#__PURE__*/ jsxRuntime.jsx(OpenInNewIcon__default.default, {
                                                fontSize: "small"
                                            }),
                                            children: i18n._({
                                                id: "mpby9d"
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};

function _define_property$3h(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3f(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3h(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Attaches Sentry to the `ErrorBoundary`
 */ const SentryProvider = ({ children })=>{
    const { sentryHub } = useMoniteContext();
    return /*#__PURE__*/ jsxRuntime.jsx(react$2.ErrorBoundary, {
        fallback: (props)=>/*#__PURE__*/ jsxRuntime.jsx(Error$1, _object_spread$3f({}, props)),
        onError: (error, componentStack, eventId)=>{
            sentryHub === null || sentryHub === void 0 ? void 0 : sentryHub.captureException(error, {
                event_id: eventId,
                captureContext: {
                    contexts: {
                        react: {
                            componentStack
                        }
                    }
                }
            });
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(react$2.Profiler, {
            children: children
        })
    });
};

/**
 * Provides a single instance of `<ScopedCssBaseline/>` component,
 * `<EmotionCacheProvider/>` and `<MuiThemeProvider/>` components.
 * This component prevents the creation of multiple `div` wrappers with the same styles,
 * and multiple Emotion Caches
 */ const MoniteScopedProviders = ({ children })=>{
    const hasStylesContext = React.useContext(SingleInstanceScopedStyleProviderContext);
    const { theme } = useMoniteContext();
    return hasStylesContext ? /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: children
    }) : /*#__PURE__*/ jsxRuntime.jsx(SingleInstanceScopedStyleProviderContext.Provider, {
        value: true,
        children: /*#__PURE__*/ jsxRuntime.jsx(EmotionCacheProvider, {
            cacheKey: "monite-css",
            children: /*#__PURE__*/ jsxRuntime.jsx(MoniteI18nProvider, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.ThemeProvider, {
                    theme: theme,
                    children: /*#__PURE__*/ jsxRuntime.jsx(SentryProvider, {
                        children: children
                    })
                })
            })
        })
    });
};
/**
 * Provides status if the `<MoniteScopedProviders/>` component is already set
 */ const SingleInstanceScopedStyleProviderContext = /*#__PURE__*/ React.createContext(false);

const isIndividualCounterpart = (counterpart)=>counterpart.type === 'individual';
const isOrganizationCounterpart = (counterpart)=>counterpart.type === 'organization';
function getCounterpartName(counterpart) {
    if (!counterpart) {
        return '';
    }
    if (isIndividualCounterpart(counterpart)) {
        const { individual: { first_name, last_name } } = counterpart;
        return getIndividualName(first_name, last_name);
    }
    if (isOrganizationCounterpart(counterpart)) {
        const { organization: { legal_name } } = counterpart;
        return legal_name;
    }
    return '';
}
const isIndividualEntity = (counterpart)=>(counterpart === null || counterpart === void 0 ? void 0 : counterpart.type) === 'individual';
const isOrganizationEntity = (counterpart)=>(counterpart === null || counterpart === void 0 ? void 0 : counterpart.type) === 'organization';
function prepareAddressView({ address }) {
    if (address) return `${address.postal_code}, ${address.city}, ${address.line1}`;
    return '';
}
function calculateDueDate(selectedPaymentTerm) {
    var _selectedPaymentTerm_term_final;
    return (selectedPaymentTerm === null || selectedPaymentTerm === void 0 ? void 0 : (_selectedPaymentTerm_term_final = selectedPaymentTerm.term_final) === null || _selectedPaymentTerm_term_final === void 0 ? void 0 : _selectedPaymentTerm_term_final.number_of_days) ? dateFns.addDays(new Date(), selectedPaymentTerm.term_final.number_of_days) : null;
}

function asyncGeneratorStep$13(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$13(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$13(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$13(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$3g(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3e(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3g(target, key, source[key]);
        });
    }
    return target;
}
const useCounterpartAddresses = (counterpartId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdAddresses.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: !!counterpartId
    });
};
const useUpdateCounterpartAddress = ({ counterpartId, addressId })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.patchCounterpartsIdAddressesId.useMutation({
        path: {
            counterpart_id: counterpartId,
            address_id: addressId
        }
    }, {
        onSuccess: (updatedAddress)=>_async_to_generator$13(function*() {
                api.counterparts.getCounterpartsIdAddressesId.setQueryData({
                    path: {
                        counterpart_id: counterpartId,
                        address_id: addressId
                    }
                }, (prevAddress)=>_object_spread$3e({}, prevAddress, updatedAddress), queryClient);
                yield api.counterparts.getCounterpartsIdAddresses.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: counterpartId
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "sxj3fg",
                    values: {
                        0: updatedAddress.line1
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "sUzsUD"
            }));
        }
    });
};
const useCreateCounterpartBank = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.postCounterpartsIdBankAccounts.useMutation(undefined, {
        onSuccess: (bank)=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterpartsIdBankAccounts.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: bank.counterpart_id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "yaJRV9",
                    values: {
                        0: bank.name
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "cxratx"
            }));
        }
    });
};
const useCounterpartBankById = (counterpartId, bankId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdBankAccountsId.useQuery({
        path: {
            counterpart_id: counterpartId,
            bank_account_id: bankId !== null && bankId !== void 0 ? bankId : ''
        }
    }, {
        enabled: !!bankId
    });
};
const useUpdateCounterpartBank = ()=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.counterparts.patchCounterpartsIdBankAccountsId.useMutation(undefined, {
        onSuccess: (bank)=>_async_to_generator$13(function*() {
                reactHotToast.toast.success(i18n._({
                    id: "oqtRp4",
                    values: {
                        0: bank.name
                    }
                }));
                api.counterparts.getCounterpartsIdBankAccountsId.setQueryData({
                    path: {
                        counterpart_id: bank.counterpart_id,
                        bank_account_id: bank.id
                    }
                }, (prevBankAccount)=>_object_spread$3e({}, prevBankAccount, bank), queryClient);
                yield api.counterparts.getCounterpartsIdBankAccounts.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: bank.counterpart_id
                        }
                    }
                }, queryClient);
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "UVEEPq"
            }));
        }
    });
};
const useDeleteCounterpartBank = (counterpartId)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.deleteCounterpartsIdBankAccountsId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterpartsIdBankAccounts.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: counterpartId
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "5A2SuH"
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "wymfGb"
            }));
        }
    });
};
const useCounterpartVatList = (counterpartId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdVatIds.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: !!counterpartId
    });
};
const useCreateCounterpartVat = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.postCounterpartsIdVatIds.useMutation(undefined, {
        onSuccess: (vatId)=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterpartsIdVatIds.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: vatId.counterpart_id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "Tnk1Zx",
                    values: {
                        0: vatId.value
                    }
                }));
            })(),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error, i18n._({
                id: "8D/rLM"
            })));
        }
    });
};
const useCounterpartVatById = (counterpartId, vatId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdVatIdsId.useQuery({
        path: {
            counterpart_id: counterpartId,
            vat_id: vatId !== null && vatId !== void 0 ? vatId : ''
        }
    }, {
        enabled: !!counterpartId && !!vatId
    });
};
const useUpdateCounterpartVat = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.patchCounterpartsIdVatIdsId.useMutation(undefined, {
        onSuccess: (updatedVatId)=>_async_to_generator$13(function*() {
                api.counterparts.getCounterpartsIdVatIdsId.setQueryData({
                    path: {
                        counterpart_id: updatedVatId.counterpart_id,
                        vat_id: updatedVatId.id
                    }
                }, (prevVatId)=>_object_spread$3e({}, prevVatId, updatedVatId), queryClient);
                yield api.counterparts.getCounterpartsIdVatIds.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: updatedVatId.counterpart_id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "0eKWBS",
                    values: {
                        0: updatedVatId.value
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "v9ldLs"
            }));
        }
    });
};
const useDeleteCounterpartVat = (counterpartId)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.counterparts.deleteCounterpartsIdVatIdsId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterpartsIdVatIds.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: counterpartId
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "wDJF5w"
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "2MIa39"
            }));
        }
    });
};
const useCounterpartContactList = (counterpartId)=>{
    const { api } = useMoniteContext();
    const { data: counterpart, isLoading: isCounterpartLoading } = api.counterparts.getCounterpartsId.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: !!counterpartId
    });
    const { data: contacts, isLoading: areContactsLoading, error } = api.counterparts.getCounterpartsIdContacts.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: Boolean(counterpartId && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.type) === 'organization')
    });
    if (counterpart && isIndividualCounterpart(counterpart)) {
        const individual = counterpart.individual;
        return {
            isLoading: false,
            data: [
                {
                    id: counterpart.id,
                    counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : '',
                    is_default: true,
                    email: individual.email,
                    first_name: individual.first_name,
                    is_customer: individual.is_customer,
                    is_vendor: individual.is_vendor,
                    last_name: individual.last_name,
                    phone: individual.phone,
                    title: individual.title
                }
            ]
        };
    }
    return {
        isLoading: !counterpartId || isCounterpartLoading || areContactsLoading,
        error,
        data: contacts === null || contacts === void 0 ? void 0 : contacts.data.map((contact)=>{
            var _organization_organization, _organization_organization1;
            const organization = counterpart;
            return {
                id: contact.id,
                counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : '',
                is_default: contact.is_default,
                address: contact.address,
                email: contact.email,
                first_name: contact.first_name,
                is_customer: organization === null || organization === void 0 ? void 0 : (_organization_organization = organization.organization) === null || _organization_organization === void 0 ? void 0 : _organization_organization.is_customer,
                is_vendor: organization === null || organization === void 0 ? void 0 : (_organization_organization1 = organization.organization) === null || _organization_organization1 === void 0 ? void 0 : _organization_organization1.is_vendor,
                last_name: contact.last_name,
                phone: contact.phone,
                title: contact.title
            };
        })
    };
};
const useCreateCounterpartContact = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.postCounterpartsIdContacts.useMutation(undefined, {
        onSuccess: (contact)=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterpartsIdContacts.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: contact.counterpart_id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "/Lwm/p",
                    values: {
                        0: getIndividualName(contact.first_name, contact.last_name)
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "SL0Q0h"
            }));
        }
    });
};
const useCounterpartContactById = (counterpartId, contactId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdContactsId.useQuery({
        path: {
            counterpart_id: counterpartId,
            contact_id: contactId !== null && contactId !== void 0 ? contactId : ''
        }
    }, {
        enabled: !!counterpartId && !!contactId
    });
};
const useUpdateCounterpartContact = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.patchCounterpartsIdContactsId.useMutation(undefined, {
        onSuccess: (contact)=>_async_to_generator$13(function*() {
                api.counterparts.getCounterpartsIdContactsId.setQueryData({
                    path: {
                        counterpart_id: contact.counterpart_id,
                        contact_id: contact.id
                    }
                }, (prevContact)=>_object_spread$3e({}, prevContact, contact), queryClient);
                yield api.counterparts.getCounterpartsIdContacts.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: contact.counterpart_id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "raPOB4",
                    values: {
                        0: getIndividualName(contact.first_name, contact.last_name)
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "t66LGz"
            }));
        }
    });
};
const useDeleteCounterpartContact = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.deleteCounterpartsIdContactsId.useMutation(undefined, {
        onSuccess: (_, { path })=>_async_to_generator$13(function*() {
                yield Promise.all([
                    api.counterparts.getCounterparts.invalidateQueries(queryClient),
                    api.counterparts.getCounterpartsIdContacts.invalidateQueries({
                        parameters: {
                            path: {
                                counterpart_id: path.counterpart_id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "7Y0yde"
                }));
            })(),
        onError: (error)=>reactHotToast.toast.error(getAPIErrorMessage(i18n, error))
    });
};
const useCounterpartList = (parameters)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterparts.useQuery(parameters !== null && parameters !== void 0 ? parameters : {});
};
const useCreateCounterpart = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.postCounterparts.useMutation({}, {
        onSuccess: (counterpart)=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterparts.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "OabVnK",
                    values: {
                        0: getCounterpartName(counterpart)
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "Fy66nr"
            }));
        }
    });
};
const useCounterpartById = (id)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsId.useQuery({
        path: {
            counterpart_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};
const useCounterpartAddressesById = (id)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdAddresses.useQuery({
        path: {
            counterpart_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};
const useUpdateCounterpart = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.patchCounterpartsId.useMutation(undefined, {
        onSuccess: (counterpart)=>_async_to_generator$13(function*() {
                api.counterparts.getCounterpartsId.setQueryData({
                    path: {
                        counterpart_id: counterpart.id
                    }
                }, (prevCounterpart)=>_object_spread$3e({}, prevCounterpart, counterpart), queryClient);
                yield api.counterparts.getCounterparts.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "sGQlOS",
                    values: {
                        0: getCounterpartName(counterpart)
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "8lwBDN"
            }));
        }
    });
};
const useDeleteCounterpart = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.deleteCounterpartsId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$13(function*() {
                yield api.counterparts.getCounterparts.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "w8ulZC"
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "K0vw1f"
            }));
        }
    });
};

const useEntityUserById = (id)=>{
    const { api } = useMoniteContext();
    return api.entityUsers.getEntityUsersId.useQuery({
        path: {
            entity_user_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: Boolean(id)
    });
};
const useEntityUserByAuthToken = ()=>{
    const { api } = useMoniteContext();
    return api.entityUsers.getEntityUsersMe.useQuery({}, {
        retry: false,
        staleTime: Infinity,
        refetchOnMount: false,
        refetchOnWindowFocus: false
    });
};
const useEntityUserRoleByAuthToken = ()=>{
    const { api } = useMoniteContext();
    return api.entityUsers.getEntityUsersMyRole.useQuery({}, {
        retry: false,
        staleTime: Infinity,
        refetchOnMount: false,
        refetchOnWindowFocus: false
    });
};

const useApprovalPolicyById = (approvalPolicyId)=>{
    const { api } = useMoniteContext();
    return api.approvalPolicies.getApprovalPoliciesId.useQuery({
        path: {
            approval_policy_id: approvalPolicyId !== null && approvalPolicyId !== void 0 ? approvalPolicyId : ''
        }
    }, {
        enabled: !!approvalPolicyId
    });
};

const useFileById = (fileId)=>{
    const { api } = useMoniteContext();
    return api.files.getFilesId.useQuery({
        path: {
            file_id: fileId !== null && fileId !== void 0 ? fileId : ''
        }
    }, {
        enabled: !!fileId
    });
};

const VAT_SUPPORTED_COUNTRIES = [
    'AO',
    'AU',
    'AT',
    'BE',
    'BW',
    'BG',
    'CZ',
    'DK',
    'EE',
    'SZ',
    'FR',
    'FI',
    'DE',
    'GR',
    'IE',
    'IL',
    'LS',
    'LR',
    'LU',
    'MZ',
    'NA',
    'NL',
    'PK',
    'PL',
    'ZA',
    'ES',
    'SE',
    'CH',
    'AE',
    'GB',
    'ZW'
];

function _define_property$3f(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3d(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3f(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$23(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$23(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$23(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * @note We are deviating from the default query configuration because the data
 * does not require frequent refetching or retries as the data fetched
 * (user entity information) is relatively static
 *
 * @returns {QueryResult} The result of the user entity fetch.
 */ const useMe = ()=>{
    const { api } = useMoniteContext();
    return api.entityUsers.getEntityUsersMe.useQuery({}, {
        retry: false,
        staleTime: Infinity,
        refetchOnMount: false,
        refetchOnWindowFocus: false
    });
};
const useMyEntity = ()=>{
    var _queryProps_data, _queryProps_data1, _queryProps_data2, _queryProps_data3;
    const { api, entityId } = useMoniteContext();
    const queryProps = api.entityUsers.getEntityUsersMyEntity.useQuery({}, {
        retry: false,
        staleTime: Infinity,
        refetchOnMount: false,
        refetchOnWindowFocus: false
    });
    const { data: entitySettings } = api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    });
    const isVatSupported = Boolean(((_queryProps_data = queryProps.data) === null || _queryProps_data === void 0 ? void 0 : _queryProps_data.address) && VAT_SUPPORTED_COUNTRIES.includes((_queryProps_data1 = queryProps.data) === null || _queryProps_data1 === void 0 ? void 0 : _queryProps_data1.address.country));
    const isUSEntity = Boolean(((_queryProps_data2 = queryProps.data) === null || _queryProps_data2 === void 0 ? void 0 : _queryProps_data2.address) && ((_queryProps_data3 = queryProps.data) === null || _queryProps_data3 === void 0 ? void 0 : _queryProps_data3.address.country) === 'US');
    const isNonCompliantFlow = (entitySettings === null || entitySettings === void 0 ? void 0 : entitySettings.receivable_edit_flow) === 'non_compliant';
    const entityName = getEntityName$1(queryProps.data);
    return _object_spread_props$23(_object_spread$3d({}, queryProps), {
        entityName,
        isNonVatSupported: !isVatSupported,
        isUSEntity,
        isNonCompliantFlow
    });
};
const getEntityName$1 = (entity)=>{
    if (!entity) return '';
    if (isIndividualEntity(entity)) {
        const { first_name, last_name } = entity.individual;
        return `${first_name} ${last_name}`;
    }
    if (isOrganizationEntity(entity)) {
        return entity.organization.legal_name;
    }
    return '';
};

function asyncGeneratorStep$12(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$12(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$12(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$12(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const usePaymentRecords = (query, enabled = true)=>{
    const { api } = useMoniteContext();
    return api.paymentRecords.getPaymentRecords.useQuery({
        query
    }, {
        enabled
    });
};
/**
 * Hook to fetch payment records for a list of payables.
 * Sorts the payment records by paid_at in descending order.
 *
 * @param payableIds - Array of payable IDs to fetch payment records for
 * @returns {Object}
 *  - payablesPaymentIntentsRecord: Payment intents with most recent record per intent, grouped by payable ID
 *  - isLoading: Loading state boolean
 *  - error: Error state if request fails
 *
 * Example data returned in payablesPaymentIntentsRecord:
 * ```
 * {
 *    "payable-id-1": [
 *      { intent: "payment-intent-id-1", record: record2 },
 *      { intent: "payment-intent-id-2", record: record3 }
 *    ],
 *    "payable-id-2": [
 *      { intent: "payment-intent-id-3", record: record6 },
 *      { intent: "payment-intent-id-4", record: record8 }
 *    ]
 * }
 * ```
 */ const usePayablePaymentIntentsAndRecords = (payableIds = [])=>{
    const { api, queryClient } = useMoniteContext();
    // Memoize payable IDs to prevent unnecessary re-renders
    const memoizedPayableIds = React.useMemo(()=>payableIds, [
        payableIds
    ]);
    // Query page by page to fetch all payment records for the given payables
    const { data, isLoading, error, fetchNextPage, hasNextPage, isFetchingNextPage } = api.paymentRecords.getPaymentRecords.useInfiniteQuery({
        query: {
            object_id__in: memoizedPayableIds,
            sort: 'paid_at',
            order: 'desc',
            limit: 100
        }
    }, {
        initialPageParam: {
            query: {
                pagination_token: undefined
            }
        },
        getNextPageParam: (currentPage)=>{
            if (!currentPage.next_pagination_token) return undefined;
            return {
                query: {
                    pagination_token: currentPage.next_pagination_token
                }
            };
        },
        enabled: memoizedPayableIds.length > 0
    });
    // Automatically fetch next page when available
    React.useEffect(()=>{
        if (hasNextPage && !isFetchingNextPage) {
            fetchNextPage().catch((error)=>{
                console.error('Error fetching next page:', error);
            });
        }
    }, [
        hasNextPage,
        isFetchingNextPage,
        fetchNextPage
    ]);
    // Optimized processing of payment records
    const payablesPaymentIntentsRecord = React.useMemo(()=>{
        var _data_pages;
        if (!(data === null || data === void 0 ? void 0 : (_data_pages = data.pages) === null || _data_pages === void 0 ? void 0 : _data_pages.length) || !memoizedPayableIds.length) {
            return {};
        }
        const result = {};
        // Pre-initialize result structure
        memoizedPayableIds.forEach((id)=>{
            result[id] = [];
        });
        // Use Map for faster lookups of processed intents
        const processedIntents = new Map();
        memoizedPayableIds.forEach((id)=>{
            processedIntents.set(id, new Set());
        });
        // Process records from all pages
        for (const page of data.pages){
            var _page_data;
            if (!((_page_data = page.data) === null || _page_data === void 0 ? void 0 : _page_data.length)) continue;
            for (const record of page.data){
                var _record_object, _record_object1;
                const payableId = (_record_object = record.object) === null || _record_object === void 0 ? void 0 : _record_object.id;
                const paymentIntentId = record.payment_intent_id;
                // Skip if not a valid payable record or missing payment intent ID
                if (((_record_object1 = record.object) === null || _record_object1 === void 0 ? void 0 : _record_object1.type) !== 'payable' || !payableId || !paymentIntentId || !result[payableId]) {
                    continue;
                }
                const payableIntents = processedIntents.get(payableId);
                // Only add if we haven't seen this payment intent for this payable
                if (payableIntents && !payableIntents.has(paymentIntentId)) {
                    result[payableId].push({
                        intent: paymentIntentId,
                        record: record
                    });
                    payableIntents.add(paymentIntentId);
                }
            }
        }
        return result;
    }, [
        data === null || data === void 0 ? void 0 : data.pages,
        memoizedPayableIds
    ]);
    return {
        allPaymentRecords: data === null || data === void 0 ? void 0 : data.pages.flatMap((page)=>page.data),
        payablesPaymentIntentsRecord,
        isLoading: memoizedPayableIds.length > 0 && (isLoading || isFetchingNextPage),
        error,
        refetch: ()=>{
            api.paymentRecords.getPaymentRecords.invalidateQueries(queryClient);
        }
    };
};
const useCreatePaymentRecord = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.paymentRecords.postPaymentRecords.useMutation({}, {
        onSuccess: ()=>_async_to_generator$12(function*() {
                yield api.paymentRecords.getPaymentRecords.invalidateQueries(queryClient);
                return reactHotToast.toast.success(i18n._({
                    id: "PFLZOw"
                }));
            })(),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            reactHotToast.toast.error(i18n._({
                id: "055mqh",
                values: {
                    errorMessage: errorMessage
                }
            }));
        }
    });
};
const usePaymentRecordById = (payment_record_id)=>{
    const { api } = useMoniteContext();
    return api.paymentRecords.getPaymentRecordsId.useQuery({
        path: {
            payment_record_id
        }
    });
};

const usePaymentIntentById = (payment_intent_id)=>{
    const { api } = useMoniteContext();
    return api.paymentIntents.getPaymentIntentsId.useQuery({
        path: {
            payment_intent_id
        }
    }, {
        enabled: !!payment_intent_id
    });
};

const usePatchEntitiesIdSettings = ()=>{
    const { api, entityId } = useMoniteContext();
    return api.entities.patchEntitiesIdSettings.useMutation({
        path: {
            entity_id: entityId
        }
    });
};
const useEntitySettings = (enabled = true)=>{
    const { api, entityId } = useMoniteContext();
    return api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    }, {
        enabled
    });
};

/**
 * Fetches receivable by provided `id`
 *
 * @see {@link https://docs.monite.com/reference/get_receivables_id} Monite backend call API
 */ const useGetReceivableById = (receivable_id, enabled)=>{
    const { api } = useMoniteContext();
    return api.receivables.getReceivablesId.useQuery({
        path: {
            receivable_id
        }
    }, {
        enabled
    });
};

function _define_property$3e(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3c(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3e(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$22(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$22(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$22(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$_(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$_(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$_(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const COMMON_PERMISSIONS_OBJECTS_TYPES = [
    'approval_policy',
    'approval_request',
    // 'comment',
    'counterpart',
    // 'counterpart_vat_id',
    // 'entity',
    // 'entity_bank_account',
    // 'entity_user',
    // 'entity_vat_ids',
    // 'export',
    // 'onboarding',
    'overdue_reminder',
    // 'payables_purchase_order',
    'payment_record',
    'payment_reminder',
    // 'person',
    'product',
    'receivable',
    // 'reconciliation',
    'role',
    'tag'
];
const PAYABLE_PERMISSIONS_OBJECTS_TYPES = [
    'payable'
];
/**
 * ## Example
 * ```tsx
 * useIsActionAllowed('workflow', 'create');
 * useIsActionAllowed('payable', Payable'create');
 * useIsActionAllowed('payable', Payable'create', '5b4daced-6b9a-4707-83c6-08193d999fab');
 * ```
 * @param method What method we would like to check permissions for (payable, counterpart, etc.)
 * @param action What action we would like to check (create, update, delete, etc.)
 * @param entityUserId? What user we would like to check permissions for.
 *    It's important for permission status `ALLOWED_FOR_OWN`
 *
 * @returns `true` if action is allowed, `false` otherwise.
 *    Also returns `false` if `entityUserId` is not provided
 *    and backend status is `ALLOWED_FOR_OWN`
 */ function useIsActionAllowed({ method, action, entityUserId }) {
    const _usePermissions = usePermissions(method), { data: actions, userIdFromAuthToken } = _usePermissions, rest = _object_without_properties$_(_usePermissions, [
        "data",
        "userIdFromAuthToken"
    ]);
    return _object_spread_props$22(_object_spread$3c({}, rest), {
        data: isActionAllowed({
            action,
            actions,
            entityUserId,
            entityUserIdFromAuthToken: userIdFromAuthToken
        })
    });
}
/**
 * Checks if the action is allowed for the given entity user.
 *
 * @param action Action to check, e.g. `create`, `update`, `delete`, etc.
 * @param entityUserId Entity user identifier to check permissions for, e.g. `invoice.entityUserId`
 * @param entityUserIdFromAuthToken Actual current user identifier from the auth token
 * @param actions List of actions for the specific method, e.g. `workflow`, `payable`, etc.
 */ function isActionAllowed({ action, actions, entityUserId, entityUserIdFromAuthToken }) {
    const actionSchema = actions === null || actions === void 0 ? void 0 : actions.find(({ action_name })=>action_name === action);
    if (!actionSchema) return false;
    /** We have to handle `ALLOWED_FOR_OWN` with the user identifier */ if (actionSchema.permission === 'allowed_for_own') {
        return entityUserIdFromAuthToken === entityUserId;
    }
    return actionSchema.permission === 'allowed';
}
/**
 * Checks permissions for the given entity user.
 *
 * @param method Specific method to check permissions
 */ function usePermissions(method) {
    const userQuery = useEntityUserByAuthToken();
    const roleQuery = useEntityUserRoleByAuthToken();
    const role = roleQuery.data;
    const user = userQuery.data;
    const rest = {
        isLoading: roleQuery.isLoading || userQuery.isLoading,
        isPending: roleQuery.isPending || userQuery.isPending,
        isSuccess: roleQuery.isSuccess && userQuery.isSuccess,
        isError: roleQuery.isError || userQuery.isError,
        isFetching: roleQuery.isFetching || userQuery.isFetching,
        error: roleQuery.error || userQuery.error,
        userIdFromAuthToken: user === null || user === void 0 ? void 0 : user.id
    };
    if (!user || !role || !('permissions' in role)) {
        return _object_spread_props$22(_object_spread$3c({}, rest), {
            data: undefined
        });
    }
    const permissions = role.permissions.objects;
    if (!permissions) {
        return _object_spread_props$22(_object_spread$3c({}, rest), {
            data: undefined
        });
    }
    const permission = permissions.find((permission)=>permission.object_type === method);
    const actions = permission === null || permission === void 0 ? void 0 : permission.actions;
    return _object_spread_props$22(_object_spread$3c({}, rest), {
        data: actions
    });
}

const calculateAvatarColorIndex = (name)=>{
    let sum = 0;
    for(let i = name.length - 1; i >= 0; i--){
        sum += name.charCodeAt(i);
    }
    return sum % 5;
};
const CounterPartCellByData = ({ name, country, city, isLoading })=>{
    const { i18n } = react.useLingui();
    if (!name && !isLoading) name = i18n._({
        id: "+DHRWw"
    });
    const nameParts = name.split(' ');
    // Split name into parts by ' ' and take first letters from the first and last parts of the name
    // For example, Mike Borough -> MB
    // Ambercombie -> A
    const avatarLetters = (nameParts.length >= 2 ? nameParts[0][0] + nameParts[nameParts.length - 1][0] : name[0] || '').toUpperCase();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        className: "Monite-CounterpartCell",
        direction: "row",
        alignItems: "center",
        spacing: 1.5,
        justifyContent: "stretch",
        sx: {
            maxWidth: '100%',
            overflow: 'hidden'
        },
        children: [
            isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
                animation: "wave",
                variant: "circular",
                width: 40,
                height: 40,
                sx: {
                    flexShrink: 0
                }
            }) : /*#__PURE__*/ jsxRuntime.jsx(material.Avatar, {
                className: 'MuiAvatar-colored MuiAvatar-' + calculateAvatarColorIndex(avatarLetters),
                children: avatarLetters
            }),
            isLoading || !name ? /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
                animation: "wave",
                height: 10,
                width: "100%",
                sx: {
                    flexShrink: 0,
                    minWidth: '4em'
                }
            }) : /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                direction: "column",
                alignItems: "stretch",
                gap: 0,
                sx: {
                    maxWidth: '100%',
                    flexBasis: 0,
                    flexShrink: 2,
                    flexGrow: 2,
                    overflow: 'hidden'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        className: "Monite-TextOverflowContainer",
                        children: name
                    }),
                    country && city && /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                        variant: "body2",
                        className: "Monite-TextOverflowContainer",
                        children: [
                            country,
                            " • ",
                            city
                        ]
                    })
                ]
            })
        ]
    });
};
const CounterpartNameCountryAddressCellById = ({ counterpartId })=>{
    var _addresses_data_, _addresses_data_1;
    const { data: counterpart, isLoading: isLoadingCounterpart } = useCounterpartById(counterpartId);
    const { data: addresses } = useCounterpartAddressesById(counterpartId);
    if (isLoadingCounterpart) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            animation: "wave",
            height: 26,
            width: "20ch"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(CounterPartCellByData, {
        name: getCounterpartName(counterpart),
        country: addresses === null || addresses === void 0 ? void 0 : (_addresses_data_ = addresses.data[0]) === null || _addresses_data_ === void 0 ? void 0 : _addresses_data_.country,
        city: addresses === null || addresses === void 0 ? void 0 : (_addresses_data_1 = addresses.data[0]) === null || _addresses_data_1 === void 0 ? void 0 : _addresses_data_1.city
    });
};
const CounterpartNameCellById = ({ counterpartId })=>{
    const { data: counterpart, isLoading } = useCounterpartById(counterpartId);
    const name = counterpart ? getCounterpartName(counterpart) : '';
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            animation: "wave",
            height: 26,
            width: "100%"
        });
    }
    if (!name) {
        return /*#__PURE__*/ jsxRuntime.jsx("span", {
            style: {
                opacity: 0.4
            },
            children: "-"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx("span", {
        children: name
    });
};

function _define_property$3d(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$a() {
    _extends$a = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$a.apply(this, arguments);
}
function _object_destructuring_empty$a(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$3b(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3d(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$Z(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$Z(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$Z(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function DropdownMenu$1(_param) {
    var props = _extends$a({}, _object_destructuring_empty$a(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuPrimitive__namespace.Root, _object_spread$3b({
        "data-slot": "dropdown-menu"
    }, props));
}
function DropdownMenuTrigger(_param) {
    var props = _extends$a({}, _object_destructuring_empty$a(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuPrimitive__namespace.Trigger, _object_spread$3b({
        "data-slot": "dropdown-menu-trigger"
    }, props));
}
function DropdownMenuContent(_param) {
    var { className, sideOffset = 4 } = _param, props = _object_without_properties$Z(_param, [
        "className",
        "sideOffset"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuPrimitive__namespace.Portal, {
        children: /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuPrimitive__namespace.Content, _object_spread$3b({
            "data-slot": "dropdown-menu-content",
            sideOffset: sideOffset,
            className: cn('mtw:bg-popover mtw:text-popover-foreground mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:data-[state=closed]:zoom-out-95 mtw:data-[state=open]:zoom-in-95 mtw:data-[side=bottom]:slide-in-from-top-2 mtw:data-[side=left]:slide-in-from-right-2 mtw:data-[side=right]:slide-in-from-left-2 mtw:data-[side=top]:slide-in-from-bottom-2 mtw:z-1300 mtw:max-h-(--radix-dropdown-menu-content-available-height) mtw:min-w-[8rem] mtw:origin-(--radix-dropdown-menu-content-transform-origin) mtw:overflow-x-hidden mtw:overflow-y-auto mtw:rounded-md mtw:border-none mtw:p-1 mtw:shadow-md', className)
        }, props))
    });
}
function DropdownMenuItem(_param) {
    var { className, inset, variant = 'default' } = _param, props = _object_without_properties$Z(_param, [
        "className",
        "inset",
        "variant"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuPrimitive__namespace.Item, _object_spread$3b({
        "data-slot": "dropdown-menu-item",
        "data-inset": inset,
        "data-variant": variant,
        className: cn('mtw:focus:bg-accent mtw:focus:text-accent-foreground mtw:data-[variant=destructive]:text-destructive mtw:data-[variant=destructive]:focus:bg-destructive/10 mtw:dark:data-[variant=destructive]:focus:bg-destructive/20 mtw:data-[variant=destructive]:focus:text-destructive mtw:data-[variant=destructive]:*:[svg]:!text-destructive mtw:[&_svg:not([class*=text-])]:text-muted-foreground mtw:relative mtw:flex mtw:cursor-pointer mtw:items-center mtw:gap-2 mtw:rounded-sm mtw:px-2 mtw:py-1.5 mtw:text-sm mtw:outline-hidden mtw:select-none mtw:data-[disabled]:pointer-events-none mtw:data-[disabled]:opacity-50 mtw:data-[inset]:pl-8 mtw:[&_svg]:pointer-events-none mtw:[&_svg]:shrink-0 mtw:[&_svg:not([class*=size-])]:size-4', className)
    }, props));
}

const DataGridEmptyState = ({ title, icon, descriptionLine1, descriptionLine2, onAction, actionButtonLabel, actionOptions = [], type, className = 'Monite-DataGridEmptyState' })=>{
    let defaultIcon;
    switch(type){
        case 'error':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(ErrorIcon__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'error.main'
                }
            });
            break;
        case 'no-data':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(NoDataIcon__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'primary.main'
                }
            });
            break;
        case 'no-data=payables':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(ReceiptLong__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'primary.main'
                }
            });
            break;
        case 'no-filter':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(SearchOffIcon__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'primary.main'
                }
            });
            break;
        case 'access-restricted':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(AccessRestrictedIcon__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'warning.main'
                }
            });
            break;
        case 'unsupported-country':
            defaultIcon = /*#__PURE__*/ jsxRuntime.jsx(HourglassEmptyIcon__default.default, {
                sx: {
                    fontSize: '4rem',
                    color: 'grey.500'
                }
            });
            break;
        case 'custom':
            defaultIcon = icon;
            break;
        default:
            defaultIcon = null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
        className: `${className}-Content`,
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
            alignItems: "center",
            spacing: 3,
            children: [
                defaultIcon && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    className: `${className}-Icon`,
                    children: defaultIcon
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                    alignItems: "center",
                    spacing: 1,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h3",
                            className: `${className}-Title`,
                            children: title
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body1",
                                    align: "center",
                                    className: `${className}-Description`,
                                    children: descriptionLine1
                                }),
                                descriptionLine2 && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body1",
                                    align: "center",
                                    className: `${className}-Description`,
                                    children: descriptionLine2
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(ActionButton, {
                    onAction: onAction,
                    actionButtonLabel: actionButtonLabel,
                    actionOptions: actionOptions,
                    type: type,
                    className: className
                })
            ]
        })
    });
};
const ActionButton = ({ onAction, actionButtonLabel, actionOptions = [], type, className = 'Monite-DataGridEmptyState' })=>{
    if (!actionButtonLabel) return null;
    const handleMenuItemClick = (option)=>{
        if (onAction) {
            onAction(option);
        }
    };
    return actionOptions.length > 1 ? /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                asChild: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    variant: "contained",
                    color: "primary",
                    sx: {
                        mt: 2
                    },
                    startIcon: type === 'error' ? /*#__PURE__*/ jsxRuntime.jsx(RefreshIcon__default.default, {}) : undefined,
                    endIcon: /*#__PURE__*/ jsxRuntime.jsx(ArrowDropDownIcon__default.default, {}),
                    className: `${className}-Button`,
                    children: actionButtonLabel
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuContent, {
                align: "end",
                children: actionOptions.map((option)=>/*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                        onClick: ()=>handleMenuItemClick(option),
                        children: option
                    }, option))
            })
        ]
    }) : /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
        variant: "contained",
        color: "primary",
        sx: {
            mt: 2
        },
        onClick: (event)=>{
            event.preventDefault();
            handleMenuItemClick(actionOptions === null || actionOptions === void 0 ? void 0 : actionOptions[0]);
        },
        startIcon: type === 'error' ? /*#__PURE__*/ jsxRuntime.jsx(RefreshIcon__default.default, {}) : undefined,
        className: `${className}-Button`,
        children: actionButtonLabel
    });
};

const GetNoRowsOverlay = ({ isLoading, dataLength, isFiltering, isSearching, isError, onCreate, refetch, entityName, noDataTitle, noDataDescription1, noDataDescription2, filterTitle, filterDescription1, filterDescription2, actionButtonLabel, actionOptions, onAction, className, type })=>{
    const { i18n } = react.useLingui();
    if (!isLoading && dataLength === 0 && (isFiltering || isSearching)) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: filterTitle || noDataTitle || i18n._({
                id: "XOnZEJ",
                values: {
                    entityName: entityName
                }
            }),
            descriptionLine1: filterDescription1 || '',
            descriptionLine2: filterDescription2 === null ? undefined : filterDescription2 || i18n._({
                id: "MBblDr"
            }),
            type: "no-filter",
            onAction: onAction,
            className: className
        });
    }
    if (!isLoading && dataLength === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: noDataTitle || i18n._({
                id: "qXy795",
                values: {
                    entityName: entityName
                }
            }),
            descriptionLine1: noDataDescription1 || i18n._({
                id: "GeTSU+",
                values: {
                    0: entityName.toLowerCase()
                }
            }),
            descriptionLine2: noDataDescription2 || i18n._({
                id: "nR9cab",
                values: {
                    0: entityName.toLowerCase()
                }
            }),
            actionOptions: actionOptions,
            actionButtonLabel: actionButtonLabel,
            onAction: (action)=>{
                if (!action) return;
                if (onCreate) onCreate(action);
            },
            type: type || 'no-data',
            className: className
        });
    }
    if (isError) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "5Xrexx",
                values: {
                    entityName: entityName
                }
            }),
            descriptionLine1: i18n._({
                id: "yVDNVY",
                values: {
                    0: entityName.toLowerCase()
                }
            }),
            descriptionLine2: i18n._({
                id: "PZCqeW"
            }),
            actionButtonLabel: i18n._({
                id: "HpK/8d"
            }),
            onAction: refetch,
            type: "error",
            className: className
        });
    }
    return null;
};

const AccessRestriction = (props)=>{
    const className = 'Monite-AccessRestriction';
    const dialogContext = useDialog();
    const { i18n } = react.useLingui();
    var _props_title;
    const title = (_props_title = props.title) !== null && _props_title !== void 0 ? _props_title : i18n._({
        id: "JSpjg7"
    });
    var _props_description;
    const description = (_props_description = props.description) !== null && _props_description !== void 0 ? _props_description : /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
        id: "+nl6Ta",
        components: {
            0: /*#__PURE__*/ jsxRuntime.jsx("br", {})
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            dialogContext && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: `mtw:flex mtw:justify-end mtw:p-4 ${className}-InDialog-Header`,
                children: /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                    onClick: dialogContext.onClose,
                    color: "inherit",
                    "aria-label": "close",
                    children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.X, {})
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                className: className + '-Content',
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:items-center mtw:space-y-4",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.LockKeyhole, {
                            className: "mtw:w-8 mtw:h-8 mtw:text-primary"
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:items-center mtw:space-y-2",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("h3", {
                                    className: "mtw:text-2xl mtw:font-semibold",
                                    children: title
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: "mtw:text-center",
                                    children: description
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};

function _define_property$3c(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3a(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3c(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$Y(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$Y(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$Y(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const buttonVariants = classVarianceAuthority.cva('mtw:inline-flex mtw:cursor-pointer mtw:items-center mtw:justify-center mtw:gap-2 mtw:whitespace-nowrap mtw:rounded-md mtw:text-sm mtw:font-medium mtw:transition-all mtw:disabled:pointer-events-none mtw:disabled:opacity-50 mtw:[&_svg]:pointer-events-none mtw:[&_svg:not([class*=size-])]:size-4 mtw:shrink-0 mtw:[&_svg]:shrink-0 mtw:outline-none mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:focus-visible:ring-[3px] mtw:aria-invalid:ring-destructive/20 mtw:dark:aria-invalid:ring-destructive/40 mtw:aria-invalid:border-destructive', {
    variants: {
        variant: {
            default: 'mtw:bg-primary mtw:text-primary-foreground mtw:shadow-xs mtw:hover:bg-primary/90',
            destructive: 'mtw:bg-destructive mtw:text-white mtw:shadow-xs mtw:hover:bg-destructive/90 mtw:focus-visible:ring-destructive/20 mtw:dark:focus-visible:ring-destructive/40 mtw:dark:bg-destructive/60',
            outline: 'mtw:border mtw:bg-background mtw:shadow-xs mtw:hover:bg-accent mtw:hover:text-accent-foreground mtw:dark:bg-input/30 mtw:dark:border-input mtw:dark:hover:bg-input/50',
            secondary: 'mtw:bg-secondary mtw:text-secondary-foreground mtw:shadow-xs mtw:hover:bg-secondary/80',
            ghost: 'mtw:hover:bg-accent mtw:hover:text-accent-foreground mtw:dark:hover:bg-accent/50',
            link: 'mtw:text-primary mtw:underline-offset-4 mtw:hover:underline'
        },
        size: {
            default: 'mtw:h-9 mtw:px-4 mtw:py-2 mtw:has-[>svg]:px-3',
            sm: 'mtw:h-8 mtw:rounded-md mtw:gap-1.5 mtw:px-3 mtw:has-[>svg]:px-2.5',
            lg: 'mtw:h-10 mtw:rounded-md mtw:px-6 mtw:has-[>svg]:px-4',
            icon: 'mtw:size-9'
        }
    },
    defaultVariants: {
        variant: 'default',
        size: 'default'
    }
});
const Button = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className, variant, size, asChild = false } = _param, props = _object_without_properties$Y(_param, [
        "className",
        "variant",
        "size",
        "asChild"
    ]);
    const Comp = asChild ? reactSlot.Slot : 'button';
    return /*#__PURE__*/ jsxRuntime.jsx(Comp, _object_spread$3a({
        "data-slot": "button",
        className: cn(buttonVariants({
            variant,
            size,
            className
        })),
        ref: ref
    }, props));
});
Button.displayName = 'Button';

function _define_property$3b(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$9() {
    _extends$9 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$9.apply(this, arguments);
}
function _object_destructuring_empty$9(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$39(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3b(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$21(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$21(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$21(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$X(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$X(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$X(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Dialog(_param) {
    var props = _extends$9({}, _object_destructuring_empty$9(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Root, _object_spread$39({
        "data-slot": "dialog"
    }, props));
}
function DialogPortal(_param) {
    var props = _extends$9({}, _object_destructuring_empty$9(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Portal, _object_spread$39({
        "data-slot": "dialog-portal"
    }, props));
}
function DialogOverlay(_param) {
    var { className } = _param, props = _object_without_properties$X(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Overlay, _object_spread$39({
        "data-slot": "dialog-overlay",
        className: cn('mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:fixed mtw:inset-0 mtw:z-1300 mtw:bg-black/50', className)
    }, props));
}
function DialogContent(_param) {
    var { className, children, showCloseButton = true, fullScreen = false } = _param, props = _object_without_properties$X(_param, [
        "className",
        "children",
        "showCloseButton",
        "fullScreen"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(DialogPortal, {
        "data-slot": "dialog-portal",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogOverlay, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(DialogPrimitive__namespace.Content, _object_spread_props$21(_object_spread$39({
                "data-slot": "dialog-content",
                className: cn('mtw:bg-background mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:data-[state=closed]:zoom-out-95 mtw:data-[state=open]:zoom-in-95 mtw:fixed mtw:top-[50%] mtw:left-[50%] mtw:z-1300 mtw:grid mtw:w-full mtw:max-w-[calc(100%-2rem)] mtw:translate-x-[-50%] mtw:translate-y-[-50%] mtw:gap-4 mtw:rounded-lg mtw:border mtw:p-6 mtw:shadow-lg mtw:duration-200 mtw:sm:max-w-lg', fullScreen && 'mtw:border-none mtw:rounded-none mtw:h-screen mtw:max-w-screen mtw:sm:max-w-screen', className)
            }, props), {
                children: [
                    children,
                    showCloseButton && /*#__PURE__*/ jsxRuntime.jsxs(DialogPrimitive__namespace.Close, {
                        "data-slot": "dialog-close",
                        className: "mtw:ring-offset-background mtw:focus:ring-ring mtw:data-[state=open]:bg-accent mtw:data-[state=open]:text-muted-foreground mtw:absolute mtw:top-4 mtw:right-4 mtw:rounded-xs mtw:opacity-70 mtw:transition-opacity mtw:hover:opacity-100 mtw:focus:ring-2 mtw:focus:ring-offset-2 mtw:focus:outline-hidden mtw:disabled:pointer-events-none mtw:[&_svg]:pointer-events-none mtw:[&_svg]:shrink-0 mtw:[&_svg:not([class*=size-])]:size-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(lucideReact.XIcon, {}),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: "mtw:sr-only",
                                children: "Close"
                            })
                        ]
                    })
                ]
            }))
        ]
    });
}
function DialogHeader$1(_param) {
    var { className } = _param, props = _object_without_properties$X(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$39({
        "data-slot": "dialog-header",
        className: cn('mtw:flex mtw:flex-col mtw:gap-2 mtw:text-center mtw:sm:text-left', className)
    }, props));
}
function DialogFooter$1(_param) {
    var { className } = _param, props = _object_without_properties$X(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$39({
        "data-slot": "dialog-footer",
        className: cn('mtw:flex mtw:flex-col-reverse mtw:gap-2 mtw:sm:flex-row mtw:sm:justify-end', className)
    }, props));
}
function DialogTitle(_param) {
    var { className } = _param, props = _object_without_properties$X(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Title, _object_spread$39({
        "data-slot": "dialog-title",
        className: cn('mtw:text-lg mtw:leading-none mtw:font-semibold', className)
    }, props));
}
function DialogDescription(_param) {
    var { className } = _param, props = _object_without_properties$X(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Description, _object_spread$39({
        "data-slot": "dialog-description",
        className: cn('mtw:text-muted-foreground mtw:text-sm', className)
    }, props));
}

const AccessRestrictionModal = ({ open, onClose })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(Dialog, {
        open: open,
        onOpenChange: onClose,
        children: /*#__PURE__*/ jsxRuntime.jsxs(DialogContent, {
            className: "mtw:p-8 mtw:pb-4 mtw:gap-12",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(DialogHeader$1, {
                    className: "mtw:gap-6",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                            className: "mtw:text-2xl mtw:font-semibold mtw:leading-8",
                            children: i18n._({
                                id: "gh5Lzt"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(DialogDescription, {
                            children: [
                                i18n._({
                                    id: "ZaU6RQ"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                i18n._({
                                    id: "hXIoNa"
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(DialogFooter$1, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                        onClick: onClose,
                        children: i18n._({
                            id: "yz7wBu"
                        })
                    })
                })
            ]
        })
    });
};

const LoadingPage = ()=>/*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
        className: "Monite-LoadingPage",
        children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {})
    });

function _define_property$3a(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$8() {
    _extends$8 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$8.apply(this, arguments);
}
function _object_destructuring_empty$8(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$38(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3a(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$20(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$20(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$20(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const componentName = 'MoniteTablePagination';
const DEFAULT_PAGE_SIZE = 10;
/**
 * Provides a pagination component for tables.
 * @param onPaginationModelChange Callback for when the prev/next page buttons are clicked, or when the page size is changed.
 * @param paginationModel The current pagination model. It should contain the current page and the page size.
 * @param nextPage The next page number. If undefined, the next page button will be disabled.
 * @param prevPage The previous page number. If undefined, the previous page button will be disabled.
 * @param pageSizeOptions The page size options. If not provided, will be used from theme or hidden if only one option is available.
 */ const TablePagination = ({ onPaginationModelChange, paginationModel, nextPage, prevPage, pageSizeOptions: inSizeOptionsProp, slotProps: inSlotProps, className })=>{
    var _slotProps_pageSizeSelect;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { pageSizeOptions, slotProps } = styles$2.useThemeProps({
        props: {
            pageSizeOptions: inSizeOptionsProp,
            slotProps: inSlotProps
        },
        name: componentName
    });
    var _pageSizeOptions_;
    const pageSize = 'pageSize' in paginationModel ? paginationModel.pageSize : (_pageSizeOptions_ = pageSizeOptions === null || pageSizeOptions === void 0 ? void 0 : pageSizeOptions[0]) !== null && _pageSizeOptions_ !== void 0 ? _pageSizeOptions_ : DEFAULT_PAGE_SIZE;
    const hasPageSizeSelect = pageSizeOptions && pageSizeOptions.length > 1;
    return /*#__PURE__*/ jsxRuntime.jsx(RootGrid, {
        container: true,
        mx: 2,
        boxSizing: "border-box",
        className: className,
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
            xs: 12,
            item: true,
            display: "flex",
            justifyContent: hasPageSizeSelect ? 'space-between' : 'center',
            pt: 0.5,
            pb: 1,
            alignItems: "center",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                            className: "Monite-TablePagination-PreviousPageButton",
                            "aria-label": i18n._({
                                id: "aHKcKc"
                            }),
                            disabled: !prevPage,
                            onClick: (event)=>{
                                event.preventDefault();
                                if (typeof prevPage === 'undefined') throw new Error('Previous page is not available');
                                onPaginationModelChange({
                                    page: prevPage,
                                    pageSize
                                });
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.ChevronLeft, {
                                fontSize: "small",
                                "aria-label": i18n._({
                                    id: "aHKcKc"
                                })
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                            className: "Monite-TablePagination-NextPageButton",
                            "aria-label": i18n._({
                                id: "/dqduX"
                            }),
                            disabled: !nextPage,
                            onClick: (event)=>{
                                event.preventDefault();
                                if (typeof nextPage === 'undefined') throw new Error('Next page is not available');
                                onPaginationModelChange({
                                    page: nextPage,
                                    pageSize
                                });
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.ChevronRight, {
                                fontSize: "small",
                                "aria-label": i18n._({
                                    id: "/dqduX"
                                })
                            })
                        })
                    ]
                }),
                hasPageSizeSelect && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            color: "text.secondary",
                            children: i18n._({
                                id: "L2fpNd"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(StyledSelect, _object_spread_props$20(_object_spread$38({
                                className: "Monite-RowsPerPageSelector"
                            }, slotProps === null || slotProps === void 0 ? void 0 : slotProps.pageSizeSelect), {
                                "aria-label": i18n._({
                                    id: "xxCtZv"
                                }),
                                MenuProps: _object_spread_props$20(_object_spread$38({}, slotProps === null || slotProps === void 0 ? void 0 : (_slotProps_pageSizeSelect = slotProps.pageSizeSelect) === null || _slotProps_pageSizeSelect === void 0 ? void 0 : _slotProps_pageSizeSelect.MenuProps), {
                                    container: root
                                }),
                                value: pageSize.toString(),
                                onChange: (event)=>void onPaginationModelChange({
                                        page: null,
                                        pageSize: parseInt(event.target.value, DEFAULT_PAGE_SIZE)
                                    }),
                                children: pageSizeOptions === null || pageSizeOptions === void 0 ? void 0 : pageSizeOptions.map((menuItem)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                        value: menuItem.toString(),
                                        children: menuItem
                                    }, menuItem))
                            }))
                        })
                    ]
                })
            ]
        })
    });
};
const RootGrid = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Grid, _object_spread$38({
        ref: ref
    }, props))), {
    name: componentName,
    slot: 'root',
    shouldForwardProp: ()=>true
})({});
const StyledSelect = styles$2.styled(/*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var restProps = _extends$8({}, _object_destructuring_empty$8(_param));
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Select, _object_spread_props$20(_object_spread$38({
        ref: ref
    }, restProps), {
        MenuProps: {
            container: root
        }
    }));
}), {
    name: componentName,
    slot: 'pageSizeSelect',
    shouldForwardProp: ()=>true
})({});

function hasSelectedText() {
    const selection = window.getSelection();
    return !!selection && !!selection.toString();
}

function _define_property$39(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$37(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$39(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1$(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1$(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1$(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CounterpartsTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartsTableBase, _object_spread$37({}, props))
    });
const CounterpartsTableBase = ({ onRowClick, onChangeSort: onChangeSortCallback, onChangeFilter: onChangeFilterCallback, showCategories = true, openModal })=>{
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.counterparts.pageSizeOptions[0]);
    const [currentSort] = React.useState(null);
    const [currentFilter, setCurrentFilter] = React.useState({});
    const [sortModel, setSortModel] = React.useState(undefined);
    /**
   * `isUpdateSupported` and `isDeleteSupported` should be defined by `created_by_entity_user_id` from counterpart record.
   * Currently, it is not possible, counterpart record does not have this parameter
   * https://monite.atlassian.net/browse/DEV-6311
   */ const { data: user } = useEntityUserByAuthToken();
    const { data: isReadSupported, isLoading: isReadSupportedLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: counterparts, isLoading, refetch, isError } = useCounterpartList({
        query: {
            sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
            order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
            limit: pageSize || undefined,
            pagination_token: currentPaginationToken || undefined,
            type: currentFilter[FILTER_TYPE_TYPE$1] || undefined,
            counterpart_name__icontains: currentFilter[FILTER_TYPE_SEARCH$4] || undefined,
            is_vendor: currentFilter[FILTER_TYPE_IS_CUSTOMER] === 'false' ? true : undefined,
            is_customer: currentFilter[FILTER_TYPE_IS_CUSTOMER] === 'true' ? true : undefined
        }
    });
    React.useEffect(()=>{
        refetch();
    }, [
        currentPaginationToken,
        currentSort,
        currentFilter,
        refetch
    ]);
    const onChangeSort = (m)=>{
        setSortModel(m[0]);
        setCurrentPaginationToken(null);
        onChangeSortCallback === null || onChangeSortCallback === void 0 ? void 0 : onChangeSortCallback(m[0]);
    };
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        setCurrentFilter((prevFilter)=>_object_spread_props$1$(_object_spread$37({}, prevFilter), {
                [field]: value === 'all' ? null : value
            }));
        onChangeFilterCallback && onChangeFilterCallback({
            field,
            value
        });
    };
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'counterpart_name',
                sortable: true,
                headerName: i18n._({
                    id: "np/2yA"
                }),
                display: 'flex',
                flex: 1,
                renderCell: (params)=>{
                    const counterpart = params.row;
                    return /*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCountryAddressCellById, {
                        counterpartId: counterpart.id
                    });
                }
            },
            {
                field: 'category',
                sortable: false,
                headerName: i18n._({
                    id: "K7tIrx"
                }),
                display: 'flex',
                flex: 0.6,
                renderCell: (params)=>{
                    const counterpart = params.row;
                    const { is_customer, is_vendor } = 'organization' in counterpart ? counterpart.organization : counterpart.individual;
                    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        direction: "row",
                        spacing: 1,
                        children: [
                            is_customer && /*#__PURE__*/ jsxRuntime.jsx(CounterpartStatusChip, {
                                status: "customer"
                            }),
                            is_vendor && /*#__PURE__*/ jsxRuntime.jsx(CounterpartStatusChip, {
                                status: "vendor"
                            })
                        ]
                    });
                }
            },
            {
                field: 'contacts',
                sortable: false,
                flex: 1,
                display: 'flex',
                headerName: i18n._({
                    id: "O3oNi5"
                }),
                renderCell: (params)=>{
                    const counterpart = params.row;
                    const { email } = 'organization' in counterpart ? counterpart.organization : counterpart.individual;
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        children: email
                    });
                }
            }
        ];
    }, [
        i18n
    ]);
    if (isReadSupportedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadSupported) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    const className = 'Monite-CounterpartsTable';
    const isFiltering = Object.keys(currentFilter).some((key)=>currentFilter[key] !== null && currentFilter[key] !== undefined);
    const isSearching = !!currentFilter[FILTER_TYPE_SEARCH$4];
    if (!isLoading && (counterparts === null || counterparts === void 0 ? void 0 : counterparts.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "FcQAR4"
            }),
            descriptionLine1: i18n._({
                id: "YNugMO"
            }),
            descriptionLine2: i18n._({
                id: "uN/mEu"
            }),
            actionButtonLabel: i18n._({
                id: "BOqY23"
            }),
            actionOptions: [
                i18n._({
                    id: "np/2yA"
                })
            ],
            onAction: ()=>{
                openModal === null || openModal === void 0 ? void 0 : openModal(true);
            },
            type: "no-data"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(Filters$4, {
                onChangeFilter: onChangeFilter,
                showCategories: showCategories,
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                rowSelection: false,
                disableColumnFilter: true,
                initialState: {
                    sorting: {
                        sortModel: sortModel && [
                            sortModel
                        ]
                    },
                    columns: {
                        columnVisibilityModel: {
                            category: showCategories
                        }
                    }
                },
                onSortModelChange: onChangeSort,
                loading: isLoading,
                rowHeight: 60,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id);
                    }
                },
                columnVisibilityModel: {
                    category: showCategories
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.counterparts.pageSizeOptions,
                            prevPage: counterparts === null || counterparts === void 0 ? void 0 : counterparts.prev_pagination_token,
                            nextPage: counterparts === null || counterparts === void 0 ? void 0 : counterparts.next_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (counterparts === null || counterparts === void 0 ? void 0 : counterparts.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            onCreate: (type)=>{
                                if (type === i18n._({
                                    id: "np/2yA"
                                })) {
                                    openModal === null || openModal === void 0 ? void 0 : openModal(true);
                                }
                            },
                            refetch: refetch,
                            entityName: i18n._({
                                id: "np/2yA"
                            }),
                            actionButtonLabel: i18n._({
                                id: "BOqY23"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "np/2yA"
                                })
                            ],
                            type: "no-data"
                        })
                },
                columns: columns,
                rows: (counterparts === null || counterparts === void 0 ? void 0 : counterparts.data) || []
            })
        ]
    });
};

const InlineSuggestionFill = ({ rawData, isHidden, fieldOnChange })=>{
    const { i18n } = react.useLingui();
    if (rawData && !isHidden) {
        return /*#__PURE__*/ jsxRuntime.jsxs("span", {
            className: "mtw:text-sm mtw:text-muted-foreground",
            children: [
                i18n._({
                    id: "CQDXe+"
                }),
                /*#__PURE__*/ jsxRuntime.jsx(Button, {
                    variant: "link",
                    size: "sm",
                    className: "mtw:ml-0.5 mtw:p-0 mtw:h-auto mtw:font-medium mtw:underline",
                    onClick: (event)=>{
                        event.preventDefault();
                        fieldOnChange(rawData);
                    },
                    children: rawData
                })
            ]
        });
    }
    return null;
};

/**
 * Safely accesses nested object properties using dot notation
 * @param obj - The object to access
 * @param path - The dot-separated path to the property (e.g., 'address.city')
 * @returns The value at the path, or undefined if the path doesn't exist
 */ const getNestedValue = (obj, path)=>{
    return path.split('.').reduce((acc, key)=>acc === null || acc === void 0 ? void 0 : acc[key], obj);
};

/**
 * Helper function to retrieve nested values from payableCounterpartRawData
 * @param rawData - The raw counterpart data object
 * @param rawKey - The key to retrieve (can be nested with dots)
 * @returns The value at the specified key, or undefined if not found
 */ const getRawValue = (rawData, rawKey)=>{
    return typeof rawKey === 'string' && rawKey.includes('.') ? getNestedValue(rawData, rawKey) : rawData[rawKey];
};
/**
 * Hook for handling inline suggestions from raw counterpart data.
 * Compares form values with raw data and provides utilities for updating fields.
 *
 * @template TFormValues - The type of form values (extends FieldValues)
 *
 * @param payableCounterpartRawData - Raw data from OCR or other sources
 * @param formValues - Current form values from React Hook Form
 * @param setValue - React Hook Form's setValue function
 * @param fieldsMapping - Mapping between form field names and raw data field paths
 *
 * @returns Object containing:
 * - fieldsEqual: Record of field names to boolean indicating if form value matches raw data
 * - allFieldsEqual: Boolean indicating if all mapped fields are equal
 * - updateFormWithRawData: Function to update all fields with raw data values
 *
 * @example
 * ```typescript
 * // Basic usage
 * const { fieldsEqual, allFieldsEqual, updateFormWithRawData } =
 *   usePayableCounterpartRawDataSuggestions(
 *     payableCounterpartRawData,
 *     formValues,
 *     setValue,
 *     {
 *       email: 'email',
 *       phone: 'phone',
 *       line1: 'address.line1',
 *       city: 'address.city',
 *     }
 *   );
 *
 * // Using the returned values
 * const showUpdateButton = !!payableCounterpartRawData && !allFieldsEqual;
 *
 * // In your JSX
 * <InlineSuggestionFill
 *   rawData={payableCounterpartRawData?.email}
 *   isHidden={fieldsEqual['email']}
 *   fieldOnChange={(value) => setValue('email', value)}
 * />
 *
 * {showUpdateButton && (
 *   <Button onClick={updateFormWithRawData}>
 *     Update to match bill
 *   </Button>
 * )}
 * ```
 */ const usePayableCounterpartRawDataSuggestions = (payableCounterpartRawData, formValues, setValue, fieldsMapping)=>{
    const { fieldsEqual, allFieldsEqual } = React.useMemo(()=>{
        if (!payableCounterpartRawData) return {
            fieldsEqual: {},
            allFieldsEqual: false
        };
        const fieldsEqual = {};
        Object.entries(fieldsMapping).forEach(([formField, rawKey])=>{
            const rawValue = getRawValue(payableCounterpartRawData, rawKey);
            // Consider no value as equal to avoid showing suggestions
            if (rawValue === undefined || rawValue === null) {
                fieldsEqual[formField] = true;
                return;
            }
            const formValue = formField.split('.').reduce((acc, key)=>acc === null || acc === void 0 ? void 0 : acc[key], formValues);
            fieldsEqual[formField] = formValue === rawValue;
        });
        const allFieldsEqual = Object.values(fieldsEqual).every((value)=>value);
        return {
            fieldsEqual,
            allFieldsEqual
        };
    }, [
        payableCounterpartRawData,
        formValues,
        fieldsMapping
    ]);
    const updateFormWithRawData = React.useCallback(()=>{
        if (!payableCounterpartRawData) return false;
        let anyChanged = false;
        Object.entries(fieldsMapping).forEach(([formField, rawKey])=>{
            const rawValue = getRawValue(payableCounterpartRawData, rawKey);
            const formValue = formField.split('.').reduce((acc, key)=>acc === null || acc === void 0 ? void 0 : acc[key], formValues);
            if (!!rawValue && formValue !== rawValue) {
                setValue(formField, rawValue);
                anyChanged = true;
            }
        });
        return anyChanged;
    }, [
        payableCounterpartRawData,
        formValues,
        setValue,
        fieldsMapping
    ]);
    return {
        fieldsEqual,
        allFieldsEqual,
        updateFormWithRawData
    };
};

const countries = {
    AF: 'AF',
    AX: 'AX',
    AL: 'AL',
    DZ: 'DZ',
    AS: 'AS',
    AD: 'AD',
    AO: 'AO',
    AI: 'AI',
    AQ: 'AQ',
    AG: 'AG',
    AR: 'AR',
    AM: 'AM',
    AW: 'AW',
    AU: 'AU',
    AT: 'AT',
    AZ: 'AZ',
    BS: 'BS',
    BH: 'BH',
    BD: 'BD',
    BB: 'BB',
    BL: 'BL',
    BY: 'BY',
    BE: 'BE',
    BZ: 'BZ',
    BJ: 'BJ',
    CW: 'CW',
    MF: 'MF',
    CX: 'CX',
    BM: 'BM',
    BT: 'BT',
    BO: 'BO',
    BA: 'BA',
    BW: 'BW',
    BV: 'BV',
    BR: 'BR',
    IO: 'IO',
    BN: 'BN',
    BG: 'BG',
    BF: 'BF',
    BI: 'BI',
    BQ: 'BQ',
    KH: 'KH',
    CM: 'CM',
    CA: 'CA',
    IC: 'IC',
    CV: 'CV',
    KY: 'KY',
    CF: 'CF',
    EA: 'EA',
    TD: 'TD',
    CL: 'CL',
    CN: 'CN',
    CC: 'CC',
    CO: 'CO',
    KM: 'KM',
    CG: 'CG',
    CD: 'CD',
    CK: 'CK',
    CR: 'CR',
    CI: 'CI',
    HR: 'HR',
    CU: 'CU',
    CY: 'CY',
    CZ: 'CZ',
    DK: 'DK',
    DJ: 'DJ',
    DM: 'DM',
    DO: 'DO',
    EC: 'EC',
    EG: 'EG',
    SV: 'SV',
    GQ: 'GQ',
    ER: 'ER',
    EE: 'EE',
    ET: 'ET',
    FK: 'FK',
    FO: 'FO',
    FJ: 'FJ',
    FI: 'FI',
    FR: 'FR',
    GF: 'GF',
    PF: 'PF',
    TF: 'TF',
    GA: 'GA',
    GM: 'GM',
    GE: 'GE',
    DE: 'DE',
    GH: 'GH',
    GI: 'GI',
    GR: 'GR',
    GL: 'GL',
    GD: 'GD',
    GP: 'GP',
    GU: 'GU',
    GT: 'GT',
    GG: 'GG',
    GN: 'GN',
    GW: 'GW',
    GY: 'GY',
    HT: 'HT',
    HM: 'HM',
    VA: 'VA',
    HN: 'HN',
    HK: 'HK',
    HU: 'HU',
    IS: 'IS',
    IN: 'IN',
    ID: 'ID',
    IR: 'IR',
    IQ: 'IQ',
    IE: 'IE',
    IM: 'IM',
    IL: 'IL',
    IT: 'IT',
    JM: 'JM',
    JP: 'JP',
    JE: 'JE',
    JO: 'JO',
    KZ: 'KZ',
    KE: 'KE',
    KI: 'KI',
    KP: 'KP',
    KR: 'KR',
    KW: 'KW',
    KG: 'KG',
    LA: 'LA',
    LV: 'LV',
    LB: 'LB',
    LS: 'LS',
    LR: 'LR',
    LY: 'LY',
    LI: 'LI',
    LT: 'LT',
    LU: 'LU',
    MO: 'MO',
    MK: 'MK',
    MG: 'MG',
    MW: 'MW',
    MY: 'MY',
    MV: 'MV',
    ML: 'ML',
    MT: 'MT',
    MH: 'MH',
    MQ: 'MQ',
    MR: 'MR',
    MU: 'MU',
    YT: 'YT',
    MX: 'MX',
    FM: 'FM',
    MD: 'MD',
    MC: 'MC',
    ME: 'ME',
    MN: 'MN',
    MS: 'MS',
    MA: 'MA',
    MZ: 'MZ',
    MM: 'MM',
    NA: 'NA',
    NR: 'NR',
    NP: 'NP',
    NL: 'NL',
    AN: 'AN',
    NC: 'NC',
    NZ: 'NZ',
    NI: 'NI',
    NE: 'NE',
    NG: 'NG',
    NU: 'NU',
    NF: 'NF',
    MP: 'MP',
    NO: 'NO',
    OM: 'OM',
    PK: 'PK',
    PW: 'PW',
    PS: 'PS',
    PA: 'PA',
    PG: 'PG',
    PY: 'PY',
    PE: 'PE',
    PH: 'PH',
    PN: 'PN',
    PL: 'PL',
    PT: 'PT',
    PR: 'PR',
    QA: 'QA',
    RE: 'RE',
    RO: 'RO',
    RS: 'RS',
    RU: 'RU',
    RW: 'RW',
    SH: 'SH',
    KN: 'KN',
    LC: 'LC',
    PM: 'PM',
    VC: 'VC',
    WS: 'WS',
    SM: 'SM',
    ST: 'ST',
    SA: 'SA',
    SN: 'SN',
    SS: 'SS',
    SC: 'SC',
    SL: 'SL',
    SG: 'SG',
    SK: 'SK',
    SI: 'SI',
    SB: 'SB',
    SO: 'SO',
    SX: 'SX',
    ZA: 'ZA',
    GS: 'GS',
    ES: 'ES',
    LK: 'LK',
    SD: 'SD',
    SR: 'SR',
    SJ: 'SJ',
    SZ: 'SZ',
    SE: 'SE',
    CH: 'CH',
    SY: 'SY',
    TW: 'TW',
    TJ: 'TJ',
    TZ: 'TZ',
    TH: 'TH',
    TL: 'TL',
    TG: 'TG',
    TK: 'TK',
    TO: 'TO',
    TT: 'TT',
    TN: 'TN',
    TR: 'TR',
    TM: 'TM',
    TC: 'TC',
    TV: 'TV',
    UG: 'UG',
    UA: 'UA',
    AE: 'AE',
    GB: 'GB',
    US: 'US',
    UM: 'UM',
    UY: 'UY',
    UZ: 'UZ',
    VU: 'VU',
    VE: 'VE',
    VN: 'VN',
    VG: 'VG',
    VI: 'VI',
    WF: 'WF',
    EH: 'EH',
    YE: 'YE',
    ZM: 'ZM',
    ZW: 'ZW'
};
const AllowedCountries = Object.values(countries);

const schema$6 = {
    ae_trn: 'ae_trn',
    au_abn: 'au_abn',
    au_arn: 'au_arn',
    bg_uic: 'bg_uic',
    br_cnpj: 'br_cnpj',
    br_cpf: 'br_cpf',
    ca_bn: 'ca_bn',
    ca_gst_hst: 'ca_gst_hst',
    ca_pst_bc: 'ca_pst_bc',
    ca_pst_mb: 'ca_pst_mb',
    ca_pst_sk: 'ca_pst_sk',
    ca_qst: 'ca_qst',
    ch_vat: 'ch_vat',
    cl_tin: 'cl_tin',
    es_cif: 'es_cif',
    eu_oss_vat: 'eu_oss_vat',
    eu_vat: 'eu_vat',
    gb_vat: 'gb_vat',
    ge_vat: 'ge_vat',
    hk_br: 'hk_br',
    hu_tin: 'hu_tin',
    id_npwp: 'id_npwp',
    il_vat: 'il_vat',
    in_gst: 'in_gst',
    is_vat: 'is_vat',
    jp_cn: 'jp_cn',
    jp_rn: 'jp_rn',
    kr_brn: 'kr_brn',
    li_uid: 'li_uid',
    mx_rfc: 'mx_rfc',
    my_frp: 'my_frp',
    my_itn: 'my_itn',
    my_sst: 'my_sst',
    no_vat: 'no_vat',
    nz_gst: 'nz_gst',
    ru_inn: 'ru_inn',
    ru_kpp: 'ru_kpp',
    sa_vat: 'sa_vat',
    sg_gst: 'sg_gst',
    sg_uen: 'sg_uen',
    si_tin: 'si_tin',
    th_vat: 'th_vat',
    tw_vat: 'tw_vat',
    ua_vat: 'ua_vat',
    us_ein: 'us_ein',
    za_vat: 'za_vat',
    unknown: 'unknown'
};
const VatIDTypeEnum = Object.values(schema$6);

const getValidationSchema$5 = (i18n)=>zod.z.object({
        country: zod.z.enum(AllowedCountries),
        type: zod.z.enum(VatIDTypeEnum),
        value: zod.z.string().min(1, i18n._({
            id: "sAi6o+"
        }))
    });

function useCounterpartVatForm({ counterpartId, vatId, onCreate, onUpdate, payableCounterpartRawData }) {
    const { data: counterpart, isLoading: isCounterpartLoading } = useCounterpartById(counterpartId);
    const { data: vat, isLoading: isVatLoading } = useCounterpartVatById(counterpartId, vatId);
    const createVatMutation = useCreateCounterpartVat();
    const updateVatMutation = useUpdateCounterpartVat();
    const { i18n } = react.useLingui();
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getValidationSchema$5(i18n)),
        defaultValues: React.useMemo(()=>{
            var _vat_value;
            return {
                country: vat === null || vat === void 0 ? void 0 : vat.country,
                type: vat === null || vat === void 0 ? void 0 : vat.type,
                value: (_vat_value = vat === null || vat === void 0 ? void 0 : vat.value) !== null && _vat_value !== void 0 ? _vat_value : ''
            };
        }, [
            vat
        ])
    });
    React.useEffect(()=>{
        const resetForm = methods.reset;
        if (vat) resetForm(vat);
    }, [
        methods.reset,
        vat,
        i18n
    ]);
    const createVat = React.useCallback((payload)=>{
        return createVatMutation.mutateAsync({
            path: {
                counterpart_id: counterpartId
            },
            body: payload
        }, {
            onSuccess: ({ id })=>{
                onCreate && onCreate(id);
            }
        });
    }, [
        counterpartId,
        createVatMutation,
        onCreate
    ]);
    const updateVat = React.useCallback((payload)=>{
        if (!vat) return;
        return updateVatMutation.mutate({
            path: {
                counterpart_id: counterpartId,
                vat_id: vat.id
            },
            body: payload
        }, {
            onSuccess: ({ id })=>{
                onUpdate && onUpdate(id);
            }
        });
    }, [
        vat,
        updateVatMutation,
        counterpartId,
        onUpdate
    ]);
    const saveVat = React.useCallback(({ country, type, value })=>{
        const payload = {
            country: country,
            type: type,
            value
        };
        return vat ? updateVat(payload) : createVat(payload);
    }, [
        vat,
        updateVat,
        createVat
    ]);
    return {
        methods,
        saveVat,
        counterpart,
        vat,
        isLoading: createVatMutation.isPending || updateVatMutation.isPending || isCounterpartLoading || isVatLoading,
        error: createVatMutation.error || updateVatMutation.error,
        payableCounterpartRawData
    };
}

const useVatTypeLabelByCode = (code)=>{
    var _vatType_find;
    const { i18n } = react.useLingui();
    const vatType = useVatTypes();
    if (!code) return i18n._({
        id: "Ef7StM"
    });
    return ((_vatType_find = vatType.find((type)=>type.code === code)) === null || _vatType_find === void 0 ? void 0 : _vatType_find.label) || i18n._({
        id: "Ef7StM"
    });
};
const useVatTypes = ()=>{
    const { i18n } = react.useLingui();
    return [
        {
            code: 'ae_trn',
            label: i18n._({
                id: "+r44uz"
            })
        },
        {
            code: 'au_abn',
            label: i18n._({
                id: "np3t06"
            })
        },
        {
            code: 'au_arn',
            label: i18n._({
                id: "MC+UcD"
            })
        },
        {
            code: 'bg_uic',
            label: i18n._({
                id: "j1F5x4"
            })
        },
        {
            code: 'br_cnpj',
            label: i18n._({
                id: "3SHNmn"
            })
        },
        {
            code: 'br_cpf',
            label: i18n._({
                id: "Wje2rF"
            })
        },
        {
            code: 'ca_bn',
            label: i18n._({
                id: "8mKvV1"
            })
        },
        {
            code: 'ca_gst_hst',
            label: i18n._({
                id: "ZJweaV"
            })
        },
        {
            code: 'ca_pst_bc',
            label: i18n._({
                id: "Yd4qWl"
            })
        },
        {
            code: 'ca_pst_mb',
            label: i18n._({
                id: "npseWo"
            })
        },
        {
            code: 'ca_pst_sk',
            label: i18n._({
                id: "vzj8gL"
            })
        },
        {
            code: 'ca_qst',
            label: i18n._({
                id: "16rK7G"
            })
        },
        {
            code: 'ch_vat',
            label: i18n._({
                id: "ITtI9G"
            })
        },
        {
            code: 'cl_tin',
            label: i18n._({
                id: "LOl1PQ"
            })
        },
        {
            code: 'es_cif',
            label: i18n._({
                id: "rPDQQK"
            })
        },
        {
            code: 'eu_oss_vat',
            label: i18n._({
                id: "YJy3qA"
            })
        },
        {
            code: 'eu_vat',
            label: i18n._({
                id: "r2evaI"
            })
        },
        {
            code: 'gb_vat',
            label: i18n._({
                id: "tInLbE"
            })
        },
        {
            code: 'ge_vat',
            label: i18n._({
                id: "F9M2fD"
            })
        },
        {
            code: 'hk_br',
            label: i18n._({
                id: "Qo+afj"
            })
        },
        {
            code: 'hu_tin',
            label: i18n._({
                id: "0uN3hk"
            })
        },
        {
            code: 'id_npwp',
            label: i18n._({
                id: "AAuEV/"
            })
        },
        {
            code: 'il_vat',
            label: i18n._({
                id: "8s5Va2"
            })
        },
        {
            code: 'in_gst',
            label: i18n._({
                id: "3GI0LB"
            })
        },
        {
            code: 'is_vat',
            label: i18n._({
                id: "XmRZR1"
            })
        },
        {
            code: 'jp_cn',
            label: i18n._({
                id: "gpr5Nc"
            })
        },
        {
            code: 'jp_rn',
            label: i18n._({
                id: "AwrjXY"
            })
        },
        {
            code: 'kr_brn',
            label: i18n._({
                id: "86saq4"
            })
        },
        {
            code: 'li_uid',
            label: i18n._({
                id: "XhzAfk"
            })
        },
        {
            code: 'mx_rfc',
            label: i18n._({
                id: "x5OxFe"
            })
        },
        {
            code: 'my_frp',
            label: i18n._({
                id: "tMk9hc"
            })
        },
        {
            code: 'my_itn',
            label: i18n._({
                id: "OtNQEq"
            })
        },
        {
            code: 'my_sst',
            label: i18n._({
                id: "AXnS/Y"
            })
        },
        {
            code: 'no_vat',
            label: i18n._({
                id: "eX9J2M"
            })
        },
        {
            code: 'nz_gst',
            label: i18n._({
                id: "gervVv"
            })
        },
        {
            code: 'ru_inn',
            label: i18n._({
                id: "7EZZzq"
            })
        },
        {
            code: 'ru_kpp',
            label: i18n._({
                id: "kNHqSR"
            })
        },
        {
            code: 'sa_vat',
            label: i18n._({
                id: "Frs6n+"
            })
        },
        {
            code: 'sg_gst',
            label: i18n._({
                id: "QqXGUk"
            })
        },
        {
            code: 'sg_uen',
            label: i18n._({
                id: "WXMLLy"
            })
        },
        {
            code: 'si_tin',
            label: i18n._({
                id: "WQSL1h"
            })
        },
        {
            code: 'th_vat',
            label: i18n._({
                id: "wOvEXk"
            })
        },
        {
            code: 'tw_vat',
            label: i18n._({
                id: "mAnvri"
            })
        },
        {
            code: 'ua_vat',
            label: i18n._({
                id: "0F7Gar"
            })
        },
        {
            code: 'us_ein',
            label: i18n._({
                id: "24BqWB"
            })
        },
        {
            code: 'za_vat',
            label: i18n._({
                id: "sCj2fE"
            })
        },
        {
            code: 'unknown',
            label: i18n._({
                id: "Ef7StM"
            })
        }
    ];
};

function _define_property$38(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$36(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$38(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1_(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1_(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1_(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$W(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$W(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$W(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFAutocomplete = (_param)=>{
    var { control, name, label, renderInput, optionKey, labelKey, options, required, slotProps, rules, shouldUnregister, disabled, defaultValue, onChange } = _param, other = _object_without_properties$W(_param, [
        "control",
        "name",
        "label",
        "renderInput",
        "optionKey",
        "labelKey",
        "options",
        "required",
        "slotProps",
        "rules",
        "shouldUnregister",
        "disabled",
        "defaultValue",
        "onChange"
    ]);
    const getRenderInput = (error)=>{
        if (renderInput) {
            return (params)=>renderInput(params, {
                    error,
                    label,
                    required
                });
        }
        return (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1_(_object_spread$36({}, params), {
                variant: "standard",
                required: required,
                label: label,
                error: !!(error === null || error === void 0 ? void 0 : error.message),
                helperText: error === null || error === void 0 ? void 0 : error.message,
                inputProps: _object_spread_props$1_(_object_spread$36({}, params.inputProps), {
                    autoComplete: 'new-password'
                })
            }));
    };
    const getChangedValue = (value)=>{
        if (!value) return '';
        if (typeof value === 'string') return value;
        if (Array.isArray(value)) return value;
        if (optionKey) return String(value[optionKey]);
        return value;
    };
    /**
   * getValue is used to get value from options
   * !!! Note !!! now we support only single value, but we should support multiple values
   */ const getValue = (value)=>{
        if (!value) return null;
        var _options_find;
        if (optionKey) return (_options_find = options.find((option)=>String(option[optionKey]) === String(value))) !== null && _options_find !== void 0 ? _options_find : null;
        var _options_find1;
        return (_options_find1 = options.find((option)=>String(option) === String(value))) !== null && _options_find1 !== void 0 ? _options_find1 : null;
    };
    const getOptionLabel = (option)=>{
        if (typeof option === 'string') return option;
        if (!labelKey) return '';
        return `${option[labelKey]}`;
    };
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        rules: rules,
        shouldUnregister: shouldUnregister,
        disabled: disabled,
        defaultValue: defaultValue,
        render: ({ field, fieldState: { error, isTouched }, formState: { isValid } })=>/*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$1_(_object_spread$36({}, field, other), {
                slotProps: _object_spread_props$1_(_object_spread$36({}, slotProps), {
                    popper: _object_spread_props$1_(_object_spread$36({}, slotProps === null || slotProps === void 0 ? void 0 : slotProps.popper), {
                        container: root
                    })
                }),
                options: options,
                blurOnSelect: true,
                onChange: (event, value, reason, details)=>{
                    field.onChange(getChangedValue(value));
                    onChange === null || onChange === void 0 ? void 0 : onChange(event, value, reason, details);
                },
                value: getValue(field.value),
                id: name,
                getOptionLabel: getOptionLabel,
                renderInput: getRenderInput(isTouched || !isValid ? error : undefined)
            }))
    });
};

function _define_property$37(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$35(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$37(target, key, source[key]);
        });
    }
    return target;
}
const CountryFlag = ({ code, label, width = '20', className, boxProps })=>{
    const imgProps = {
        className,
        loading: 'lazy',
        width,
        src: `https://flagcdn.com/w${width}/${code.toLowerCase()}.png`,
        // eslint-disable-next-line lingui/no-unlocalized-strings
        srcSet: `https://flagcdn.com/w${parseInt(width) * 2}/${code.toLowerCase()}.png 2x`,
        alt: label
    };
    if (boxProps) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, _object_spread$35({
            component: "img"
        }, imgProps, boxProps));
    }
    return /*#__PURE__*/ jsxRuntime.jsx("img", _object_spread$35({}, imgProps));
};

function _define_property$36(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$34(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$36(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1Z(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1Z(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1Z(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CountryOption = ({ props, option, state, showFlag = true })=>{
    const { inputValue } = state;
    const parts = option.label.split(new RegExp(`(${inputValue})`, 'gi'));
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, _object_spread_props$1Z(_object_spread$34({
        component: "li",
        sx: {
            '& > img': {
                mr: 2,
                flexShrink: 0
            }
        }
    }, props), {
        children: [
            showFlag && /*#__PURE__*/ jsxRuntime.jsx(CountryFlag, {
                code: option.code,
                label: option.label
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    display: 'flex',
                    flexDirection: 'column'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body2",
                    children: parts.map((part, index)=>{
                        const isMatch = part.toLowerCase() === inputValue.toLowerCase();
                        return /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            component: "span",
                            sx: {
                                fontWeight: isMatch ? 'bolder' : 'regular'
                            },
                            children: part
                        }, `${part}-${index}-${isMatch ? 'match' : 'nomatch'}`);
                    })
                })
            })
        ]
    }));
};

function _define_property$35(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$33(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$35(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1Y(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1Y(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1Y(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$V(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$V(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$V(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const CountryInput = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { showFlag = true, currentValue, label, required, InputProps, inputProps, error, helperText } = _param, rest = _object_without_properties$V(_param, [
        "showFlag",
        "currentValue",
        "label",
        "required",
        "InputProps",
        "inputProps",
        "error",
        "helperText"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1Y(_object_spread$33({}, rest), {
        ref: ref,
        label: label,
        required: required,
        error: error,
        helperText: helperText,
        inputProps: _object_spread_props$1Y(_object_spread$33({}, inputProps), {
            autoComplete: 'new-password'
        }),
        InputProps: _object_spread_props$1Y(_object_spread$33({}, InputProps), {
            startAdornment: showFlag && currentValue && typeof currentValue.code === 'string' ? /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                position: "start",
                sx: {
                    ml: 1,
                    mr: -0.5
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(CountryFlag, {
                    code: currentValue.code,
                    label: currentValue.label || currentValue.code
                })
            }) : InputProps === null || InputProps === void 0 ? void 0 : InputProps.startAdornment
        })
    }));
});

function _define_property$34(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$32(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$34(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1X(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1X(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1X(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$U(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$U(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$U(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const MoniteCountry = (_param)=>{
    var { disabled, required, label, hideLabel = false, fullWidth, name, control, defaultValue, rules, shouldUnregister, countryOptions: customCountryOptions, allowedCountries, showFlag = true, onChange: customOnChange } = _param, props = _object_without_properties$U(_param, [
        "disabled",
        "required",
        "label",
        "hideLabel",
        "fullWidth",
        "name",
        "control",
        "defaultValue",
        "rules",
        "shouldUnregister",
        "countryOptions",
        "allowedCountries",
        "showFlag",
        "onChange"
    ]);
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { field, fieldState } = reactHookForm.useController({
        name,
        control
    });
    const countryLabel = label !== null && label !== void 0 ? label : i18n._({
        id: "JNCzPW"
    });
    const renderInput = (params)=>{
        var _fieldState_error;
        return /*#__PURE__*/ jsxRuntime.jsx(CountryInput, _object_spread_props$1X(_object_spread$32({}, params), {
            ref: params.InputProps.ref,
            error: Boolean(fieldState.error),
            helperText: (_fieldState_error = fieldState.error) === null || _fieldState_error === void 0 ? void 0 : _fieldState_error.message,
            required: required,
            label: countryLabel,
            currentValue: field.value,
            showFlag: showFlag
        }));
    };
    const countryOptions = React.useMemo(()=>{
        var _componentSettings_receivables;
        const baseOptions = customCountryOptions !== null && customCountryOptions !== void 0 ? customCountryOptions : getCountriesArray(i18n);
        if (allowedCountries) {
            return baseOptions.filter((countryItem)=>allowedCountries.includes(countryItem.code));
        }
        if (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.bankAccountCountries) {
            return baseOptions.filter((countryItem)=>{
                var _componentSettings_receivables_bankAccountCountries;
                return (_componentSettings_receivables_bankAccountCountries = componentSettings.receivables.bankAccountCountries) === null || _componentSettings_receivables_bankAccountCountries === void 0 ? void 0 : _componentSettings_receivables_bankAccountCountries.includes(countryItem.code);
            });
        }
        return baseOptions;
    }, [
        componentSettings,
        customCountryOptions,
        allowedCountries,
        i18n
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, _object_spread_props$1X(_object_spread$32({}, props), {
        name: name,
        control: control,
        defaultValue: defaultValue,
        rules: rules,
        shouldUnregister: shouldUnregister,
        onChange: customOnChange,
        disabled: disabled,
        readOnly: (countryOptions === null || countryOptions === void 0 ? void 0 : countryOptions.length) === 1,
        className: `Monite-Country ${hideLabel ? 'Monite-Label-Hidden' : ''}`,
        label: countryLabel,
        options: countryOptions,
        optionKey: "code",
        labelKey: "label",
        fullWidth: fullWidth,
        renderInput: renderInput,
        renderOption: (props, option, state)=>{
            var _state_inputValue;
            return /*#__PURE__*/ jsxRuntime.jsx(CountryOption, {
                props: props,
                option: option,
                state: {
                    inputValue: (_state_inputValue = state === null || state === void 0 ? void 0 : state.inputValue) !== null && _state_inputValue !== void 0 ? _state_inputValue : ''
                },
                showFlag: showFlag
            }, option.code);
        }
    }));
};

function _define_property$33(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$31(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$33(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1W(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1W(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1W(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * DialogFooter is a flexible component for rendering dialog action buttons.
 *
 * It supports primary, secondary, delete, and cancel actions with loading states
 * and form submission capabilities.
 *
 * Layout:
 * - Left: Delete button (if configured) | Secondary button (if configured)
 * - Right: Cancel (if not hidden) | Secondary (if configured) | Primary (if configured)
 *
 * The secondary button can be placed on right (default) or left side of the footer.
 *
 * @component
 * @example
 * ```tsx
 * <DialogFooter
 *   primaryButton={{
 *     label: "Save",
 *     onClick: handleSave,
 *     isLoading: isSaving
 *   }}
 *   secondaryButton={{
 *     label: "Preview",
 *     onClick: handlePreview
 *     onTheLeft: true
 *   }}
 *   cancelButton={{
 *     onClick: handleClose
 *   }}
 *   deleteButton={{
 *     label: "Delete",
 *     onClick: handleDelete,
 *     isLoading: isDeleting
 *   }}
 * />
 * ```
 */ const DialogFooter = ({ deleteButton, primaryButton, secondaryButton, cancelButton, showDivider = true })=>{
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const isSubmitButton = (button)=>{
        return 'formId' in button;
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            showDivider && /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                sx: {
                    display: 'flex',
                    justifyContent: 'space-between',
                    width: '100%'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        direction: "row",
                        spacing: 2,
                        children: [
                            deleteButton && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                color: "error",
                                onClick: deleteButton.onClick,
                                disabled: deleteButton.isDisabled || deleteButton.isLoading,
                                children: deleteButton.isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    color: "inherit",
                                    size: 20
                                }) : deleteButton.label || i18n._({
                                    id: "cnGeoo"
                                })
                            }),
                            (secondaryButton === null || secondaryButton === void 0 ? void 0 : secondaryButton.onTheLeft) && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                color: "primary",
                                onClick: secondaryButton.onClick,
                                disabled: secondaryButton.isDisabled || secondaryButton.isLoading,
                                children: secondaryButton.isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    color: "inherit",
                                    size: 20
                                }) : secondaryButton.label
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        direction: "row",
                        spacing: 2,
                        children: [
                            !(cancelButton === null || cancelButton === void 0 ? void 0 : cancelButton.hideCancel) && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                color: "primary",
                                onClick: (cancelButton === null || cancelButton === void 0 ? void 0 : cancelButton.onClick) || (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose),
                                disabled: (primaryButton === null || primaryButton === void 0 ? void 0 : primaryButton.isLoading) || (secondaryButton === null || secondaryButton === void 0 ? void 0 : secondaryButton.isLoading) || (deleteButton === null || deleteButton === void 0 ? void 0 : deleteButton.isLoading),
                                children: (cancelButton === null || cancelButton === void 0 ? void 0 : cancelButton.label) || i18n._({
                                    id: "dEgA5A"
                                })
                            }),
                            secondaryButton && !secondaryButton.onTheLeft && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                color: "primary",
                                onClick: secondaryButton.onClick,
                                disabled: secondaryButton.isDisabled || secondaryButton.isLoading,
                                children: secondaryButton.isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    color: "inherit",
                                    size: 20
                                }) : secondaryButton.label
                            }),
                            primaryButton && /*#__PURE__*/ jsxRuntime.jsx(material.Button, _object_spread_props$1W(_object_spread$31({
                                variant: "contained",
                                color: "primary"
                            }, isSubmitButton(primaryButton) ? {
                                type: 'submit',
                                form: primaryButton.formId
                            } : {
                                type: 'button',
                                onClick: primaryButton.onClick
                            }), {
                                disabled: primaryButton.isDisabled || primaryButton.isLoading,
                                children: primaryButton.isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    color: "inherit",
                                    size: 20
                                }) : primaryButton.label
                            }))
                        ]
                    })
                ]
            })
        ]
    });
};

function _define_property$32(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$30(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$32(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1V(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1V(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1V(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DialogHeaderBreadcrumbs = /*#__PURE__*/ React.memo(({ previousLevelTitle, onPreviousLevelClick, title })=>/*#__PURE__*/ jsxRuntime.jsxs(material.Breadcrumbs, {
        color: "inherit",
        separator: /*#__PURE__*/ jsxRuntime.jsx(ArrowForwardIcon__default.default, {
            fontSize: "small",
            color: "disabled"
        }),
        sx: {
            padding: 3
        },
        "aria-label": "breadcrumb",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                onClick: onPreviousLevelClick,
                sx: {
                    cursor: onPreviousLevelClick ? 'pointer' : 'default'
                },
                children: previousLevelTitle
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                children: title
            })
        ]
    }));
/**
 * DialogHeader renders the header section of a dialog/modal with support for two levels of dialogs:
 * 1. Primary level: Shows a title and close (X) button
 * 2. Secondary level: Can have two layouts:
 *    - If passed previousLevelTitle, shows breadcrumb navigation with previous level title and current title
 *    - Else, shows only the current title
 *
 * Note: For secondary level dialogs, the close (X) button is not shown. A cancel button is expected to be
 * present in the dialog content (for example, with the DialogFooter component).
 *
 * @component
 * @example
 * ```tsx
 * <DialogHeader
 *   title="Edit addresss"
 *   previousLevelTitle="Counterpart"
 * />
 * ```
 */ const DialogHeader = /*#__PURE__*/ React.memo(({ title, secondaryLevel = false, previousLevelTitle, closeButtonTooltip, showDivider = true, closeSecondaryLevelDialog })=>{
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const showCloseButton = (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.isDialogContent) && !secondaryLevel;
    const closeButtonLabel = closeButtonTooltip || i18n._({
        id: "cu6iol"
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                alignItems: "center",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 11,
                        children: secondaryLevel && previousLevelTitle ? /*#__PURE__*/ jsxRuntime.jsx(DialogHeaderBreadcrumbs, {
                            previousLevelTitle: previousLevelTitle,
                            title: title,
                            onPreviousLevelClick: closeSecondaryLevelDialog
                        }) : /*#__PURE__*/ jsxRuntime.jsx(StyledDialogTitle$1, {
                            variant: "h3",
                            children: title
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 1,
                        children: showCloseButton && /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            color: "inherit",
                            onClick: dialogContext.onClose,
                            ariaLabelOverride: closeButtonLabel,
                            tooltip: closeButtonLabel,
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    })
                ]
            }),
            showDivider && /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {})
        ]
    });
});
const StyledDialogTitle$1 = material.styled(material.DialogTitle)(({ theme })=>({
        '&.MuiDialogTitle-root.MuiTypography-root': _object_spread_props$1V(_object_spread$30({}, theme.typography.h3), {
            padding: theme.spacing(3)
        })
    }));

function _define_property$31(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2$(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$31(target, key, source[key]);
        });
    }
    return target;
}
const vatFieldsMapping = {
    country: 'vat_id.country',
    type: 'vat_id.type',
    value: 'vat_id.value'
};
const CounterpartVatForm = (props)=>{
    var _payableCounterpartRawData_vat_id;
    const { i18n } = react.useLingui();
    const { methods: { control, handleSubmit, setValue, watch }, counterpart, vat, saveVat, isLoading, payableCounterpartRawData } = useCounterpartVatForm(props);
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const formName = `Monite-Form-counterpartVat-${React.useId()}`;
    const values = watch();
    const { fieldsEqual, allFieldsEqual, updateFormWithRawData } = usePayableCounterpartRawDataSuggestions(payableCounterpartRawData, values, setValue, vatFieldsMapping);
    const showFillMatchBillButton = !!(payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.vat_id) && !allFieldsEqual;
    const vatTypes = useVatTypes();
    if (!counterpart) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                previousLevelTitle: getCounterpartName(counterpart),
                title: vat ? i18n._({
                    id: "DVvbK7"
                }) : i18n._({
                    id: "kRYxEt"
                }),
                closeSecondaryLevelDialog: props.onCancel
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                    id: formName,
                    onSubmit: handleSubmit(saveVat),
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        spacing: 3,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                                        name: "country",
                                        control: control,
                                        disabled: isLoading,
                                        required: true
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_vat_id = payableCounterpartRawData.vat_id) === null || _payableCounterpartRawData_vat_id === void 0 ? void 0 : _payableCounterpartRawData_vat_id.country,
                                        isHidden: fieldsEqual['country'],
                                        fieldOnChange: (value)=>setValue('country', value)
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "type",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_vat_id;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, {
                                                name: "type",
                                                disabled: isLoading,
                                                control: control,
                                                label: i18n._({
                                                    id: "BDiIpw"
                                                }),
                                                options: vatTypes,
                                                optionKey: "code",
                                                labelKey: "label",
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_vat_id = payableCounterpartRawData.vat_id) === null || _payableCounterpartRawData_vat_id === void 0 ? void 0 : _payableCounterpartRawData_vat_id.type,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "value",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_vat_id;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2$({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "vkewyf"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                disabled: isLoading
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_vat_id = payableCounterpartRawData.vat_id) === null || _payableCounterpartRawData_vat_id === void 0 ? void 0 : _payableCounterpartRawData_vat_id.value,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "tfDRzk"
                    }),
                    formId: formName,
                    isLoading: isLoading
                },
                secondaryButton: showFillMatchBillButton ? {
                    label: i18n._({
                        id: "vmHY+X"
                    }),
                    onTheLeft: true,
                    onClick: ()=>updateFormWithRawData()
                } : undefined,
                cancelButton: {
                    onClick: props.onCancel
                }
            })
        ]
    });
};

function _define_property$30(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2_(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$30(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1U(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1U(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1U(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CounterpartAddressForm = ({ parentField })=>{
    const { i18n } = react.useLingui();
    const { control } = reactHookForm.useFormContext();
    const fieldPath = (path)=>{
        if (parentField) return `${parentField}.${path}`;
        return path;
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
        variant: "outlined",
        sx: {
            padding: 2,
            borderRadius: 3
        },
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
            spacing: 2,
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: fieldPath('line1'),
                    control: control,
                    render: ({ field, fieldState: { error } })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1U(_object_spread$2_({
                            id: field.name,
                            label: i18n._({
                                id: "NY/x1b"
                            }),
                            variant: "standard",
                            fullWidth: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message,
                            required: true
                        }, field), {
                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                        }));
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: fieldPath('line2'),
                    control: control,
                    render: ({ field, fieldState: { error } })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1U(_object_spread$2_({
                            id: field.name,
                            label: i18n._({
                                id: "cormHa"
                            }),
                            variant: "standard",
                            fullWidth: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message
                        }, field), {
                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                        }));
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: fieldPath('city'),
                    control: control,
                    render: ({ field, fieldState: { error } })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1U(_object_spread$2_({
                            id: field.name,
                            label: i18n._({
                                id: "3wV73y"
                            }),
                            variant: "standard",
                            fullWidth: true,
                            required: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message
                        }, field), {
                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                        }));
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: fieldPath('postalCode'),
                    control: control,
                    render: ({ field, fieldState: { error } })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1U(_object_spread$2_({
                            id: field.name,
                            label: i18n._({
                                id: "U4aiMW"
                            }),
                            variant: "standard",
                            fullWidth: true,
                            required: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message
                        }, field), {
                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                        }));
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: fieldPath('state'),
                    control: control,
                    render: ({ field, fieldState: { error } })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1U(_object_spread$2_({
                            id: field.name,
                            label: i18n._({
                                id: "uE0HSq"
                            }),
                            variant: "standard",
                            fullWidth: true,
                            required: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message
                        }, field), {
                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                        }));
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                    name: fieldPath('country'),
                    control: control,
                    required: true,
                    fullWidth: true
                })
            ]
        })
    });
};

/**
 * Prepares the address object from the API response for use in the form by normalizing its fields.
 */ const prepareCounterpartAddress = (address)=>{
    var _address_city, _address_state, _address_country, _address_line1, _address_line2, _address_postal_code;
    return {
        city: (_address_city = address === null || address === void 0 ? void 0 : address.city) !== null && _address_city !== void 0 ? _address_city : '',
        state: (_address_state = address === null || address === void 0 ? void 0 : address.state) !== null && _address_state !== void 0 ? _address_state : '',
        country: (_address_country = address === null || address === void 0 ? void 0 : address.country) !== null && _address_country !== void 0 ? _address_country : '',
        line1: (_address_line1 = address === null || address === void 0 ? void 0 : address.line1) !== null && _address_line1 !== void 0 ? _address_line1 : '',
        line2: (_address_line2 = address === null || address === void 0 ? void 0 : address.line2) !== null && _address_line2 !== void 0 ? _address_line2 : '',
        postalCode: (_address_postal_code = address === null || address === void 0 ? void 0 : address.postal_code) !== null && _address_postal_code !== void 0 ? _address_postal_code : ''
    };
};
/**
 * Prepares the address object for submission by converting the form fields to the API format.
 */ const prepareCounterpartAddressSubmit = ({ city, state, country, line1, line2, postalCode: postal_code })=>{
    return {
        city,
        state,
        country: country,
        line1,
        line2,
        postal_code
    };
};
/**
 * Prints the address in a human-readable format.
 */ function printAddress({ line1, line2, postalCode, city, country, state }, i18n) {
    const street2 = line2 ? `${line2}, ` : '';
    return `${line1}, ${street2}${postalCode} ${city}, ${state}, ${getCountries(i18n)[country]}`;
}

const getAddressValidationSchema = (i18n)=>zod.z.object({
        line1: zod.z.string().min(1, i18n._({
            id: "SQ4Lb4"
        })),
        line2: zod.z.string().optional(),
        city: zod.z.string().min(1, i18n._({
            id: "yl6zvN"
        })),
        state: zod.z.string().min(1, i18n._({
            id: "fpNNnx"
        })),
        country: zod.z.enum(AllowedCountries),
        postalCode: zod.z.string().min(1, i18n._({
            id: "rDyKlz"
        }))
    });

function useCounterpartAddressFormUpdate({ counterpartId, addressId, onUpdate, payableCounterpartRawData }) {
    const { data: counterpart, isLoading: isCounterpartLoading } = useCounterpartById(counterpartId);
    const { data: address } = useCounterpartAddresses(counterpartId);
    const formRef = React.useRef(null);
    const { i18n } = react.useLingui();
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getAddressValidationSchema(i18n)),
        defaultValues: React.useMemo(()=>address && prepareCounterpartAddress(address.data[0]), [
            address
        ])
    });
    const addressUpdateMutation = useUpdateCounterpartAddress({
        counterpartId,
        addressId
    });
    const submitForm = React.useCallback(()=>{
        var _formRef_current;
        (_formRef_current = formRef.current) === null || _formRef_current === void 0 ? void 0 : _formRef_current.dispatchEvent(new Event('submit', {
            bubbles: true
        }));
    }, [
        formRef
    ]);
    const updateAddress = React.useCallback((payload)=>{
        if (!address) return;
        return addressUpdateMutation.mutate(payload, {
            onSuccess: ()=>{
                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(addressId);
            }
        });
    }, [
        address,
        addressUpdateMutation,
        onUpdate,
        addressId
    ]);
    return {
        counterpart,
        methods,
        formRef,
        submitForm,
        updateAddress,
        isLoading: addressUpdateMutation.isPending || isCounterpartLoading,
        payableCounterpartRawData
    };
}

function _define_property$2$(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2Z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2$(target, key, source[key]);
        });
    }
    return target;
}
const addressFieldsMapping = {
    line1: 'address.line1',
    line2: 'address.line2',
    city: 'address.city',
    state: 'address.state',
    country: 'address.country',
    postalCode: 'address.postal_code'
};
const CounterpartAddressFormUpdate = (props)=>{
    var _payableCounterpartRawData_address;
    const { i18n } = react.useLingui();
    const { counterpart, methods, updateAddress, isLoading, payableCounterpartRawData } = useCounterpartAddressFormUpdate(props);
    const { control, handleSubmit, setValue, watch } = methods;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const formName = `Monite-Form-counterpartAddress-${React.useId()}`;
    const values = watch();
    const { fieldsEqual, allFieldsEqual, updateFormWithRawData } = usePayableCounterpartRawDataSuggestions(payableCounterpartRawData, values, setValue, addressFieldsMapping);
    const showFillMatchBillButton = !!(payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.address) && !allFieldsEqual;
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!counterpart) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                previousLevelTitle: getCounterpartName(counterpart),
                title: i18n._({
                    id: "Yo+p+2"
                }),
                closeSecondaryLevelDialog: props.onCancel
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                    id: formName,
                    onSubmit: handleSubmit((values)=>{
                        updateAddress(prepareCounterpartAddressSubmit(values));
                    }),
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        spacing: 3,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "line1",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_address;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2Z({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "NY/x1b"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                required: true
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.line1,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "line2",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_address;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2Z({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "cormHa"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.line2,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "city",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_address;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2Z({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "3wV73y"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                required: true
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.city,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "postalCode",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_address;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2Z({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "U4aiMW"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                required: true
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.postal_code,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "state",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_address;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2Z({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "uE0HSq"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                required: true
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.state,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                                        name: "country",
                                        control: control,
                                        required: true
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_address = payableCounterpartRawData.address) === null || _payableCounterpartRawData_address === void 0 ? void 0 : _payableCounterpartRawData_address.country,
                                        isHidden: fieldsEqual['country'],
                                        fieldOnChange: (value)=>setValue('country', value)
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "tfDRzk"
                    }),
                    formId: formName,
                    isLoading: isLoading
                },
                secondaryButton: showFillMatchBillButton ? {
                    label: i18n._({
                        id: "vmHY+X"
                    }),
                    onTheLeft: true,
                    onClick: ()=>updateFormWithRawData()
                } : undefined,
                cancelButton: {
                    onClick: props.onCancel
                }
            })
        ]
    });
};

/**
 * Prepares the bank object from the API response for use in the form by normalizing its fields.
 */ const prepareCounterpartBank = (bank)=>{
    var _bank_is_default_for_currency, _bank_account_holder_name, _bank_account_number, _bank_country, _bank_currency, _bank_routing_number, _bank_sort_code, _bank_name, _bank_bic, _bank_iban;
    return {
        is_default_for_currency: (_bank_is_default_for_currency = bank === null || bank === void 0 ? void 0 : bank.is_default_for_currency) !== null && _bank_is_default_for_currency !== void 0 ? _bank_is_default_for_currency : false,
        account_holder_name: (_bank_account_holder_name = bank === null || bank === void 0 ? void 0 : bank.account_holder_name) !== null && _bank_account_holder_name !== void 0 ? _bank_account_holder_name : '',
        account_number: (_bank_account_number = bank === null || bank === void 0 ? void 0 : bank.account_number) !== null && _bank_account_number !== void 0 ? _bank_account_number : '',
        country: (_bank_country = bank === null || bank === void 0 ? void 0 : bank.country) !== null && _bank_country !== void 0 ? _bank_country : '',
        currency: (_bank_currency = bank === null || bank === void 0 ? void 0 : bank.currency) !== null && _bank_currency !== void 0 ? _bank_currency : '',
        routing_number: (_bank_routing_number = bank === null || bank === void 0 ? void 0 : bank.routing_number) !== null && _bank_routing_number !== void 0 ? _bank_routing_number : '',
        sort_code: (_bank_sort_code = bank === null || bank === void 0 ? void 0 : bank.sort_code) !== null && _bank_sort_code !== void 0 ? _bank_sort_code : '',
        name: (_bank_name = bank === null || bank === void 0 ? void 0 : bank.name) !== null && _bank_name !== void 0 ? _bank_name : '',
        bic: (_bank_bic = bank === null || bank === void 0 ? void 0 : bank.bic) !== null && _bank_bic !== void 0 ? _bank_bic : '',
        iban: (_bank_iban = bank === null || bank === void 0 ? void 0 : bank.iban) !== null && _bank_iban !== void 0 ? _bank_iban : ''
    };
};
/**
 * Prepares the bank object for creation by converting the form fields to the API format.
 */ const prepareCreateCounterpartBankAccount = (bank)=>{
    var _bank_is_default_for_currency;
    return {
        is_default_for_currency: (_bank_is_default_for_currency = bank === null || bank === void 0 ? void 0 : bank.is_default_for_currency) !== null && _bank_is_default_for_currency !== void 0 ? _bank_is_default_for_currency : false,
        bic: bank === null || bank === void 0 ? void 0 : bank.bic,
        iban: bank === null || bank === void 0 ? void 0 : bank.iban,
        account_holder_name: bank === null || bank === void 0 ? void 0 : bank.account_holder_name,
        account_number: bank === null || bank === void 0 ? void 0 : bank.account_number,
        routing_number: bank === null || bank === void 0 ? void 0 : bank.routing_number,
        sort_code: bank === null || bank === void 0 ? void 0 : bank.sort_code,
        name: bank === null || bank === void 0 ? void 0 : bank.name,
        partner_metadata: bank === null || bank === void 0 ? void 0 : bank.partner_metadata,
        country: bank === null || bank === void 0 ? void 0 : bank.country,
        currency: bank === null || bank === void 0 ? void 0 : bank.currency
    };
};
/**
 * Prepares the bank object for update by converting the form fields to the API format.
 */ const prepareUpdateCounterpartBankAccount = (bank)=>{
    return {
        bic: bank === null || bank === void 0 ? void 0 : bank.bic,
        iban: bank === null || bank === void 0 ? void 0 : bank.iban,
        account_holder_name: bank === null || bank === void 0 ? void 0 : bank.account_holder_name,
        account_number: bank === null || bank === void 0 ? void 0 : bank.account_number,
        routing_number: bank === null || bank === void 0 ? void 0 : bank.routing_number,
        sort_code: bank === null || bank === void 0 ? void 0 : bank.sort_code,
        name: bank === null || bank === void 0 ? void 0 : bank.name,
        partner_metadata: bank === null || bank === void 0 ? void 0 : bank.partner_metadata,
        country: bank === null || bank === void 0 ? void 0 : bank.country,
        currency: bank === null || bank === void 0 ? void 0 : bank.currency
    };
};

const schema$5 = {
    AED: 'AED',
    AFN: 'AFN',
    ALL: 'ALL',
    AMD: 'AMD',
    ANG: 'ANG',
    AOA: 'AOA',
    ARS: 'ARS',
    AUD: 'AUD',
    AWG: 'AWG',
    AZN: 'AZN',
    BAM: 'BAM',
    BBD: 'BBD',
    BDT: 'BDT',
    BGN: 'BGN',
    BHD: 'BHD',
    BIF: 'BIF',
    BMD: 'BMD',
    BND: 'BND',
    BOB: 'BOB',
    BRL: 'BRL',
    BSD: 'BSD',
    BTN: 'BTN',
    BWP: 'BWP',
    BYN: 'BYN',
    BZD: 'BZD',
    CAD: 'CAD',
    CDF: 'CDF',
    CHF: 'CHF',
    CLP: 'CLP',
    CNY: 'CNY',
    COP: 'COP',
    CRC: 'CRC',
    CVE: 'CVE',
    CZK: 'CZK',
    DJF: 'DJF',
    DKK: 'DKK',
    DOP: 'DOP',
    DZD: 'DZD',
    EGP: 'EGP',
    ETB: 'ETB',
    EUR: 'EUR',
    FJD: 'FJD',
    FKP: 'FKP',
    GBP: 'GBP',
    GEL: 'GEL',
    GHS: 'GHS',
    GIP: 'GIP',
    GMD: 'GMD',
    GNF: 'GNF',
    GTQ: 'GTQ',
    GYD: 'GYD',
    HKD: 'HKD',
    HNL: 'HNL',
    HTG: 'HTG',
    HUF: 'HUF',
    IDR: 'IDR',
    ILS: 'ILS',
    INR: 'INR',
    IQD: 'IQD',
    ISK: 'ISK',
    JMD: 'JMD',
    JOD: 'JOD',
    JPY: 'JPY',
    KES: 'KES',
    KGS: 'KGS',
    KHR: 'KHR',
    KMF: 'KMF',
    KRW: 'KRW',
    KWD: 'KWD',
    KYD: 'KYD',
    KZT: 'KZT',
    LAK: 'LAK',
    LBP: 'LBP',
    LKR: 'LKR',
    LRD: 'LRD',
    LSL: 'LSL',
    LYD: 'LYD',
    MAD: 'MAD',
    MDL: 'MDL',
    MGA: 'MGA',
    MKD: 'MKD',
    MMK: 'MMK',
    MNT: 'MNT',
    MOP: 'MOP',
    MUR: 'MUR',
    MVR: 'MVR',
    MWK: 'MWK',
    MXN: 'MXN',
    MYR: 'MYR',
    MZN: 'MZN',
    NAD: 'NAD',
    NGN: 'NGN',
    NIO: 'NIO',
    NOK: 'NOK',
    NPR: 'NPR',
    NZD: 'NZD',
    OMR: 'OMR',
    PAB: 'PAB',
    PEN: 'PEN',
    PGK: 'PGK',
    PHP: 'PHP',
    PKR: 'PKR',
    PLN: 'PLN',
    PYG: 'PYG',
    QAR: 'QAR',
    RON: 'RON',
    RSD: 'RSD',
    RUB: 'RUB',
    RWF: 'RWF',
    SAR: 'SAR',
    SBD: 'SBD',
    SCR: 'SCR',
    SEK: 'SEK',
    SGD: 'SGD',
    SHP: 'SHP',
    SLE: 'SLE',
    SOS: 'SOS',
    SRD: 'SRD',
    SSP: 'SSP',
    SVC: 'SVC',
    SZL: 'SZL',
    THB: 'THB',
    TJS: 'TJS',
    TMT: 'TMT',
    TND: 'TND',
    TOP: 'TOP',
    TRY: 'TRY',
    TTD: 'TTD',
    TWD: 'TWD',
    TZS: 'TZS',
    UAH: 'UAH',
    UGX: 'UGX',
    USD: 'USD',
    UYU: 'UYU',
    UZS: 'UZS',
    VND: 'VND',
    VUV: 'VUV',
    WST: 'WST',
    XAF: 'XAF',
    XCD: 'XCD',
    XOF: 'XOF',
    XPF: 'XPF',
    YER: 'YER',
    ZAR: 'ZAR',
    ZMW: 'ZMW'
};
const CurrencyEnumSchema = zod.z.enum(Object.keys(schema$5));

const getCurrencyEnum = (_i18n)=>CurrencyEnumSchema;
const entityBankAccountSchema = zod.z.object({
    account_holder_name: zod.z.string().optional(),
    account_number: zod.z.string().optional(),
    bank_name: zod.z.string().optional(),
    bic: zod.z.string().optional(),
    country: zod.z.string(),
    currency: getCurrencyEnum(),
    display_name: zod.z.string().optional(),
    iban: zod.z.string().optional(),
    is_default_for_currency: zod.z.boolean(),
    routing_number: zod.z.string().optional(),
    sort_code: zod.z.string().optional()
});
const getCreateBankAccountSchema = (i18n)=>entityBankAccountSchema.extend({
        country: zod.z.string().min(1, i18n._({
            id: "b4Oui7"
        })).meta({
            title: i18n._({
                id: "JNCzPW"
            })
        }),
        currency: getCurrencyEnum().meta({
            title: i18n._({
                id: "Q2lUR2"
            })
        }),
        is_default_for_currency: zod.z.boolean().meta({
            title: i18n._({
                id: "Ve90uG"
            })
        }),
        display_name: zod.z.string().max(200, i18n._({
            id: "y3Hef1"
        })).optional()
    }).refine((data)=>{
        var _data_account_number;
        // Account number: required for all currencies except EUR
        if (data.currency === 'EUR') {
            return true;
        }
        return Boolean((_data_account_number = data.account_number) === null || _data_account_number === void 0 ? void 0 : _data_account_number.length);
    }, {
        message: i18n._({
            id: "PFsKfU"
        }),
        path: [
            'account_number'
        ]
    }).refine((data)=>{
        // Account holder name: required for USD and GBP
        if (data.currency === 'USD' || data.currency === 'GBP') {
            var _data_account_holder_name;
            return Boolean((_data_account_holder_name = data.account_holder_name) === null || _data_account_holder_name === void 0 ? void 0 : _data_account_holder_name.length);
        }
        return true;
    }, {
        message: i18n._({
            id: "SoS628"
        }),
        path: [
            'account_holder_name'
        ]
    }).refine((data)=>{
        var _data_routing_number;
        // Routing number: required for all currencies except EUR and GBP
        if (data.currency === 'EUR' || data.currency === 'GBP') {
            return true;
        }
        return Boolean((_data_routing_number = data.routing_number) === null || _data_routing_number === void 0 ? void 0 : _data_routing_number.length);
    }, {
        message: i18n._({
            id: "+lnnqy"
        }),
        path: [
            'routing_number'
        ]
    }).refine((data)=>{
        // Sort code: required for all currencies except EUR and USD (must be 6 characters)
        if (data.currency !== 'EUR' && data.currency !== 'USD') {
            var _data_sort_code;
            return ((_data_sort_code = data.sort_code) === null || _data_sort_code === void 0 ? void 0 : _data_sort_code.length) === 6;
        }
        return true;
    }, {
        message: i18n._({
            id: "d6VkcA"
        }),
        path: [
            'sort_code'
        ]
    }).refine((data)=>{
        // IBAN: required for EUR
        if (data.currency === 'EUR') {
            var _data_iban;
            return Boolean((_data_iban = data.iban) === null || _data_iban === void 0 ? void 0 : _data_iban.length);
        }
        return true;
    }, {
        message: i18n._({
            id: "wpULnc"
        }),
        path: [
            'iban'
        ]
    });
const getUpdateBankAccountSchema = (i18n)=>{
    return zod.z.object({
        display_name: zod.z.string().max(200, i18n._({
            id: "y3Hef1"
        })).optional().meta({
            title: i18n._({
                id: "0gS7M5"
            })
        }),
        account_holder_name: zod.z.string().optional().meta({
            title: i18n._({
                id: "Y0Mp8n"
            })
        })
    }).loose();
};
const getEntityBankAccountValidationSchema = (i18n, isUpdateSchema)=>{
    return isUpdateSchema ? getUpdateBankAccountSchema(i18n) : getCreateBankAccountSchema(i18n);
};
const getEntityProfileValidationSchema = (i18n)=>{
    return zod.z.object({
        title: zod.z.string().optional().meta({
            title: i18n._({
                id: "MHrjPM"
            })
        }),
        name: zod.z.string().optional().meta({
            title: i18n._({
                id: "6YtxFj"
            })
        }),
        surname: zod.z.string().optional().meta({
            title: i18n._({
                id: "bnwuKo"
            })
        }),
        email: zod.z.email(i18n._({
            id: "5tT0+u"
        })).optional().meta({
            title: i18n._({
                id: "O3oNi5"
            }),
            description: i18n._({
                id: "vZfgKK"
            })
        }),
        tax_id: zod.z.string().optional().meta({
            title: i18n._({
                id: "m+elvG"
            }),
            description: i18n._({
                id: "SKQ2F3"
            })
        }),
        vat_id: zod.z.string().optional().meta({
            title: i18n._({
                id: "Ttw+e+"
            }),
            description: i18n._({
                id: "GFvFFP"
            })
        }),
        vat_type: zod.z.enum(VatIDTypeEnum).optional().meta({
            title: i18n._({
                id: "cVpzb9"
            }),
            description: i18n._({
                id: "Xanmvm"
            })
        }),
        vat_country: zod.z.enum(AllowedCountries).optional().meta({
            title: i18n._({
                id: "cK9+xQ"
            }),
            description: i18n._({
                id: "bjAYbJ"
            })
        }),
        address_line_1: zod.z.string().min(1, i18n._({
            id: "SQ4Lb4"
        })).meta({
            title: i18n._({
                id: "POdIrN"
            }),
            description: i18n._({
                id: "QGqBr+"
            })
        }),
        address_line_2: zod.z.string().optional().meta({
            title: i18n._({
                id: "gwk5gg"
            }),
            description: i18n._({
                id: "BGN72B"
            })
        }),
        city: zod.z.string().min(1, i18n._({
            id: "yl6zvN"
        })).meta({
            title: i18n._({
                id: "3wV73y"
            })
        }),
        postal_code: zod.z.string().min(1, i18n._({
            id: "rDyKlz"
        })).meta({
            title: i18n._({
                id: "dJW40d"
            }),
            description: i18n._({
                id: "XSEMno"
            })
        }),
        state: zod.z.string().optional().meta({
            title: i18n._({
                id: "RS0o7b"
            }),
            description: i18n._({
                id: "EpqMwY"
            })
        }),
        country: zod.z.enum(AllowedCountries).optional().meta({
            title: i18n._({
                id: "JNCzPW"
            })
        }),
        phone: zod.z.string().optional().meta({
            title: i18n._({
                id: "zmwvG2"
            }),
            description: i18n._({
                id: "sANGlx"
            })
        }),
        website: zod.z.url().optional().meta({
            title: i18n._({
                id: "On0aF2"
            }),
            description: i18n._({
                id: "EPg6xy"
            })
        })
    });
};
const manualPaymentRecordValidationSchema = (i18n, amount_due)=>zod.z.object({
        amount: zod.z.coerce.number({
            error: i18n._({
                id: "B1QgOu"
            })
        }).meta({
            title: i18n._({
                id: "hehnjM"
            })
        }).min(0, i18n._({
            id: "n0QetD"
        })).refine((value)=>{
            const currencyAmount = toMinorUnits(value);
            return currencyAmount <= amount_due;
        }, {
            message: i18n._({
                id: "vIaEVn"
            })
        }),
        payment_date: zod.z.date({
            error: i18n._({
                id: "2k47u1"
            })
        }).meta({
            title: i18n._({
                id: "mYGY3B"
            })
        }),
        payment_time: zod.z.date({
            error: i18n._({
                id: "8pIAr/"
            })
        }).meta({
            title: i18n._({
                id: "LhMjLm"
            })
        })
    });
const getEmailInvoiceDetailsSchema = (i18n)=>zod.z.object({
        to: zod.z.email().min(1, i18n._({
            id: "XmV0+h"
        })).meta({
            title: i18n._({
                id: "/jQctM"
            })
        }),
        subject: zod.z.string().min(1, i18n._({
            id: "ii0qn/"
        })).meta({
            title: i18n._({
                id: "UJmAAK"
            })
        }),
        body: zod.z.string().min(1, i18n._({
            id: "UabgBd"
        })).meta({
            title: i18n._({
                id: "bGQplw"
            })
        })
    });

const getBankValidationSchema = ()=>zod.z.object({
        iban: zod.z.string().optional(),
        bic: zod.z.string().optional(),
        name: zod.z.string().optional(),
        account_number: zod.z.string().optional(),
        account_holder_name: zod.z.string().optional(),
        sort_code: zod.z.string().optional(),
        routing_number: zod.z.string().optional(),
        country: zod.z.enum(AllowedCountries),
        currency: getCurrencyEnum(),
        partner_metadata: zod.z.any().optional(),
        is_default_for_currency: zod.z.boolean().optional()
    });

function useCounterpartBankForm({ counterpartId, bankId, onCreate, onUpdate, payableCounterpartRawData }) {
    const formId = `Monite-CounterpartBankForm-${React.useId()}`;
    const { data: counterpart, isLoading: isCounterpartLoading } = useCounterpartById(counterpartId);
    const { data: bank, isLoading: isBankLoading } = useCounterpartBankById(counterpartId, bankId);
    const createBankMutation = useCreateCounterpartBank();
    const updateBankMutation = useUpdateCounterpartBank();
    const { i18n } = react.useLingui();
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getBankValidationSchema()),
        defaultValues: React.useMemo(()=>prepareCounterpartBank(bank), [
            bank
        ])
    });
    React.useEffect(()=>{
        const resetForm = methods.reset;
        if (bank) resetForm(prepareCounterpartBank(bank));
    }, [
        methods.reset,
        bank,
        i18n
    ]);
    const saveBank = React.useCallback((values)=>{
        if (bank) {
            const mutateUpdateBank = updateBankMutation.mutate;
            mutateUpdateBank({
                path: {
                    counterpart_id: counterpartId,
                    bank_account_id: bank.id
                },
                body: prepareUpdateCounterpartBankAccount(values)
            }, {
                onSuccess: (bank)=>{
                    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(bank.id);
                }
            });
        } else {
            const mutateCreateBank = createBankMutation.mutate;
            mutateCreateBank({
                path: {
                    counterpart_id: counterpartId
                },
                body: prepareCreateCounterpartBankAccount(values)
            }, {
                onSuccess: (bank)=>{
                    onCreate === null || onCreate === void 0 ? void 0 : onCreate(bank.id);
                }
            });
        }
    }, [
        bank,
        updateBankMutation.mutate,
        counterpartId,
        onUpdate,
        createBankMutation.mutate,
        onCreate
    ]);
    return {
        methods,
        saveBank,
        counterpart,
        bank,
        formId,
        isLoading: createBankMutation.isPending || updateBankMutation.isPending || isCounterpartLoading || isBankLoading,
        error: createBankMutation.error || updateBankMutation.error,
        payableCounterpartRawData
    };
}

/**
 * Custom hook to fetch all products and derive a Set of existing currency codes.
 * @returns An object containing:
 *   - `existingCurrencies`: A Set<string> of currency codes used in product prices.
 *   - `isLoadingProducts`: A flag indicating if the products query is loading.
 */ const useExistingCurrenciesFromProducts = ()=>{
    const { api } = useMoniteContext();
    const { data: productsResponse, isLoading: isLoadingProducts } = api.products.getProducts.useQuery();
    const existingCurrencies = React.useMemo(()=>{
        var _productsResponse_data;
        var _productsResponse_data_map_filter;
        return new Set((_productsResponse_data_map_filter = productsResponse === null || productsResponse === void 0 ? void 0 : (_productsResponse_data = productsResponse.data) === null || _productsResponse_data === void 0 ? void 0 : _productsResponse_data.map((product)=>{
            var _product_price;
            return (_product_price = product.price) === null || _product_price === void 0 ? void 0 : _product_price.currency;
        }).filter((currency)=>!!currency)) !== null && _productsResponse_data_map_filter !== void 0 ? _productsResponse_data_map_filter : []);
    }, [
        productsResponse === null || productsResponse === void 0 ? void 0 : productsResponse.data
    ]);
    return {
        existingCurrencies,
        isLoadingProducts
    };
};

/**
 * Custom hook that provides a standard currency group list based on existing product currencies.
 * Defines groups for "You have items in" and "No items created in".
 * @returns An object containing:
 *   - `currencyGroups`: An array containing definitions for both groups.
 *   - `isLoadingCurrencyGroups`: A flag indicating if the underlying products query is loading.
 */ const useProductCurrencyGroups = ()=>{
    const { i18n } = react.useLingui();
    const { existingCurrencies, isLoadingProducts } = useExistingCurrenciesFromProducts();
    const currencyGroups = React.useMemo(()=>{
        return [
            {
                title: i18n._({
                    id: "4X5e5M"
                }),
                predicate: (option)=>existingCurrencies.has(option.code)
            },
            {
                title: i18n._({
                    id: "tQ8TNt"
                }),
                predicate: (option)=>!existingCurrencies.has(option.code)
            }
        ];
    }, [
        existingCurrencies,
        i18n
    ]);
    return {
        currencyGroups,
        isLoadingCurrencyGroups: isLoadingProducts
    };
};

/**
 * `useCurrencies` hook used for working with currencies
 *  - Display price based on amount, currency and locale.code parameters
 *  - Convert minor units into main currency and vise-versa
 */ const useCurrencies = ()=>{
    const { locale, api } = useMoniteContext();
    const { data: currencyList, isSuccess, isError, error } = api.internal.getInternalCurrencies.useQuery();
    const { i18n } = react.useLingui();
    //TODO: Remove this error handling and replace with proper error handling
    React.useEffect(()=>{
        if (isError) {
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    }, [
        isError,
        error,
        i18n
    ]);
    /**
   * Returns currency symbol when we provide currency code
   *
   * ## Example
   * ```typescript
   * const { getSymbolFromCurrency } = useCurrency();
   *
   * // Returns $
   * const dollarSign = getSymbolFromCurrency(CurrencyEnum.USD);
   * ```
   */ const getSymbolFromCurrency = (currency)=>{
        var _currencyList_currency;
        if (typeof currency !== 'string' || !currencyList || !currencyList[currency]) return currency;
        return (_currencyList_currency = currencyList[currency]) === null || _currencyList_currency === void 0 ? void 0 : _currencyList_currency.symbol;
    };
    /**
   * Convert minor units into main currency
   * E.g.
   *  - 1 dollar (main currency) = 100 cents (minor units)
   *  - 1 euro (main currency) = 100 cents (minor units)
   *  - 1 Japanese yen (main currency) have no minor units = 1 minor unit
   *
   * @returns Main currency or `null` if this currency is not in the list
   */ const formatFromMinorUnits = React.useCallback((amount, currency)=>{
        return fromMinorUnitsWithCurrency(amount, currency, currencyList);
    }, [
        currencyList
    ]);
    /**
   * Convert main currency into minor units
   *  (backward operation to `formatFromMinorUnits`)
   *
   * @returns Minor units or `null` if this currency is not in the list
   */ const formatToMinorUnits = React.useCallback((amount, currency)=>{
        return toMinorUnitsWithCurrency(amount, currency, currencyList);
    }, [
        currencyList
    ]);
    /**
   * Returns a price which should be displayed
   *  based on `amount`, currency` and user `currencyLocale`
   *  that customer provided in Monite settings on initialization
   *
   * !!! Note !!!
   * Accepts minor units on enter! See example for more information
   *
   * ## Example
   * ```typescript
   * const { formatCurrencyToDisplay } = useCurrencies();
   *
   * // Returns `100,00 €` or `€100.00` based on `currencyLocale`
   * //  it returns 100 but not 100000 because `formatCurrencyToDisplay`
   * //  accepts minor units but returns a main currency
   * const price = formatCurrencyToDisplay(10000, CurrencyEnum.EUR);
   *
   * // Returns `null` because 'unavailable' locale is not supported
   * const price2 = formatCurrencyToDisplay(100, 'unavailable');
   * ```
   */ const formatCurrencyToDisplay = React.useCallback((amountInMinorUnits, currency, isCurrencyDisplayed = true)=>{
        const amount = Number(amountInMinorUnits);
        const amountFromMinorUnits = formatFromMinorUnits(amount, currency);
        if (amountFromMinorUnits === null) {
            return null;
        }
        if (isCurrencyDisplayed && currencyList && currencyList[currency]) {
            const formatter = new Intl.NumberFormat(locale.currencyNumberFormat.localeCode, {
                style: 'currency',
                currencyDisplay: locale.currencyNumberFormat.display,
                currency
            });
            return formatter.format(amountFromMinorUnits);
        }
        const formatter = new Intl.NumberFormat(locale.currencyNumberFormat.localeCode, {
            style: 'decimal',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
        return formatter.format(amountFromMinorUnits);
    }, [
        currencyList,
        formatFromMinorUnits,
        locale.currencyNumberFormat.display,
        locale.currencyNumberFormat.localeCode
    ]);
    return {
        currencyList,
        getSymbolFromCurrency,
        formatCurrencyToDisplay,
        formatToMinorUnits,
        formatFromMinorUnits,
        isSuccess
    };
};

function _define_property$2_(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2Y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2_(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1T(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1T(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1T(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const isAnOptionalFieldsProperty = (key, obj)=>{
    return Object.keys(obj).includes(key);
};
const useOptionalFields = (optionalFields, defaultOptionalFields)=>{
    if (optionalFields === undefined || optionalFields === true) {
        return defaultOptionalFields;
    }
    if (optionalFields === false) {
        return Object.keys(defaultOptionalFields).reduce((acc, key)=>_object_spread_props$1T(_object_spread$2Y({}, acc), {
                [key]: false
            }), {});
    }
    if (typeof optionalFields === 'object' && !Array.isArray(optionalFields) && optionalFields !== null) {
        return Object.keys(defaultOptionalFields).reduce((acc, key)=>{
            const currentOptionalFieldKey = key.charAt(4).toLowerCase() + key.slice(5);
            const currentOptionalField = optionalFields[currentOptionalFieldKey];
            if (isAnOptionalFieldsProperty(currentOptionalFieldKey, optionalFields) && typeof currentOptionalField === 'boolean') {
                return _object_spread_props$1T(_object_spread$2Y({}, acc), {
                    [key]: currentOptionalField
                });
            }
            return acc;
        }, {});
    }
    return defaultOptionalFields;
};

function _define_property$2Z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2X(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2Z(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1S(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1S(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1S(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useMenuButton = ()=>{
    const { root } = useRootElements();
    const [anchorEl, setAnchorEl] = React.useState({
        element: null,
        open: false
    });
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const buttonId = `Monite-Button-${React.useId()}`;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const menuId = `Monite-Menu-${React.useId()}`;
    const openMenu = (event)=>{
        event.preventDefault();
        event.stopPropagation();
        setAnchorEl({
            element: event.currentTarget,
            open: true
        });
    };
    const closeMenu = (event)=>{
        if (event && 'preventDefault' in event) {
            event.preventDefault();
            event.stopPropagation();
        }
        setAnchorEl((prev)=>_object_spread_props$1S(_object_spread$2X({}, prev), {
                open: false
            }));
    };
    const createHandleKeyDown = (event)=>{
        if (event.defaultPrevented) return;
        if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {
            event.preventDefault();
            setAnchorEl({
                element: event.currentTarget,
                open: true
            });
        }
    };
    const buttonProps = {
        id: buttonId,
        'aria-controls': anchorEl.open ? menuId : undefined,
        'aria-expanded': anchorEl.open ? 'true' : undefined,
        'aria-haspopup': 'menu',
        tabIndex: 0,
        onClick: openMenu,
        onKeyDown: createHandleKeyDown
    };
    const menuProps = {
        id: menuId,
        anchorEl: anchorEl.element,
        open: anchorEl.open,
        container: root,
        onClose: closeMenu,
        onClick: closeMenu
    };
    return {
        open: anchorEl.open,
        menuProps,
        buttonProps,
        closeMenu
    };
};

function _define_property$2Y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2W(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2Y(target, key, source[key]);
        });
    }
    return target;
}
const maxFileSizeInMB = 20;
const maxFileSizeInKB = 1024 * 1024 * maxFileSizeInMB;
const OCR_SUPPORTED_FORMATS = [
    'application/pdf',
    'image/jpeg',
    'image/png'
];
/**
 * `useFileInput` is a React hook that creates an invisible `<input type="file" />` and `open()` method for interacting with it.
 *
 * @returns {Object} An object containing two properties:
 *  - `FileInput`: A component that renders an invisible file input element. It takes all the standard HTML input attributes and forwardRefs the underlying input element.
 *  - `openFileInput`: A function that programmatically opens the file input dialog. It can be used to open the file input dialog when another element is clicked.
 *  - `checkFileError`: A function that checks for file errors based on type and size. It returns an error message if there is an issue, or null if the file is valid.
 *
 * @example
 * ```jsx
 * const { FileInput, openFileInput, checkFileError } = useFileInput();
 *
 * return (
 *   <>
 *     <button onClick={openFileInput}>Upload File</button>
 *     <FileInput
 *       onChange={(event) => {
 *         const file = event.target.files?.item(0);
 *         const error = checkFileError(file);
 *         if (error) {
 *           // handle the error (e.g., show a message)
 *           console.error(error);
 *         } else {
 *           // handle the selected file
 *         }
 *       }}
 *     />
 *   </>
 * );
 * ```
 */ const useFileInput = ()=>{
    const { i18n } = react.useLingui();
    const fileInputRef = React.useRef({
        node: null
    });
    const [FileInput] = React.useState(()=>/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx("input", _object_spread$2W({
                type: "file",
                accept: OCR_SUPPORTED_FORMATS.join(','),
                ref: (node)=>{
                    if (typeof ref === 'function') ref(node);
                    else if (ref) ref.current = node;
                    fileInputRef.current.node = node;
                },
                css: /*#__PURE__*/ react$3.css("position:absolute;opacity:0;width:1px;height:1px;font-size:0;")
            }, props))));
    const resetInput = ()=>{
        var _fileInputRef_current;
        if (fileInputRef === null || fileInputRef === void 0 ? void 0 : (_fileInputRef_current = fileInputRef.current) === null || _fileInputRef_current === void 0 ? void 0 : _fileInputRef_current.node) {
            fileInputRef.current.node.value = '';
        }
    };
    const checkFileError = (file)=>{
        if (!file) {
            return i18n._({
                id: "Naqg3G"
            });
        }
        if (!OCR_SUPPORTED_FORMATS.includes(file.type)) {
            return i18n._({
                id: "VzdGDx",
                values: {
                    0: file.name
                }
            });
        }
        if (file.size > maxFileSizeInKB) {
            return i18n._({
                id: "dXVikn",
                values: {
                    maxFileSizeInMB: maxFileSizeInMB,
                    0: file.name
                }
            });
        }
        return null;
    };
    return {
        FileInput,
        openFileInput: ()=>{
            var _fileInputRef_current_node;
            (_fileInputRef_current_node = fileInputRef.current.node) === null || _fileInputRef_current_node === void 0 ? void 0 : _fileInputRef_current_node.click();
        },
        checkFileError,
        resetInput
    };
};

function asyncGeneratorStep$11(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$11(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$11(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$11(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const defaultCounterpartColumnWidth = 250;
const maximumDocumentIdColumnWidth = 300;
function useAreCounterpartsLoading(rows) {
    const { api } = useMoniteContext();
    const result = !!api.counterparts.getCounterpartsId.useIsFetching({
        infinite: false,
        exact: false,
        predicate: (query)=>!!(rows === null || rows === void 0 ? void 0 : rows.some(({ counterpart_id })=>!query.state.isInvalidated && counterpart_id === query.queryKey[1].path.counterpart_id))
    });
    return !rows ? true : result;
}
// Adapted from https://mui.com/x/react-data-grid/column-dimensions/#autosizing-asynchronously
// setTimeout and flushSync are necessary for call order control
// Docs say:
// The Data Grid can only autosize based on the currently rendered cells.
// DOM access is required to accurately calculate dimensions
function useAutosizeGridColumns(rows, columns, areCounterpartsLoading, columnSerializationKey) {
    const gridApiRef = xDataGrid.useGridApiRef();
    const autoSizePerformed = React.useRef(false); // useRef instead of useState to avoid re-renders on value changes
    const columnsRestored = React.useRef(null);
    // Autosize columns
    // use useEffect since we need this code to be executed after isFirstRender / useEffect in useGridColumns.js
    React.useEffect(()=>{
        const grid = gridApiRef.current;
        const timeouts = [];
        if (rows && // Do not autosize until rows are loaded
        rows.length && grid && grid.autosizeColumns && // Will be undefined in test environment
        grid.getRowsCount() && // Make sure the grid was already rendered so that autosizeColumns function will work
        grid.getCellElement(rows[0].id, grid.getAllColumns()[0].field) && // Make sure the grid was already rendered so that autosizeColumns function will work
        columns.length > 0 && // Subscribe to column count since we need to execute this code on every column set change
        !areCounterpartsLoading && // Skip autosize until counterparts are loaded
        !autoSizePerformed.current && // Do not perform autosize twice
        !columnsRestored.current // Do not perform autosize after columns were deserialized
        ) {
            timeouts.push(window.setTimeout(()=>{
                reactDom.flushSync(()=>{
                    timeouts.push(window.setTimeout(()=>_async_to_generator$11(function*() {
                            const previousColumnsState = grid.getAllColumns();
                            yield grid.autosizeColumns({
                                includeHeaders: true,
                                includeOutliers: true,
                                expand: true
                            });
                            previousColumnsState.forEach((previousColumnState)=>{
                                const currentColumnState = grid.getColumn(previousColumnState.field);
                                if ((currentColumnState === null || currentColumnState === void 0 ? void 0 : currentColumnState.width) && (previousColumnState === null || previousColumnState === void 0 ? void 0 : previousColumnState.width) && (currentColumnState.width < previousColumnState.width || currentColumnState.width > 600)) {
                                    grid.setColumnWidth(previousColumnState.field, previousColumnState.width);
                                }
                            });
                            // Some Payables may have a very long document numbers.
                            // Limit width of the document_id column
                            const documentColumn = grid.getColumn('document_id');
                            if (documentColumn && ((documentColumn === null || documentColumn === void 0 ? void 0 : documentColumn.width) || 0) > maximumDocumentIdColumnWidth) {
                                grid.setColumnWidth('document_id', maximumDocumentIdColumnWidth);
                            }
                            autoSizePerformed.current = true;
                        })(), 1));
                });
            }, 1));
        }
        return ()=>{
            timeouts.forEach(window.clearTimeout); // Cancel pending timeouts on unmount
        };
    }, [
        gridApiRef,
        rows,
        columns,
        areCounterpartsLoading
    ]);
    // Save columns width when switching between pages
    // use useEffect since we need this code to be executed after isFirstRender / useEffect in useGridColumns.js
    React.useEffect(()=>{
        const grid = gridApiRef.current;
        const serializationKey = `Monite-DataGridColumns-${columnSerializationKey}-2`;
        const serializedColumnsStr = localStorage.getItem(serializationKey);
        if (serializedColumnsStr && grid && columnsRestored.current != columns // Do not restore column widths twice
        ) {
            const serializedColumns = JSON.parse(serializedColumnsStr);
            for (const serializedColumn of serializedColumns){
                if (typeof grid.setColumnWidth === 'function') {
                    grid.setColumnWidth(serializedColumn.field, serializedColumn.width);
                } else {
                    // eslint-disable-next-line lingui/no-unlocalized-strings
                    console.warn(`setColumnWidth is not a function on the grid object`);
                //Todo: Handle the situation where setColumnWidth is not available
                }
            }
            columnsRestored.current = columns; // Allow serialization of updated column widths
        }
        return ()=>{
            // Save columns only after restoring them or performing autosize
            if (grid && typeof grid.getAllColumns === 'function' && (columnsRestored.current || autoSizePerformed.current)) {
                const columnsState = grid.getAllColumns().map(({ field, width })=>({
                        field,
                        width
                    }));
                localStorage.setItem(serializationKey, JSON.stringify(columnsState));
            } else {
                if (!grid) {
                    // eslint-disable-next-line lingui/no-unlocalized-strings
                    console.warn('Grid object is not defined.');
                } else if (typeof grid.getAllColumns !== 'function') {
                    // eslint-disable-next-line lingui/no-unlocalized-strings
                    console.warn('getAllColumns is not a function on the grid object.');
                }
            //Todo: Handle the situation where getAllColumns is not available or grid is undefined
            }
        };
    }, [
        gridApiRef,
        columnSerializationKey,
        columns
    ]);
    return gridApiRef;
}

// Persists form state between page reloads
const useFormPersist = (name, getValues, setValue)=>{
    React.useEffect(()=>{
        const storage = window.sessionStorage;
        try {
            const str = storage.getItem(name);
            if (str) {
                const values = JSON.parse(str);
                Object.keys(values).forEach((key)=>{
                    setValue(key, values[key], {
                        shouldValidate: false,
                        shouldDirty: true,
                        shouldTouch: true
                    });
                });
            }
        } catch (e) {
            // Error can be thrown by sessionStorage.getItem if it's blocked or JSON.parse
            console.error(e);
        }
        return ()=>{
            try {
                const values = getValues();
                if (Object.entries(values).length) storage.setItem(name, JSON.stringify(values));
                else storage.removeItem(name);
            } catch (e) {
                // Error can be thrown by sessionStorage.getItem if it's blocked in a particular browser
                console.error(e);
            }
        };
    }, [
        getValues,
        name,
        setValue
    ]);
};

/**
 * Hook for persistent storage of form fields with SSR safety
 * @param componentPrefix - Prefix to avoid key collisions between different components
 * @param key - The key to store the value under
 * @param initialValue - The initial value to use if none is stored
 */ const useLocalStorageFields = (componentPrefix, key, initialValue)=>{
    const [storedValue, setStoredValue] = React.useState(initialValue);
    const [isRemembered, setIsRemembered] = React.useState(false);
    const prefixedKey = `${componentPrefix}:${key}`;
    const rememberKey = `${componentPrefix}:${key}:remembered`;
    React.useEffect(()=>{
        try {
            if (typeof window !== 'undefined') {
                const remembered = window.localStorage.getItem(rememberKey) === 'true';
                setIsRemembered(remembered);
                if (remembered) {
                    const item = window.localStorage.getItem(prefixedKey);
                    setStoredValue(item ? JSON.parse(item) : initialValue);
                }
            }
        } catch (error) {
            console.error('Error accessing localStorage:', error);
            setStoredValue(initialValue);
        }
    }, [
        prefixedKey,
        rememberKey,
        initialValue
    ]);
    const setValue = (value)=>{
        try {
            const valueToStore = value instanceof Function ? value(storedValue) : value;
            setStoredValue(valueToStore);
            if (typeof window !== 'undefined' && isRemembered) {
                window.localStorage.setItem(prefixedKey, JSON.stringify(valueToStore));
            }
        } catch (error) {
            console.error('Error saving to localStorage:', error);
        }
    };
    const setRemembered = (checked)=>{
        try {
            setIsRemembered(checked);
            if (typeof window !== 'undefined') {
                window.localStorage.setItem(rememberKey, String(checked));
                if (checked) {
                    window.localStorage.setItem(prefixedKey, JSON.stringify(storedValue));
                } else {
                    window.localStorage.removeItem(prefixedKey);
                }
            }
        } catch (error) {
            console.error('Error updating remembered state:', error);
        }
    };
    return [
        storedValue,
        setValue,
        isRemembered,
        setRemembered
    ];
};

const MOBILE_BREAKPOINT = 768;
function useIsMobile() {
    const [isMobile, setIsMobile] = React__namespace.useState(undefined);
    React__namespace.useEffect(()=>{
        // eslint-disable-next-line lingui/no-unlocalized-strings
        const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);
        const onChange = ()=>{
            setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
        };
        mql.addEventListener('change', onChange);
        setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
        return ()=>mql.removeEventListener('change', onChange);
    }, []);
    return !!isMobile;
}

const useComponentSettings = ()=>{
    const { componentSettings } = useMoniteContext();
    const receivablesCallbacks = React.useMemo(()=>{
        var _componentSettings_receivables, _componentSettings_receivables1, _componentSettings_receivables2, _componentSettings_receivables3;
        return {
            onUpdate: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.onUpdate,
            onDelete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables1 = componentSettings.receivables) === null || _componentSettings_receivables1 === void 0 ? void 0 : _componentSettings_receivables1.onDelete,
            onCreate: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables2 = componentSettings.receivables) === null || _componentSettings_receivables2 === void 0 ? void 0 : _componentSettings_receivables2.onCreate,
            onInvoiceSent: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables3 = componentSettings.receivables) === null || _componentSettings_receivables3 === void 0 ? void 0 : _componentSettings_receivables3.onInvoiceSent
        };
    }, [
        componentSettings === null || componentSettings === void 0 ? void 0 : componentSettings.receivables
    ]);
    const onboardingCallbacks = React.useMemo(()=>{
        var _componentSettings_onboarding, _componentSettings_onboarding1, _componentSettings_onboarding2, _componentSettings_onboarding3;
        return {
            onWorkingCapitalOnboardingComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding = componentSettings.onboarding) === null || _componentSettings_onboarding === void 0 ? void 0 : _componentSettings_onboarding.onWorkingCapitalOnboardingComplete,
            onPaymentsOnboardingComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding1 = componentSettings.onboarding) === null || _componentSettings_onboarding1 === void 0 ? void 0 : _componentSettings_onboarding1.onPaymentsOnboardingComplete,
            onComplete: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding2 = componentSettings.onboarding) === null || _componentSettings_onboarding2 === void 0 ? void 0 : _componentSettings_onboarding2.onComplete,
            onContinue: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding3 = componentSettings.onboarding) === null || _componentSettings_onboarding3 === void 0 ? void 0 : _componentSettings_onboarding3.onContinue
        };
    }, [
        componentSettings === null || componentSettings === void 0 ? void 0 : componentSettings.onboarding
    ]);
    const payablesCallbacks = React.useMemo(()=>{
        var _componentSettings_payables, _componentSettings_payables1, _componentSettings_payables2, _componentSettings_payables3, _componentSettings_payables4, _componentSettings_payables5, _componentSettings_payables6, _componentSettings_payables7;
        return {
            onSaved: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables = componentSettings.payables) === null || _componentSettings_payables === void 0 ? void 0 : _componentSettings_payables.onSaved,
            onCanceled: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables1 = componentSettings.payables) === null || _componentSettings_payables1 === void 0 ? void 0 : _componentSettings_payables1.onCanceled,
            onSubmitted: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables2 = componentSettings.payables) === null || _componentSettings_payables2 === void 0 ? void 0 : _componentSettings_payables2.onSubmitted,
            onRejected: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables3 = componentSettings.payables) === null || _componentSettings_payables3 === void 0 ? void 0 : _componentSettings_payables3.onRejected,
            onApproved: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables4 = componentSettings.payables) === null || _componentSettings_payables4 === void 0 ? void 0 : _componentSettings_payables4.onApproved,
            onReopened: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables5 = componentSettings.payables) === null || _componentSettings_payables5 === void 0 ? void 0 : _componentSettings_payables5.onReopened,
            onDeleted: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables6 = componentSettings.payables) === null || _componentSettings_payables6 === void 0 ? void 0 : _componentSettings_payables6.onDeleted,
            onPay: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables7 = componentSettings.payables) === null || _componentSettings_payables7 === void 0 ? void 0 : _componentSettings_payables7.onPay
        };
    }, [
        componentSettings === null || componentSettings === void 0 ? void 0 : componentSettings.payables
    ]);
    return {
        componentSettings,
        receivablesCallbacks,
        onboardingCallbacks,
        payablesCallbacks
    };
};

// shadcn/ui standard breakpoints (Tailwind CSS defaults)
const breakpoints = {
    sm: 640,
    md: 768,
    lg: 1024,
    xl: 1280,
    '2xl': 1536
};
/**
 * Hook for responsive design using shadcn/ui standard breakpoints
 *
 * @param query - Media query string or breakpoint key
 * @returns boolean indicating if the media query matches
 *
 * @example
 * ```tsx
 * // Using breakpoint keys
 * const isMobile = useMediaQuery('sm'); // true when width < 640px
 * const isTablet = useMediaQuery('md'); // true when width >= 768px
 * const isDesktop = useMediaQuery('lg'); // true when width >= 1024px
 *
 * // Using custom media queries
 * const isLandscape = useMediaQuery('(orientation: landscape)');
 * const isHighDpi = useMediaQuery('(min-resolution: 2dppx)');
 *
 * // Using min/max width queries
 * const isMediumUp = useMediaQuery('(min-width: 768px)');
 * const isLargeDown = useMediaQuery('(max-width: 1023px)');
 * ```
 */ function useMediaQuery(query) {
    const [matches, setMatches] = React.useState(false);
    React.useEffect(()=>{
        // Handle breakpoint keys
        let mediaQuery;
        if (query in breakpoints) {
            // For breakpoint keys, we want to match when screen is at least that size
            const breakpoint = breakpoints[query];
            mediaQuery = `(min-width: ${breakpoint}px)`;
        } else {
            // For custom queries, use as-is
            mediaQuery = query;
        }
        const mediaQueryList = window.matchMedia(mediaQuery);
        // Set initial value
        setMatches(mediaQueryList.matches);
        // Create event listener
        const handleChange = (event)=>{
            setMatches(event.matches);
        };
        // Add event listener
        mediaQueryList.addEventListener('change', handleChange);
        // Cleanup
        return ()=>{
            mediaQueryList.removeEventListener('change', handleChange);
        };
    }, [
        query
    ]);
    return matches;
}
/**
 * Convenience hooks for common breakpoints
 */ const useIsMobileScreen = ()=>useIsSmallerThan('md'); // < 768px
const useIsTabletScreen = ()=>{
    const isMd = useMediaQuery('md');
    const isLg = useMediaQuery('lg');
    return isMd && !isLg; // >= 768px and < 1024px
};
const useIsDesktopScreen = ()=>useMediaQuery('lg'); // >= 1024px
const useIsLargeDesktopScreen = ()=>useMediaQuery('xl'); // >= 1280px
const useIsExtraLargeDesktopScreen = ()=>useMediaQuery('2xl'); // >= 1536px
/**
 * Hook for checking if screen is smaller than a breakpoint
 *
 * @param breakpoint - The breakpoint to check against
 * @returns boolean indicating if screen is smaller than the breakpoint
 *
 * @example
 * ```tsx
 * const isSmallerThanLg = useIsSmallerThan('lg'); // true when width < 1024px
 * ```
 */ function useIsSmallerThan(breakpoint) {
    const [matches, setMatches] = React.useState(false);
    React.useEffect(()=>{
        const mediaQuery = `(max-width: ${breakpoints[breakpoint] - 1}px)`;
        const mediaQueryList = window.matchMedia(mediaQuery);
        setMatches(mediaQueryList.matches);
        const handleChange = (event)=>{
            setMatches(event.matches);
        };
        mediaQueryList.addEventListener('change', handleChange);
        return ()=>{
            mediaQueryList.removeEventListener('change', handleChange);
        };
    }, [
        breakpoint
    ]);
    return matches;
}
/**
 * Hook for checking if screen is larger than a breakpoint
 *
 * @param breakpoint - The breakpoint to check against
 * @returns boolean indicating if screen is larger than the breakpoint
 *
 * @example
 * ```tsx
 * const isLargerThanMd = useIsLargerThan('md'); // true when width > 768px
 * ```
 */ function useIsLargerThan(breakpoint) {
    const [matches, setMatches] = React.useState(false);
    React.useEffect(()=>{
        const mediaQuery = `(min-width: ${breakpoints[breakpoint] + 1}px)`;
        const mediaQueryList = window.matchMedia(mediaQuery);
        setMatches(mediaQueryList.matches);
        const handleChange = (event)=>{
            setMatches(event.matches);
        };
        mediaQueryList.addEventListener('change', handleChange);
        return ()=>{
            mediaQueryList.removeEventListener('change', handleChange);
        };
    }, [
        breakpoint
    ]);
    return matches;
}

const useIsTextTruncated = (element, text)=>{
    const [isTextTruncated, setIsTextTruncated] = React.useState(false);
    React.useEffect(()=>{
        if (element) {
            setIsTextTruncated(element.scrollWidth > element.clientWidth);
        }
    }, [
        element,
        text
    ]);
    return isTextTruncated;
};

function _define_property$2X(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2V(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2X(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1R(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1R(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1R(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$T(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$T(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$T(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const CurrencyInput = (_param)=>{
    var { error, required, label, showCodeOnly = false, showCurrencySymbol = true, showCurrencyCode = false } = _param, params = _object_without_properties$T(_param, [
        "error",
        "required",
        "label",
        "showCodeOnly",
        "showCurrencySymbol",
        "showCurrencyCode"
    ]);
    const { i18n } = react.useLingui();
    const { getSymbolFromCurrency } = useCurrencies();
    const inputRef = React.useRef(null);
    const baseInputValue = params.inputProps.value;
    const selectedOption = baseInputValue ? getCurrenciesArray(i18n).find((currency)=>(showCodeOnly ? currency.code : currency.label) === baseInputValue) : null;
    let displayValueInInput = baseInputValue;
    if (selectedOption && showCodeOnly) {
        displayValueInInput = selectedOption.code;
    }
    if (selectedOption && !showCodeOnly) {
        displayValueInInput = selectedOption.label;
        if (showCurrencyCode) {
            displayValueInInput += ` (${selectedOption.code})`;
        }
    }
    const symbol = selectedOption ? getSymbolFromCurrency(selectedOption.code) : '';
    const tooltipText = selectedOption ? `${selectedOption.label} (${selectedOption.code})${symbol ? `, ${symbol}` : ''}` : '';
    const isTextTruncated = useIsTextTruncated(inputRef.current, displayValueInInput);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
        title: isTextTruncated ? tooltipText : '',
        placement: "top",
        children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1R(_object_spread$2V({}, params), {
            inputProps: _object_spread_props$1R(_object_spread$2V({}, params.inputProps), {
                value: displayValueInInput
            }),
            inputRef: inputRef,
            required: required,
            label: label,
            error: !!(error === null || error === void 0 ? void 0 : error.message),
            helperText: error === null || error === void 0 ? void 0 : error.message,
            InputProps: _object_spread_props$1R(_object_spread$2V({}, params.InputProps), {
                sx: {
                    '& input': {
                        textOverflow: 'ellipsis',
                        overflow: 'hidden',
                        whiteSpace: 'nowrap'
                    }
                },
                endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        display: 'flex',
                        alignItems: 'center',
                        minWidth: 0,
                        height: '100%'
                    },
                    children: [
                        !showCodeOnly && showCurrencySymbol && symbol && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            sx: {
                                whiteSpace: 'nowrap',
                                mr: 1
                            },
                            children: symbol
                        }),
                        params.InputProps.endAdornment
                    ]
                })
            })
        }))
    });
};

function _define_property$2W(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2U(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2W(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1Q(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1Q(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1Q(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CurrencyOption = ({ props, option, showCodeOnly = false, showCurrencyCode = false, showCurrencySymbol = true })=>{
    const { getSymbolFromCurrency } = useCurrencies();
    const label = showCodeOnly ? option.code : `${option.label}${showCurrencyCode ? ' (' + option.code + ')' : ''}`;
    return /*#__PURE__*/ react$3.createElement(material.MenuItem, _object_spread_props$1Q(_object_spread$2U({}, props), {
        key: option.code,
        value: option.label,
        sx: {
            width: '100%',
            py: 1.25,
            px: 2
        }
    }), /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: {
            display: 'flex',
            width: '100%',
            alignItems: 'center',
            gap: 2
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    flexGrow: 1,
                    minWidth: 0,
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                },
                children: label
            }),
            showCurrencySymbol && !showCodeOnly && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    flexShrink: 0
                },
                children: getSymbolFromCurrency(option.code)
            })
        ]
    }));
};

function _define_property$2V(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2T(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2V(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1P(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1P(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1P(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$S(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$S(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$S(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * Monite component for currency
 * Renders a currency with its symbol and value
 *  based on the Material UI Autocomplete component
 */ const MoniteCurrency = (_param)=>{
    var { required, actualCurrency, groups, fullWidth, showCodeOnly, hideLabel = false, shouldDisplayCustomList, showCurrencyCode = false, showCurrencySymbol = true, showClearButton = true } = _param, props = _object_without_properties$S(_param, [
        "required",
        "actualCurrency",
        "groups",
        "fullWidth",
        "showCodeOnly",
        "hideLabel",
        "shouldDisplayCustomList",
        "showCurrencyCode",
        "showCurrencySymbol",
        "showClearButton"
    ]);
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const currencyLabel = i18n._({
        id: "Q2lUR2"
    });
    const currencyOptions = React.useMemo(()=>shouldDisplayCustomList ? getCurrenciesArray(i18n).filter((currencyItem)=>{
            var _componentSettings_receivables_bankAccountCurrencies, _componentSettings_receivables;
            return componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : (_componentSettings_receivables_bankAccountCurrencies = _componentSettings_receivables.bankAccountCurrencies) === null || _componentSettings_receivables_bankAccountCurrencies === void 0 ? void 0 : _componentSettings_receivables_bankAccountCurrencies.includes(currencyItem === null || currencyItem === void 0 ? void 0 : currencyItem.code);
        }) : getCurrenciesArray(i18n), [
        componentSettings,
        shouldDisplayCustomList,
        i18n
    ]);
    const sortedOptions = sortCurrencyOptionsByGroup(currencyOptions, groups);
    return /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, _object_spread_props$1P(_object_spread$2T({}, props), {
        required: required,
        disabled: (currencyOptions === null || currencyOptions === void 0 ? void 0 : currencyOptions.length) === 1 || props.disabled,
        className: `Monite-Currency ${hideLabel && 'Monite-Label-Hidden'}`,
        disableClearable: !showClearButton,
        label: currencyLabel,
        options: sortedOptions,
        optionKey: "code",
        labelKey: showCodeOnly ? 'code' : 'label',
        fullWidth: fullWidth,
        slotProps: {
            paper: {
                sx: {
                    '& .MuiAutocomplete-listbox hr:last-of-type': {
                        display: 'none'
                    }
                }
            }
        },
        renderInput: (params, renderParams)=>{
            var _renderParams_required, _renderParams_label;
            return /*#__PURE__*/ jsxRuntime.jsx(CurrencyInput, _object_spread$2T({
                error: renderParams === null || renderParams === void 0 ? void 0 : renderParams.error,
                defaultValue: actualCurrency,
                required: (_renderParams_required = renderParams === null || renderParams === void 0 ? void 0 : renderParams.required) !== null && _renderParams_required !== void 0 ? _renderParams_required : required,
                label: (_renderParams_label = renderParams === null || renderParams === void 0 ? void 0 : renderParams.label) !== null && _renderParams_label !== void 0 ? _renderParams_label : currencyLabel,
                showCodeOnly: showCodeOnly,
                showCurrencySymbol: showCurrencySymbol,
                showCurrencyCode: showCurrencyCode
            }, params));
        },
        renderOption: (props, option)=>/*#__PURE__*/ jsxRuntime.jsx(CurrencyOption, {
                props: props,
                option: option,
                showCodeOnly: showCodeOnly,
                showCurrencyCode: showCurrencyCode,
                showCurrencySymbol: showCurrencySymbol
            }, option.code),
        filterOptions: filterOptions,
        groupBy: groups ? (option)=>{
            var _getGroupTitleForOption;
            return (_getGroupTitleForOption = getGroupTitleForOption(option, groups)) === null || _getGroupTitleForOption === void 0 ? void 0 : _getGroupTitleForOption.title;
        } : undefined,
        renderGroup: (params)=>{
            if (params.group.trim() === '') {
                return params.children;
            }
            return /*#__PURE__*/ jsxRuntime.jsxs(React.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.ListSubheader, {
                        component: "div",
                        title: params.group,
                        sx: {
                            bgcolor: 'background.paper',
                            typography: 'body2',
                            fontWeight: (theme)=>theme.typography.fontWeightBold,
                            textOverflow: 'ellipsis',
                            overflow: 'hidden',
                            whiteSpace: 'nowrap',
                            py: 1.25,
                            px: 2,
                            top: -12
                        },
                        children: params.group
                    }),
                    params.children,
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {
                        sx: {
                            mx: 1,
                            mt: 1
                        }
                    })
                ]
            }, params.key);
        }
    }));
};

function _define_property$2U(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2S(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2U(target, key, source[key]);
        });
    }
    return target;
}
const bankFieldsMapping = {
    account_holder_name: 'bank_account.account_holder_name',
    account_number: 'bank_account.account_number',
    sort_code: 'bank_account.sort_code',
    bic: 'bank_account.bic',
    iban: 'bank_account.iban'
};
const CounterpartBankForm = (props)=>{
    const { i18n } = react.useLingui();
    const { methods, counterpart, bank, formId, saveBank, isLoading, payableCounterpartRawData } = useCounterpartBankForm(props);
    const { control, handleSubmit, watch, clearErrors, resetField, setValue } = methods;
    const values = watch();
    const { currencyGroups, isLoadingCurrencyGroups } = useProductCurrencyGroups();
    const { fieldsEqual, allFieldsEqual, updateFormWithRawData } = usePayableCounterpartRawDataSuggestions(payableCounterpartRawData, values, setValue, bankFieldsMapping);
    const showFillMatchBillButton = !!(payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.bank_account) && !allFieldsEqual;
    React.useEffect(()=>{
        if (values.country) {
            /**
       * We have to clean all errors except `currency`
       *  because `currency` always required but other fields
       *  may or may not be based on many attributes
       */ clearErrors([
                'iban',
                'account_holder_name',
                'account_number',
                'bic',
                'sort_code',
                'routing_number'
            ]);
        }
    }, [
        clearErrors,
        resetField,
        values.country
    ]);
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!counterpart) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                previousLevelTitle: getCounterpartName(counterpart),
                title: bank ? i18n._({
                    id: "H+y9X2"
                }) : i18n._({
                    id: "jpNk2r"
                }),
                closeSecondaryLevelDialog: props.onCancel
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                    id: formId,
                    onSubmit: handleSubmit(saveBank),
                    noValidate: true,
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        spacing: 3,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "name",
                                control: control,
                                render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                        id: field.name,
                                        label: i18n._({
                                            id: "pfa8F0"
                                        }),
                                        variant: "standard",
                                        fullWidth: true,
                                        error: Boolean(error),
                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                    }, field))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "account_holder_name",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_bank_account;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "UKqdzv"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_bank_account = payableCounterpartRawData.bank_account) === null || _payableCounterpartRawData_bank_account === void 0 ? void 0 : _payableCounterpartRawData_bank_account.account_holder_name,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "iban",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_bank_account;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "sfIOlH"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_bank_account = payableCounterpartRawData.bank_account) === null || _payableCounterpartRawData_bank_account === void 0 ? void 0 : _payableCounterpartRawData_bank_account.iban,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "account_number",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_bank_account;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "5ad2f4"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_bank_account = payableCounterpartRawData.bank_account) === null || _payableCounterpartRawData_bank_account === void 0 ? void 0 : _payableCounterpartRawData_bank_account.account_number,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "sort_code",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_bank_account;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "XHVMHc"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_bank_account = payableCounterpartRawData.bank_account) === null || _payableCounterpartRawData_bank_account === void 0 ? void 0 : _payableCounterpartRawData_bank_account.sort_code,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "routing_number",
                                control: control,
                                render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                        id: field.name,
                                        label: i18n._({
                                            id: "dVQ/BC"
                                        }),
                                        variant: "standard",
                                        fullWidth: true,
                                        error: Boolean(error),
                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                    }, field))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                name: "bic",
                                control: control,
                                render: ({ field, fieldState: { error } })=>{
                                    var _payableCounterpartRawData_bank_account;
                                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2S({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "PuG6ji"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field)),
                                            /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : (_payableCounterpartRawData_bank_account = payableCounterpartRawData.bank_account) === null || _payableCounterpartRawData_bank_account === void 0 ? void 0 : _payableCounterpartRawData_bank_account.bic,
                                                isHidden: fieldsEqual[field.name],
                                                fieldOnChange: field.onChange
                                            })
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                                name: "country",
                                control: control,
                                required: true
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                name: "currency",
                                control: control,
                                required: true,
                                groups: currencyGroups,
                                disabled: isLoadingCurrencyGroups
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "tfDRzk"
                    }),
                    formId: formId,
                    isLoading: isLoading
                },
                secondaryButton: showFillMatchBillButton ? {
                    label: i18n._({
                        id: "vmHY+X"
                    }),
                    onTheLeft: true,
                    onClick: ()=>updateFormWithRawData()
                } : undefined,
                cancelButton: {
                    onClick: props.onCancel
                }
            })
        ]
    });
};

function _define_property$2T(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2R(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2T(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$R(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$R(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$R(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * Prepares the contact object from the API response for use in the form by normalizing its fields.
 */ const prepareCounterpartContact = (contact)=>{
    var _contact_first_name, _contact_last_name, _contact_email, _contact_phone;
    return _object_spread$2R({
        firstName: (_contact_first_name = contact === null || contact === void 0 ? void 0 : contact.first_name) !== null && _contact_first_name !== void 0 ? _contact_first_name : '',
        lastName: (_contact_last_name = contact === null || contact === void 0 ? void 0 : contact.last_name) !== null && _contact_last_name !== void 0 ? _contact_last_name : '',
        email: (_contact_email = contact === null || contact === void 0 ? void 0 : contact.email) !== null && _contact_email !== void 0 ? _contact_email : '',
        phone: (_contact_phone = contact === null || contact === void 0 ? void 0 : contact.phone) !== null && _contact_phone !== void 0 ? _contact_phone : ''
    }, prepareCounterpartAddress(contact === null || contact === void 0 ? void 0 : contact.address));
};
/**
 * Prepares the contact object for submission by converting the form fields to the API format.
 */ const prepareCounterpartContactSubmit = (_param)=>{
    var { firstName, lastName, email, phone } = _param, address = _object_without_properties$R(_param, [
        "firstName",
        "lastName",
        "email",
        "phone"
    ]);
    return {
        first_name: firstName,
        last_name: lastName,
        phone,
        email,
        address: prepareCounterpartAddressSubmit(address)
    };
};

function _define_property$2S(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2Q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2S(target, key, source[key]);
        });
    }
    return target;
}
const getValidationSchema$4 = (i18n)=>zod.z.object(_object_spread$2Q({
        firstName: zod.z.string().min(1, i18n._({
            id: "4pwejF"
        })),
        lastName: zod.z.string().min(1, i18n._({
            id: "ve9JTU"
        })),
        email: zod.z.email(i18n._({
            id: "pHx2eA"
        })).min(1, i18n._({
            id: "ZsZeV2"
        })),
        phone: zod.z.string().optional()
    }, getAddressValidationSchema(i18n).shape));

function asyncGeneratorStep$10(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$10(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$10(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$10(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function useCounterpartContactForm({ counterpartId, contactId, onCreate, onUpdate }) {
    const { i18n } = react.useLingui();
    const formRef = React.useRef(null);
    const { data: counterpartResponse } = useCounterpartById(counterpartId);
    const { data: contact, isLoading } = useCounterpartContactById(counterpartId, contactId);
    const contactCreateMutation = useCreateCounterpartContact();
    const contactUpdateMutation = useUpdateCounterpartContact();
    const counterpart = counterpartResponse;
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getValidationSchema$4(i18n)),
        defaultValues: React.useMemo(()=>prepareCounterpartContact(contact), [
            contact
        ])
    });
    React.useEffect(()=>{
        methods.reset(prepareCounterpartContact(contact));
    }, [
        i18n,
        methods,
        contact
    ]);
    const submitForm = React.useCallback(()=>{
        var _formRef_current;
        (_formRef_current = formRef.current) === null || _formRef_current === void 0 ? void 0 : _formRef_current.dispatchEvent(new Event('submit', {
            bubbles: true
        }));
    }, [
        formRef
    ]);
    const createContact = React.useCallback((req)=>_async_to_generator$10(function*() {
            return yield contactCreateMutation.mutateAsync({
                path: {
                    counterpart_id: counterpartId
                },
                body: req
            }, {
                onSuccess: ({ id })=>{
                    onCreate && onCreate(id);
                }
            });
        })(), [
        contactCreateMutation,
        counterpartId,
        onCreate
    ]);
    const updateContact = React.useCallback((payload)=>_async_to_generator$10(function*() {
            if (!contact) return;
            return yield contactUpdateMutation.mutateAsync({
                path: {
                    counterpart_id: contact.counterpart_id,
                    contact_id: contact.id
                },
                body: payload
            }, {
                onSuccess: (updatedContact)=>{
                    onUpdate && onUpdate(updatedContact.id);
                }
            });
        })(), [
        contactUpdateMutation,
        contact,
        onUpdate
    ]);
    const saveContact = React.useCallback((values)=>{
        const payload = prepareCounterpartContactSubmit(values);
        return contact ? updateContact(payload) : createContact(payload);
    }, [
        contact,
        updateContact,
        createContact
    ]);
    return {
        methods,
        saveContact,
        counterpart,
        contact,
        formRef,
        submitForm,
        isLoading: contactCreateMutation.isPending || contactUpdateMutation.isPending || isLoading,
        error: contactCreateMutation.error || contactUpdateMutation.error
    };
}

function _define_property$2R(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2P(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2R(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1O(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1O(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1O(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CounterpartContactForm = (props)=>{
    const { i18n } = react.useLingui();
    const { methods, counterpart, contact, formRef, saveContact, isLoading } = useCounterpartContactForm(props);
    const { control, handleSubmit } = methods;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const formName = `Monite-Form-counterpartContact-${React.useId()}`;
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                previousLevelTitle: getCounterpartName(counterpart),
                title: contact ? i18n._({
                    id: "GV93s+"
                }) : i18n._({
                    id: "TWUOb8"
                }),
                closeSecondaryLevelDialog: props.onCancel
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1O(_object_spread$2P({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formName,
                        ref: formRef,
                        onSubmit: handleSubmit(saveContact),
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            direction: "column",
                            rowSpacing: 3,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        spacing: 2,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                xs: 6,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                    name: "firstName",
                                                    control: control,
                                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2P({
                                                            id: field.name,
                                                            label: i18n._({
                                                                id: "V1EGGU"
                                                            }),
                                                            variant: "standard",
                                                            fullWidth: true,
                                                            error: Boolean(error),
                                                            helperText: error === null || error === void 0 ? void 0 : error.message,
                                                            required: true
                                                        }, field))
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                xs: 6,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                    name: "lastName",
                                                    control: control,
                                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2P({
                                                            id: field.name,
                                                            label: i18n._({
                                                                id: "1ZaQUH"
                                                            }),
                                                            variant: "standard",
                                                            fullWidth: true,
                                                            error: Boolean(error),
                                                            helperText: error === null || error === void 0 ? void 0 : error.message,
                                                            required: true
                                                        }, field))
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "email",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2P({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "O3oNi5"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                required: true
                                            }, field))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "phone",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2P({
                                                id: field.name,
                                                label: i18n._({
                                                    id: "ZuLy43"
                                                }),
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            }, field))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        direction: "column",
                                        rowSpacing: 2,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "subtitle2",
                                                    children: i18n._({
                                                        id: "Du6bPw"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartAddressForm, {})
                                            })
                                        ]
                                    })
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "tfDRzk"
                    }),
                    formId: formName,
                    isLoading: isLoading
                },
                cancelButton: {
                    onClick: props.onCancel
                }
            })
        ]
    });
};

function useCounterpartForm({ id, onCreate, onUpdate }) {
    const formRef = React.useRef(null);
    const { data: counterpart, isLoading } = useCounterpartById(id);
    const counterpartCreateMutation = useCreateCounterpart();
    const counterpartUpdateMutation = useUpdateCounterpart();
    const submitForm = React.useCallback(()=>{
        var _formRef_current;
        (_formRef_current = formRef.current) === null || _formRef_current === void 0 ? void 0 : _formRef_current.dispatchEvent(new Event('submit', {
            bubbles: true
        }));
    }, [
        formRef
    ]);
    const createCounterpart = React.useCallback((req)=>{
        counterpartCreateMutation.mutate(req, {
            onSuccess: ({ id })=>{
                onCreate && onCreate(id);
            }
        });
    }, [
        counterpartCreateMutation,
        onCreate
    ]);
    const updateCounterpart = React.useCallback((payload)=>{
        if (!counterpart) return;
        const counterpartUpdateMutate = counterpartUpdateMutation.mutate;
        counterpartUpdateMutate({
            path: {
                counterpart_id: counterpart.id
            },
            body: payload
        }, {
            onSuccess: ({ id })=>{
                onUpdate && onUpdate(id);
            }
        });
    }, [
        counterpart,
        counterpartUpdateMutation.mutate,
        onUpdate
    ]);
    return {
        createCounterpart,
        updateCounterpart,
        counterpart,
        formRef,
        submitForm,
        isLoading: counterpartCreateMutation.isPending || counterpartUpdateMutation.isPending || isLoading,
        error: counterpartCreateMutation.error || counterpartUpdateMutation.error
    };
}

function _define_property$2Q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2O(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2Q(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1N(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1N(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1N(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$Q(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$Q(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$Q(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * Prepares the organization object from the API response for use in the form by normalizing its fields.
 */ const prepareCounterpartOrganization = (organization, defaultValues)=>{
    var _defaultValues_isCustomer;
    const isCustomer = !!((_defaultValues_isCustomer = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.isCustomer) !== null && _defaultValues_isCustomer !== void 0 ? _defaultValues_isCustomer : organization === null || organization === void 0 ? void 0 : organization.is_customer);
    var _defaultValues_isVendor;
    const isVendor = !!((_defaultValues_isVendor = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.isVendor) !== null && _defaultValues_isVendor !== void 0 ? _defaultValues_isVendor : organization === null || organization === void 0 ? void 0 : organization.is_vendor);
    var _organization_legal_name, _organization_email, _organization_phone;
    return {
        companyName: (_organization_legal_name = organization === null || organization === void 0 ? void 0 : organization.legal_name) !== null && _organization_legal_name !== void 0 ? _organization_legal_name : '',
        email: (_organization_email = organization === null || organization === void 0 ? void 0 : organization.email) !== null && _organization_email !== void 0 ? _organization_email : '',
        phone: (_organization_phone = organization === null || organization === void 0 ? void 0 : organization.phone) !== null && _organization_phone !== void 0 ? _organization_phone : '',
        isCustomer,
        isVendor,
        line1: '',
        line2: '',
        city: '',
        state: '',
        postalCode: '',
        /**
     * @todo: Anashev. We have to split this types into 2.
     * More info in Jira task
     * @see {@link https://monite.atlassian.net/browse/DEV-7254}
     */ // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        country: ''
    };
};
/**
 * Prepares the organization object for submission by converting the form fields to the API format.
 */ const prepareCounterpartOrganizationCreate = (_param)=>{
    var { companyName, email, phone, isCustomer, isVendor } = _param, address = _object_without_properties$Q(_param, [
        "companyName",
        "email",
        "phone",
        "isCustomer",
        "isVendor"
    ]);
    const { postalCode, country } = address, restAddress = _object_without_properties$Q(address, [
        "postalCode",
        "country"
    ]);
    return {
        legal_name: companyName,
        is_customer: isCustomer,
        is_vendor: isVendor,
        phone,
        email,
        address: _object_spread_props$1N(_object_spread$2O({}, restAddress), {
            postal_code: postalCode,
            country: country
        })
    };
};
/**
 * Prepares the organization object for update by converting the form fields to the API format.
 */ const prepareCounterpartOrganizationUpdate = ({ companyName, email, phone, isCustomer, isVendor })=>{
    return {
        legal_name: companyName,
        is_customer: isCustomer,
        is_vendor: isVendor,
        phone,
        email
    };
};

function _define_property$2P(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2N(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2P(target, key, source[key]);
        });
    }
    return target;
}
const getUpdateCounterpartValidationSchema = (i18n)=>zod.z.object({
        tax_id: zod.z.string().optional(),
        remindersEnabled: zod.z.boolean(),
        organization: zod.z.object({
            companyName: zod.z.string().min(1, i18n._({
                id: "+iMfzK"
            })),
            email: zod.z.email(i18n._({
                id: "pHx2eA"
            })).min(1, i18n._({
                id: "ZsZeV2"
            })),
            phone: zod.z.string().optional(),
            isVendor: zod.z.boolean().optional(),
            isCustomer: zod.z.boolean().optional()
        })
    });
const getCreateCounterpartValidationSchema = (i18n)=>zod.z.object({
        tax_id: zod.z.string().optional(),
        remindersEnabled: zod.z.boolean(),
        organization: zod.z.object(_object_spread$2N({
            companyName: zod.z.string().min(1, i18n._({
                id: "+iMfzK"
            })),
            email: zod.z.email(i18n._({
                id: "pHx2eA"
            })).min(1, i18n._({
                id: "ZsZeV2"
            })),
            phone: zod.z.string().optional(),
            isVendor: zod.z.boolean().optional(),
            isCustomer: zod.z.boolean().optional()
        }, getAddressValidationSchema(i18n).shape))
    });

function _define_property$2O(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2M(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2O(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1M(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1M(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1M(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CounterpartReminderToggle = (props)=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Paper, {
        variant: "outlined",
        sx: {
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            padding: '1rem'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    maxWidth: '70%'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle2",
                        color: "textPrimary",
                        children: i18n._({
                            id: "RPpPTc"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        color: "textSecondary",
                        mt: 1,
                        children: i18n._({
                            id: "Jwys4y"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, _object_spread_props$1M(_object_spread$2M({}, props), {
                render: ({ field })=>{
                    var _field_value;
                    return /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                        checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                        onChange: (event)=>field.onChange(event.target.checked),
                        color: "primary",
                        "aria-label": i18n._({
                            id: "RPpPTc"
                        })
                    });
                }
            }))
        ]
    });
};

const schema$4 = {
    ab: 'ab',
    aa: 'aa',
    af: 'af',
    ak: 'ak',
    sq: 'sq',
    am: 'am',
    ar: 'ar',
    an: 'an',
    hy: 'hy',
    av: 'av',
    ae: 'ae',
    ay: 'ay',
    az: 'az',
    bm: 'bm',
    ba: 'ba',
    eu: 'eu',
    be: 'be',
    bn: 'bn',
    bi: 'bi',
    bs: 'bs',
    br: 'br',
    bg: 'bg',
    my: 'my',
    ca: 'ca',
    ch: 'ch',
    ce: 'ce',
    ny: 'ny',
    zh: 'zh',
    cu: 'cu',
    cv: 'cv',
    kw: 'kw',
    co: 'co',
    cr: 'cr',
    hr: 'hr',
    cs: 'cs',
    da: 'da',
    dv: 'dv',
    nl: 'nl',
    dz: 'dz',
    en: 'en',
    eo: 'eo',
    et: 'et',
    ee: 'ee',
    fo: 'fo',
    fj: 'fj',
    fi: 'fi',
    fr: 'fr',
    fy: 'fy',
    ff: 'ff',
    gd: 'gd',
    gl: 'gl',
    lg: 'lg',
    ka: 'ka',
    de: 'de',
    el: 'el',
    kl: 'kl',
    gn: 'gn',
    gu: 'gu',
    ht: 'ht',
    ha: 'ha',
    he: 'he',
    hz: 'hz',
    hi: 'hi',
    ho: 'ho',
    hu: 'hu',
    io: 'io',
    ig: 'ig',
    id: 'id',
    ia: 'ia',
    ie: 'ie',
    iu: 'iu',
    ik: 'ik',
    ga: 'ga',
    it: 'it',
    ja: 'ja',
    jv: 'jv',
    kn: 'kn',
    kr: 'kr',
    ks: 'ks',
    kk: 'kk',
    km: 'km',
    ki: 'ki',
    rw: 'rw',
    ky: 'ky',
    kv: 'kv',
    kg: 'kg',
    ko: 'ko',
    kj: 'kj',
    ku: 'ku',
    lo: 'lo',
    la: 'la',
    lv: 'lv',
    li: 'li',
    ln: 'ln',
    lt: 'lt',
    lu: 'lu',
    lb: 'lb',
    mk: 'mk',
    mg: 'mg',
    ms: 'ms',
    ml: 'ml',
    mt: 'mt',
    gv: 'gv',
    mi: 'mi',
    mr: 'mr',
    mh: 'mh',
    mn: 'mn',
    na: 'na',
    nv: 'nv',
    nd: 'nd',
    nr: 'nr',
    ng: 'ng',
    ne: 'ne',
    no: 'no',
    nb: 'nb',
    nn: 'nn',
    ii: 'ii',
    oc: 'oc',
    oj: 'oj',
    om: 'om',
    os: 'os',
    pi: 'pi',
    ps: 'ps',
    fa: 'fa',
    pl: 'pl',
    pt: 'pt',
    pa: 'pa',
    qu: 'qu',
    ro: 'ro',
    rm: 'rm',
    rn: 'rn',
    ru: 'ru',
    se: 'se',
    sm: 'sm',
    sg: 'sg',
    sa: 'sa',
    sc: 'sc',
    sr: 'sr',
    sn: 'sn',
    sd: 'sd',
    si: 'si',
    sk: 'sk',
    sl: 'sl',
    so: 'so',
    st: 'st',
    es: 'es',
    su: 'su',
    sw: 'sw',
    ss: 'ss',
    sv: 'sv',
    tl: 'tl',
    ty: 'ty',
    tg: 'tg',
    ta: 'ta',
    tt: 'tt',
    te: 'te',
    th: 'th',
    bo: 'bo',
    ti: 'ti',
    to: 'to',
    ts: 'ts',
    tn: 'tn',
    tr: 'tr',
    tk: 'tk',
    tw: 'tw',
    ug: 'ug',
    uk: 'uk',
    ur: 'ur',
    uz: 'uz',
    ve: 've',
    vi: 'vi',
    vo: 'vo',
    wa: 'wa',
    cy: 'cy',
    wo: 'wo',
    xh: 'xh',
    yi: 'yi',
    yo: 'yo',
    za: 'za',
    zu: 'zu'
};
const LanguageCodeEnum = Object.values(schema$4);

function _define_property$2N(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2L(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2N(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1L(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1L(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1L(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const organizationFieldsMapping = {
    'organization.companyName': 'name',
    'organization.email': 'email',
    'organization.phone': 'phone',
    tax_id: 'tax_id'
};
const CounterpartOrganizationForm = (props)=>{
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const { id: counterpartId, isInvoiceCreation, showCategories, defaultValuesOCR, defaultValues, payableCounterpartRawData, onCancel, onClose } = props;
    const { counterpart, formRef, createCounterpart, updateCounterpart, isLoading } = useCounterpartForm(props);
    const organizationCounterpart = counterpart;
    const { data: isCreateAllowed } = useIsActionAllowed({
        method: 'counterpart',
        action: 'create',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const formName = `Monite-Form-counterpartOrganizationForm-${React.useId()}`;
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(counterpartId || counterpart ? getUpdateCounterpartValidationSchema(i18n) : getCreateCounterpartValidationSchema(i18n)),
        defaultValues: React.useMemo(()=>{
            var _organizationCounterpart_tax_id, _organizationCounterpart_reminders_enabled;
            return {
                tax_id: (_organizationCounterpart_tax_id = organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.tax_id) !== null && _organizationCounterpart_tax_id !== void 0 ? _organizationCounterpart_tax_id : defaultValuesOCR === null || defaultValuesOCR === void 0 ? void 0 : defaultValuesOCR.tax_id,
                remindersEnabled: (_organizationCounterpart_reminders_enabled = organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.reminders_enabled) !== null && _organizationCounterpart_reminders_enabled !== void 0 ? _organizationCounterpart_reminders_enabled : true,
                organization: defaultValuesOCR ? defaultValuesOCR.counterpart : prepareCounterpartOrganization(organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.organization, defaultValues)
            };
        }, [
            organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.tax_id,
            organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.reminders_enabled,
            organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.organization,
            defaultValues,
            defaultValuesOCR
        ])
    });
    const { control, handleSubmit, reset, setValue, watch } = methods;
    const values = watch();
    const { fieldsEqual, allFieldsEqual, updateFormWithRawData } = usePayableCounterpartRawDataSuggestions(payableCounterpartRawData, values, setValue, organizationFieldsMapping);
    const showFillMatchBillButton = !!payableCounterpartRawData && !allFieldsEqual;
    const handleSubmitWithoutPropagation = React.useCallback((e)=>{
        e.preventDefault();
        e.stopPropagation();
        handleSubmit((values)=>{
            var _LanguageCodeEnum_find;
            const language = (_LanguageCodeEnum_find = LanguageCodeEnum.find((code)=>code === i18n.locale.split('-')[0])) !== null && _LanguageCodeEnum_find !== void 0 ? _LanguageCodeEnum_find : 'en';
            if (counterpart) {
                var _values_tax_id, _counterpart_language;
                const payload = {
                    tax_id: (_values_tax_id = values.tax_id) !== null && _values_tax_id !== void 0 ? _values_tax_id : '',
                    reminders_enabled: values.remindersEnabled,
                    language: (_counterpart_language = counterpart.language) !== null && _counterpart_language !== void 0 ? _counterpart_language : language,
                    organization: prepareCounterpartOrganizationUpdate(values.organization)
                };
                return updateCounterpart(payload);
            }
            var _values_tax_id1;
            const payload = {
                type: 'organization',
                tax_id: (_values_tax_id1 = values.tax_id) !== null && _values_tax_id1 !== void 0 ? _values_tax_id1 : '',
                language,
                reminders_enabled: values.remindersEnabled,
                organization: prepareCounterpartOrganizationCreate(values.organization)
            };
            return createCounterpart(payload);
        })(e);
    }, [
        counterpart,
        createCounterpart,
        handleSubmit,
        i18n.locale,
        updateCounterpart
    ]);
    React.useEffect(()=>{
        var _organizationCounterpart_tax_id, _organizationCounterpart_reminders_enabled;
        reset({
            tax_id: (_organizationCounterpart_tax_id = organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.tax_id) !== null && _organizationCounterpart_tax_id !== void 0 ? _organizationCounterpart_tax_id : defaultValuesOCR === null || defaultValuesOCR === void 0 ? void 0 : defaultValuesOCR.tax_id,
            remindersEnabled: (_organizationCounterpart_reminders_enabled = organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.reminders_enabled) !== null && _organizationCounterpart_reminders_enabled !== void 0 ? _organizationCounterpart_reminders_enabled : false,
            organization: defaultValuesOCR ? defaultValuesOCR.counterpart : prepareCounterpartOrganization(organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.organization, defaultValues)
        });
    }, [
        defaultValues,
        defaultValuesOCR,
        organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.organization,
        organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.tax_id,
        organizationCounterpart === null || organizationCounterpart === void 0 ? void 0 : organizationCounterpart.reminders_enabled,
        reset
    ]);
    if (!isCreateAllowed && !counterpartId) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            (isInvoiceCreation && !counterpartId || !isInvoiceCreation) && /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                title: isInvoiceCreation ? i18n._({
                    id: "dxd1/G"
                }) : (props === null || props === void 0 ? void 0 : props.id) ? i18n._({
                    id: "EjxtPT"
                }) : i18n._({
                    id: "SteimB"
                }),
                closeSecondaryLevelDialog: counterpartId || isInvoiceCreation ? onCancel : onClose || (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose),
                showDivider: !isInvoiceCreation
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                sx: {
                    padding: '2rem',
                    overflowY: 'auto',
                    height: '450px'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1L(_object_spread$2L({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formName,
                        ref: formRef,
                        onSubmit: handleSubmitWithoutPropagation,
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            direction: "column",
                            rowSpacing: 3,
                            pb: 4,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "organization.companyName",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1L(_object_spread$2L({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "RA55Iu"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message,
                                                        required: true
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.name,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                }),
                                showCategories && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                    item: true,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "caption",
                                            sx: {
                                                marginBottom: 1
                                            },
                                            component: "div",
                                            children: i18n._({
                                                id: "mYgWDX"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.List, {
                                            sx: {
                                                border: 1,
                                                borderColor: 'divider',
                                                borderRadius: 3,
                                                overflow: 'hidden'
                                            },
                                            disablePadding: true,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                    disablePadding: true,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "organization.isCustomer",
                                                        control: control,
                                                        render: ({ field })=>{
                                                            var _field_value;
                                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.ListItemButton, {
                                                                id: field.name,
                                                                role: undefined,
                                                                onClick: ()=>{
                                                                    field.onChange(!field.value);
                                                                },
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {
                                                                        edge: "start",
                                                                        checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                                                                        name: i18n._({
                                                                            id: "876pfE"
                                                                        }),
                                                                        disableRipple: true
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                                                                        children: i18n._({
                                                                            id: "876pfE"
                                                                        })
                                                                    })
                                                                ]
                                                            });
                                                        }
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                    disablePadding: true,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "organization.isVendor",
                                                        control: control,
                                                        render: ({ field })=>{
                                                            var _field_value;
                                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.ListItemButton, {
                                                                id: field.name,
                                                                role: undefined,
                                                                onClick: ()=>{
                                                                    field.onChange(!field.value);
                                                                },
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {
                                                                        edge: "start",
                                                                        checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                                                                        disableRipple: true
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                                                                        children: i18n._({
                                                                            id: "lO6GxP"
                                                                        })
                                                                    })
                                                                ]
                                                            });
                                                        }
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "organization.email",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1L(_object_spread$2L({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "O3oNi5"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message,
                                                        required: true
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.email,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartReminderToggle, {
                                        name: "remindersEnabled",
                                        control: control
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "organization.phone",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$2L({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "ZuLy43"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                                    }, field)),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.phone,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            })
                                    })
                                }),
                                !counterpart && /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        direction: "column",
                                        rowSpacing: 2,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                                item: true,
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "subtitle2",
                                                        children: i18n._({
                                                            id: "SWnN1L"
                                                        })
                                                    }),
                                                    (()=>{
                                                        const message = i18n._({
                                                            id: "CounterpartDetails--CounterpartOrganizationForm--businessAddressSection--caption"
                                                        });
                                                        if (message === '🚫') return null;
                                                        return /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                            variant: "caption",
                                                            display: "block",
                                                            sx: {
                                                                mt: 1
                                                            },
                                                            children: message
                                                        });
                                                    })()
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartAddressForm, {
                                                    parentField: "organization"
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "tax_id",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1L(_object_spread$2L({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "m+elvG"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.tax_id,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: counterpartId ? i18n._({
                        id: "tfDRzk"
                    }) : i18n._({
                        id: "hYgDIe"
                    }),
                    formId: formName,
                    isLoading: isLoading
                },
                secondaryButton: showFillMatchBillButton ? {
                    label: i18n._({
                        id: "vmHY+X"
                    }),
                    onTheLeft: true,
                    onClick: ()=>updateFormWithRawData()
                } : undefined,
                cancelButton: {
                    label: isInvoiceCreation ? i18n._({
                        id: "iH8pgl"
                    }) : i18n._({
                        id: "dEgA5A"
                    }),
                    onClick: counterpartId || isInvoiceCreation ? onCancel : onClose || (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose)
                }
            })
        ]
    });
};

/**
 * Prepares the individual object from the API response for use in the form by normalizing its fields.
 */ const prepareCounterpartIndividual = (individual, defaultValues)=>{
    var _defaultValues_isCustomer;
    const isCustomer = !!((_defaultValues_isCustomer = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.isCustomer) !== null && _defaultValues_isCustomer !== void 0 ? _defaultValues_isCustomer : individual === null || individual === void 0 ? void 0 : individual.is_customer);
    var _defaultValues_isVendor;
    const isVendor = !!((_defaultValues_isVendor = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.isVendor) !== null && _defaultValues_isVendor !== void 0 ? _defaultValues_isVendor : individual === null || individual === void 0 ? void 0 : individual.is_vendor);
    var _individual_first_name, _individual_last_name, _individual_email, _individual_phone;
    return {
        firstName: (_individual_first_name = individual === null || individual === void 0 ? void 0 : individual.first_name) !== null && _individual_first_name !== void 0 ? _individual_first_name : '',
        lastName: (_individual_last_name = individual === null || individual === void 0 ? void 0 : individual.last_name) !== null && _individual_last_name !== void 0 ? _individual_last_name : '',
        email: (_individual_email = individual === null || individual === void 0 ? void 0 : individual.email) !== null && _individual_email !== void 0 ? _individual_email : '',
        phone: (_individual_phone = individual === null || individual === void 0 ? void 0 : individual.phone) !== null && _individual_phone !== void 0 ? _individual_phone : '',
        isCustomer,
        isVendor,
        line1: '',
        line2: '',
        city: '',
        state: '',
        postalCode: '',
        country: ''
    };
};
/**
 * Prepares the individual object for submission by converting the form fields to the API format.
 */ const prepareCounterpartIndividualCreate = ({ firstName, lastName, email, phone, isCustomer, isVendor, city, country, line1, line2, postalCode, state })=>{
    return {
        first_name: firstName,
        last_name: lastName,
        is_customer: isCustomer,
        is_vendor: isVendor,
        phone,
        email,
        address: {
            city,
            country: country,
            line1,
            line2,
            postal_code: postalCode,
            state
        }
    };
};
/**
 * Prepares the individual object for update by converting the form fields to the API format.
 */ const prepareCounterpartIndividualUpdate = ({ firstName, lastName, email, phone, isCustomer, isVendor })=>{
    return {
        first_name: firstName,
        last_name: lastName,
        is_customer: isCustomer,
        is_vendor: isVendor,
        phone,
        email
    };
};

function _define_property$2M(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2K(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2M(target, key, source[key]);
        });
    }
    return target;
}
const getUpdateIndividualValidationSchema = (i18n)=>zod.z.object({
        tax_id: zod.z.string().optional(),
        remindersEnabled: zod.z.boolean(),
        individual: zod.z.object({
            firstName: zod.z.string().min(1, i18n._({
                id: "4pwejF"
            })),
            lastName: zod.z.string().min(1, i18n._({
                id: "ve9JTU"
            })),
            email: zod.z.email(i18n._({
                id: "pHx2eA"
            })).min(1, i18n._({
                id: "ZsZeV2"
            })),
            phone: zod.z.string().optional(),
            isCustomer: zod.z.boolean(),
            isVendor: zod.z.boolean()
        })
    });
const getCreateIndividualValidationSchema = (i18n)=>zod.z.object({
        tax_id: zod.z.string().optional(),
        remindersEnabled: zod.z.boolean(),
        individual: zod.z.object(_object_spread$2K({
            firstName: zod.z.string().min(1, i18n._({
                id: "4pwejF"
            })),
            lastName: zod.z.string().min(1, i18n._({
                id: "ve9JTU"
            })),
            email: zod.z.email(i18n._({
                id: "pHx2eA"
            })).min(1, i18n._({
                id: "ZsZeV2"
            })),
            phone: zod.z.string().optional(),
            isCustomer: zod.z.boolean(),
            isVendor: zod.z.boolean()
        }, getAddressValidationSchema(i18n).shape))
    });

function _define_property$2L(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$7() {
    _extends$7 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$7.apply(this, arguments);
}
function _object_destructuring_empty$7(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$2J(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2L(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1K(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1K(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1K(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const individualFieldsMapping = {
    'individual.email': 'email',
    'individual.phone': 'phone',
    tax_id: 'tax_id'
};
/**
 * Counterpart Individual Form may be used to create or update counterpart
 *  for the type = individual
 *
 * If a counterpart is provided, it will be updated,
 *  otherwise new counterpart will be created
 */ const CounterpartIndividualForm = (_param)=>{
    var props = _extends$7({}, _object_destructuring_empty$7(_param));
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const { id: counterpartId, isInvoiceCreation, showCategories, defaultValuesOCR, defaultValues, payableCounterpartRawData, onCancel, onClose } = props;
    const { counterpart, formRef, createCounterpart, updateCounterpart, isLoading } = useCounterpartForm(props);
    const individualCounterpart = counterpart;
    const { data: isCreateAllowed } = useIsActionAllowed({
        method: 'counterpart',
        action: 'create',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const formName = `Monite-Form-counterpartIndividualForm-${React.useId()}`;
    var _individualCounterpart_tax_id, _ref, _individualCounterpart_reminders_enabled;
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(counterpartId || individualCounterpart ? getUpdateIndividualValidationSchema(i18n) : getCreateIndividualValidationSchema(i18n)),
        defaultValues: {
            tax_id: (_ref = (_individualCounterpart_tax_id = individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.tax_id) !== null && _individualCounterpart_tax_id !== void 0 ? _individualCounterpart_tax_id : defaultValuesOCR === null || defaultValuesOCR === void 0 ? void 0 : defaultValuesOCR.tax_id) !== null && _ref !== void 0 ? _ref : '',
            remindersEnabled: (_individualCounterpart_reminders_enabled = individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.reminders_enabled) !== null && _individualCounterpart_reminders_enabled !== void 0 ? _individualCounterpart_reminders_enabled : false,
            individual: defaultValuesOCR ? defaultValuesOCR.counterpart : prepareCounterpartIndividual(individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.individual, defaultValues)
        }
    });
    const { control, handleSubmit, reset, setValue, watch } = methods;
    const values = watch();
    const { fieldsEqual, allFieldsEqual, updateFormWithRawData } = usePayableCounterpartRawDataSuggestions(payableCounterpartRawData, values, setValue, individualFieldsMapping);
    const showFillMatchBillButton = !!payableCounterpartRawData && !allFieldsEqual;
    const handleSubmitWithoutPropagation = React.useCallback((e)=>{
        e.preventDefault();
        e.stopPropagation();
        handleSubmit((values)=>{
            if (counterpart) {
                var _values_tax_id;
                const payload = {
                    tax_id: (_values_tax_id = values.tax_id) !== null && _values_tax_id !== void 0 ? _values_tax_id : '',
                    reminders_enabled: values.remindersEnabled,
                    individual: prepareCounterpartIndividualUpdate(values.individual)
                };
                return updateCounterpart(payload);
            }
            var _values_tax_id1, _LanguageCodeEnum_find;
            const payload = {
                type: 'individual',
                tax_id: (_values_tax_id1 = values.tax_id) !== null && _values_tax_id1 !== void 0 ? _values_tax_id1 : '',
                individual: prepareCounterpartIndividualCreate(values.individual),
                language: (_LanguageCodeEnum_find = LanguageCodeEnum.find((code)=>code === i18n.locale.split('-')[0])) !== null && _LanguageCodeEnum_find !== void 0 ? _LanguageCodeEnum_find : 'en',
                reminders_enabled: values.remindersEnabled
            };
            return createCounterpart(payload);
        })(e);
    }, [
        counterpart,
        createCounterpart,
        handleSubmit,
        i18n,
        updateCounterpart
    ]);
    React.useEffect(()=>{
        var _individualCounterpart_tax_id, _ref, _individualCounterpart_reminders_enabled;
        reset({
            tax_id: (_ref = (_individualCounterpart_tax_id = individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.tax_id) !== null && _individualCounterpart_tax_id !== void 0 ? _individualCounterpart_tax_id : defaultValuesOCR === null || defaultValuesOCR === void 0 ? void 0 : defaultValuesOCR.tax_id) !== null && _ref !== void 0 ? _ref : '',
            remindersEnabled: (_individualCounterpart_reminders_enabled = individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.reminders_enabled) !== null && _individualCounterpart_reminders_enabled !== void 0 ? _individualCounterpart_reminders_enabled : false,
            individual: defaultValuesOCR ? defaultValuesOCR.counterpart : prepareCounterpartIndividual(individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.individual, defaultValues)
        });
    }, [
        defaultValues,
        individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.individual,
        individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.reminders_enabled,
        individualCounterpart === null || individualCounterpart === void 0 ? void 0 : individualCounterpart.tax_id,
        reset,
        defaultValuesOCR
    ]);
    if (!isCreateAllowed && !counterpartId) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            (isInvoiceCreation && !counterpartId || !isInvoiceCreation) && /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                title: isInvoiceCreation ? i18n._({
                    id: "dxd1/G"
                }) : (props === null || props === void 0 ? void 0 : props.id) ? i18n._({
                    id: "kpCS0V"
                }) : i18n._({
                    id: "SteimB"
                }),
                closeSecondaryLevelDialog: counterpartId || isInvoiceCreation ? onCancel : onClose || (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose),
                showDivider: !isInvoiceCreation
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                sx: {
                    padding: '2rem',
                    overflowY: 'auto',
                    height: '450px'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1K(_object_spread$2J({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formName,
                        ref: formRef,
                        onSubmit: handleSubmitWithoutPropagation,
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            direction: "column",
                            rowSpacing: 3,
                            pb: 4,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        spacing: 2,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                xs: 6,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                    name: "individual.firstName",
                                                    control: control,
                                                    render: ({ field, fieldState: { error } })=>{
                                                        var _field_value;
                                                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1K(_object_spread$2J({
                                                            id: field.name,
                                                            label: i18n._({
                                                                id: "V1EGGU"
                                                            }),
                                                            variant: "standard",
                                                            fullWidth: true,
                                                            error: Boolean(error),
                                                            helperText: error === null || error === void 0 ? void 0 : error.message,
                                                            required: true
                                                        }, field), {
                                                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                        }));
                                                    }
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                xs: 6,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                    name: "individual.lastName",
                                                    control: control,
                                                    render: ({ field, fieldState: { error } })=>{
                                                        var _field_value;
                                                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1K(_object_spread$2J({
                                                            id: field.name,
                                                            label: i18n._({
                                                                id: "1ZaQUH"
                                                            }),
                                                            variant: "standard",
                                                            fullWidth: true,
                                                            error: Boolean(error),
                                                            helperText: error === null || error === void 0 ? void 0 : error.message,
                                                            required: true
                                                        }, field), {
                                                            value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                        }));
                                                    }
                                                })
                                            })
                                        ]
                                    })
                                }),
                                showCategories && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                    item: true,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "caption",
                                            sx: {
                                                marginBottom: 1
                                            },
                                            component: "div",
                                            children: i18n._({
                                                id: "mYgWDX"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.List, {
                                            sx: {
                                                border: 1,
                                                borderColor: 'divider',
                                                borderRadius: 3,
                                                overflow: 'hidden'
                                            },
                                            disablePadding: true,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                    disablePadding: true,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "individual.isCustomer",
                                                        control: control,
                                                        render: ({ field })=>{
                                                            var _field_value;
                                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.ListItemButton, {
                                                                id: field.name,
                                                                role: undefined,
                                                                onClick: ()=>{
                                                                    field.onChange(!field.value);
                                                                },
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {
                                                                        edge: "start",
                                                                        checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                                                                        name: i18n._({
                                                                            id: "876pfE"
                                                                        }),
                                                                        disableRipple: true
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                                                                        children: i18n._({
                                                                            id: "876pfE"
                                                                        })
                                                                    })
                                                                ]
                                                            });
                                                        }
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                    disablePadding: true,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "individual.isVendor",
                                                        control: control,
                                                        render: ({ field })=>{
                                                            var _field_value;
                                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.ListItemButton, {
                                                                id: field.name,
                                                                role: undefined,
                                                                onClick: ()=>{
                                                                    field.onChange(!field.value);
                                                                },
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {
                                                                        edge: "start",
                                                                        name: i18n._({
                                                                            id: "lO6GxP"
                                                                        }),
                                                                        checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                                                                        disableRipple: true
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                                                                        children: i18n._({
                                                                            id: "lO6GxP"
                                                                        })
                                                                    })
                                                                ]
                                                            });
                                                        }
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "individual.email",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1K(_object_spread$2J({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "O3oNi5"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message,
                                                        required: true
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.email,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartReminderToggle, {
                                        name: "remindersEnabled",
                                        control: control
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "individual.phone",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1K(_object_spread$2J({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "ZuLy43"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.phone,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                }),
                                !counterpart && /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        direction: "column",
                                        rowSpacing: 2,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "subtitle2",
                                                    children: i18n._({
                                                        id: "Du6bPw"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                item: true,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartAddressForm, {
                                                    parentField: "individual"
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "tax_id",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1K(_object_spread$2J({
                                                        id: field.name,
                                                        label: i18n._({
                                                            id: "m+elvG"
                                                        }),
                                                        variant: "standard",
                                                        fullWidth: true,
                                                        error: Boolean(error),
                                                        helperText: error === null || error === void 0 ? void 0 : error.message
                                                    }, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : ''
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InlineSuggestionFill, {
                                                        rawData: payableCounterpartRawData === null || payableCounterpartRawData === void 0 ? void 0 : payableCounterpartRawData.tax_id,
                                                        isHidden: fieldsEqual[field.name],
                                                        fieldOnChange: field.onChange
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: counterpartId ? i18n._({
                        id: "tfDRzk"
                    }) : i18n._({
                        id: "hYgDIe"
                    }),
                    formId: formName,
                    isLoading: isLoading
                },
                secondaryButton: showFillMatchBillButton ? {
                    label: i18n._({
                        id: "vmHY+X"
                    }),
                    onTheLeft: true,
                    onClick: ()=>updateFormWithRawData()
                } : undefined,
                cancelButton: {
                    label: isInvoiceCreation ? i18n._({
                        id: "iH8pgl"
                    }) : i18n._({
                        id: "dEgA5A"
                    }),
                    onClick: counterpartId || isInvoiceCreation ? onCancel : onClose || (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose)
                }
            })
        ]
    });
};

function _define_property$2K(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2I(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2K(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1J(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1J(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1J(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$P(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$P(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$P(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const StyledLabelTableCell = material.styled(material.TableCell)(({ theme, isRequired })=>({
        color: isRequired ? theme.palette.error.main : theme.palette.text.secondary,
        minWidth: 120,
        width: '35%'
    }));
const MoniteCardItem = (props)=>{
    const value = React.useMemo(()=>{
        if (!props.value && props.withEmptyStateFiller) {
            return '—';
        }
        return props.value;
    }, [
        props.value,
        props.withEmptyStateFiller
    ]);
    if (!value) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                component: "th",
                scope: "row",
                children: props.label
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                children: value
            })
        ]
    });
};
/**
 * Card component which displays a list of items in a table format
 */ const MoniteCard = (_param)=>{
    var { items, children } = _param, cardProps = _object_without_properties$P(_param, [
        "items",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Card, _object_spread_props$1J(_object_spread$2I({
        variant: "outlined"
    }, cardProps), {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                    children: items.map((item, index)=>{
                        return /*#__PURE__*/ jsxRuntime.jsx(MoniteCardItem, _object_spread$2I({}, item), index);
                    })
                })
            }),
            children
        ]
    }));
};

const LoadingSpinner = ({ className })=>{
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: tailwindMerge.twMerge('mtw:w-8 mtw:h-8 mtw:rounded-full mtw:border-3 mtw:border-primary mtw:border-t-transparent mtw:animate-spin', className)
    });
};

const ConfirmationModal = ({ open, title, message, children, confirmLabel, cancelLabel, onClose, onConfirm, isLoading = false })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(Dialog, {
        open: open,
        onOpenChange: onClose,
        "aria-label": i18n._({
            id: "E5Wr9l"
        }),
        children: /*#__PURE__*/ jsxRuntime.jsxs(DialogContent, {
            showCloseButton: false,
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(DialogHeader$1, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                        children: title
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(DialogDescription, {
                    children: message ? message : children
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(DialogFooter$1, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            onClick: onClose,
                            variant: "outline",
                            children: cancelLabel
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                            onClick: onConfirm,
                            disabled: isLoading,
                            variant: "destructive",
                            children: [
                                isLoading && /*#__PURE__*/ jsxRuntime.jsx(LoadingSpinner, {
                                    className: "mtw:w-5 mtw:h-5 mtw:border-inherit mtw:border-t-transparent"
                                }),
                                confirmLabel
                            ]
                        })
                    ]
                })
            ]
        })
    });
};

function asyncGeneratorStep$$(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$$(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$$(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$$(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function useCounterpartVatView({ onDelete, onEdit: onExternalEdit, vat: { id, counterpart_id } }) {
    const vatDeleteMutation = useDeleteCounterpartVat(counterpart_id);
    const deleteVat = React.useCallback((cb)=>_async_to_generator$$(function*() {
            const vatDeleteMutateAsync = vatDeleteMutation.mutateAsync;
            return yield vatDeleteMutateAsync({
                path: {
                    counterpart_id: counterpart_id,
                    vat_id: id
                }
            }, {
                onSuccess: ()=>{
                    onDelete && onDelete(id);
                    cb === null || cb === void 0 ? void 0 : cb();
                }
            });
        })(), [
        vatDeleteMutation.mutateAsync,
        counterpart_id,
        id,
        onDelete
    ]);
    const onEdit = React.useCallback(()=>_async_to_generator$$(function*() {
            onExternalEdit && onExternalEdit(id);
        })(), [
        id,
        onExternalEdit
    ]);
    return {
        deleteVat,
        onEdit,
        isLoading: vatDeleteMutation.isPending
    };
}

const CounterpartVatView = (props)=>{
    const { i18n } = react.useLingui();
    const { deleteVat, onEdit, isLoading } = useCounterpartVatView(props);
    const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);
    const { vat: { value, type, country } } = props;
    const vatType = useVatTypeLabelByCode(type);
    const { isUpdateAllowed, isDeleteAllowed } = props.permissions;
    const handleOpenDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(true);
    }, []);
    const handleCloseDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(false);
    }, []);
    const handleDeleteVatId = React.useCallback(()=>deleteVat(handleCloseDeleteDialog), [
        deleteVat,
        handleCloseDeleteDialog
    ]);
    const actions = (isUpdateAllowed || isDeleteAllowed) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: onEdit,
                variant: "text",
                color: "primary",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {}),
                children: i18n._({
                    id: "ePK91l"
                })
            }),
            isDeleteAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: handleOpenDeleteDialog,
                variant: "text",
                color: "error",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {}),
                children: i18n._({
                    id: "cnGeoo"
                })
            })
        ]
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(MoniteCard, {
        items: [
            {
                label: i18n._({
                    id: "JNCzPW"
                }),
                value: country && getCountries(i18n)[country]
            },
            {
                label: i18n._({
                    id: "BDiIpw"
                }),
                value: vatType
            },
            {
                label: i18n._({
                    id: "vkewyf"
                }),
                value
            }
        ],
        children: [
            actions && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                        children: actions
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
                open: showDeleteDialog,
                title: i18n._({
                    id: "pz2XTt",
                    values: {
                        value: value
                    }
                }),
                message: i18n._({
                    id: "MKc709"
                }),
                confirmLabel: i18n._({
                    id: "cnGeoo"
                }),
                cancelLabel: i18n._({
                    id: "dEgA5A"
                }),
                onClose: handleCloseDeleteDialog,
                onConfirm: handleDeleteVatId,
                isLoading: isLoading
            })
        ]
    });
};

var CounterpartDataTestId = /*#__PURE__*/ function(CounterpartDataTestId) {
    CounterpartDataTestId["OrganizationView"] = "OrganizationView";
    CounterpartDataTestId["OrganizationForm"] = "OrganizationForm";
    CounterpartDataTestId["IndividualView"] = "IndividualView";
    CounterpartDataTestId["IndividualForm"] = "IndividualForm";
    CounterpartDataTestId["ContactPerson"] = "ContactPerson";
    CounterpartDataTestId["Address"] = "Address";
    CounterpartDataTestId["BankAccount"] = "BankAccount";
    CounterpartDataTestId["Vat"] = "Vat";
    return CounterpartDataTestId;
}({});

const NotFound = ({ title, description })=>{
    const dialogContext = useDialog();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            dialogContext && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                padding: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 11
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 1,
                        children: /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            onClick: dialogContext.onClose,
                            color: "inherit",
                            ariaLabelOverride: "close",
                            "aria-label": "close",
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                    alignItems: "center",
                    spacing: 2,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(SearchOffIcon__default.default, {
                                fontSize: "large",
                                color: "error"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            alignItems: "center",
                            spacing: 1,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "h3",
                                    children: title
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    children: description
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};

function asyncGeneratorStep$_(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$_(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$_(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$_(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function useCounterpartAddressView({ address, onEdit: onExternalEdit }) {
    const onEdit = React.useCallback(()=>_async_to_generator$_(function*() {
            onExternalEdit && onExternalEdit(address.id);
        })(), [
        address.id,
        onExternalEdit
    ]);
    return {
        onEdit
    };
}

const CounterpartAddressView = (props)=>{
    const { i18n } = react.useLingui();
    const { onEdit } = useCounterpartAddressView(props);
    const { line1, line2, city, postal_code, state, country } = props.address;
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteCard, {
        items: [
            {
                label: i18n._({
                    id: "NY/x1b"
                }),
                value: line1
            },
            {
                label: i18n._({
                    id: "cormHa"
                }),
                value: line2
            },
            {
                label: i18n._({
                    id: "3wV73y"
                }),
                value: city
            },
            {
                label: i18n._({
                    id: "U4aiMW"
                }),
                value: postal_code
            },
            {
                label: i18n._({
                    id: "RS0o7b"
                }),
                value: state
            },
            {
                label: i18n._({
                    id: "JNCzPW"
                }),
                value: getCountries(i18n)[country]
            }
        ],
        children: props.permissions.isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {
                            fontSize: "small"
                        }),
                        variant: "text",
                        color: "primary",
                        size: "small",
                        onClick: onEdit,
                        children: i18n._({
                            id: "ePK91l"
                        })
                    })
                })
            ]
        })
    });
};

function asyncGeneratorStep$Z(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$Z(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$Z(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$Z(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function useCounterpartBankView({ onDelete, onEdit: onExternalEdit, bank: { id, counterpart_id } }) {
    const bankDeleteMutation = useDeleteCounterpartBank(counterpart_id);
    const deleteBank = React.useCallback((cb)=>_async_to_generator$Z(function*() {
            const bankDeleteMutateAsync = bankDeleteMutation.mutateAsync;
            return yield bankDeleteMutateAsync({
                path: {
                    counterpart_id: counterpart_id,
                    bank_account_id: id
                }
            }, {
                onSuccess: ()=>{
                    onDelete && onDelete(id);
                    cb === null || cb === void 0 ? void 0 : cb();
                }
            });
        })(), [
        bankDeleteMutation.mutateAsync,
        counterpart_id,
        id,
        onDelete
    ]);
    const onEdit = React.useCallback(()=>_async_to_generator$Z(function*() {
            onExternalEdit && onExternalEdit(id);
        })(), [
        id,
        onExternalEdit
    ]);
    return {
        deleteBank,
        onEdit,
        isLoading: bankDeleteMutation.isPending
    };
}

const CounterpartBankView = (props)=>{
    const { i18n } = react.useLingui();
    const { deleteBank, onEdit, isLoading } = useCounterpartBankView(props);
    const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);
    const { isUpdateAllowed, isDeleteAllowed } = props.permissions;
    const { bank: { name, bic, iban, currency, country, account_number, account_holder_name, sort_code, routing_number } } = props;
    const handleOpenDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(true);
    }, []);
    const handleCloseDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(false);
    }, []);
    const handleDeleteBankAccount = React.useCallback(()=>deleteBank(handleCloseDeleteDialog), [
        deleteBank,
        handleCloseDeleteDialog
    ]);
    const actions = (isUpdateAllowed || isDeleteAllowed) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: onEdit,
                variant: "text",
                color: "primary",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {}),
                children: i18n._({
                    id: "ePK91l"
                })
            }),
            isDeleteAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: handleOpenDeleteDialog,
                variant: "text",
                color: "error",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {}),
                children: i18n._({
                    id: "cnGeoo"
                })
            })
        ]
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(MoniteCard, {
        items: [
            {
                label: i18n._({
                    id: "pfa8F0"
                }),
                value: name
            },
            {
                label: i18n._({
                    id: "y7vvb2"
                }),
                value: bic
            },
            {
                label: i18n._({
                    id: "sfIOlH"
                }),
                value: iban
            },
            {
                label: i18n._({
                    id: "5ad2f4"
                }),
                value: account_number
            },
            {
                label: i18n._({
                    id: "6K88PJ"
                }),
                value: account_holder_name
            },
            {
                label: i18n._({
                    id: "XHVMHc"
                }),
                value: sort_code
            },
            {
                label: i18n._({
                    id: "dVQ/BC"
                }),
                value: routing_number
            },
            {
                label: i18n._({
                    id: "JNCzPW"
                }),
                value: getCountries(i18n)[country]
            },
            {
                label: i18n._({
                    id: "Q2lUR2"
                }),
                value: getCurrencies(i18n)[currency]
            }
        ],
        children: [
            actions && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                        children: actions
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
                open: showDeleteDialog,
                title: i18n._({
                    id: "f/soQa",
                    values: {
                        name: name
                    }
                }),
                message: i18n._({
                    id: "MKc709"
                }),
                confirmLabel: i18n._({
                    id: "cnGeoo"
                }),
                cancelLabel: i18n._({
                    id: "dEgA5A"
                }),
                onClose: handleCloseDeleteDialog,
                onConfirm: handleDeleteBankAccount,
                isLoading: isLoading
            })
        ]
    });
};

const printCounterpartType = (customer, vendor)=>{
    const types = [];
    if (customer) types.push(customer);
    if (vendor) types.push(vendor);
    return types.join(', ');
};

const DefaultEmail = ({ email, isDefault })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        display: "flex",
        alignItems: "center",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                maxWidth: 250,
                sx: {
                    textWrap: 'nowrap',
                    overflow: 'hidden',
                    textOverflow: 'ellipsis'
                },
                title: email,
                children: email
            }),
            isDefault && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                ml: 2,
                mr: 1,
                display: "inline",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                    label: i18n._({
                        id: "Bn9+El"
                    }),
                    variant: "filled",
                    color: "default",
                    sx: {
                        // workaround to prevent the layout from shifting when the "default" label is visible
                        display: 'inline',
                        verticalAlign: 'inherit',
                        py: 0.84
                    }
                })
            })
        ]
    });
};
const CounterpartOrganizationView = ({ actions, counterpart: { companyName, phone, email, isVendor, taxId, isCustomer }, showCategories, isEmailDefault })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteCard, {
        items: [
            {
                label: i18n._({
                    id: "RA55Iu"
                }),
                value: companyName
            },
            {
                label: i18n._({
                    id: "K7tIrx"
                }),
                value: showCategories && printCounterpartType(isCustomer ? i18n._({
                    id: "876pfE"
                }) : undefined, isVendor ? i18n._({
                    id: "lO6GxP"
                }) : undefined)
            },
            {
                label: i18n._({
                    id: "ZuLy43"
                }),
                value: phone
            },
            {
                label: i18n._({
                    id: "O3oNi5"
                }),
                value: /*#__PURE__*/ jsxRuntime.jsx(DefaultEmail, {
                    email: email,
                    isDefault: isEmailDefault
                })
            },
            {
                label: i18n._({
                    id: "m+elvG"
                }),
                value: taxId
            }
        ],
        "data-testid": CounterpartDataTestId.OrganizationView,
        children: actions && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                    children: actions
                })
            ]
        })
    });
};

function asyncGeneratorStep$Y(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$Y(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$Y(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$Y(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function useCounterpartContactView({ onDelete, onEdit: onExternalEdit, contact: { id, counterpart_id } }) {
    const contactDeleteMutation = useDeleteCounterpartContact();
    const deleteContact = React.useCallback(()=>_async_to_generator$Y(function*() {
            const contactDeleteMutateAsync = contactDeleteMutation.mutateAsync;
            return yield contactDeleteMutateAsync({
                path: {
                    counterpart_id: counterpart_id,
                    contact_id: id
                }
            }, {
                onSuccess: ()=>{
                    onDelete && onDelete(id);
                }
            });
        })(), [
        contactDeleteMutation.mutateAsync,
        counterpart_id,
        id,
        onDelete
    ]);
    const onEdit = React.useCallback(()=>{
        onExternalEdit && onExternalEdit(id);
    }, [
        id,
        onExternalEdit
    ]);
    return {
        deleteContact,
        onEdit,
        isLoading: contactDeleteMutation.isPending
    };
}

function asyncGeneratorStep$X(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$X(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$X(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$X(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$2J(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2H(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2J(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1I(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1I(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1I(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useMakeCounterpartContactDefault = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.counterparts.postCounterpartsIdContactsIdMakeDefault.useMutation(undefined, {
        onMutate: (variables)=>_async_to_generator$X(function*() {
                const previousContacts = api.counterparts.getCounterpartsIdContacts.getQueryData({
                    path: {
                        counterpart_id: variables.path.counterpart_id
                    }
                }, queryClient);
                if (previousContacts) api.counterparts.getCounterpartsIdContacts.setQueryData({
                    path: {
                        counterpart_id: variables.path.counterpart_id
                    }
                }, _object_spread_props$1I(_object_spread$2H({}, previousContacts), {
                    data: previousContacts === null || previousContacts === void 0 ? void 0 : previousContacts.data.map((contact)=>_object_spread_props$1I(_object_spread$2H({}, contact), {
                            is_default: contact.id === variables.path.contact_id
                        }))
                }), queryClient);
                return previousContacts;
            })(),
        onError: (error, variables, previousContacts)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
            if (previousContacts) api.counterparts.getCounterpartsIdContacts.setQueryData({
                path: {
                    counterpart_id: variables.path.counterpart_id
                }
            }, previousContacts, queryClient);
        },
        onSuccess: (_, variables)=>_async_to_generator$X(function*() {
                yield Promise.all([
                    api.counterparts.getCounterpartsId.invalidateQueries({
                        parameters: {
                            path: {
                                counterpart_id: variables.path.counterpart_id
                            }
                        }
                    }, queryClient),
                    api.counterparts.getCounterpartsIdContacts.invalidateQueries(queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "YJC18a"
                }));
                api.counterparts.getCounterpartsIdContactsId.invalidateQueries({
                    parameters: {
                        path: {
                            counterpart_id: variables.path.counterpart_id,
                            contact_id: variables.path.contact_id
                        }
                    }
                }, queryClient);
            })()
    });
};
const CounterpartContactView = (props)=>{
    const { i18n } = react.useLingui();
    const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);
    const handleOpenDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(true);
    }, []);
    const handleCloseDeleteDialog = React.useCallback(()=>{
        setShowDeleteDialog(false);
    }, []);
    const { firstName, lastName, phone, email, line1, line2, postalCode, city, country, state } = prepareCounterpartContact(props.contact);
    const { deleteContact, onEdit, isLoading } = useCounterpartContactView(props);
    const { mutate } = useMakeCounterpartContactDefault();
    const makeDefault = (event)=>{
        event.preventDefault();
        return mutate({
            path: {
                counterpart_id: props.contact.counterpart_id,
                contact_id: props.contact.id
            }
        });
    };
    const { isUpdateAllowed, isDeleteAllowed } = props.permissions;
    const actions = (isUpdateAllowed || isDeleteAllowed) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: onEdit,
                variant: "text",
                color: "primary",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {}),
                children: i18n._({
                    id: "ePK91l"
                })
            }),
            isUpdateAllowed && !props.contact.is_default && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: makeDefault,
                variant: "text",
                color: "primary",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(StarIcon__default.default, {}),
                children: i18n._({
                    id: "LcyTY9"
                })
            }),
            isDeleteAllowed && !props.contact.is_default && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: handleOpenDeleteDialog,
                variant: "text",
                color: "error",
                size: "small",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {}),
                children: i18n._({
                    id: "cnGeoo"
                })
            })
        ]
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(MoniteCard, {
        items: [
            {
                label: i18n._({
                    id: "6YtxFj"
                }),
                value: getIndividualName(firstName, lastName)
            },
            {
                label: i18n._({
                    id: "Du6bPw"
                }),
                value: printAddress({
                    line1,
                    line2,
                    postalCode,
                    city,
                    country,
                    state
                }, i18n)
            },
            {
                label: i18n._({
                    id: "ZuLy43"
                }),
                value: phone
            },
            {
                label: i18n._({
                    id: "O3oNi5"
                }),
                value: /*#__PURE__*/ jsxRuntime.jsx(DefaultEmail, {
                    email: email,
                    isDefault: props.contact.is_default
                })
            }
        ],
        children: [
            actions && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                        children: actions
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
                open: showDeleteDialog,
                title: i18n._({
                    id: "DBpIDP",
                    values: {
                        0: getIndividualName(firstName, lastName)
                    }
                }),
                message: i18n._({
                    id: "MKc709"
                }),
                confirmLabel: i18n._({
                    id: "cnGeoo"
                }),
                cancelLabel: i18n._({
                    id: "dEgA5A"
                }),
                onClose: handleCloseDeleteDialog,
                onConfirm: deleteContact,
                isLoading: isLoading
            })
        ]
    });
};

const CounterpartIndividualView = ({ actions, counterpart: { firstName, lastName, phone, email, isVendor, isCustomer, taxId }, showCategories })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteCard, {
        "data-testid": CounterpartDataTestId.IndividualView,
        items: [
            {
                label: i18n._({
                    id: "6YtxFj"
                }),
                value: getIndividualName(firstName, lastName)
            },
            {
                label: i18n._({
                    id: "K7tIrx"
                }),
                value: showCategories && printCounterpartType(isCustomer ? i18n._({
                    id: "876pfE"
                }) : undefined, isVendor ? i18n._({
                    id: "lO6GxP"
                }) : undefined)
            },
            {
                label: i18n._({
                    id: "ZuLy43"
                }),
                value: phone
            },
            {
                label: i18n._({
                    id: "O3oNi5"
                }),
                value: email
            },
            {
                label: i18n._({
                    id: "m+elvG"
                }),
                value: taxId
            }
        ],
        children: actions && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                /*#__PURE__*/ jsxRuntime.jsx(material.CardActions, {
                    children: actions
                })
            ]
        })
    });
};

function useCounterpartView({ id, onDelete, onEdit: onExternalEdit }) {
    const { i18n } = react.useLingui();
    const { data: counterpart, isLoading: isCounterpartLoading, error: counterpartError } = useCounterpartById(id);
    const { data: addresses, isLoading: isAddressesLoading } = useCounterpartAddresses(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const { data: contacts, isLoading: isContactsLoading } = useCounterpartContactList(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const { data: vats, isLoading: isVatsLoading } = useCounterpartVatList(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const { api } = useMoniteContext();
    var _counterpart_id;
    const { data: banks, isLoading: isBanksLoading } = api.counterparts.getCounterpartsIdBankAccounts.useQuery({
        path: {
            counterpart_id: (_counterpart_id = counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) !== null && _counterpart_id !== void 0 ? _counterpart_id : ''
        }
    }, {
        enabled: Boolean(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id)
    });
    const { mutate: deleteMutate, isPending: isCounterpartDeleteLoading } = useDeleteCounterpart();
    const deleteCounterpart = React.useCallback((cb)=>{
        if (!counterpart) return;
        return deleteMutate({
            path: {
                counterpart_id: counterpart.id
            }
        }, {
            onSuccess: ()=>{
                onDelete === null || onDelete === void 0 ? void 0 : onDelete(counterpart.id);
                cb === null || cb === void 0 ? void 0 : cb();
            }
        });
    }, [
        deleteMutate,
        counterpart,
        onDelete
    ]);
    const onEdit = React.useCallback(()=>{
        if (!counterpart) return;
        onExternalEdit && onExternalEdit(counterpart.id, counterpart.type);
    }, [
        onExternalEdit,
        counterpart
    ]);
    const isLoading = isAddressesLoading || isBanksLoading || isCounterpartLoading || isContactsLoading || isVatsLoading || isCounterpartDeleteLoading;
    const title = React.useMemo(()=>{
        if (isLoading) return i18n._({
            id: "Z3FXyt"
        });
        if (counterpartError) return getAPIErrorMessage(i18n, counterpartError);
        if (counterpart) return getCounterpartName(counterpart);
        return '';
    }, [
        isLoading,
        i18n,
        counterpartError,
        counterpart
    ]);
    return {
        addresses: (addresses === null || addresses === void 0 ? void 0 : addresses.data) || [],
        contacts: contacts || [],
        banks: (banks === null || banks === void 0 ? void 0 : banks.data) || [],
        vats: (vats === null || vats === void 0 ? void 0 : vats.data) || [],
        counterpart,
        deleteCounterpart,
        onEdit,
        isLoading,
        title
    };
}

function _define_property$2I(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2G(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2I(target, key, source[key]);
        });
    }
    return target;
}
const CounterpartView = (props)=>{
    const { i18n } = react.useLingui();
    const { counterpart, addresses, banks, vats, contacts, deleteCounterpart, isLoading, onEdit, title } = useCounterpartView(props);
    const isEmailDefault = counterpart && contacts && isOrganizationCounterpart(counterpart) ? contacts.some((contact)=>{
        var _counterpart_organization;
        return contact.is_default && contact.email === ((_counterpart_organization = counterpart.organization) === null || _counterpart_organization === void 0 ? void 0 : _counterpart_organization.email);
    }) : false;
    const { data: isReadAvailable, isLoading: isReadAvailableLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'read',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const { data: isUpdateAllowed } = useIsActionAllowed({
        method: 'counterpart',
        action: 'update',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'create',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const { data: isDeleteAllowed, isLoading: isDeleteAllowedLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'delete',
        entityUserId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.created_by_entity_user_id
    });
    const counterpartPermissions = {
        isUpdateAllowed,
        isDeleteAllowed
    };
    const [showDeleteCounterpart, setShowDeleteCounterpart] = React.useState(false);
    const handleOpenDeleteCounterpartDialog = React.useCallback(()=>{
        setShowDeleteCounterpart(true);
    }, []);
    const handleCloseDeleteCounterpartDialog = React.useCallback(()=>{
        setShowDeleteCounterpart(false);
    }, []);
    const handleDeleteCounterpart = React.useCallback(()=>{
        deleteCounterpart(handleCloseDeleteCounterpartDialog);
    }, [
        deleteCounterpart,
        handleCloseDeleteCounterpartDialog
    ]);
    const actions = React.useMemo(()=>{
        return isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
            startIcon: /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {
                fontSize: "small"
            }),
            variant: "text",
            color: "primary",
            size: "small",
            onClick: onEdit,
            children: i18n._({
                id: "ePK91l"
            })
        });
    }, [
        i18n,
        isUpdateAllowed,
        onEdit
    ]);
    if (isLoading || isCreateAllowedLoading || isDeleteAllowedLoading || isReadAvailableLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadAvailable) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    if (!counterpart) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "R2CEyZ"
            }),
            description: i18n._({
                id: "N3BQW1",
                values: {
                    0: props.id
                }
            })
        });
    }
    var _props_showCategories, _props_showCategories1;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                title: title,
                closeButtonTooltip: i18n._({
                    id: "dQbJa+"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                    direction: "column",
                    spacing: 4,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
                            open: showDeleteCounterpart,
                            title: i18n._({
                                id: "AXqNoF",
                                values: {
                                    0: getCounterpartName(counterpart)
                                }
                            }),
                            message: i18n._({
                                id: "MKc709"
                            }),
                            confirmLabel: i18n._({
                                id: "cnGeoo"
                            }),
                            cancelLabel: i18n._({
                                id: "dEgA5A"
                            }),
                            onClose: handleCloseDeleteCounterpartDialog,
                            onConfirm: handleDeleteCounterpart,
                            isLoading: isLoading
                        }),
                        counterpart && isOrganizationCounterpart(counterpart) && /*#__PURE__*/ jsxRuntime.jsx(CounterpartOrganizationView, {
                            actions: actions,
                            showCategories: (_props_showCategories = props.showCategories) !== null && _props_showCategories !== void 0 ? _props_showCategories : true,
                            counterpart: _object_spread$2G({
                                taxId: counterpart.tax_id
                            }, prepareCounterpartOrganization(counterpart.organization, undefined)),
                            isEmailDefault: isEmailDefault
                        }),
                        counterpart && isIndividualCounterpart(counterpart) && /*#__PURE__*/ jsxRuntime.jsx(CounterpartIndividualView, {
                            actions: actions,
                            showCategories: (_props_showCategories1 = props.showCategories) !== null && _props_showCategories1 !== void 0 ? _props_showCategories1 : true,
                            counterpart: _object_spread$2G({
                                taxId: counterpart.tax_id
                            }, prepareCounterpartIndividual(counterpart.individual))
                        }),
                        counterpart && addresses[0] && /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "column",
                            spacing: 2,
                            "data-testid": CounterpartDataTestId.Address,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "Du6bPw"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(CounterpartAddressView, {
                                    address: addresses[0],
                                    onEdit: props.onAddressEdit,
                                    permissions: counterpartPermissions
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "column",
                            spacing: 2,
                            "data-testid": CounterpartDataTestId.Vat,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "khTXFy"
                                    })
                                }),
                                vats === null || vats === void 0 ? void 0 : vats.map((vat)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartVatView, {
                                        permissions: counterpartPermissions,
                                        vat: vat,
                                        onEdit: props.onVatEdit,
                                        onDelete: props.onVatDelete
                                    }, vat.id)),
                                isCreateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        color: "primary",
                                        variant: "outlined",
                                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddCircleOutlineIcon__default.default, {}),
                                        onClick: props.onVatCreate,
                                        children: i18n._({
                                            id: "kRYxEt"
                                        })
                                    })
                                })
                            ]
                        }),
                        counterpart && isOrganizationCounterpart(counterpart) && /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "column",
                            spacing: 2,
                            "data-testid": CounterpartDataTestId.ContactPerson,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "mL8mpF"
                                    })
                                }),
                                contacts === null || contacts === void 0 ? void 0 : contacts.map((contact)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartContactView, {
                                        contact: contact,
                                        onEdit: props.onContactEdit,
                                        onDelete: props.onContactDelete,
                                        permissions: counterpartPermissions
                                    }, contact.id)),
                                isCreateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        color: "primary",
                                        variant: "outlined",
                                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddCircleOutlineIcon__default.default, {}),
                                        onClick: props.onContactCreate,
                                        children: i18n._({
                                            id: "TWUOb8"
                                        })
                                    })
                                })
                            ]
                        }),
                        counterpart && props.showBankAccounts && /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "column",
                            spacing: 2,
                            "data-testid": CounterpartDataTestId.BankAccount,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "wcGeDE"
                                    })
                                }),
                                banks === null || banks === void 0 ? void 0 : banks.map((bank)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartBankView, {
                                        bank: bank,
                                        onEdit: props.onBankEdit,
                                        onDelete: props.onBankDelete,
                                        permissions: counterpartPermissions
                                    }, bank.id)),
                                isCreateAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        color: "primary",
                                        variant: "outlined",
                                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddCircleOutlineIcon__default.default, {}),
                                        onClick: props.onBankCreate,
                                        children: i18n._({
                                            id: "jpNk2r"
                                        })
                                    })
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                deleteButton: {
                    label: i18n._({
                        id: "cnGeoo"
                    }),
                    onClick: handleOpenDeleteCounterpartDialog,
                    isDisabled: !isDeleteAllowed
                }
            })
        ]
    });
};

var COUNTERPART_VIEW = /*#__PURE__*/ function(COUNTERPART_VIEW) {
    /** Used when we need to show for already created counterpart individual / organization */ COUNTERPART_VIEW["view"] = "view";
    /** Used when we need to show form to create new organization */ COUNTERPART_VIEW["organizationForm"] = "organizationForm";
    /** Used when we need to show form to create new individual */ COUNTERPART_VIEW["individualForm"] = "individualForm";
    /** Used when we need to show form to create / update customer address */ COUNTERPART_VIEW["addressForm"] = "addressForm";
    /** Used when we need to show form to create / update contact information */ COUNTERPART_VIEW["contactForm"] = "contactForm";
    /** Used when we need to show form to create / update bank accounts information */ COUNTERPART_VIEW["bankAccountForm"] = "bankAccountForm";
    /** Used when we need to show form to create / update vat information */ COUNTERPART_VIEW["vatForm"] = "vatForm";
    return COUNTERPART_VIEW;
}({});
function useCounterpartDetails(props) {
    const [counterpartView, setCounterpartView] = React.useState(props.id ? "view" : props.type === 'individual' ? "individualForm" : "organizationForm");
    const [counterpartId, setCounterpartId] = React.useState(props.id);
    const [addressId, setAddressId] = React.useState();
    const [contactId, setContactId] = React.useState();
    const [bankId, setBankId] = React.useState();
    const [vatId, setVatId] = React.useState();
    const [actions] = React.useState(()=>({
            showView: ()=>{
                if (!props.id) {
                    var _props_onReturn;
                    (_props_onReturn = props.onReturn) === null || _props_onReturn === void 0 ? void 0 : _props_onReturn.call(props);
                    return;
                }
                setCounterpartView("view");
            },
            showAddressForm: ()=>setCounterpartView("addressForm"),
            showOrganizationForm: ()=>setCounterpartView("organizationForm"),
            showIndividualForm: ()=>setCounterpartView("individualForm"),
            showContactForm: ()=>setCounterpartView("contactForm"),
            showBankAccountForm: ()=>setCounterpartView("bankAccountForm"),
            showVatForm: ()=>setCounterpartView("vatForm")
        }));
    const onClose = reactUse.useLatest(props.onClose);
    const onCreateImmutable = reactUse.useLatest(props.onCreate);
    const onCreate = React.useCallback((id)=>{
        var _onCreateImmutable_current;
        actions.showView();
        (_onCreateImmutable_current = onCreateImmutable.current) === null || _onCreateImmutable_current === void 0 ? void 0 : _onCreateImmutable_current.call(onCreateImmutable, id);
        setCounterpartId(id);
    }, [
        actions,
        onCreateImmutable
    ]);
    const onUpdateImmutable = reactUse.useLatest(props.onUpdate);
    const onUpdate = React.useCallback((id)=>{
        var _onUpdateImmutable_current;
        actions.showView();
        (_onUpdateImmutable_current = onUpdateImmutable.current) === null || _onUpdateImmutable_current === void 0 ? void 0 : _onUpdateImmutable_current.call(onUpdateImmutable, id);
    }, [
        actions,
        onUpdateImmutable
    ]);
    const onEdit = React.useCallback((_id, type)=>{
        if (type === 'organization') {
            actions.showOrganizationForm();
        }
        if (type === 'individual') {
            actions.showIndividualForm();
        }
    }, [
        actions
    ]);
    const onAddressCancel = React.useCallback(()=>{
        actions.showView();
        setAddressId(undefined);
    }, [
        actions
    ]);
    const onAddressEdit = React.useCallback((id)=>{
        setAddressId(id);
        actions.showAddressForm();
    }, [
        actions
    ]);
    const onAddressUpdateImmutable = reactUse.useLatest(props.onAddressUpdate);
    const onAddressUpdate = React.useCallback((id)=>{
        var _onAddressUpdateImmutable_current;
        actions.showView();
        (_onAddressUpdateImmutable_current = onAddressUpdateImmutable.current) === null || _onAddressUpdateImmutable_current === void 0 ? void 0 : _onAddressUpdateImmutable_current.call(onAddressUpdateImmutable, id);
        setAddressId(undefined);
    }, [
        actions,
        onAddressUpdateImmutable
    ]);
    const onContactCancel = React.useCallback(()=>{
        actions.showView();
        setContactId(undefined);
    }, [
        actions
    ]);
    const onContactCreateImmutable = reactUse.useLatest(props.onContactCreate);
    const onContactCreate = React.useCallback((id)=>{
        var _onContactCreateImmutable_current;
        actions.showView();
        (_onContactCreateImmutable_current = onContactCreateImmutable.current) === null || _onContactCreateImmutable_current === void 0 ? void 0 : _onContactCreateImmutable_current.call(onContactCreateImmutable, id);
        setContactId(undefined);
    }, [
        actions,
        onContactCreateImmutable
    ]);
    const onContactUpdateImmutable = reactUse.useLatest(props.onContactUpdate);
    const onContactUpdate = React.useCallback((id)=>{
        var _onContactUpdateImmutable_current;
        actions.showView();
        (_onContactUpdateImmutable_current = onContactUpdateImmutable.current) === null || _onContactUpdateImmutable_current === void 0 ? void 0 : _onContactUpdateImmutable_current.call(onContactUpdateImmutable, id);
        setContactId(undefined);
    }, [
        actions,
        onContactUpdateImmutable
    ]);
    const onContactEdit = React.useCallback((id)=>{
        setContactId(id);
        actions.showContactForm();
    }, [
        actions
    ]);
    const onBankCancel = React.useCallback(()=>{
        actions.showView();
        setBankId(undefined);
    }, [
        actions
    ]);
    const onBankCreateImmutable = reactUse.useLatest(props.onBankCreate);
    const onBankCreate = React.useCallback((id)=>{
        var _onBankCreateImmutable_current;
        actions.showView();
        (_onBankCreateImmutable_current = onBankCreateImmutable.current) === null || _onBankCreateImmutable_current === void 0 ? void 0 : _onBankCreateImmutable_current.call(onBankCreateImmutable, id);
        setBankId(undefined);
    }, [
        actions,
        onBankCreateImmutable
    ]);
    const onBankUpdateImmutable = reactUse.useLatest(props.onBankUpdate);
    const onBankUpdate = React.useCallback((id)=>{
        var _onBankUpdateImmutable_current;
        actions.showView();
        (_onBankUpdateImmutable_current = onBankUpdateImmutable.current) === null || _onBankUpdateImmutable_current === void 0 ? void 0 : _onBankUpdateImmutable_current.call(onBankUpdateImmutable, id);
        setBankId(undefined);
    }, [
        actions,
        onBankUpdateImmutable
    ]);
    const onBankEdit = React.useCallback((id)=>{
        setBankId(id);
        actions.showBankAccountForm();
    }, [
        actions
    ]);
    const onVatCreateImmutable = reactUse.useLatest(props.onVatCreate);
    const onVatCreate = React.useCallback((id)=>{
        var _onVatCreateImmutable_current;
        actions.showView();
        (_onVatCreateImmutable_current = onVatCreateImmutable.current) === null || _onVatCreateImmutable_current === void 0 ? void 0 : _onVatCreateImmutable_current.call(onVatCreateImmutable, id);
        setVatId(undefined);
    }, [
        actions,
        onVatCreateImmutable
    ]);
    const onVatUpdateImmutable = reactUse.useLatest(props.onVatUpdate);
    const onVatUpdate = React.useCallback((id)=>{
        var _onVatUpdateImmutable_current;
        actions.showView();
        (_onVatUpdateImmutable_current = onVatUpdateImmutable.current) === null || _onVatUpdateImmutable_current === void 0 ? void 0 : _onVatUpdateImmutable_current.call(onVatUpdateImmutable, id);
        setVatId(undefined);
    }, [
        actions,
        onVatUpdateImmutable
    ]);
    const onVatCancel = React.useCallback(()=>{
        actions.showView();
        setVatId(undefined);
    }, [
        actions
    ]);
    const onVatEdit = React.useCallback((id)=>{
        setVatId(id);
        actions.showVatForm();
    }, [
        actions
    ]);
    return {
        counterpartId,
        addressId,
        contactId,
        bankId,
        vatId,
        counterpartView,
        actions,
        onClose,
        onCreate,
        onUpdate,
        onEdit,
        onAddressCancel,
        onAddressEdit,
        onAddressUpdate,
        onContactCreate,
        onContactUpdate,
        onContactEdit,
        onContactCancel,
        onBankCreate,
        onBankUpdate,
        onBankEdit,
        onBankCancel,
        onVatCreate,
        onVatUpdate,
        onVatEdit,
        onVatCancel
    };
}

function _define_property$2H(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2F(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2H(target, key, source[key]);
        });
    }
    return target;
}
const CounterpartDetails = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartDetailsBase, _object_spread$2F({}, props))
    });
const CounterpartDetailsBase = (props)=>{
    var _componentSettings_counterparts_customerTypes, _componentSettings_counterparts;
    const { componentSettings } = useMoniteContext();
    var _props_isInvoiceCreation;
    const isInvoiceCreation = (_props_isInvoiceCreation = props.isInvoiceCreation) !== null && _props_isInvoiceCreation !== void 0 ? _props_isInvoiceCreation : false;
    const { addressId, counterpartId, counterpartView, onCreate, onUpdate, onEdit, onAddressCancel, onAddressEdit, onAddressUpdate, contactId, onContactEdit, onContactCreate, onContactUpdate, onContactCancel, bankId, onBankEdit, onBankCreate, onBankUpdate, onBankCancel, vatId, onVatEdit, onVatCreate, onVatUpdate, onVatCancel, actions: { showView, showContactForm, showBankAccountForm, showVatForm } } = useCounterpartDetails(props);
    if (!(props.id || props.type)) {
        throw new Error('CounterpartDetails: `id` or `type` is required');
    }
    const { showBankAccounts = true, customerTypes } = props;
    const defaultValues = props.type ? props.defaultValues : undefined;
    var _customerTypes_length, _componentSettings_counterparts_customerTypes_length;
    const shouldShowCategories = Boolean(((_customerTypes_length = customerTypes === null || customerTypes === void 0 ? void 0 : customerTypes.length) !== null && _customerTypes_length !== void 0 ? _customerTypes_length : 0) > 1 || !customerTypes && ((_componentSettings_counterparts_customerTypes_length = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : (_componentSettings_counterparts_customerTypes = _componentSettings_counterparts.customerTypes) === null || _componentSettings_counterparts_customerTypes === void 0 ? void 0 : _componentSettings_counterparts_customerTypes.length) !== null && _componentSettings_counterparts_customerTypes_length !== void 0 ? _componentSettings_counterparts_customerTypes_length : 0) > 1);
    const renderSubResource = React.useCallback(()=>{
        if (!counterpartView || !counterpartId) {
            return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                color: "inherit",
                size: 20
            });
        }
        switch(counterpartView){
            case COUNTERPART_VIEW.view:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartView, {
                    id: counterpartId,
                    showCategories: shouldShowCategories,
                    showBankAccounts: showBankAccounts,
                    onEdit: onEdit,
                    onDelete: props.onDelete,
                    onAddressEdit: onAddressEdit,
                    onContactEdit: onContactEdit,
                    onContactCreate: showContactForm,
                    onContactDelete: props.onContactDelete,
                    onBankEdit: onBankEdit,
                    onBankCreate: showBankAccountForm,
                    onBankDelete: props.onBankDelete,
                    onVatEdit: onVatEdit,
                    onVatCreate: showVatForm,
                    onVatDelete: props.onVatDelete
                });
            case COUNTERPART_VIEW.addressForm:
                if (!addressId) return null;
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartAddressFormUpdate, {
                    counterpartId: counterpartId,
                    addressId: addressId,
                    onCancel: onAddressCancel,
                    onUpdate: onAddressUpdate,
                    payableCounterpartRawData: props.payableCounterpartRawData
                });
            case COUNTERPART_VIEW.contactForm:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartContactForm, {
                    counterpartId: counterpartId,
                    contactId: contactId,
                    onCancel: onContactCancel,
                    onCreate: onContactCreate,
                    onUpdate: onContactUpdate
                });
            case COUNTERPART_VIEW.vatForm:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartVatForm, {
                    counterpartId: counterpartId,
                    vatId: vatId,
                    onCancel: onVatCancel,
                    onCreate: onVatCreate,
                    onUpdate: onVatUpdate,
                    payableCounterpartRawData: props.payableCounterpartRawData
                });
            case COUNTERPART_VIEW.bankAccountForm:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartBankForm, {
                    counterpartId: counterpartId,
                    bankId: bankId,
                    onCancel: onBankCancel,
                    onCreate: onBankCreate,
                    onUpdate: onBankUpdate,
                    payableCounterpartRawData: props.payableCounterpartRawData
                });
            default:
                return null;
        }
    }, [
        addressId,
        bankId,
        contactId,
        counterpartId,
        counterpartView,
        onAddressCancel,
        onAddressEdit,
        onAddressUpdate,
        onBankCancel,
        onBankCreate,
        onBankEdit,
        onBankUpdate,
        onContactCancel,
        onContactCreate,
        onContactEdit,
        onContactUpdate,
        onEdit,
        onVatCancel,
        onVatCreate,
        onVatEdit,
        onVatUpdate,
        props.onBankDelete,
        props.onContactDelete,
        props.onDelete,
        props.onVatDelete,
        props.payableCounterpartRawData,
        showBankAccountForm,
        showBankAccounts,
        shouldShowCategories,
        showContactForm,
        showVatForm,
        vatId
    ]);
    return React.useMemo(()=>{
        switch(counterpartView){
            case COUNTERPART_VIEW.individualForm:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartIndividualForm, {
                    id: counterpartId,
                    onCancel: showView,
                    onClose: props.onClose,
                    onCreate: onCreate,
                    onReturn: props.onReturn,
                    onUpdate: onUpdate,
                    isInvoiceCreation: isInvoiceCreation,
                    showCategories: shouldShowCategories,
                    defaultValues: defaultValues,
                    defaultValuesOCR: props.defaultValuesOCR,
                    payableCounterpartRawData: props.payableCounterpartRawData
                });
            case COUNTERPART_VIEW.organizationForm:
                return /*#__PURE__*/ jsxRuntime.jsx(CounterpartOrganizationForm, {
                    id: counterpartId,
                    onCancel: showView,
                    onClose: props.onClose,
                    onCreate: onCreate,
                    onReturn: props.onReturn,
                    onUpdate: onUpdate,
                    isInvoiceCreation: isInvoiceCreation,
                    showCategories: shouldShowCategories,
                    defaultValues: defaultValues,
                    defaultValuesOCR: props.defaultValuesOCR,
                    payableCounterpartRawData: props.payableCounterpartRawData
                });
            default:
                return renderSubResource();
        }
    }, [
        counterpartId,
        counterpartView,
        defaultValues,
        isInvoiceCreation,
        onCreate,
        onUpdate,
        renderSubResource,
        shouldShowCategories,
        showView,
        props.defaultValuesOCR,
        props.payableCounterpartRawData,
        props.onClose,
        props.onReturn
    ]);
};

const CounterpartTypeItem = ({ description, isTypeSelected, title, type, onClick })=>{
    const handleClick = React.useCallback(()=>{
        onClick(type);
    }, [
        onClick,
        type
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
        variant: "outlined",
        sx: {
            cursor: 'pointer',
            border: 'none'
        },
        onClick: handleClick,
        children: /*#__PURE__*/ jsxRuntime.jsx(material.CardActionArea, {
            sx: {
                display: 'flex',
                alignItems: 'start',
                bgcolor: isTypeSelected ? 'rgba(0, 0, 0, 0.04)' : 'rgba(0, 0, 0, 0.02)',
                borderColor: 'transparent'
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.CardContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        sx: {
                            fontWeight: 500,
                            mb: 1
                        },
                        children: title
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        children: description
                    })
                ]
            })
        })
    });
};

const CreateCounterpartDialog = ({ open, onClose, onCreate, getCounterpartDefaultValues, customerTypes })=>{
    const { i18n } = react.useLingui();
    const [viewMode, setViewMode] = React.useState("choose-mode");
    const [counterpartType, setCounterpartType] = React.useState(undefined);
    const handleCreateCounterpart = React.useCallback((type)=>{
        setCounterpartType(type);
        setViewMode("counterpart-creation-mode");
    }, []);
    const defaultValuesOCR = getCounterpartDefaultValues === null || getCounterpartDefaultValues === void 0 ? void 0 : getCounterpartDefaultValues(counterpartType);
    if (viewMode === "counterpart-creation-mode" && counterpartType) {
        return /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
            alignDialog: "right",
            "data-testid": "create-counterpart-dialog",
            open: open,
            onClose: ()=>{
                setViewMode("choose-mode");
                setCounterpartType(undefined);
                onClose();
            },
            children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartDetails, {
                defaultValuesOCR: defaultValuesOCR,
                type: counterpartType,
                onCreate: (id)=>{
                    onCreate(id);
                    setViewMode("choose-mode");
                    setCounterpartType(undefined);
                    onClose();
                },
                customerTypes: customerTypes
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
        alignDialog: "right",
        open: open,
        onClose: onClose,
        "data-testid": "create-counterpart-dialog",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "h3",
                sx: {
                    p: 4
                },
                children: i18n._({
                    id: "K2Ydoi"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        sx: {
                            mb: 2,
                            fontWeight: 500
                        },
                        children: i18n._({
                            id: "JCB8BJ"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'grid',
                            gap: 2,
                            gridTemplateColumns: 'repeat(2, minmax(0, 1fr))'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(CounterpartTypeItem, {
                                title: i18n._({
                                    id: "44VV9b"
                                }),
                                description: i18n._({
                                    id: "VVqLAM"
                                }),
                                onClick: handleCreateCounterpart,
                                type: 'individual'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(CounterpartTypeItem, {
                                title: i18n._({
                                    id: "ucgZ0o"
                                }),
                                description: i18n._({
                                    id: "iVCxQk"
                                }),
                                onClick: handleCreateCounterpart,
                                type: 'organization'
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogActions, {
                children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                    variant: "ghost",
                    size: "lg",
                    onClick: onClose,
                    children: i18n._({
                        id: "dEgA5A"
                    })
                })
            })
        ]
    });
};

const PageHeader = ({ title, extra, className })=>/*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        className: className,
        direction: "row",
        justifyContent: "space-between",
        alignItems: "center",
        sx: {
            marginBottom: 3
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "h2",
                children: title
            }),
            extra ? /*#__PURE__*/ jsxRuntime.jsx("aside", {
                children: extra
            }) : null
        ]
    });

function _define_property$2G(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2E(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2G(target, key, source[key]);
        });
    }
    return target;
}
const Counterparts = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartsBase, _object_spread$2E({}, props))
    });
const CounterpartsBase = ({ customerTypes })=>{
    var _componentSettings_counterparts;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const [counterpartId, setId] = React.useState(undefined);
    const [openDetailsDialog, setOpenDetailsDialog] = React.useState(false);
    const [openCreateDialog, setOpenCreateDialog] = React.useState(false);
    const handleRowAction = React.useCallback((id)=>{
        setOpenDetailsDialog(true);
        setId(id);
    }, []);
    const closeDetailsDialog = React.useCallback(()=>{
        setOpenDetailsDialog(false);
    }, []);
    const handleOnClosedModal = React.useCallback(()=>{
        setId(undefined);
    }, []);
    const { data: user } = useEntityUserByAuthToken();
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'counterpart',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { root } = useRootElements();
    const className = 'Monite-Counterparts';
    const counterpartDetails = (()=>{
        var _componentSettings_counterparts;
        if (!counterpartId) return null;
        return /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
            alignDialog: "right",
            open: openDetailsDialog,
            container: root,
            onClose: closeDetailsDialog,
            onClosed: handleOnClosedModal,
            children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartDetails, {
                id: counterpartId,
                onDelete: closeDetailsDialog,
                customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes)
            })
        });
    })();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                className: className + '-Title',
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "dU8ZD6"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx("div", {
                    className: className + '-Actions',
                    children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                        size: "lg",
                        onClick: ()=>setOpenCreateDialog(true),
                        className: className + '-Actions-CreateNew',
                        disabled: !isCreateAllowed,
                        children: i18n._({
                            id: "BOqY23"
                        })
                    })
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(CounterpartsTable, {
                onRowClick: handleRowAction,
                openModal: setOpenCreateDialog
            }),
            counterpartDetails,
            /*#__PURE__*/ jsxRuntime.jsx(CreateCounterpartDialog, {
                open: openCreateDialog,
                onClose: ()=>setOpenCreateDialog(false),
                onCreate: (newCounterpartId)=>{
                    setId(newCounterpartId);
                    setOpenDetailsDialog(true);
                },
                customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes)
            })
        ]
    });
};

const CreateCounterpartModal = ({ open, onClose, onCreate, customerTypes, isInvoiceCreation, getCounterpartDefaultValues })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const [counterpartType, setCounterpartType] = React.useState(undefined);
    const defaultValuesOCR = getCounterpartDefaultValues === null || getCounterpartDefaultValues === void 0 ? void 0 : getCounterpartDefaultValues(counterpartType);
    const handleClose = React.useCallback(()=>{
        setCounterpartType(undefined);
        onClose();
    }, [
        onClose
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Modal, {
        open: open,
        container: root,
        "data-testid": "create-counterpart-modal",
        onClose: handleClose,
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            sx: {
                position: 'relative',
                top: '50%',
                left: '50%',
                transform: 'translate(-50%, -50%)',
                maxWidth: 600,
                bgcolor: 'background.paper',
                boxShadow: 24,
                borderRadius: 2,
                maxHeight: '90%'
            },
            children: counterpartType ? /*#__PURE__*/ jsxRuntime.jsx(CounterpartDetails, {
                type: counterpartType,
                customerTypes: customerTypes,
                isInvoiceCreation: isInvoiceCreation,
                onClose: handleClose,
                onReturn: ()=>setCounterpartType(undefined),
                onCreate: (counterpartId)=>{
                    onCreate(counterpartId);
                    onClose();
                },
                defaultValuesOCR: defaultValuesOCR,
                defaultValues: {
                    isCustomer: customerTypes === null || customerTypes === void 0 ? void 0 : customerTypes.includes('customer'),
                    isVendor: customerTypes === null || customerTypes === void 0 ? void 0 : customerTypes.includes('vendor')
                }
            }) : /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                alignItems: "center",
                p: 4,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 11,
                        mb: 4,
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h3",
                            children: i18n._({
                                id: "K2Ydoi"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 1,
                        mb: 4,
                        children: /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            "aria-label": i18n._({
                                id: "2A6b+t"
                            }),
                            onClick: handleClose,
                            color: "default",
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        sx: {
                            mb: 2,
                            fontWeight: 500
                        },
                        children: i18n._({
                            id: "JCB8BJ"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'grid',
                            gap: 2,
                            gridTemplateColumns: 'repeat(2, minmax(0, 1fr))'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(CounterpartTypeItem, {
                                title: i18n._({
                                    id: "44VV9b"
                                }),
                                description: i18n._({
                                    id: "VVqLAM"
                                }),
                                onClick: ()=>setCounterpartType('individual'),
                                type: "individual",
                                isTypeSelected: counterpartType === 'individual'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(CounterpartTypeItem, {
                                title: i18n._({
                                    id: "ucgZ0o"
                                }),
                                description: i18n._({
                                    id: "iVCxQk"
                                }),
                                onClick: ()=>setCounterpartType('organization'),
                                type: "organization",
                                isTypeSelected: counterpartType === 'organization'
                            })
                        ]
                    })
                ]
            })
        })
    });
};

function _define_property$2F(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2D(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2F(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1H(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1H(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1H(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$O(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$O(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$O(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const alertVariants = classVarianceAuthority.cva('mtw:relative mtw:w-full mtw:rounded-lg mtw:pl-4 mtw:pt-3 mtw:pr-3 mtw:pb-4 mtw:flex mtw:items-start mtw:gap-4', {
    variants: {
        variant: {
            default: 'mtw:bg-background mtw:text-foreground',
            info: 'mtw:bg-blue-50 mtw:text-blue-900 mtw:dark:bg-blue-950 mtw:dark:text-blue-100',
            warning: 'mtw:bg-yellow-50 mtw:text-yellow-900 mtw:dark:bg-yellow-950 mtw:dark:text-yellow-100',
            error: 'mtw:bg-red-50 mtw:text-red-900 mtw:dark:bg-red-950 mtw:dark:text-red-100',
            success: 'mtw:bg-green-50 mtw:text-green-900 mtw:dark:bg-green-950 mtw:dark:text-green-100'
        }
    },
    defaultVariants: {
        variant: 'default'
    }
});
const Alert = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className, variant, icon, children } = _param, props = _object_without_properties$O(_param, [
        "className",
        "variant",
        "icon",
        "children"
    ]);
    const [isClosed, setIsClosed] = React.useState(false);
    if (isClosed) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs("div", _object_spread_props$1H(_object_spread$2D({
        ref: ref,
        role: "alert",
        className: cn(alertVariants({
            variant
        }), className)
    }, props), {
        children: [
            icon && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:shrink-0 mtw:h-8 mtw:w-8 mtw:mt-1",
                children: icon
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:flex-1",
                children: children
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Button, {
                variant: "ghost",
                size: "icon",
                className: "mtw:h-8 mtw:w-8 mtw:rounded-md mtw:bg-transparent mtw:opacity-70 mtw:hover:opacity-100",
                onClick: ()=>setIsClosed(true),
                "aria-label": "Close alert",
                children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.X, {})
            })
        ]
    }));
});
Alert.displayName = 'Alert';
const AlertTitle = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className } = _param, props = _object_without_properties$O(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("h3", _object_spread$2D({
        ref: ref,
        className: cn('mtw:mb-1 mtw:font-medium mtw:leading-none mtw:tracking-tight', className)
    }, props));
});
AlertTitle.displayName = 'AlertTitle';
const AlertDescription = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className } = _param, props = _object_without_properties$O(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("p", _object_spread$2D({
        ref: ref,
        className: cn('mtw:text-sm mtw:[&_p]:leading-relaxed mtw:font-normal', className)
    }, props));
});
AlertDescription.displayName = 'AlertDescription';

function _define_property$2E(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2C(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2E(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1G(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1G(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1G(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const COUNTERPART_CREATE_NEW_ID$1 = '__create-new__';
// Delay to wait for form initialization,
// to prevent premature auto-selection of counterpart in form input
const FORM_INIT_TIMEOUT = 50;
const filter$2 = material.createFilterOptions();
function isCreateNewCounterpartOption$1(counterpartOption) {
    return (counterpartOption === null || counterpartOption === void 0 ? void 0 : counterpartOption.id) === COUNTERPART_CREATE_NEW_ID$1;
}
const CounterpartAutocomplete = ({ control, name, label, required = true, getCounterpartDefaultValues, multiple = false, disabled = false, customerTypes, counterpartRawName, counterpartMatchingToOCR, counterpartAISuggested, setShowEditCounterpartDialog, showEditCounterpartButton = false })=>{
    var _componentSettings_counterparts;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { componentSettings } = useMoniteContext();
    const { setValue, getValues } = reactHookForm.useFormContext();
    const [isCreateCounterpartOpened, setIsCreateCounterpartOpened] = React.useState(false);
    const [newCounterpartId, setNewCounterpartId] = React.useState(null);
    const [hasUserChangedValue, setHasUserChangedValue] = React.useState(false);
    const [isFormInitialized, setIsFormInitialized] = React.useState(false);
    const isMountedRef = useIsMounted();
    const { data: counterparts, isLoading: isCounterpartsLoading } = useCounterpartList({
        query: {
            is_vendor: true
        }
    });
    const currentValue = getValues(name);
    const hasFieldValue = React.useMemo(()=>{
        if (multiple) {
            return Array.isArray(currentValue) && currentValue.length > 0;
        }
        return currentValue !== undefined && currentValue !== null && currentValue !== '';
    }, [
        currentValue,
        multiple
    ]);
    const autocompleteOptions = React.useMemo(()=>{
        // Create options from props, to be shown immediately
        const propOptions = [];
        var _counterparts_data_map;
        // Base options with counterparts from the API
        const baseOptions = (_counterparts_data_map = counterparts === null || counterparts === void 0 ? void 0 : counterparts.data.map((counterpart)=>({
                id: counterpart.id,
                label: getCounterpartName(counterpart)
            }))) !== null && _counterparts_data_map !== void 0 ? _counterparts_data_map : [];
        // Add counterpartMatchingToOCR if it exists and isn't already in baseOptions
        if (!multiple && counterpartMatchingToOCR && !baseOptions.some((c)=>c.id === counterpartMatchingToOCR.id)) {
            propOptions.push({
                id: counterpartMatchingToOCR.id,
                label: getCounterpartName(counterpartMatchingToOCR)
            });
        }
        // Add counterpartAISuggested if it exists and isn't already in baseOptions or propOptions
        if (!multiple && counterpartAISuggested && !baseOptions.some((c)=>c.id === counterpartAISuggested.id) && !propOptions.some((c)=>c.id === counterpartAISuggested.id)) {
            propOptions.push({
                id: counterpartAISuggested.id,
                label: getCounterpartName(counterpartAISuggested)
            });
        }
        // Return prop options first (for immediate display), then base options
        return [
            ...propOptions,
            ...baseOptions
        ];
    }, [
        counterparts,
        multiple,
        counterpartMatchingToOCR,
        counterpartAISuggested
    ]);
    React.useEffect(()=>{
        if (newCounterpartId) {
            const currentValues = getValues(name);
            if (multiple) {
                const values = currentValues ? currentValues : [];
                const isAlreadyAdded = values === null || values === void 0 ? void 0 : values.some((counterpart)=>counterpart.id === newCounterpartId);
                if (!isAlreadyAdded) {
                    const existingCounterpart = autocompleteOptions.find((counterpart)=>counterpart.id === newCounterpartId);
                    const newCounterpart = {
                        id: newCounterpartId,
                        label: existingCounterpart ? existingCounterpart.label : i18n._({
                            id: "mjLDL1"
                        })
                    };
                    setValue(name, [
                        ...values,
                        newCounterpart
                    ]);
                }
            } else {
                setValue(name, newCounterpartId, {
                    shouldValidate: true
                });
            }
        }
    }, [
        newCounterpartId,
        setValue,
        name,
        getValues,
        autocompleteOptions,
        multiple,
        i18n
    ]);
    // Track form initialization to prevent premature auto-selection
    React.useEffect(()=>{
        if (hasFieldValue || (counterpartAISuggested === null || counterpartAISuggested === void 0 ? void 0 : counterpartAISuggested.id)) {
            setIsFormInitialized(true);
        } else {
            // Set a timeout to mark as initialized even if no value is set
            // This prevents the form from never being initialized
            const timeoutId = setTimeout(()=>{
                if (isMountedRef.current) {
                    setIsFormInitialized(true);
                }
            }, FORM_INIT_TIMEOUT);
            return ()=>clearTimeout(timeoutId);
        }
    }, [
        hasFieldValue,
        counterpartAISuggested === null || counterpartAISuggested === void 0 ? void 0 : counterpartAISuggested.id,
        isMountedRef
    ]);
    React.useEffect(()=>{
        if (!multiple && !hasFieldValue && !hasUserChangedValue && isMountedRef.current) {
            const propCounterpartToSet = counterpartAISuggested || counterpartMatchingToOCR;
            if (propCounterpartToSet === null || propCounterpartToSet === void 0 ? void 0 : propCounterpartToSet.id) {
                // For AI suggested, wait for form initialization to prevent premature setting
                if (propCounterpartToSet === counterpartAISuggested && !isFormInitialized) {
                    return;
                }
                setValue(name, propCounterpartToSet.id, {
                    shouldValidate: true
                });
            }
        }
    }, [
        counterpartMatchingToOCR,
        counterpartAISuggested,
        multiple,
        hasFieldValue,
        hasUserChangedValue,
        name,
        setValue,
        isMountedRef,
        isFormInitialized
    ]);
    const selectedCounterpartOption = React.useMemo(()=>{
        if (multiple) {
            return Array.isArray(currentValue) ? currentValue : [];
        }
        return autocompleteOptions.find((option)=>option.id === currentValue) || null;
    }, [
        currentValue,
        autocompleteOptions,
        multiple
    ]);
    const hasCounterpartFromProps = Boolean(counterpartMatchingToOCR) || Boolean(counterpartAISuggested);
    if (isCounterpartsLoading && !hasCounterpartFromProps) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
            label: label,
            disabled: true,
            InputProps: {
                endAdornment: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                    size: 20
                })
            }
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(CreateCounterpartModal, {
                open: isCreateCounterpartOpened,
                onClose: ()=>setIsCreateCounterpartOpened(false),
                onCreate: setNewCounterpartId,
                getCounterpartDefaultValues: getCounterpartDefaultValues,
                customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                control: control,
                name: name,
                render: ({ field, fieldState: { error } })=>{
                    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$1G(_object_spread$2C({}, field), {
                            value: selectedCounterpartOption,
                            id: field.name,
                            multiple: multiple,
                            autoComplete: true,
                            includeInputInList: true,
                            disabled: disabled || isCounterpartsLoading,
                            filterSelectedOptions: true,
                            noOptionsText: i18n._({
                                id: "qpC74J"
                            }),
                            slotProps: {
                                popper: {
                                    container: root
                                }
                            },
                            options: autocompleteOptions,
                            getOptionLabel: (counterpartOption)=>isCreateNewCounterpartOption$1(counterpartOption) ? '' : counterpartOption.label,
                            getOptionKey: (option)=>option.id,
                            isOptionEqualToValue: (option, value)=>option.id === value.id,
                            filterOptions: (options, params)=>{
                                const filtered = filter$2(options, params);
                                filtered.unshift({
                                    id: COUNTERPART_CREATE_NEW_ID$1,
                                    label: i18n._({
                                        id: "SteimB"
                                    })
                                });
                                return filtered;
                            },
                            onChange: (_, value)=>{
                                setHasUserChangedValue(true);
                                if (multiple) {
                                    setValue(name, value);
                                } else {
                                    setValue(name, value === null || value === void 0 ? void 0 : value.id, {
                                        shouldValidate: true
                                    });
                                }
                            },
                            renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1G(_object_spread$2C({}, params), {
                                            label: label,
                                            error: !!error,
                                            required: required,
                                            InputProps: _object_spread_props$1G(_object_spread$2C({}, params.InputProps), {
                                                endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        isCounterpartsLoading && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                            size: 20
                                                        }),
                                                        showEditCounterpartButton && setShowEditCounterpartDialog && !multiple && selectedCounterpartOption && currentValue && /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                                            size: "sm",
                                                            variant: "ghost",
                                                            className: "mtw:min-w-0 mtw:px-1 mtw:mr-1",
                                                            onClick: (event)=>{
                                                                event.preventDefault();
                                                                setShowEditCounterpartDialog(true);
                                                            },
                                                            children: i18n._({
                                                                id: "ePK91l"
                                                            })
                                                        }),
                                                        params.InputProps.endAdornment
                                                    ]
                                                })
                                            })
                                        })),
                                        error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                                            error: true,
                                            children: error.message
                                        }),
                                        counterpartAISuggested && currentValue === counterpartAISuggested.id && /*#__PURE__*/ jsxRuntime.jsxs(Alert, {
                                            variant: "info",
                                            className: "mtw:mt-2",
                                            icon: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Sparkles, {}),
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(AlertTitle, {
                                                    children: i18n._({
                                                        id: "uVivwa"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(AlertDescription, {
                                                    children: i18n._({
                                                        id: "1+AuKP"
                                                    })
                                                })
                                            ]
                                        }),
                                        !counterpartAISuggested && !counterpartMatchingToOCR && counterpartRawName && !currentValue && !multiple && /*#__PURE__*/ jsxRuntime.jsxs(material.FormHelperText, {
                                            children: [
                                                i18n._({
                                                    id: "0gB+2V"
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                                i18n._({
                                                    id: "v690zz"
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                                    variant: "link",
                                                    size: "sm",
                                                    className: "mtw:ml-0.5 mtw:p-0 mtw:h-auto mtw:text-xs mtw:underline",
                                                    onClick: (event)=>{
                                                        event.preventDefault();
                                                        setIsCreateCounterpartOpened(true);
                                                    },
                                                    children: counterpartRawName
                                                })
                                            ]
                                        }),
                                        !counterpartAISuggested && counterpartMatchingToOCR && currentValue == counterpartMatchingToOCR.id && !multiple && setShowEditCounterpartDialog && /*#__PURE__*/ jsxRuntime.jsx(Alert, {
                                            variant: "warning",
                                            className: "mtw:mt-2",
                                            children: /*#__PURE__*/ jsxRuntime.jsxs(AlertDescription, {
                                                children: [
                                                    i18n._({
                                                        id: "5+6UBx"
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                                    /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                                        variant: "link",
                                                        size: "sm",
                                                        className: "mtw:mr-1 mtw:p-0 mtw:h-auto mtw:font-medium mtw:text-inherit mtw:underline",
                                                        onClick: (event)=>{
                                                            event.preventDefault();
                                                            setShowEditCounterpartDialog(true);
                                                        },
                                                        children: i18n._({
                                                            id: "N6j2JH",
                                                            values: {
                                                                0: getCounterpartName(counterpartMatchingToOCR)
                                                            }
                                                        })
                                                    }),
                                                    i18n._({
                                                        id: "qEue6Q"
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                                        variant: "link",
                                                        size: "sm",
                                                        className: "mtw:ml-1 mtw:p-0 mtw:h-auto mtw:font-medium mtw:text-inherit mtw:underline",
                                                        onClick: (event)=>{
                                                            event.preventDefault();
                                                            setIsCreateCounterpartOpened(true);
                                                        },
                                                        children: i18n._({
                                                            id: "SteimB"
                                                        })
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                }),
                            renderOption: (props, counterpartOption)=>{
                                return isCreateNewCounterpartOption$1(counterpartOption) ? /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                    variant: "ghost",
                                    size: "sm",
                                    className: "mtw:justify-start mtw:px-2 mtw:w-full",
                                    onClick: ()=>setIsCreateCounterpartOpened(true),
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {
                                            className: "mtw:mr-2"
                                        }),
                                        counterpartOption.label
                                    ]
                                }, counterpartOption.id) : /*#__PURE__*/ react$3.createElement("li", _object_spread_props$1G(_object_spread$2C({}, props), {
                                    key: counterpartOption.id
                                }), counterpartOption.label);
                            }
                        }))
                    });
                }
            })
        ]
    });
};

function _define_property$2D(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2B(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2D(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$N(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$N(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$N(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Avatar(_param) {
    var { className } = _param, props = _object_without_properties$N(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AvatarPrimitive__namespace.Root, _object_spread$2B({
        "data-slot": "avatar",
        className: cn('mtw:relative mtw:flex mtw:size-8 mtw:shrink-0 mtw:overflow-hidden mtw:rounded-full', className)
    }, props));
}
function AvatarFallback(_param) {
    var { className } = _param, props = _object_without_properties$N(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AvatarPrimitive__namespace.Fallback, _object_spread$2B({
        "data-slot": "avatar-fallback",
        className: cn('mtw:bg-muted mtw:flex mtw:size-full mtw:items-center mtw:justify-center mtw:rounded-full', className)
    }, props));
}

function _define_property$2C(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2A(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2C(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$M(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$M(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$M(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const badgeVariants = classVarianceAuthority.cva('mtw:inline-flex mtw:items-center mtw:justify-center mtw:rounded-md mtw:border mtw:px-2 mtw:py-0.5 mtw:text-xs mtw:font-medium mtw:w-fit mtw:whitespace-nowrap mtw:shrink-0 mtw:[&>svg]:size-3 mtw:gap-1 mtw:[&>svg]:pointer-events-none mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:focus-visible:ring-[3px] mtw:aria-invalid:ring-destructive/20 mtw:dark:aria-invalid:ring-destructive/40 mtw:aria-invalid:border-destructive mtw:transition-[color,box-shadow] mtw:overflow-hidden', {
    variants: {
        variant: {
            default: 'mtw:border-transparent mtw:bg-primary mtw:text-primary-foreground mtw:[a&]:hover:bg-primary/90',
            secondary: 'mtw:border-transparent mtw:bg-secondary mtw:text-secondary-foreground mtw:[a&]:hover:bg-secondary/90',
            destructive: 'mtw:border-transparent mtw:bg-destructive mtw:text-white mtw:[a&]:hover:bg-destructive/90 mtw:focus-visible:ring-destructive/20 mtw:dark:focus-visible:ring-destructive/40 mtw:dark:bg-destructive/60',
            outline: 'mtw:text-foreground mtw:[a&]:hover:bg-accent mtw:[a&]:hover:text-accent-foreground'
        }
    },
    defaultVariants: {
        variant: 'default'
    }
});
function Badge(_param) {
    var { className, variant, asChild = false } = _param, props = _object_without_properties$M(_param, [
        "className",
        "variant",
        "asChild"
    ]);
    const Comp = asChild ? reactSlot.Slot : 'span';
    return /*#__PURE__*/ jsxRuntime.jsx(Comp, _object_spread$2A({
        "data-slot": "badge",
        className: cn(badgeVariants({
            variant
        }), className)
    }, props));
}

function _define_property$2B(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2B(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$L(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$L(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$L(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Skeleton(_param) {
    var { className } = _param, props = _object_without_properties$L(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$2z({
        "data-slot": "skeleton",
        className: cn('mtw:bg-accent mtw:animate-pulse mtw:rounded-md', className)
    }, props));
}

/**
 * Unified function to get styling props for both normal and error states
 * Used by both User and Role components for consistent styling
 */ const getVariantProps = ({ variant, isError = false, componentType, showAvatar = false, showUsersAsEmail = false, className = '' })=>{
    if (isError) {
        const errorClassName = `mtw:text-muted-foreground ${className}`;
        if (componentType === 'user' && variant !== 'badge') {
            return {
                useBadge: false,
                badgeVariant: 'outline',
                className: errorClassName,
                showAvatar: false,
                showIcon: false
            };
        }
        return {
            useBadge: true,
            badgeVariant: 'outline',
            className: errorClassName,
            showAvatar: false,
            showIcon: false
        };
    }
    if (componentType === 'user') {
        return getUserVariantProps(variant, showAvatar, showUsersAsEmail, className);
    }
    return getRoleVariantProps(variant, className);
};
function getUserVariantProps(variant, showAvatar, showUsersAsEmail, className) {
    switch(variant){
        case 'badge':
            return {
                useBadge: true,
                badgeVariant: 'secondary',
                className: `mtw:gap-1 mtw:px-2 mtw:py-1 ${className}`,
                showAvatar: showAvatar,
                showIcon: false
            };
        case 'cell':
            return {
                useBadge: false,
                badgeVariant: 'secondary',
                className: `mtw:text-sm mtw:font-medium mtw:text-foreground mtw:overflow-hidden mtw:text-ellipsis mtw:whitespace-nowrap mtw:block ${showUsersAsEmail ? 'mtw:text-blue-600' : ''} ${className}`,
                showAvatar: false,
                showIcon: false
            };
        case 'text':
        default:
            return {
                useBadge: false,
                badgeVariant: 'secondary',
                className: `mtw:text-sm mtw:font-medium mtw:text-foreground ${className}`,
                showAvatar: false,
                showIcon: false
            };
    }
}
function getRoleVariantProps(variant, className) {
    switch(variant){
        case 'filled':
            return {
                useBadge: true,
                badgeVariant: 'secondary',
                className: `mtw:inline-flex mtw:items-center mtw:justify-center mtw:h-8 mtw:bg-gray-100 mtw:text-gray-800 mtw:text-sm mtw:leading-4 mtw:font-medium mtw:whitespace-nowrap mtw:border-0 mtw:rounded-lg mtw:px-4 mtw:py-1 ${className}`,
                showAvatar: false,
                showIcon: false
            };
        case 'outlined':
            return {
                useBadge: true,
                badgeVariant: 'outline',
                className: `mtw:inline-flex mtw:items-center mtw:justify-center mtw:text-sm mtw:font-medium mtw:whitespace-nowrap mtw:rounded mtw:px-2 mtw:py-1 mtw:gap-1 ${className}`,
                showAvatar: false,
                showIcon: true
            };
        default:
            return {
                useBadge: true,
                badgeVariant: 'secondary',
                className: `mtw:inline-flex mtw:items-center mtw:justify-center mtw:h-8 mtw:bg-[rgb(248,248,255)] mtw:text-[rgb(55,55,255)] mtw:text-sm mtw:leading-4 mtw:font-medium mtw:whitespace-nowrap mtw:border-0 mtw:rounded-[7.98px] mtw:px-2 mtw:py-[7px] mtw:gap-2 mtw:transition-colors ${className}`,
                showAvatar: false,
                showIcon: true
            };
    }
}

const User = ({ userId, user, variant = 'text', showUsersAsEmail = false, showAvatar = false, className = '' })=>{
    var _entityUser_first_name, _entityUser_last_name;
    const { data: fetchedUser, isLoading, isError } = useEntityUserById(user ? undefined : userId);
    const entityUser = user || fetchedUser;
    if (!entityUser && !isLoading && isError && userId) {
        // Show N/A as fallback when user data cannot be fetched due to permissions
        const fallbackDisplayName = 'N/A';
        const { useBadge, badgeVariant, className: fallbackClassName } = getVariantProps({
            variant,
            isError: true,
            componentType: 'user',
            className
        });
        if (useBadge) {
            return /*#__PURE__*/ jsxRuntime.jsx(Badge, {
                variant: badgeVariant,
                className: fallbackClassName,
                children: fallbackDisplayName
            });
        }
        return /*#__PURE__*/ jsxRuntime.jsx("span", {
            className: fallbackClassName,
            children: fallbackDisplayName
        });
    }
    if (!entityUser && !isLoading) {
        return null;
    }
    var _entityUser_first_name1, _entityUser_last_name1;
    const fullName = entityUser ? `${(_entityUser_first_name1 = entityUser.first_name) !== null && _entityUser_first_name1 !== void 0 ? _entityUser_first_name1 : ''} ${(_entityUser_last_name1 = entityUser.last_name) !== null && _entityUser_last_name1 !== void 0 ? _entityUser_last_name1 : ''}`.trim() : '';
    var _entityUser_first_name_, _entityUser_last_name_;
    const initials = entityUser ? `${(_entityUser_first_name_ = (_entityUser_first_name = entityUser.first_name) === null || _entityUser_first_name === void 0 ? void 0 : _entityUser_first_name[0]) !== null && _entityUser_first_name_ !== void 0 ? _entityUser_first_name_ : ''}${(_entityUser_last_name_ = (_entityUser_last_name = entityUser.last_name) === null || _entityUser_last_name === void 0 ? void 0 : _entityUser_last_name[0]) !== null && _entityUser_last_name_ !== void 0 ? _entityUser_last_name_ : ''}`.toUpperCase() : '';
    const getDisplayName = ()=>{
        if (showUsersAsEmail && (entityUser === null || entityUser === void 0 ? void 0 : entityUser.email)) {
            return entityUser.email;
        }
        return fullName || (entityUser === null || entityUser === void 0 ? void 0 : entityUser.email) || '';
    };
    const displayName = getDisplayName();
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(Skeleton, {
            className: "mtw:h-4 mtw:w-20"
        });
    }
    const { useBadge, badgeVariant, className: variantClassName, showAvatar: shouldShowAvatar } = getVariantProps({
        variant,
        isError: false,
        componentType: 'user',
        showAvatar,
        showUsersAsEmail,
        className
    });
    if (useBadge) {
        return /*#__PURE__*/ jsxRuntime.jsxs(Badge, {
            variant: badgeVariant,
            className: variantClassName,
            children: [
                shouldShowAvatar && /*#__PURE__*/ jsxRuntime.jsx(Avatar, {
                    className: "mtw:w-4 mtw:h-4",
                    children: /*#__PURE__*/ jsxRuntime.jsx(AvatarFallback, {
                        className: "mtw:text-xs mtw:font-medium",
                        children: initials
                    })
                }),
                displayName
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx("span", {
        className: variantClassName,
        children: displayName
    });
};

/**
 * Shared utilities for approval policy trigger parsing and building
 */ const NAMED_VALUES = {
    WAS_CREATED_BY_USER_ID: 'was_created_by_user_id',
    COUNTERPART_ID: 'counterpart_id',
    TAGS: 'tags.id',
    AMOUNT: 'amount',
    CURRENCY: 'currency'
};
const isValidTriggerKey = (key)=>{
    return Object.values(NAMED_VALUES).includes(key);
};
const OPERATOR_OPERATIONS = {
    IN: 'in',
    EQUALS: '==',
    GREATER_THAN: '>',
    LESS_THAN: '<',
    GREATER_THAN_OR_EQUAL: '>=',
    LESS_THAN_OR_EQUAL: '<=',
    RANGE: 'range'
};
const isValidOperation = (operation)=>Object.values(OPERATOR_OPERATIONS).includes(operation);
/**
 * Extracts the field name from a formatted field name
 * @param formattedFieldName - The formatted field name (e.g., 'invoice.was_created_by_user_id')
 * @returns The extracted field name (e.g., 'was_created_by_user_id')
 */ const extractFieldName = (formattedFieldName)=>{
    return formattedFieldName.replace('invoice.', '');
};
/**
 * Checks if a trigger has named values that are lists
 *
 * For lists, the name is on the right_operand and values are on the left_operand
 *
 * Example:
 * {
 *   operator: 'in',
 *   left_operand: 'tag1',
 *   right_operand: { name: 'invoice.tags.id' }
 * }
 * @param trigger - The trigger object to check
 * @returns True if the trigger has named values that are lists
 */ const isNamedValuesList = (trigger)=>{
    return trigger.operator === OPERATOR_OPERATIONS.IN && typeof trigger.left_operand === 'string' && typeof trigger.right_operand === 'object' && trigger.right_operand && 'name' in trigger.right_operand;
};
/**
 * Checks if a trigger has named values that are strings or numbers
 *
 * For strings/numbers, the name is on the left_operand and values are on the right_operand
 *
 * Example:
 * {
 *   operator: 'in',
 *   left_operand: { name: 'invoice.was_created_by_user_id' },
 *   right_operand: ['user1']
 * }
 * @param trigger - The trigger object to check
 * @returns True if the trigger has named values that are strings or numbers
 */ const isNamedValuesStringOrNumber = (trigger)=>{
    return Boolean(trigger.left_operand) && typeof trigger.left_operand === 'object' && 'name' in trigger.left_operand;
};
/**
 * Gets the field name and value from a trigger, regardless of format
 * @param trigger - The trigger object
 * @returns The field name and value or null if not found
 */ const getTriggerKeyAndValue = (trigger)=>{
    if (isNamedValuesList(trigger)) {
        return {
            key: extractFieldName(trigger.right_operand.name),
            value: trigger.left_operand
        };
    }
    if (isNamedValuesStringOrNumber(trigger)) {
        var _trigger_left_operand;
        return {
            key: extractFieldName((_trigger_left_operand = trigger.left_operand) === null || _trigger_left_operand === void 0 ? void 0 : _trigger_left_operand.name),
            value: trigger.right_operand
        };
    }
    return {
        key: null,
        value: null
    };
};

const useApprovalPolicyTrigger = ({ approvalPolicy })=>{
    var _approvalPolicy_trigger_all, _approvalPolicy_trigger;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const getTriggerName = (triggerKey)=>{
        switch(triggerKey){
            case 'amount':
                return i18n._({
                    id: "hehnjM"
                });
            case 'was_created_by_user_id':
                return i18n._({
                    id: "sXK9VD"
                });
            case 'counterpart_id':
                return i18n._({
                    id: "dU8ZD6"
                });
            case 'tags':
                return i18n._({
                    id: "OYHzN1"
                });
            default:
                return triggerKey;
        }
    };
    const getTriggerLabel = (triggerKey)=>{
        switch(triggerKey){
            case 'amount':
                return i18n._({
                    id: "hehnjM"
                });
            case 'was_created_by_user_id':
                return i18n._({
                    id: "NCIYDF"
                });
            case 'counterpart_id':
                return i18n._({
                    id: "dU8ZD6"
                });
            case 'tags':
                return i18n._({
                    id: "sN5Irg"
                });
            default:
                return triggerKey;
        }
    };
    const getAmountLabel = (amountValue, currency)=>{
        const formattedValue = formatCurrencyToDisplay(amountValue[0][1], currency);
        if (amountValue.length === 1) {
            switch(amountValue[0][0]){
                case OPERATOR_OPERATIONS.GREATER_THAN:
                    return i18n._({
                        id: "K7LnQg",
                        values: {
                            formattedValue: formattedValue
                        }
                    });
                case OPERATOR_OPERATIONS.GREATER_THAN_OR_EQUAL:
                    return i18n._({
                        id: "CIqx62",
                        values: {
                            formattedValue: formattedValue
                        }
                    });
                case OPERATOR_OPERATIONS.LESS_THAN:
                    return i18n._({
                        id: "CjOOjg",
                        values: {
                            formattedValue: formattedValue
                        }
                    });
                case OPERATOR_OPERATIONS.LESS_THAN_OR_EQUAL:
                    return i18n._({
                        id: "YcR/yl",
                        values: {
                            formattedValue: formattedValue
                        }
                    });
                case OPERATOR_OPERATIONS.EQUALS:
                    return i18n._({
                        id: "/Zjk7B",
                        values: {
                            formattedValue: formattedValue
                        }
                    });
                default:
                    return formattedValue;
            }
        }
        if (amountValue.length === 2) {
            const leftRange = amountValue.find((value)=>value[0] === OPERATOR_OPERATIONS.GREATER_THAN_OR_EQUAL);
            const rightRange = amountValue.find((value)=>value[0] === OPERATOR_OPERATIONS.LESS_THAN_OR_EQUAL);
            if (leftRange && rightRange) {
                return i18n._({
                    id: "tK6yIE",
                    values: {
                        0: formatCurrencyToDisplay(leftRange[1], currency),
                        1: formatCurrencyToDisplay(rightRange[1], currency)
                    }
                });
            }
        }
        return formattedValue;
    };
    const isApprovalPolicyTrigger = (policyTrigger)=>{
        return Boolean(policyTrigger && typeof policyTrigger === 'object' && 'all' in policyTrigger && Array.isArray(policyTrigger['all']));
    };
    if (!isApprovalPolicyTrigger(approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.trigger)) {
        return {
            triggers: {},
            getTriggerName,
            getTriggerLabel,
            getAmountLabel
        };
    }
    const triggers = (_approvalPolicy_trigger = approvalPolicy.trigger) === null || _approvalPolicy_trigger === void 0 ? void 0 : (_approvalPolicy_trigger_all = _approvalPolicy_trigger.all) === null || _approvalPolicy_trigger_all === void 0 ? void 0 : _approvalPolicy_trigger_all.reduce((acc, trigger)=>{
        // Skip triggers that don't have the required properties
        if (typeof trigger === 'string' || !trigger.operator || !trigger.left_operand || !trigger.right_operand) {
            return acc;
        }
        const { key, value } = getTriggerKeyAndValue(trigger);
        if (!key || !value) {
            return acc;
        }
        if (!isValidTriggerKey(key)) {
            return acc;
        }
        switch(key){
            case 'amount':
                if ((typeof value === 'string' || typeof value === 'number') && isValidOperation(trigger.operator)) {
                    if (!acc.amount) {
                        acc.amount = {
                            currency: 'EUR',
                            value: []
                        };
                    }
                    acc.amount.value.push([
                        trigger.operator,
                        value
                    ]);
                }
                break;
            case 'currency':
                if (!acc.amount) {
                    acc.amount = {
                        value: [],
                        currency: value
                    };
                } else {
                    acc.amount.currency = value;
                }
                break;
            case 'tags.id':
                if (typeof value === 'string') {
                    if (!acc.tags) {
                        acc.tags = [];
                    }
                    acc.tags.push(value);
                }
                break;
            case 'counterpart_id':
            case 'was_created_by_user_id':
                if (Array.isArray(value)) {
                    acc[key] = value;
                }
                break;
        }
        return acc;
    }, {});
    return {
        triggers,
        getTriggerName,
        getTriggerLabel,
        getAmountLabel
    };
};

const ConditionsTable = ({ triggers, onAddTrigger, onEditTrigger, onDeleteTrigger })=>{
    var _triggers_was_created_by_user_id, _triggers_tags, _triggers_counterpart_id, _triggers_amount_value, _triggers_amount;
    const { i18n } = react.useLingui();
    const { getTriggerLabel, getAmountLabel } = useApprovalPolicyTrigger({});
    const triggersList = React.useMemo(()=>{
        return Object.keys(triggers).map((triggerKey)=>{
            const triggerLabel = getTriggerLabel(triggerKey);
            let triggerValue;
            switch(triggerKey){
                case 'was_created_by_user_id':
                    var _triggers_was_created_by_user_id;
                    triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: (_triggers_was_created_by_user_id = triggers.was_created_by_user_id) === null || _triggers_was_created_by_user_id === void 0 ? void 0 : _triggers_was_created_by_user_id.map((user)=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: user.id
                            }, user.id))
                    });
                    break;
                case 'tags':
                    var _triggers_tags;
                    triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: (_triggers_tags = triggers.tags) === null || _triggers_tags === void 0 ? void 0 : _triggers_tags.map((tag)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                                label: tag.name
                            }, tag.id))
                    });
                    break;
                case 'counterpart_id':
                    var _triggers_counterpart_id;
                    triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: (_triggers_counterpart_id = triggers.counterpart_id) === null || _triggers_counterpart_id === void 0 ? void 0 : _triggers_counterpart_id.map((counterpart)=>{
                            return /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                                label: counterpart.label
                            }, counterpart.id);
                        })
                    });
                    break;
                case 'amount':
                    var _triggers_amount, _triggers_amount1;
                    var _triggers_amount_value, _triggers_amount_currency;
                    triggerValue = /*#__PURE__*/ jsxRuntime.jsx("p", {
                        children: getAmountLabel((_triggers_amount_value = (_triggers_amount = triggers.amount) === null || _triggers_amount === void 0 ? void 0 : _triggers_amount.value) !== null && _triggers_amount_value !== void 0 ? _triggers_amount_value : [], (_triggers_amount_currency = (_triggers_amount1 = triggers.amount) === null || _triggers_amount1 === void 0 ? void 0 : _triggers_amount1.currency) !== null && _triggers_amount_currency !== void 0 ? _triggers_amount_currency : 'EUR')
                    });
                    break;
                default:
                    triggerValue = triggerKey;
                    break;
            }
            return {
                key: triggerKey,
                label: triggerLabel,
                value: triggerValue
            };
        });
    }, [
        triggers,
        getTriggerLabel,
        getAmountLabel
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
        variant: "outlined",
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                children: i18n._({
                                    id: "wpT1VN"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                children: i18n._({
                                    id: "zelwwH"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {})
                        ]
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                    children: [
                        triggersList.length > 0 ? triggersList.map((trigger)=>/*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                hover: true,
                                sx: {
                                    '&.MuiTableRow-root': {
                                        cursor: 'pointer'
                                    }
                                },
                                onClick: ()=>onEditTrigger(trigger.key),
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: trigger.label
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: trigger.value
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                            "aria-label": i18n._({
                                                id: "yp6qTa"
                                            }),
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onDeleteTrigger(trigger.key);
                                            },
                                            children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default$1.default, {})
                                        })
                                    })
                                ]
                            }, trigger.label)) : /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                colSpan: 3,
                                children: i18n._({
                                    id: "6zS1ps"
                                })
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                colSpan: 3,
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddCircleOutlineIcon__default.default, {}),
                                    onClick: onAddTrigger,
                                    disabled: Boolean((triggers === null || triggers === void 0 ? void 0 : (_triggers_was_created_by_user_id = triggers.was_created_by_user_id) === null || _triggers_was_created_by_user_id === void 0 ? void 0 : _triggers_was_created_by_user_id.length) && (triggers === null || triggers === void 0 ? void 0 : (_triggers_tags = triggers.tags) === null || _triggers_tags === void 0 ? void 0 : _triggers_tags.length) && (triggers === null || triggers === void 0 ? void 0 : (_triggers_counterpart_id = triggers.counterpart_id) === null || _triggers_counterpart_id === void 0 ? void 0 : _triggers_counterpart_id.length) && (triggers === null || triggers === void 0 ? void 0 : (_triggers_amount = triggers.amount) === null || _triggers_amount === void 0 ? void 0 : (_triggers_amount_value = _triggers_amount.value) === null || _triggers_amount_value === void 0 ? void 0 : _triggers_amount_value.length)),
                                    children: i18n._({
                                        id: "hTtSCa"
                                    })
                                })
                            })
                        })
                    ]
                })
            ]
        })
    });
};

const getSharedApprovalRuleLabel = {
    singleUser: (i18n)=>i18n._({
            id: "fh9mfj"
        }),
    anyUserFromList: (i18n)=>i18n._({
            id: "FsXH3H"
        }),
    anyUsersFromList: (i18n, count)=>i18n._({
            id: "BnC6rI",
            values: {
                0: count.toString()
            }
        }),
    anyUserWithRole: (i18n)=>i18n._({
            id: "ypFlT3"
        }),
    allUsersFromList: (i18n)=>i18n._({
            id: "12cMyG"
        })
};
const getUsersFromListLabel = (i18n, count = 0)=>{
    return count === 1 ? getSharedApprovalRuleLabel.anyUserFromList(i18n) : getSharedApprovalRuleLabel.anyUsersFromList(i18n, count);
};

const APPROVAL_POLICY_RULE_TYPES = {
    SINGLE_USER: 'single_user',
    USERS_FROM_LIST: 'users_from_list',
    ROLES_FROM_LIST: 'roles_from_list',
    APPROVAL_CHAIN: 'approval_chain'
};
/* eslint-disable lingui/no-unlocalized-strings */ const APPROVAL_REQUEST_CALLS = {
    REQUEST_APPROVAL_BY_USERS: 'ApprovalRequests.request_approval_by_users',
    REQUEST_APPROVAL_BY_ROLES: 'ApprovalRequests.request_approval_by_roles'
};
const getRuleName = (ruleType, i18n)=>{
    switch(ruleType){
        case APPROVAL_POLICY_RULE_TYPES.SINGLE_USER:
            return i18n._({
                id: "fh9mfj"
            });
        case APPROVAL_POLICY_RULE_TYPES.USERS_FROM_LIST:
            return i18n._({
                id: "y96k+z"
            });
        case APPROVAL_POLICY_RULE_TYPES.ROLES_FROM_LIST:
            return i18n._({
                id: "U+kwBO"
            });
        case APPROVAL_POLICY_RULE_TYPES.APPROVAL_CHAIN:
            return i18n._({
                id: "vJj5iV"
            });
        default:
            return undefined;
    }
};
const getRuleLabel = (ruleKey, i18n, value)=>{
    switch(ruleKey){
        case APPROVAL_POLICY_RULE_TYPES.SINGLE_USER:
            return getSharedApprovalRuleLabel.singleUser(i18n);
        case APPROVAL_POLICY_RULE_TYPES.USERS_FROM_LIST:
            return getUsersFromListLabel(i18n, value);
        case APPROVAL_POLICY_RULE_TYPES.ROLES_FROM_LIST:
            return getSharedApprovalRuleLabel.anyUserWithRole(i18n);
        case APPROVAL_POLICY_RULE_TYPES.APPROVAL_CHAIN:
            return getSharedApprovalRuleLabel.allUsersFromList(i18n);
        default:
            return undefined;
    }
};

function _define_property$2A(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2A(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1F(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1F(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1F(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useApprovalPolicyScript = ({ approvalPolicy })=>{
    const { i18n } = react.useLingui();
    const isApprovalPolicyRule = (rule)=>{
        if (typeof rule !== 'object' || rule === null) return false;
        // Check if 'call' property exists and is of the correct type
        if (!('call' in rule) || typeof rule.call !== 'string') return false;
        if (![
            APPROVAL_REQUEST_CALLS.REQUEST_APPROVAL_BY_USERS,
            APPROVAL_REQUEST_CALLS.REQUEST_APPROVAL_BY_ROLES
        ].includes(rule.call)) {
            return false;
        }
        // Check if 'params' property exists and is an object
        if (!('params' in rule) || typeof rule.params !== 'object' || rule.params === null) return false;
        const params = rule.params;
        // Check params properties
        if ('user_ids' in params && !Array.isArray(params.user_ids)) return false;
        if ('role_ids' in params && !Array.isArray(params.role_ids)) return false;
        if (!('required_approval_count' in params) || typeof params.required_approval_count !== 'number') return false;
        // If all checks pass, it's a valid ApprovalPolicyRule
        return true;
    };
    const isApprovalPolicyNestedRule = (rule)=>{
        if (typeof rule !== 'object' || rule === null) return false;
        if (!('run_concurrently' in rule) || typeof rule.run_concurrently !== 'boolean') return false;
        if (!('all' in rule) || !Array.isArray(rule.all)) return false;
        return rule.all.every((item)=>isApprovalPolicyRule(item) || isApprovalPolicyNestedRule(item));
    };
    const isApprovalPolicyScript = (policyScript)=>{
        if (!Array.isArray(policyScript) || policyScript.length !== 1) return false;
        const [scriptObject] = policyScript;
        if (typeof scriptObject !== 'object' || scriptObject === null) return false;
        // Check if 'if', 'then', and 'else' properties exist
        if (!('if' in scriptObject) || !('then' in scriptObject) || !('else' in scriptObject)) return false;
        const { if: ifBlock, then: thenBlock, else: elseBlock } = scriptObject;
        // Check if 'if' block is an object
        if (typeof ifBlock !== 'object' || ifBlock === null) return false;
        // Check if 'run_concurrently' and 'all' properties exist in the 'if' block
        if (!('run_concurrently' in ifBlock) || !('all' in ifBlock)) return false;
        const { run_concurrently, all: allBlock } = ifBlock;
        if (typeof run_concurrently !== 'boolean') return false;
        if (!Array.isArray(allBlock)) return false;
        // Check if 'then' and 'else' are arrays
        if (!Array.isArray(thenBlock) || !Array.isArray(elseBlock)) return false;
        return allBlock.every((item)=>isApprovalPolicyRule(item) || isApprovalPolicyNestedRule(item));
    };
    const isSingleUserRule = (rule)=>{
        return rule.call === APPROVAL_REQUEST_CALLS.REQUEST_APPROVAL_BY_USERS && Array.isArray(rule.params.user_ids) && rule.params.user_ids.length === 1 && rule.params.required_approval_count === 1;
    };
    const isUsersFromListRule = (rule)=>{
        return rule.call === APPROVAL_REQUEST_CALLS.REQUEST_APPROVAL_BY_USERS && Array.isArray(rule.params.user_ids) && rule.params.user_ids.length > 1 && rule.params.required_approval_count > 0;
    };
    const isRolesFromListRule = (rule)=>{
        return rule.call === APPROVAL_REQUEST_CALLS.REQUEST_APPROVAL_BY_ROLES && Array.isArray(rule.params.role_ids) && rule.params.role_ids.length >= 1 && rule.params.required_approval_count > 0;
    };
    const isApprovalChainRule = (rule)=>{
        return !rule.run_concurrently && rule.all.length > 1 && rule.all.every((item)=>isApprovalPolicyRule(item) && isSingleUserRule(item));
    };
    const getRuleNameWithI18n = (ruleType)=>getRuleName(ruleType, i18n);
    const getRuleLabelWithI18n = (ruleKey, value)=>getRuleLabel(ruleKey, i18n, value);
    if (isApprovalPolicyScript(approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.script)) {
        const rules = approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.script[0].if.all.reduce((acc, rule)=>{
            if (isApprovalPolicyNestedRule(rule)) {
                if (isApprovalChainRule(rule)) {
                    return _object_spread_props$1F(_object_spread$2y({}, acc), {
                        approval_chain: {
                            chainUserIds: rule.all.reduce((acc, item)=>{
                                if (isApprovalPolicyRule(item) && isSingleUserRule(item) && item.params.user_ids[0]) {
                                    const userId = item.params.user_ids[0];
                                    if (userId) return [
                                        ...acc,
                                        item.params.user_ids[0]
                                    ];
                                    return acc;
                                }
                                return acc;
                            }, [])
                        }
                    });
                }
            } else if (isApprovalPolicyRule(rule)) {
                if (isSingleUserRule(rule)) {
                    return _object_spread_props$1F(_object_spread$2y({}, acc), {
                        single_user: {
                            userId: rule.params.user_ids[0]
                        }
                    });
                } else if (isUsersFromListRule(rule)) {
                    return _object_spread_props$1F(_object_spread$2y({}, acc), {
                        users_from_list: {
                            userIds: rule.params.user_ids,
                            count: rule.params.required_approval_count
                        }
                    });
                } else if (isRolesFromListRule(rule)) {
                    return _object_spread_props$1F(_object_spread$2y({}, acc), {
                        roles_from_list: {
                            roleIds: rule.params.role_ids,
                            count: rule.params.required_approval_count
                        }
                    });
                }
            }
            return acc;
        }, {});
        return {
            rules,
            getRuleName: getRuleNameWithI18n,
            getRuleLabel: getRuleLabelWithI18n
        };
    }
    return {
        rules: undefined,
        getRuleName: getRuleNameWithI18n,
        getRuleLabel: getRuleLabelWithI18n
    };
};

function _define_property$2z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2x(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2z(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$K(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$K(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$K(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UUserSquare = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$K(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2x({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M14.81,12.28a3.73,3.73,0,0,0,1-2.5,3.78,3.78,0,0,0-7.56,0,3.73,3.73,0,0,0,1,2.5A5.94,5.94,0,0,0,6,16.89a1,1,0,0,0,2,.22,4,4,0,0,1,7.94,0A1,1,0,0,0,17,18h.11a1,1,0,0,0,.88-1.1A5.94,5.94,0,0,0,14.81,12.28ZM12,11.56a1.78,1.78,0,1,1,1.78-1.78A1.78,1.78,0,0,1,12,11.56ZM19,2H5A3,3,0,0,0,2,5V19a3,3,0,0,0,3,3H19a3,3,0,0,0,3-3V5A3,3,0,0,0,19,2Zm1,17a1,1,0,0,1-1,1H5a1,1,0,0,1-1-1V5A1,1,0,0,1,5,4H19a1,1,0,0,1,1,1Z'
    }));
};

const Role = ({ roleId, variant = 'default', quoted = false, roleData })=>{
    const { api } = useMoniteContext();
    const { data: role, isLoading, isError } = api.roles.getRolesId.useQuery({
        path: {
            role_id: roleId
        }
    }, {
        enabled: !roleData
    });
    const displayRole = roleData !== null && roleData !== void 0 ? roleData : role;
    const isRoleLoading = !roleData && isLoading;
    if (!displayRole && !isRoleLoading && isError && roleId) {
        const fallbackDisplayName = 'N/A';
        const { badgeVariant, className } = getVariantProps({
            variant,
            isError: true,
            componentType: 'role'
        });
        return /*#__PURE__*/ jsxRuntime.jsx(Badge, {
            variant: badgeVariant,
            className: className,
            children: fallbackDisplayName
        });
    }
    if (!displayRole && !isRoleLoading) {
        return null;
    }
    if (!displayRole) {
        return null;
    }
    const { badgeVariant, className, showIcon } = getVariantProps({
        variant,
        isError: false,
        componentType: 'role'
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(Badge, {
        variant: badgeVariant,
        className: className,
        children: [
            showIcon && /*#__PURE__*/ jsxRuntime.jsx(UUserSquare, {
                width: 24,
                height: 24,
                className: variant === 'default' ? 'mtw:text-[rgb(97,97,97)] mtw:!w-6 mtw:!h-6 mtw:flex-shrink-0' : 'mtw:!w-6 mtw:!h-6 mtw:flex-shrink-0'
            }),
            isRoleLoading ? /*#__PURE__*/ jsxRuntime.jsx(Skeleton, {
                className: "mtw:h-4 mtw:w-20"
            }) : quoted ? `"${displayRole.name}"` : displayRole.name
        ]
    });
};

const RulesTable = ({ rules, usersFromListCount, rolesFromListCount, onAddRule, onEditRule, onDeleteRule })=>{
    var _rules_users_from_list, _rules_roles_from_list, _rules_approval_chain;
    const { i18n } = react.useLingui();
    const { getRuleLabel } = useApprovalPolicyScript({});
    const rulesList = React.useMemo(()=>{
        return Object.keys(rules).map((ruleKey)=>{
            let ruleLabel;
            let ruleValue;
            switch(ruleKey){
                case 'users_from_list':
                    ruleLabel = getRuleLabel(ruleKey, (typeof usersFromListCount === 'string' ? parseInt(usersFromListCount) : usersFromListCount) || 0);
                    break;
                case 'roles_from_list':
                    ruleLabel = getRuleLabel(ruleKey, typeof rolesFromListCount === 'string' ? parseInt(rolesFromListCount) : rolesFromListCount || 0);
                    break;
                default:
                    ruleLabel = getRuleLabel(ruleKey);
            }
            switch(ruleKey){
                case 'single_user':
                    var _rules_single_user, _rules_single_user1, _rules_single_user2;
                    ruleValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        spacing: 0.5,
                        sx: {
                            overflow: 'hidden'
                        },
                        children: ((_rules_single_user = rules.single_user) === null || _rules_single_user === void 0 ? void 0 : _rules_single_user.id) && /*#__PURE__*/ jsxRuntime.jsx(User, {
                            userId: (_rules_single_user1 = rules.single_user) === null || _rules_single_user1 === void 0 ? void 0 : _rules_single_user1.id
                        }, (_rules_single_user2 = rules.single_user) === null || _rules_single_user2 === void 0 ? void 0 : _rules_single_user2.id)
                    });
                    break;
                case 'users_from_list':
                    var _rules_users_from_list;
                    ruleValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        spacing: 0.5,
                        sx: {
                            overflow: 'hidden'
                        },
                        children: rules === null || rules === void 0 ? void 0 : (_rules_users_from_list = rules.users_from_list) === null || _rules_users_from_list === void 0 ? void 0 : _rules_users_from_list.map((user)=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: user.id
                            }, user.id))
                    });
                    break;
                case 'roles_from_list':
                    var _rules_roles_from_list;
                    ruleValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        flexWrap: "wrap",
                        useFlexGap: true,
                        sx: {
                            '& > *': {
                                flexShrink: 0
                            }
                        },
                        children: (_rules_roles_from_list = rules.roles_from_list) === null || _rules_roles_from_list === void 0 ? void 0 : _rules_roles_from_list.map((role)=>/*#__PURE__*/ jsxRuntime.jsx(Role, {
                                roleId: role.id
                            }, role.id))
                    });
                    break;
                case 'approval_chain':
                    var _rules_approval_chain;
                    ruleValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        spacing: 0.5,
                        sx: {
                            overflow: 'hidden'
                        },
                        children: rules === null || rules === void 0 ? void 0 : (_rules_approval_chain = rules.approval_chain) === null || _rules_approval_chain === void 0 ? void 0 : _rules_approval_chain.map((user)=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: user.id
                            }, user.id))
                    });
                    break;
            }
            return {
                key: ruleKey,
                label: ruleLabel,
                value: ruleValue
            };
        });
    }, [
        rules,
        usersFromListCount,
        getRuleLabel,
        rolesFromListCount
    ]);
    var _rules_users_from_list_length, _rules_roles_from_list_length, _rules_approval_chain_length;
    return /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
        variant: "outlined",
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                children: i18n._({
                                    id: "wpT1VN"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                children: i18n._({
                                    id: "zelwwH"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {})
                        ]
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                    children: [
                        rulesList.length > 0 ? rulesList.map((rule)=>/*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                hover: true,
                                sx: {
                                    '&.MuiTableRow-root': {
                                        cursor: 'pointer'
                                    }
                                },
                                onClick: ()=>onEditRule(rule.key),
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: rule.label
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: rule.value
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                            "aria-label": i18n._({
                                                id: "yp6qTa"
                                            }),
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onDeleteRule(rule.key);
                                            },
                                            children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default$1.default, {})
                                        })
                                    })
                                ]
                            }, rule.label)) : /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                colSpan: 3,
                                children: i18n._({
                                    id: "HE5syK"
                                })
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                colSpan: 3,
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddCircleOutlineIcon__default.default, {}),
                                    onClick: onAddRule,
                                    disabled: Boolean(rules.single_user) && ((_rules_users_from_list_length = (_rules_users_from_list = rules.users_from_list) === null || _rules_users_from_list === void 0 ? void 0 : _rules_users_from_list.length) !== null && _rules_users_from_list_length !== void 0 ? _rules_users_from_list_length : 0) > 0 && ((_rules_roles_from_list_length = (_rules_roles_from_list = rules.roles_from_list) === null || _rules_roles_from_list === void 0 ? void 0 : _rules_roles_from_list.length) !== null && _rules_roles_from_list_length !== void 0 ? _rules_roles_from_list_length : 0) > 0 && ((_rules_approval_chain_length = (_rules_approval_chain = rules.approval_chain) === null || _rules_approval_chain === void 0 ? void 0 : _rules_approval_chain.length) !== null && _rules_approval_chain_length !== void 0 ? _rules_approval_chain_length : 0) > 0,
                                    children: i18n._({
                                        id: "LbPPLi"
                                    })
                                })
                            })
                        })
                    ]
                })
            ]
        })
    });
};

function _define_property$2y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2w(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2y(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1E(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1E(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1E(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AutocompleteUsers = ({ control, name, label })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { root } = useRootElements();
    const { setValue } = reactHookForm.useFormContext();
    const [inputValue, setInputValue] = React.useState('');
    const { data: users, isLoading: isUsersLoading, refetch } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            first_name: inputValue || undefined
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$1E(_object_spread$2w({}, field), {
                        id: field.name,
                        multiple: true,
                        autoComplete: true,
                        includeInputInList: true,
                        filterSelectedOptions: true,
                        noOptionsText: i18n._({
                            id: "qpC74J"
                        }),
                        slotProps: {
                            popper: {
                                container: root
                            }
                        },
                        loading: isUsersLoading,
                        options: (users === null || users === void 0 ? void 0 : users.data) || [],
                        getOptionKey: (option)=>option.id,
                        getOptionLabel: (option)=>{
                            var _option_first_name, _option_last_name;
                            return `${(_option_first_name = option.first_name) !== null && _option_first_name !== void 0 ? _option_first_name : ''} ${(_option_last_name = option.last_name) !== null && _option_last_name !== void 0 ? _option_last_name : ''}`.trim();
                        },
                        isOptionEqualToValue: (option, value)=>option.id === value.id,
                        filterOptions: (options)=>options,
                        onInputChange: (_, newInputValue)=>{
                            setInputValue(newInputValue);
                        },
                        onChange: (_, value)=>{
                            setValue(name, value);
                            refetch();
                        },
                        renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1E(_object_spread$2w({}, params), {
                                label: label,
                                error: !!error,
                                InputProps: _object_spread_props$1E(_object_spread$2w({}, params.InputProps), {
                                    endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                        children: [
                                            isUsersLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                color: "inherit",
                                                size: 20
                                            }) : null,
                                            params.InputProps.endAdornment
                                        ]
                                    })
                                })
                            }))
                    })),
                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                        error: true,
                        children: error.message
                    })
                ]
            })
    });
};

function _define_property$2x(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2v(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2x(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1D(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1D(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1D(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AutocompleteRoles = ({ control, name, label })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { root } = useRootElements();
    const { setValue } = reactHookForm.useFormContext();
    const [inputValue, setInputValue] = React.useState('');
    const { data: roles, isLoading, refetch } = api.roles.getRoles.useQuery({
        query: {
            name: inputValue || undefined
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$1D(_object_spread$2v({}, field), {
                        id: field.name,
                        multiple: true,
                        autoComplete: true,
                        includeInputInList: true,
                        filterSelectedOptions: true,
                        noOptionsText: i18n._({
                            id: "9mcJ/7"
                        }),
                        slotProps: {
                            popper: {
                                container: root
                            }
                        },
                        loading: isLoading,
                        options: (roles === null || roles === void 0 ? void 0 : roles.data) || [],
                        getOptionKey: (option)=>option.id,
                        getOptionLabel: (option)=>option.name,
                        isOptionEqualToValue: (option, value)=>option.id === value.id,
                        filterOptions: (options)=>options,
                        onInputChange: (_, newInputValue)=>{
                            setInputValue(newInputValue);
                        },
                        onChange: (_, value)=>{
                            setValue(name, value);
                            refetch();
                        },
                        renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1D(_object_spread$2v({}, params), {
                                label: label,
                                error: !!error,
                                InputProps: _object_spread_props$1D(_object_spread$2v({}, params.InputProps), {
                                    endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                        children: [
                                            isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                color: "inherit",
                                                size: 20
                                            }) : null,
                                            params.InputProps.endAdornment
                                        ]
                                    })
                                })
                            }))
                    })),
                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                        error: true,
                        children: error.message
                    })
                ]
            })
    });
};

function _define_property$2w(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2u(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2w(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1C(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1C(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1C(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AutocompleteUser = ({ control, name, label })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { root } = useRootElements();
    const { setValue } = reactHookForm.useFormContext();
    const [inputValue, setInputValue] = React.useState('');
    const { data: users, isLoading: isUsersLoading, refetch } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            first_name: inputValue || undefined
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$1C(_object_spread$2u({}, field), {
                        id: field.name,
                        autoComplete: true,
                        includeInputInList: true,
                        filterSelectedOptions: true,
                        noOptionsText: i18n._({
                            id: "qpC74J"
                        }),
                        slotProps: {
                            popper: {
                                container: root
                            }
                        },
                        loading: isUsersLoading,
                        options: (users === null || users === void 0 ? void 0 : users.data) || [],
                        getOptionKey: (option)=>option.id,
                        getOptionLabel: (option)=>{
                            var _option_first_name, _option_last_name;
                            return `${(_option_first_name = option.first_name) !== null && _option_first_name !== void 0 ? _option_first_name : ''} ${(_option_last_name = option.last_name) !== null && _option_last_name !== void 0 ? _option_last_name : ''}`.trim();
                        },
                        isOptionEqualToValue: (option, value)=>option.id === value.id,
                        filterOptions: (options)=>options,
                        onInputChange: (_, newInputValue)=>{
                            setInputValue(newInputValue);
                        },
                        onChange: (_, value)=>{
                            setValue(name, value);
                            refetch();
                        },
                        renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1C(_object_spread$2u({}, params), {
                                label: label,
                                error: !!error,
                                InputProps: _object_spread_props$1C(_object_spread$2u({}, params.InputProps), {
                                    endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                        children: [
                                            isUsersLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                color: "inherit",
                                                size: 20
                                            }) : null,
                                            params.InputProps.endAdornment
                                        ]
                                    })
                                })
                            }))
                    })),
                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                        error: true,
                        children: error.message
                    })
                ]
            })
    });
};

function _define_property$2v(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2t(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2v(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1B(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1B(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1B(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$J(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$J(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$J(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFTextField = (_param)=>{
    var { control, name, SelectProps, type } = _param, other = _object_without_properties$J(_param, [
        "control",
        "name",
        "SelectProps",
        "type"
    ]);
    const isErrorCustom = (error)=>(error === null || error === void 0 ? void 0 : error.type) === 'custom';
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error, isTouched }, formState: { isValid } })=>{
            const isInvalid = (isTouched || !isValid) && !isErrorCustom(error);
            // Handle number conversion for number inputs
            const handleChange = (e)=>{
                const value = e.target.value;
                if (type === 'number') {
                    field.onChange(value === '' ? '' : Number(value));
                } else {
                    field.onChange(value);
                }
            };
            var _field_value;
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1B(_object_spread$2t({}, field, other), {
                        id: name,
                        variant: "standard",
                        type: type,
                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : '',
                        onChange: handleChange,
                        error: isInvalid && !!(error === null || error === void 0 ? void 0 : error.message),
                        helperText: isInvalid && (error === null || error === void 0 ? void 0 : error.message),
                        SelectProps: _object_spread_props$1B(_object_spread$2t({}, SelectProps), {
                            MenuProps: _object_spread_props$1B(_object_spread$2t({}, SelectProps === null || SelectProps === void 0 ? void 0 : SelectProps.MenuProps), {
                                container: root
                            })
                        })
                    })),
                    isErrorCustom(error) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                        severity: "error",
                        icon: false,
                        sx: {
                            marginTop: -2
                        },
                        children: error === null || error === void 0 ? void 0 : error.message
                    })
                ]
            });
        }
    });
};

const useTags$1 = ()=>{
    const { api } = useMoniteContext();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isTagsReadAllowed } = useIsActionAllowed({
        method: 'tag',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const tagsQuery = api.tags.getTags.useQuery({}, {
        enabled: isTagsReadAllowed
    });
    return {
        tagsQuery
    };
};

const tagCategories = [
    'document_type',
    'department',
    'project',
    'cost_center',
    'vendor_type',
    'payment_method',
    'approval_status'
];
const getTagCategoryLabels = (i18n)=>({
        document_type: i18n._({
            id: "7BDsqQ"
        }),
        department: i18n._({
            id: "5HYWB0"
        }),
        project: i18n._({
            id: "e0NrBM"
        }),
        cost_center: i18n._({
            id: "6bVwLn"
        }),
        vendor_type: i18n._({
            id: "+wTFYB"
        }),
        payment_method: i18n._({
            id: "sbwbC0"
        }),
        approval_status: i18n._({
            id: "KmA7HS"
        })
    });
function getTagCategoryLabel(category, i18n) {
    if (!category) return '';
    return getTagCategoryLabels(i18n)[category];
}

function _define_property$2u(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2s(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2u(target, key, source[key]);
        });
    }
    return target;
}
const useTags = ({ setNameError, onTagCreated, onTagUpdated })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { data: settings } = useEntitySettings();
    const { mutateAsync } = usePatchEntitiesIdSettings();
    const tagsWithKeywords = (settings === null || settings === void 0 ? void 0 : settings.payables_ocr_auto_tagging) || [];
    const tagCreateMutation = api.tags.postTags.useMutation({}, {
        onSuccess: ()=>api.tags.getTags.invalidateQueries(queryClient),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            if (errorMessage === 'This tag already exists.') {
                setNameError === null || setNameError === void 0 ? void 0 : setNameError(errorMessage);
            } else {
                reactHotToast.toast.error(errorMessage);
            }
        }
    });
    const tagUpdateMutation = api.tags.patchTagsId.useMutation(undefined, {
        onSuccess: (tag)=>{
            Promise.all([
                api.tags.getTags.invalidateQueries(queryClient),
                api.tags.getTagsId.invalidateQueries({
                    parameters: {
                        path: {
                            tag_id: tag.id
                        }
                    }
                }, queryClient)
            ]);
            onTagUpdated === null || onTagUpdated === void 0 ? void 0 : onTagUpdated(tag);
        },
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    return {
        tagsWithKeywords: Object.fromEntries(tagsWithKeywords.map((tag)=>[
                tag.tag_id,
                tag.keywords
            ])),
        inProgress: tagCreateMutation.isPending || tagUpdateMutation.isPending,
        createTag: (values)=>tagCreateMutation.mutateAsync(_object_spread$2s({}, values), {
                onSuccess: (tag)=>onTagCreated === null || onTagCreated === void 0 ? void 0 : onTagCreated(tag)
            }),
        updateTag: (id, values)=>tagUpdateMutation.mutateAsync({
                path: {
                    tag_id: id
                },
                body: values
            }),
        updateOcrAutoTagging: (tag_id, keywords = [])=>{
            const filteredTags = tagsWithKeywords.filter((tag)=>tag.tag_id !== tag_id);
            if (filteredTags.length === tagsWithKeywords.length && !keywords.length) {
                return;
            }
            const autoTagging = keywords.length ? [
                ...filteredTags,
                {
                    tag_id,
                    keywords: [
                        ...new Set(keywords)
                    ],
                    enabled: true
                }
            ] : filteredTags;
            if (autoTagging.length) {
                mutateAsync({
                    vat_mode: settings.vat_mode,
                    payment_priority: settings.payment_priority,
                    quote_signature_required: settings.quote_signature_required,
                    receivable_edit_flow: settings.receivable_edit_flow,
                    allow_purchase_order_autolinking: settings.allow_purchase_order_autolinking,
                    generate_paid_invoice_pdf: settings.generate_paid_invoice_pdf,
                    payables_ocr_auto_tagging: autoTagging,
                    payables_skip_approval_flow: settings.payables_skip_approval_flow,
                    vat_inclusive_discount_mode: settings.vat_inclusive_discount_mode
                });
            }
        }
    };
};

function _define_property$2t(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2r(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2t(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$I(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$I(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$I(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Label(_param) {
    var { className } = _param, props = _object_without_properties$I(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(LabelPrimitive__namespace.Root, _object_spread$2r({
        "data-slot": "label",
        className: cn('mtw:flex mtw:items-center mtw:gap-2 mtw:text-sm mtw:leading-none mtw:font-medium mtw:select-none mtw:group-data-[disabled=true]:pointer-events-none mtw:group-data-[disabled=true]:opacity-50 mtw:peer-disabled:cursor-not-allowed mtw:peer-disabled:opacity-50', className)
    }, props));
}

function _define_property$2s(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$6() {
    _extends$6 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$6.apply(this, arguments);
}
function _object_destructuring_empty$6(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$2q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2s(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1A(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1A(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1A(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$H(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$H(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$H(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const Form$1 = reactHookForm.FormProvider;
const FormFieldContext = /*#__PURE__*/ React__namespace.createContext({});
const FormField = (_param)=>{
    var props = _extends$6({}, _object_destructuring_empty$6(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(FormFieldContext.Provider, {
        value: {
            name: props.name
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, _object_spread$2q({}, props))
    });
};
const useFormField = ()=>{
    const fieldContext = React__namespace.useContext(FormFieldContext);
    const itemContext = React__namespace.useContext(FormItemContext);
    const { getFieldState } = reactHookForm.useFormContext();
    const formState = reactHookForm.useFormState({
        name: fieldContext.name
    });
    const fieldState = getFieldState(fieldContext.name, formState);
    if (!fieldContext) {
        throw new Error('useFormField should be used within <FormField>');
    }
    const { id } = itemContext;
    return _object_spread$2q({
        id,
        name: fieldContext.name,
        formItemId: `${id}-form-item`,
        formDescriptionId: `${id}-form-item-description`,
        formMessageId: `${id}-form-item-message`
    }, fieldState);
};
const FormItemContext = /*#__PURE__*/ React__namespace.createContext({});
function FormItem(_param) {
    var { className } = _param, props = _object_without_properties$H(_param, [
        "className"
    ]);
    const id = React__namespace.useId();
    return /*#__PURE__*/ jsxRuntime.jsx(FormItemContext.Provider, {
        value: {
            id
        },
        children: /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$2q({
            "data-slot": "form-item",
            className: cn('mtw:grid mtw:gap-2', className)
        }, props))
    });
}
function FormLabel(_param) {
    var { className } = _param, props = _object_without_properties$H(_param, [
        "className"
    ]);
    const { error, formItemId } = useFormField();
    return /*#__PURE__*/ jsxRuntime.jsx(Label, _object_spread$2q({
        "data-slot": "form-label",
        "data-error": !!error,
        className: cn('mtw:data-[error=true]:text-destructive', className),
        htmlFor: formItemId
    }, props));
}
function FormControl(_param) {
    var props = _extends$6({}, _object_destructuring_empty$6(_param));
    const { error, formItemId, formDescriptionId, formMessageId } = useFormField();
    return /*#__PURE__*/ jsxRuntime.jsx(reactSlot.Slot, _object_spread$2q({
        "data-slot": "form-control",
        id: formItemId,
        "aria-describedby": !error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`,
        "aria-invalid": !!error
    }, props));
}
function FormDescription(_param) {
    var { className } = _param, props = _object_without_properties$H(_param, [
        "className"
    ]);
    const { formDescriptionId } = useFormField();
    return /*#__PURE__*/ jsxRuntime.jsx("p", _object_spread$2q({
        "data-slot": "form-description",
        id: formDescriptionId,
        className: cn('mtw:text-muted-foreground mtw:text-sm', className)
    }, props));
}
function FormMessage(_param) {
    var { className } = _param, props = _object_without_properties$H(_param, [
        "className"
    ]);
    const { error, formMessageId } = useFormField();
    var _error_message;
    const body = error ? String((_error_message = error === null || error === void 0 ? void 0 : error.message) !== null && _error_message !== void 0 ? _error_message : '') : props.children;
    if (!body) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx("p", _object_spread_props$1A(_object_spread$2q({
        "data-slot": "form-message",
        id: formMessageId,
        className: cn('mtw:text-destructive mtw:text-sm', className)
    }, props), {
        children: body
    }));
}

function _define_property$2r(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2p(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2r(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$G(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$G(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$G(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Input(_param) {
    var { className, type } = _param, props = _object_without_properties$G(_param, [
        "className",
        "type"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("input", _object_spread$2p({
        type: type,
        "data-slot": "input",
        className: cn('mtw:file:text-foreground mtw:placeholder:text-muted-foreground mtw:selection:bg-primary mtw:selection:text-primary-foreground mtw:dark:bg-input/30 mtw:border-input mtw:flex mtw:h-9 mtw:w-full mtw:min-w-0 mtw:rounded-md mtw:border mtw:bg-transparent mtw:px-3 mtw:py-1 mtw:text-base mtw:shadow-xs mtw:transition-[color,box-shadow] mtw:outline-none mtw:file:inline-flex mtw:file:h-7 mtw:file:border-0 mtw:file:bg-transparent mtw:file:text-sm mtw:file:font-medium mtw:disabled:pointer-events-none mtw:disabled:cursor-not-allowed mtw:disabled:opacity-50 mtw:md:text-sm', 'mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:focus-visible:ring-[3px]', 'mtw:aria-invalid:ring-destructive/20 mtw:dark:aria-invalid:ring-destructive/40 mtw:aria-invalid:border-destructive', className)
    }, props));
}

function _define_property$2q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2o(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2q(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1z(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1z(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1z(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$F(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$F(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$F(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const InputTags = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className, value, onChange } = _param, props = _object_without_properties$F(_param, [
        "className",
        "value",
        "onChange"
    ]);
    const [pendingDataPoint, setPendingDataPoint] = React__namespace.useState('');
    React__namespace.useEffect(()=>{
        if (pendingDataPoint.includes(',')) {
            const newDataPoints = new Set([
                ...value,
                ...pendingDataPoint.split(',').map((chunk)=>chunk.trim())
            ]);
            onChange(Array.from(newDataPoints));
            setPendingDataPoint('');
        }
    }, [
        pendingDataPoint,
        onChange,
        value
    ]);
    const addPendingDataPoint = ()=>{
        if (pendingDataPoint) {
            const newDataPoints = new Set([
                ...value,
                pendingDataPoint
            ]);
            onChange(Array.from(newDataPoints));
            setPendingDataPoint('');
        }
    };
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: cn(// caveat: :has() variant requires tailwind v3.4 or above: https://tailwindcss.com/blog/tailwindcss-v3-4#new-has-variant
        'mtw:has-[:focus-visible]:mtw:outline-none mtw:has-[:focus-visible]:mtw:ring-2 mtw:has-[:focus-visible]:mtw:ring-neutral-950 mtw:has-[:focus-visible]:mtw:ring-offset-2 dark:mtw:has-[:focus-visible]:mtw:ring-neutral-300 mtw:min-h-10 mtw:flex mtw:w-full mtw:flex-wrap mtw:gap-2 mtw:rounded-md mtw:border mtw:border-neutral-200 mtw:bg-white mtw:px-3 mtw:py-2 mtw:text-sm mtw:ring-offset-white mtw:disabled:mtw:cursor-not-allowed mtw:disabled:mtw:opacity-50 dark:mtw:border-neutral-800 dark:mtw:bg-neutral-950 dark:mtw:ring-offset-neutral-950', className),
        children: [
            value.map((item)=>/*#__PURE__*/ jsxRuntime.jsxs(Badge, {
                    variant: "secondary",
                    children: [
                        item,
                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            variant: "ghost",
                            size: "icon",
                            className: "mtw:ml-2 mtw:h-3 mtw:w-3",
                            onClick: ()=>{
                                onChange(value.filter((i)=>i !== item));
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.XIcon, {
                                className: "mtw:w-3"
                            })
                        })
                    ]
                }, item)),
            /*#__PURE__*/ jsxRuntime.jsx("input", _object_spread_props$1z(_object_spread$2o({
                className: "mtw:flex-1 mtw:outline-none mtw:placeholder:mtw:text-neutral-500 dark:mtw:placeholder:mtw:text-neutral-400",
                value: pendingDataPoint,
                onChange: (e)=>setPendingDataPoint(e.target.value),
                onKeyDown: (e)=>{
                    if (e.key === 'Enter' || e.key === ',') {
                        e.preventDefault();
                        addPendingDataPoint();
                    } else if (e.key === 'Backspace' && pendingDataPoint.length === 0 && value.length > 0) {
                        e.preventDefault();
                        onChange(value.slice(0, -1));
                    }
                }
            }, props), {
                ref: ref
            }))
        ]
    });
});
InputTags.displayName = 'InputTags';

function _define_property$2p(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$5() {
    _extends$5 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$5.apply(this, arguments);
}
function _object_destructuring_empty$5(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$2n(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2p(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1y(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1y(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1y(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$E(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$E(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$E(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Select(_param) {
    var props = _extends$5({}, _object_destructuring_empty$5(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.Root, _object_spread$2n({
        "data-slot": "select"
    }, props));
}
function SelectValue(_param) {
    var props = _extends$5({}, _object_destructuring_empty$5(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.Value, _object_spread$2n({
        "data-slot": "select-value"
    }, props));
}
function SelectTrigger(_param) {
    var { className, size = 'default', children } = _param, props = _object_without_properties$E(_param, [
        "className",
        "size",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(SelectPrimitive__namespace.Trigger, _object_spread_props$1y(_object_spread$2n({
        "data-slot": "select-trigger",
        "data-size": size,
        className: cn('mtw:border-input mtw:data-[placeholder]:text-muted-foreground mtw:[&_svg:not([class*=text-])]:text-muted-foreground mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:aria-invalid:ring-destructive/20 mtw:dark:aria-invalid:ring-destructive/40 mtw:aria-invalid:border-destructive mtw:dark:bg-input/30 mtw:dark:hover:bg-input/50 mtw:flex mtw:w-fit mtw:items-center mtw:justify-between mtw:gap-2 mtw:rounded-md mtw:border mtw:bg-transparent mtw:px-3 mtw:py-2 mtw:text-sm mtw:whitespace-nowrap mtw:shadow-xs mtw:transition-[color,box-shadow] mtw:outline-none mtw:focus-visible:ring-[3px] mtw:disabled:cursor-not-allowed mtw:disabled:opacity-50 mtw:data-[size=default]:h-9 mtw:data-[size=sm]:h-8 mtw:*:data-[slot=select-value]:line-clamp-1 mtw:*:data-[slot=select-value]:flex mtw:*:data-[slot=select-value]:items-center mtw:*:data-[slot=select-value]:gap-2 mtw:[&_svg]:pointer-events-none mtw:[&_svg]:shrink-0 mtw:[&_svg:not([class*=size-])]:size-4', className)
    }, props), {
        children: [
            children,
            /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.Icon, {
                asChild: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {
                    className: "mtw:size-4 mtw:opacity-50"
                })
            })
        ]
    }));
}
function SelectContent(_param) {
    var { className, children, position = 'popper' } = _param, props = _object_without_properties$E(_param, [
        "className",
        "children",
        "position"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.Portal, {
        children: /*#__PURE__*/ jsxRuntime.jsxs(SelectPrimitive__namespace.Content, _object_spread_props$1y(_object_spread$2n({
            "data-slot": "select-content",
            className: cn('mtw:bg-popover mtw:text-popover-foreground mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:data-[state=closed]:zoom-out-95 mtw:data-[state=open]:zoom-in-95 mtw:data-[side=bottom]:slide-in-from-top-2 mtw:data-[side=left]:slide-in-from-right-2 mtw:data-[side=right]:slide-in-from-left-2 mtw:data-[side=top]:slide-in-from-bottom-2 mtw:relative mtw:z-1300 mtw:max-h-(--radix-select-content-available-height) mtw:min-w-[8rem] mtw:origin-(--radix-select-content-transform-origin) mtw:overflow-x-hidden mtw:overflow-y-auto mtw:rounded-md mtw:border-none mtw:shadow-md', position === 'popper' && 'mtw:data-[side=bottom]:translate-y-1 mtw:data-[side=left]:-translate-x-1 mtw:data-[side=right]:translate-x-1 mtw:data-[side=top]:-translate-y-1', className),
            position: position
        }, props), {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(SelectScrollUpButton, {}),
                /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.Viewport, {
                    className: cn('mtw:p-1', position === 'popper' && 'mtw:h-[var(--radix-select-trigger-height)] mtw:w-full mtw:min-w-[var(--radix-select-trigger-width)] mtw:scroll-my-1'),
                    children: children
                }),
                /*#__PURE__*/ jsxRuntime.jsx(SelectScrollDownButton, {})
            ]
        }))
    });
}
function SelectItem(_param) {
    var { className, children } = _param, props = _object_without_properties$E(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(SelectPrimitive__namespace.Item, _object_spread_props$1y(_object_spread$2n({
        "data-slot": "select-item",
        className: cn('mtw:focus:bg-accent mtw:focus:text-accent-foreground mtw:[&_svg:not([class*=text-])]:text-muted-foreground mtw:relative mtw:flex mtw:w-full mtw:cursor-default mtw:items-center mtw:gap-2 mtw:rounded-sm mtw:py-1.5 mtw:pr-8 mtw:pl-2 mtw:text-sm mtw:outline-hidden mtw:select-none mtw:data-[disabled]:pointer-events-none mtw:data-[disabled]:opacity-50 mtw:[&_svg]:pointer-events-none mtw:[&_svg]:shrink-0 mtw:[&_svg:not([class*=size-])]:size-4 mtw:*:[span]:last:flex mtw:*:[span]:last:items-center mtw:*:[span]:last:gap-2', className)
    }, props), {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:absolute mtw:right-2 mtw:flex mtw:size-3.5 mtw:items-center mtw:justify-center",
                children: /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.ItemIndicator, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.CheckIcon, {
                        className: "mtw:size-4"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.ItemText, {
                children: children
            })
        ]
    }));
}
function SelectScrollUpButton(_param) {
    var { className } = _param, props = _object_without_properties$E(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.ScrollUpButton, _object_spread_props$1y(_object_spread$2n({
        "data-slot": "select-scroll-up-button",
        className: cn('mtw:flex mtw:cursor-default mtw:items-center mtw:justify-center mtw:py-1', className)
    }, props), {
        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronUpIcon, {
            className: "mtw:size-4"
        })
    }));
}
function SelectScrollDownButton(_param) {
    var { className } = _param, props = _object_without_properties$E(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(SelectPrimitive__namespace.ScrollDownButton, _object_spread_props$1y(_object_spread$2n({
        "data-slot": "select-scroll-down-button",
        className: cn('mtw:flex mtw:cursor-default mtw:items-center mtw:justify-center mtw:py-1', className)
    }, props), {
        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {
            className: "mtw:size-4"
        })
    }));
}

function _define_property$2o(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$4() {
    _extends$4 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$4.apply(this, arguments);
}
function _object_destructuring_empty$4(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$2m(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2o(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1x(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1x(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1x(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$D(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$D(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$D(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Sheet(_param) {
    var props = _extends$4({}, _object_destructuring_empty$4(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Root, _object_spread$2m({
        "data-slot": "sheet"
    }, props));
}
function SheetPortal(_param) {
    var { container } = _param, props = _object_without_properties$D(_param, [
        "container"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Portal, _object_spread_props$1x(_object_spread$2m({
        "data-slot": "sheet-portal"
    }, props), {
        container: container
    }));
}
function SheetOverlay(_param) {
    var { className } = _param, props = _object_without_properties$D(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Overlay, _object_spread$2m({
        "data-slot": "sheet-overlay",
        className: cn('mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:fixed mtw:inset-0 mtw:z-1300 mtw:bg-black/50', className)
    }, props));
}
function SheetContent(_param) {
    var { className, children, side = 'right', container = document.body, showCloseButton = true } = _param, props = _object_without_properties$D(_param, [
        "className",
        "children",
        "side",
        "container",
        "showCloseButton"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(SheetPortal, {
        container: container,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(SheetOverlay, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(DialogPrimitive__namespace.Content, _object_spread_props$1x(_object_spread$2m({
                "data-slot": "sheet-content",
                className: cn('mtw:bg-background mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:fixed mtw:z-1300 mtw:flex mtw:flex-col mtw:gap-4 mtw:shadow-lg mtw:transition mtw:ease-in-out mtw:data-[state=closed]:duration-300 mtw:data-[state=open]:duration-500', side === 'right' && 'mtw:data-[state=closed]:slide-out-to-right mtw:data-[state=open]:slide-in-from-right mtw:inset-y-0 mtw:right-0 mtw:h-full mtw:w-3/4 mtw:sm:max-w-[600px]', side === 'left' && 'mtw:data-[state=closed]:slide-out-to-left mtw:data-[state=open]:slide-in-from-left mtw:inset-y-0 mtw:left-0 mtw:h-full mtw:w-3/4 mtw:sm:max-w-[600px]', side === 'top' && 'mtw:data-[state=closed]:slide-out-to-top mtw:data-[state=open]:slide-in-from-top mtw:inset-x-0 mtw:top-0 mtw:h-auto mtw:border-b', side === 'bottom' && 'mtw:data-[state=closed]:slide-out-to-bottom mtw:data-[state=open]:slide-in-from-bottom mtw:inset-x-0 mtw:bottom-0 mtw:h-auto mtw:border-t', className)
            }, props), {
                children: [
                    children,
                    showCloseButton && /*#__PURE__*/ jsxRuntime.jsxs(DialogPrimitive__namespace.Close, {
                        className: "mtw:p-2 mtw:ring-offset-background mtw:focus:ring-ring mtw:data-[state=open]:bg-secondary mtw:absolute mtw:top-4 mtw:right-4 mtw:rounded-xs mtw:opacity-70 mtw:transition-opacity mtw:hover:opacity-100 mtw:focus:ring-2 mtw:focus:ring-offset-2 mtw:focus:outline-hidden mtw:cursor-pointer mtw:disabled:pointer-events-none",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(lucideReact.XIcon, {
                                className: "mtw:size-4"
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: "mtw:sr-only",
                                children: "Close"
                            })
                        ]
                    })
                ]
            }))
        ]
    });
}
function SheetHeader(_param) {
    var { className } = _param, props = _object_without_properties$D(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$2m({
        "data-slot": "sheet-header",
        className: cn('mtw:flex mtw:flex-col mtw:gap-1.5 mtw:p-4', className)
    }, props));
}
function SheetFooter(_param) {
    var { className } = _param, props = _object_without_properties$D(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$2m({
        "data-slot": "sheet-footer",
        className: cn('mtw:mt-auto mtw:flex mtw:flex-col mtw:gap-2 mtw:p-4', className)
    }, props));
}
function SheetTitle(_param) {
    var { className } = _param, props = _object_without_properties$D(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Title, _object_spread$2m({
        "data-slot": "sheet-title",
        className: cn('mtw:text-foreground mtw:font-semibold', className)
    }, props));
}
function SheetDescription(_param) {
    var { className } = _param, props = _object_without_properties$D(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(DialogPrimitive__namespace.Description, _object_spread$2m({
        "data-slot": "sheet-description",
        className: cn('mtw:text-muted-foreground mtw:text-sm', className)
    }, props));
}

function asyncGeneratorStep$W(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$W(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$W(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$W(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$2n(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2l(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2n(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1w(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1w(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1w(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getValidationSchema$3 = (i18n)=>zod.z.object({
        name: zod.z.string().min(1, i18n._({
            id: "TMLAx2"
        })).max(255, i18n._({
            id: "Rzrhw1"
        })),
        category: zod.z.union([
            zod.z.literal(''),
            zod.z.enum(tagCategories)
        ]),
        keywords: zod.z.array(zod.z.string().min(2, i18n._({
            id: "grKEHv"
        })).max(25, i18n._({
            id: "2nWlNO"
        })))
    });
/**
 * `TagFormModal` is responsible for creating or updating
 *   the tag.
 *  If no `tag` provided then the form is working on `creating` mode
 *  If `tag` provided then the form is working on `updating` mode
 */ const TagFormModal = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(TagFormModalBase, _object_spread$2l({}, props))
    });
const TagFormModalBase = ({ tag, onCreate, onUpdate, onDelete, onClose, open, isDeleteAllowed })=>{
    const { i18n } = react.useLingui();
    const schema = getValidationSchema$3(i18n);
    const form = reactHookForm.useForm({
        resolver: zod$1.zodResolver(schema),
        defaultValues: {
            name: '',
            category: '',
            keywords: []
        }
    });
    const { control, handleSubmit, reset, setError } = form;
    React.useEffect(()=>{
        let keywords = [];
        if (tag === null || tag === void 0 ? void 0 : tag.keywords) {
            if (Array.isArray(tag.keywords)) {
                keywords = tag.keywords;
            } else if (typeof tag.keywords === 'string') {
                keywords = tag.keywords.split(',').map((keyword)=>keyword.trim()).filter(Boolean);
            }
        }
        reset({
            name: (tag === null || tag === void 0 ? void 0 : tag.name) || '',
            category: (tag === null || tag === void 0 ? void 0 : tag.category) || '',
            keywords
        });
    }, [
        reset,
        tag
    ]);
    const { createTag, updateTag, inProgress, updateOcrAutoTagging } = useTags({
        setNameError: (errorMessage)=>{
            setError('name', {
                type: 'custom',
                message: errorMessage
            });
        },
        onTagCreated: (createdTag)=>{
            reactHotToast.toast.success(i18n._({
                id: "ZWyGXN",
                values: {
                    0: createdTag.name
                }
            }));
            onCreate === null || onCreate === void 0 ? void 0 : onCreate(createdTag);
            onClose === null || onClose === void 0 ? void 0 : onClose();
            reset();
        },
        onTagUpdated: (updatedTag)=>{
            if (tag) {
                reactHotToast.toast.success(tag.name !== updatedTag.name ? i18n._({
                    id: "2yldVE",
                    values: {
                        0: tag.name,
                        1: updatedTag.name
                    }
                }) : i18n._({
                    id: "/2spPD",
                    values: {
                        0: tag.name
                    }
                }));
            }
            onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(updatedTag);
            onClose === null || onClose === void 0 ? void 0 : onClose();
            reset();
        }
    });
    const { root } = useRootElements();
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const formName = `Monite-Form-tag-${React.useId()}`;
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsx(Sheet, {
            open: open,
            onOpenChange: onClose,
            children: /*#__PURE__*/ jsxRuntime.jsxs(SheetContent, {
                container: root,
                className: "mtw:w-[600px]",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(SheetHeader, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(SheetTitle, {
                                children: tag ? i18n._({
                                    id: "8bT1lb",
                                    values: {
                                        0: tag.name
                                    }
                                }) : i18n._({
                                    id: "/1hd7s"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(SheetDescription, {
                                className: "mtw:sr-only",
                                children: tag ? i18n._({
                                    id: "8bT1lb",
                                    values: {
                                        0: tag.name
                                    }
                                }) : i18n._({
                                    id: "/1hd7s"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(Form$1, _object_spread_props$1w(_object_spread$2l({}, form), {
                        children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                            id: formName,
                            name: formName,
                            onSubmit: (e)=>{
                                e.preventDefault();
                                e.stopPropagation();
                                handleSubmit((values)=>_async_to_generator$W(function*() {
                                        const { keywords, name, category } = values;
                                        const payload = _object_spread$2l({
                                            name
                                        }, category ? {
                                            category: category
                                        } : {});
                                        const result = yield tag ? updateTag(tag.id, payload) : createTag(payload);
                                        updateOcrAutoTagging(result.id, keywords);
                                    })())(e);
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:flex-col mtw:gap-4 mtw:px-6 mtw:pt-8 mtw:pb-6",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                        name: "name",
                                        control: control,
                                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                        children: i18n._({
                                                            id: "6YtxFj"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$2l({
                                                            autoFocus: true
                                                        }, field))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                                ]
                                            })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                        name: "category",
                                        control: control,
                                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                        children: i18n._({
                                                            id: "K7tIrx"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(Select, {
                                                        onValueChange: field.onChange,
                                                        defaultValue: field.value,
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                                children: /*#__PURE__*/ jsxRuntime.jsx(SelectTrigger, {
                                                                    className: "mtw:w-full",
                                                                    children: /*#__PURE__*/ jsxRuntime.jsx(SelectValue, {
                                                                        placeholder: i18n._({
                                                                            id: "MTqQMG"
                                                                        })
                                                                    })
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(SelectContent, {
                                                                children: tagCategories.map((category)=>/*#__PURE__*/ jsxRuntime.jsx(SelectItem, {
                                                                        value: category,
                                                                        children: getTagCategoryLabel(category, i18n)
                                                                    }, category))
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                                ]
                                            })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                        name: "keywords",
                                        control: control,
                                        render: ({ field })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                                className: "mtw:flex mtw:flex-col",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                        children: i18n._({
                                                            id: "/n/HCO"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(InputTags, _object_spread_props$1w(_object_spread$2l({}, field), {
                                                        value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : []
                                                    })),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                                ]
                                            });
                                        }
                                    })
                                ]
                            })
                        })
                    })),
                    /*#__PURE__*/ jsxRuntime.jsxs(SheetFooter, {
                        className: "mtw:flex mtw:flex-row mtw:justify-end mtw:gap-2",
                        children: [
                            tag && /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                className: "mtw:mr-auto",
                                variant: "destructive",
                                size: "lg",
                                onClick: ()=>{
                                    onDelete === null || onDelete === void 0 ? void 0 : onDelete(tag);
                                    onClose === null || onClose === void 0 ? void 0 : onClose();
                                },
                                disabled: !isDeleteAllowed,
                                children: i18n._({
                                    id: "cnGeoo"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                variant: "ghost",
                                size: "lg",
                                onClick: onClose,
                                children: i18n._({
                                    id: "dEgA5A"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                type: "submit",
                                form: formName,
                                size: "lg",
                                disabled: inProgress,
                                children: tag ? i18n._({
                                    id: "tfDRzk"
                                }) : i18n._({
                                    id: "hYgDIe"
                                })
                            })
                        ]
                    })
                ]
            })
        })
    });
};

function _define_property$2m(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2k(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2m(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1v(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1v(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1v(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const tagsToSelect = (tags)=>{
    if (!tags) return [];
    return tags.map(({ id: value, name: label })=>({
            value,
            label
        }));
};
const TAG_CREATE_NEW_ID = '__create-new__';
function isCreateNewTagOption(tagOption) {
    return (tagOption === null || tagOption === void 0 ? void 0 : tagOption.value) === TAG_CREATE_NEW_ID;
}
const filter$1 = Autocomplete.createFilterOptions();
const TagsAutocomplete = ({ disabled, value, onChange, label, variant = 'filled', error = false, helperText, required = false })=>{
    var _tagsQuery_data;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { tagsQuery } = useTags$1();
    const [isCreateTagOpened, setIsCreateTagOpened] = React.useState(false);
    const normalizedValue = React.useMemo(()=>{
        if (!value) return [];
        return tagsToSelect(value);
    }, [
        value
    ]);
    const options = React.useMemo(()=>{
        var _tagsQuery_data;
        const availableTags = ((_tagsQuery_data = tagsQuery.data) === null || _tagsQuery_data === void 0 ? void 0 : _tagsQuery_data.data) || [];
        const selectedTags = value || [];
        // Combine available tags with selected tags to ensure selected values are always in options
        const allTags = [
            ...availableTags
        ];
        selectedTags.forEach((selectedTag)=>{
            if (!allTags.find((tag)=>tag.id === selectedTag.id)) {
                allTags.push(selectedTag);
            }
        });
        return tagsToSelect(allTags);
    }, [
        (_tagsQuery_data = tagsQuery.data) === null || _tagsQuery_data === void 0 ? void 0 : _tagsQuery_data.data,
        value
    ]);
    const onAutocompleteChange = (selectedOptions)=>{
        var _tagsQuery_data_data, _tagsQuery_data;
        const selectedIds = selectedOptions.map((option)=>option.value);
        const selectedTags = ((_tagsQuery_data = tagsQuery.data) === null || _tagsQuery_data === void 0 ? void 0 : (_tagsQuery_data_data = _tagsQuery_data.data) === null || _tagsQuery_data_data === void 0 ? void 0 : _tagsQuery_data_data.filter((tag)=>selectedIds.includes(tag.id))) || [];
        onChange === null || onChange === void 0 ? void 0 : onChange(selectedTags);
    };
    const handleCreateNewTag = ()=>{
        setIsCreateTagOpened(true);
    };
    const handleTagCreated = (newTag)=>{
        // Add the newly created tag to the current selection
        const currentTags = value || [];
        const updatedTags = [
            ...currentTags,
            newTag
        ];
        onChange === null || onChange === void 0 ? void 0 : onChange(updatedTags);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(TagFormModal, {
                open: isCreateTagOpened,
                onClose: ()=>setIsCreateTagOpened(false),
                onCreate: handleTagCreated,
                isDeleteAllowed: false
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, {
                disabled: disabled,
                multiple: true,
                filterSelectedOptions: true,
                getOptionLabel: (option)=>option.label,
                options: options,
                slotProps: {
                    popper: {
                        container: root
                    }
                },
                isOptionEqualToValue: (option, value)=>option.value === value.value,
                value: normalizedValue,
                onChange: (_, newValue)=>{
                    const valueArray = newValue || [];
                    onAutocompleteChange(valueArray);
                },
                filterOptions: (options, params)=>{
                    const filtered = filter$1(options, params);
                    filtered.unshift({
                        value: TAG_CREATE_NEW_ID,
                        label: i18n._({
                            id: "/1hd7s"
                        })
                    });
                    return filtered;
                },
                renderOption: (props, option)=>{
                    return isCreateNewTagOption(option) ? /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "text",
                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                        fullWidth: true,
                        sx: {
                            justifyContent: 'flex-start',
                            px: 2
                        },
                        onClick: handleCreateNewTag,
                        children: option.label
                    }, option.value) : /*#__PURE__*/ react$3.createElement("li", _object_spread_props$1v(_object_spread$2k({}, props), {
                        key: option.value
                    }), option.label);
                },
                renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1v(_object_spread$2k({}, params), {
                        label: label,
                        variant: variant,
                        fullWidth: true,
                        error: error,
                        helperText: helperText,
                        required: required
                    }))
            })
        ]
    });
};

const TagsAutocompleteInput = ({ control, name, label, variant = 'filled', disabled = false, required = false, helperText })=>{
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        name: name,
        control: control,
        render: ({ field, fieldState: { error: fieldError } })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: variant,
                fullWidth: true,
                required: required,
                error: Boolean(fieldError),
                children: /*#__PURE__*/ jsxRuntime.jsx(TagsAutocomplete, {
                    disabled: disabled,
                    value: field.value || [],
                    onChange: (tags)=>{
                        field.onChange(tags);
                    },
                    label: label,
                    variant: variant,
                    error: Boolean(fieldError),
                    helperText: (fieldError === null || fieldError === void 0 ? void 0 : fieldError.message) || helperText,
                    required: required
                })
            })
    });
};

function asyncGeneratorStep$V(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$V(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$V(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$V(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$2l(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2j(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2l(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1u(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1u(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1u(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getApprovalPolicyValidationSchema = (i18n)=>zod.z.object({
        name: zod.z.string().min(1, i18n._({
            id: "m3lDGx"
        })),
        description: zod.z.string().min(1, i18n._({
            id: "eQ4O9e"
        })),
        triggerType: zod.z.union([
            zod.z.literal('was_created_by_user_id'),
            zod.z.literal('counterpart_id'),
            zod.z.literal('amount'),
            zod.z.literal('currency'),
            zod.z.literal('tags')
        ]).nullish(),
        triggers: zod.z.object({
            was_created_by_user_id: zod.z.array(zod.z.any()).optional(),
            tags: zod.z.array(zod.z.any()).optional(),
            counterpart_id: zod.z.array(zod.z.any()).optional(),
            amount: zod.z.object({
                currency: CurrencyEnumSchema,
                value: zod.z.array(zod.z.any())
            }).optional()
        }),
        amountOperator: zod.z.union([
            zod.z.literal('range'),
            zod.z.literal('in'),
            zod.z.literal('=='),
            zod.z.literal('<'),
            zod.z.literal('<='),
            zod.z.literal('>'),
            zod.z.literal('>=')
        ]).optional(),
        amountValue: zod.z.number().positive(i18n._({
            id: "0ZHQo6"
        })).optional(),
        amountRangeLeftValue: zod.z.number().positive(i18n._({
            id: "0ZHQo6"
        })).optional(),
        amountRangeRightValue: zod.z.number().positive(i18n._({
            id: "0ZHQo6"
        })).optional(),
        amountCurrency: CurrencyEnumSchema.optional(),
        scriptType: zod.z.union([
            zod.z.literal('single_user'),
            zod.z.literal('users_from_list'),
            zod.z.literal('roles_from_list'),
            zod.z.literal('approval_chain')
        ]).nullish(),
        rules: zod.z.object({
            single_user: zod.z.any().optional(),
            users_from_list: zod.z.array(zod.z.any()).optional(),
            roles_from_list: zod.z.array(zod.z.any()).optional(),
            approval_chain: zod.z.array(zod.z.any()).optional()
        }),
        usersFromListCount: zod.z.number().min(1, i18n._({
            id: "bBqjzX"
        })).optional(),
        rolesFromListCount: zod.z.number().min(1, i18n._({
            id: "bBqjzX"
        })).optional()
    });
/**
 * Builds the approval policy payload from form values
 */ /* eslint-disable lingui/no-unlocalized-strings */ const buildApprovalPolicyPayload = (values)=>{
    var _values_triggers_was_created_by_user_id, _values_triggers_was_created_by_user_id1, _values_triggers_counterpart_id, _values_triggers_counterpart_id1, _values_triggers_tags, _values_triggers_tags1, _values_triggers_amount_value, _values_triggers_amount, _values_triggers_amount_value1, _values_triggers_amount1, _values_rules_users_from_list, _values_rules_roles_from_list, _values_rules_approval_chain;
    return {
        name: values.name,
        description: values.description,
        trigger: {
            all: [
                "{event_name == 'submitted_for_approval'}",
                ...((_values_triggers_was_created_by_user_id = values.triggers.was_created_by_user_id) === null || _values_triggers_was_created_by_user_id === void 0 ? void 0 : _values_triggers_was_created_by_user_id.length) && ((_values_triggers_was_created_by_user_id1 = values.triggers.was_created_by_user_id) === null || _values_triggers_was_created_by_user_id1 === void 0 ? void 0 : _values_triggers_was_created_by_user_id1.length) > 0 ? [
                    {
                        operator: OPERATOR_OPERATIONS.IN,
                        left_operand: {
                            name: `invoice.${NAMED_VALUES.WAS_CREATED_BY_USER_ID}`
                        },
                        right_operand: values.triggers.was_created_by_user_id.map((user)=>user.id)
                    }
                ] : [],
                ...((_values_triggers_counterpart_id = values.triggers.counterpart_id) === null || _values_triggers_counterpart_id === void 0 ? void 0 : _values_triggers_counterpart_id.length) && ((_values_triggers_counterpart_id1 = values.triggers.counterpart_id) === null || _values_triggers_counterpart_id1 === void 0 ? void 0 : _values_triggers_counterpart_id1.length) > 0 ? [
                    {
                        operator: OPERATOR_OPERATIONS.IN,
                        left_operand: {
                            name: `invoice.${NAMED_VALUES.COUNTERPART_ID}`
                        },
                        right_operand: values.triggers.counterpart_id.map((counterpart)=>counterpart.id)
                    }
                ] : [],
                // Named value `tags.id` is a list. So in order to use the 'x in list' format, we need to build a trigger for each tag
                ...((_values_triggers_tags = values.triggers.tags) === null || _values_triggers_tags === void 0 ? void 0 : _values_triggers_tags.length) && ((_values_triggers_tags1 = values.triggers.tags) === null || _values_triggers_tags1 === void 0 ? void 0 : _values_triggers_tags1.length) > 0 ? values.triggers.tags.map((tag)=>({
                        operator: OPERATOR_OPERATIONS.IN,
                        left_operand: tag.id,
                        right_operand: {
                            name: `invoice.${NAMED_VALUES.TAGS}`
                        }
                    })) : [],
                ...((_values_triggers_amount = values.triggers.amount) === null || _values_triggers_amount === void 0 ? void 0 : (_values_triggers_amount_value = _values_triggers_amount.value) === null || _values_triggers_amount_value === void 0 ? void 0 : _values_triggers_amount_value.length) && ((_values_triggers_amount1 = values.triggers.amount) === null || _values_triggers_amount1 === void 0 ? void 0 : (_values_triggers_amount_value1 = _values_triggers_amount1.value) === null || _values_triggers_amount_value1 === void 0 ? void 0 : _values_triggers_amount_value1.length) > 0 ? [
                    ...values.triggers.amount.value.map((value)=>({
                            operator: value[0],
                            left_operand: {
                                name: `invoice.${NAMED_VALUES.AMOUNT}`
                            },
                            right_operand: typeof value[1] === 'number' ? value[1] : parseInt(value[1])
                        })),
                    {
                        operator: OPERATOR_OPERATIONS.EQUALS,
                        left_operand: {
                            name: `invoice.${NAMED_VALUES.CURRENCY}`
                        },
                        right_operand: values.triggers.amount.currency
                    }
                ] : []
            ]
        },
        script: [
            {
                if: {
                    run_concurrently: false,
                    all: [
                        ...values.rules.single_user ? [
                            {
                                call: 'ApprovalRequests.request_approval_by_users',
                                params: {
                                    user_ids: [
                                        values.rules.single_user.id
                                    ],
                                    required_approval_count: 1
                                }
                            }
                        ] : [],
                        ...values.rules.users_from_list && ((_values_rules_users_from_list = values.rules.users_from_list) === null || _values_rules_users_from_list === void 0 ? void 0 : _values_rules_users_from_list.length) > 0 ? [
                            {
                                call: 'ApprovalRequests.request_approval_by_users',
                                params: {
                                    user_ids: values.rules.users_from_list.map((user)=>user.id) || [],
                                    required_approval_count: values.usersFromListCount ? typeof values.usersFromListCount === 'number' ? values.usersFromListCount : parseInt(values.usersFromListCount) : 0
                                }
                            }
                        ] : [],
                        ...values.rules.roles_from_list && ((_values_rules_roles_from_list = values.rules.roles_from_list) === null || _values_rules_roles_from_list === void 0 ? void 0 : _values_rules_roles_from_list.length) > 0 ? [
                            {
                                call: 'ApprovalRequests.request_approval_by_roles',
                                params: {
                                    role_ids: values.rules.roles_from_list.map((role)=>role.id) || [],
                                    required_approval_count: values.rolesFromListCount ? typeof values.rolesFromListCount === 'number' ? values.rolesFromListCount : parseInt(values.rolesFromListCount) : 0
                                }
                            }
                        ] : [],
                        ...values.rules.approval_chain && ((_values_rules_approval_chain = values.rules.approval_chain) === null || _values_rules_approval_chain === void 0 ? void 0 : _values_rules_approval_chain.length) > 0 ? [
                            {
                                run_concurrently: false,
                                all: [
                                    ...values.rules.approval_chain.map((user)=>({
                                            call: 'ApprovalRequests.request_approval_by_users',
                                            params: {
                                                user_ids: [
                                                    user.id
                                                ],
                                                required_approval_count: 1
                                            }
                                        })) || []
                                ]
                            }
                        ] : []
                    ]
                },
                then: [
                    '{Payables.approve(invoice.id)}'
                ],
                else: [
                    '{Payables.reject(invoice.id)}'
                ]
            }
        ]
    };
};
const ApprovalPolicyForm = ({ approvalPolicy, setIsEdit, onCreated, onUpdated })=>{
    var _triggers_was_created_by_user_id, _triggers_tags, _triggers_counterpart_id, _rules_single_user, _rules_single_user1, _rules_users_from_list, _rules_users_from_list_userIds, _rules_users_from_list1, _rules_roles_from_list, _rules_roles_from_list_roleIds, _rules_roles_from_list1, _rules_approval_chain, _rules_approval_chain_chainUserIds, _rules_approval_chain1, _prevFormValues_triggers, _prevFormValues_triggers1, _prevFormValues_triggers2, _prevFormValues_triggers3, _prevFormValues_rules, _prevFormValues_rules1, _prevFormValues_rules2, _prevFormValues_rules3;
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const { api, queryClient } = useMoniteContext();
    const { formatFromMinorUnits, formatToMinorUnits } = useCurrencies();
    const isEdit = !!approvalPolicy;
    const formId = `Monite-Form-approvalPolicyBuilder-${React.useId()}`;
    const { triggers, getTriggerName } = useApprovalPolicyTrigger({
        approvalPolicy
    });
    const { rules } = useApprovalPolicyScript({
        approvalPolicy
    });
    const [isAddingTrigger, setIsAddingTrigger] = React.useState(false);
    const [isAddingRule, setIsAddingRule] = React.useState(false);
    const [triggerInEdit, setTriggerInEdit] = React.useState(null);
    const [prevFormValues, setPrevFormValues] = React.useState(null);
    const [scriptInEdit, setScriptInEdit] = React.useState(null);
    const { data: usersForTriggers } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            id__in: Array.isArray(triggers === null || triggers === void 0 ? void 0 : triggers.was_created_by_user_id) ? triggers.was_created_by_user_id : []
        }
    }, {
        enabled: Boolean(triggers === null || triggers === void 0 ? void 0 : (_triggers_was_created_by_user_id = triggers.was_created_by_user_id) === null || _triggers_was_created_by_user_id === void 0 ? void 0 : _triggers_was_created_by_user_id.length)
    });
    const { data: tagsForTriggers } = api.tags.getTags.useQuery({
        query: {
            id__in: Array.isArray(triggers === null || triggers === void 0 ? void 0 : triggers.tags) ? triggers.tags : []
        }
    }, {
        enabled: Boolean(triggers === null || triggers === void 0 ? void 0 : (_triggers_tags = triggers.tags) === null || _triggers_tags === void 0 ? void 0 : _triggers_tags.length)
    });
    const { data: counterpartsForTriggers } = api.counterparts.getCounterparts.useQuery({
        query: {
            id__in: Array.isArray(triggers === null || triggers === void 0 ? void 0 : triggers.counterpart_id) ? triggers.counterpart_id : []
        }
    }, {
        enabled: Boolean(triggers === null || triggers === void 0 ? void 0 : (_triggers_counterpart_id = triggers.counterpart_id) === null || _triggers_counterpart_id === void 0 ? void 0 : _triggers_counterpart_id.length)
    });
    var _rules_single_user_userId;
    const { data: userForSingleUserRule } = api.entityUsers.getEntityUsersId.useQuery({
        path: {
            entity_user_id: (_rules_single_user_userId = rules === null || rules === void 0 ? void 0 : (_rules_single_user = rules.single_user) === null || _rules_single_user === void 0 ? void 0 : _rules_single_user.userId) !== null && _rules_single_user_userId !== void 0 ? _rules_single_user_userId : ''
        }
    }, {
        enabled: Boolean(rules === null || rules === void 0 ? void 0 : (_rules_single_user1 = rules.single_user) === null || _rules_single_user1 === void 0 ? void 0 : _rules_single_user1.userId)
    });
    const { data: usersForUsersFromListRule } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            id__in: Array.isArray(rules === null || rules === void 0 ? void 0 : (_rules_users_from_list = rules.users_from_list) === null || _rules_users_from_list === void 0 ? void 0 : _rules_users_from_list.userIds) ? rules.users_from_list.userIds : []
        }
    }, {
        enabled: Boolean(rules === null || rules === void 0 ? void 0 : (_rules_users_from_list1 = rules.users_from_list) === null || _rules_users_from_list1 === void 0 ? void 0 : (_rules_users_from_list_userIds = _rules_users_from_list1.userIds) === null || _rules_users_from_list_userIds === void 0 ? void 0 : _rules_users_from_list_userIds.length)
    });
    const { data: rolesForRolesFromListRule } = api.roles.getRoles.useQuery({
        query: {
            id__in: Array.isArray(rules === null || rules === void 0 ? void 0 : (_rules_roles_from_list = rules.roles_from_list) === null || _rules_roles_from_list === void 0 ? void 0 : _rules_roles_from_list.roleIds) ? rules.roles_from_list.roleIds : []
        }
    }, {
        enabled: Boolean(rules === null || rules === void 0 ? void 0 : (_rules_roles_from_list1 = rules.roles_from_list) === null || _rules_roles_from_list1 === void 0 ? void 0 : (_rules_roles_from_list_roleIds = _rules_roles_from_list1.roleIds) === null || _rules_roles_from_list_roleIds === void 0 ? void 0 : _rules_roles_from_list_roleIds.length)
    });
    const { data: usersForApprovalChainRule } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            id__in: Array.isArray(rules === null || rules === void 0 ? void 0 : (_rules_approval_chain = rules.approval_chain) === null || _rules_approval_chain === void 0 ? void 0 : _rules_approval_chain.chainUserIds) ? rules.approval_chain.chainUserIds : []
        }
    }, {
        enabled: Boolean(rules === null || rules === void 0 ? void 0 : (_rules_approval_chain1 = rules.approval_chain) === null || _rules_approval_chain1 === void 0 ? void 0 : (_rules_approval_chain_chainUserIds = _rules_approval_chain1.chainUserIds) === null || _rules_approval_chain_chainUserIds === void 0 ? void 0 : _rules_approval_chain_chainUserIds.length)
    });
    const createMutation = api.approvalPolicies.postApprovalPolicies.useMutation({}, {
        onSuccess: (createdApprovalPolicy)=>_async_to_generator$V(function*() {
                yield Promise.all([
                    api.approvalPolicies.getApprovalPolicies.invalidateQueries(queryClient),
                    api.approvalPolicies.getApprovalPoliciesId.invalidateQueries({
                        parameters: {
                            path: {
                                approval_policy_id: createdApprovalPolicy.id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "o4i/O7"
                }));
            })(),
        onError: ()=>_async_to_generator$V(function*() {
                reactHotToast.toast.error(i18n._({
                    id: "Y1I638"
                }));
            })()
    });
    const updateMutation = api.approvalPolicies.patchApprovalPoliciesId.useMutation(undefined, {
        onSuccess: (updatedApprovalPolicy)=>_async_to_generator$V(function*() {
                yield Promise.all([
                    api.approvalPolicies.getApprovalPolicies.invalidateQueries(queryClient),
                    api.approvalPolicies.getApprovalPoliciesId.invalidateQueries({
                        parameters: {
                            path: {
                                approval_policy_id: updatedApprovalPolicy.id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "gCAJqu"
                }));
            })(),
        onError: ()=>_async_to_generator$V(function*() {
                reactHotToast.toast.error(i18n._({
                    id: "M6IFwT"
                }));
            })()
    });
    const createApprovalPolicy = (values)=>_async_to_generator$V(function*() {
            // Set default priority 1 on new approval policies.
            values.priority = 1;
            const response = yield createMutation.mutateAsync(values);
            if (response) {
                setIsEdit(false);
                onCreated === null || onCreated === void 0 ? void 0 : onCreated(response.id);
                return response;
            }
        })();
    const updateApprovalPolicy = (id, values)=>_async_to_generator$V(function*() {
            const response = yield updateMutation.mutateAsync({
                path: {
                    approval_policy_id: id
                },
                body: values
            });
            if (response) {
                setIsEdit(false);
                onUpdated === null || onUpdated === void 0 ? void 0 : onUpdated(id);
            }
            return response;
        })();
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getApprovalPolicyValidationSchema(i18n)),
        mode: 'onChange',
        defaultValues: {
            name: (approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.name) || '',
            description: (approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.description) || '',
            scriptType: undefined,
            triggerType: undefined,
            triggers: {},
            rules: {},
            amountOperator: undefined,
            amountValue: undefined,
            amountCurrency: undefined,
            amountRangeLeftValue: undefined,
            amountRangeRightValue: undefined,
            usersFromListCount: 1,
            rolesFromListCount: 1
        }
    });
    const { control, handleSubmit, setValue, getValues, watch } = methods;
    const [currentTriggers, currentRules, currentAmountOperator, currentAmountValue, currentAmountRangeLeftValue, currentAmountRangeRightValue, currentAmountCurrency, currentTriggerType, currentScriptType, currentUsersFromListCount, currentRolesFromListCount] = watch([
        'triggers',
        'rules',
        'amountOperator',
        'amountValue',
        'amountRangeLeftValue',
        'amountRangeRightValue',
        'amountCurrency',
        'triggerType',
        'scriptType',
        'usersFromListCount',
        'rolesFromListCount'
    ]);
    // setup default values for conditions and rules
    React.useEffect(()=>{
        var _counterpartsForTriggers_data, _triggers_amount_value, _triggers_amount;
        if (!isEdit) return;
        if ((usersForTriggers === null || usersForTriggers === void 0 ? void 0 : usersForTriggers.data) && (usersForTriggers === null || usersForTriggers === void 0 ? void 0 : usersForTriggers.data.length) > 0) {
            setValue('triggers.was_created_by_user_id', usersForTriggers === null || usersForTriggers === void 0 ? void 0 : usersForTriggers.data);
        }
        if ((tagsForTriggers === null || tagsForTriggers === void 0 ? void 0 : tagsForTriggers.data) && (tagsForTriggers === null || tagsForTriggers === void 0 ? void 0 : tagsForTriggers.data.length) > 0) {
            setValue('triggers.tags', tagsForTriggers === null || tagsForTriggers === void 0 ? void 0 : tagsForTriggers.data);
        }
        var _counterpartsForTriggers_data_length;
        if (((_counterpartsForTriggers_data_length = counterpartsForTriggers === null || counterpartsForTriggers === void 0 ? void 0 : (_counterpartsForTriggers_data = counterpartsForTriggers.data) === null || _counterpartsForTriggers_data === void 0 ? void 0 : _counterpartsForTriggers_data.length) !== null && _counterpartsForTriggers_data_length !== void 0 ? _counterpartsForTriggers_data_length : 0) > 0) {
            setValue('triggers.counterpart_id', counterpartsForTriggers === null || counterpartsForTriggers === void 0 ? void 0 : counterpartsForTriggers.data.map((counterpart)=>({
                    id: counterpart.id,
                    label: getCounterpartName(counterpart)
                })));
        }
        if (triggers.amount && ((_triggers_amount = triggers.amount) === null || _triggers_amount === void 0 ? void 0 : (_triggers_amount_value = _triggers_amount.value) === null || _triggers_amount_value === void 0 ? void 0 : _triggers_amount_value.length) > 0) {
            setValue('triggers.amount', triggers.amount);
            if (triggers.amount.value.length === 2) {
                setValue('amountOperator', 'range');
                setValue('amountRangeLeftValue', formatFromMinorUnits(typeof triggers.amount.value[0][1] === 'number' ? triggers.amount.value[0][1] : parseInt(triggers.amount.value[0][1]), triggers.amount.currency) || 0);
                setValue('amountRangeRightValue', formatFromMinorUnits(typeof triggers.amount.value[1][1] === 'number' ? triggers.amount.value[1][1] : parseInt(triggers.amount.value[1][1]), triggers.amount.currency) || 0);
                setValue('amountCurrency', triggers.amount.currency);
            } else {
                setValue('amountOperator', triggers.amount.value[0][0]);
                setValue('amountValue', formatFromMinorUnits(typeof triggers.amount.value[0][1] === 'number' ? triggers.amount.value[0][1] : parseInt(triggers.amount.value[0][1]), triggers.amount.currency) || 0);
                setValue('amountCurrency', triggers.amount.currency);
            }
        }
        if (userForSingleUserRule) {
            setValue('rules.single_user', userForSingleUserRule);
        }
        if ((usersForUsersFromListRule === null || usersForUsersFromListRule === void 0 ? void 0 : usersForUsersFromListRule.data) && (usersForUsersFromListRule === null || usersForUsersFromListRule === void 0 ? void 0 : usersForUsersFromListRule.data.length) > 0) {
            var _rules_users_from_list;
            setValue('rules.users_from_list', usersForUsersFromListRule === null || usersForUsersFromListRule === void 0 ? void 0 : usersForUsersFromListRule.data);
            setValue('usersFromListCount', rules === null || rules === void 0 ? void 0 : (_rules_users_from_list = rules.users_from_list) === null || _rules_users_from_list === void 0 ? void 0 : _rules_users_from_list.count);
        }
        if ((rolesForRolesFromListRule === null || rolesForRolesFromListRule === void 0 ? void 0 : rolesForRolesFromListRule.data) && (rolesForRolesFromListRule === null || rolesForRolesFromListRule === void 0 ? void 0 : rolesForRolesFromListRule.data.length) > 0) {
            var _rules_roles_from_list;
            setValue('rules.roles_from_list', rolesForRolesFromListRule === null || rolesForRolesFromListRule === void 0 ? void 0 : rolesForRolesFromListRule.data);
            setValue('rolesFromListCount', rules === null || rules === void 0 ? void 0 : (_rules_roles_from_list = rules.roles_from_list) === null || _rules_roles_from_list === void 0 ? void 0 : _rules_roles_from_list.count);
        }
        if ((usersForApprovalChainRule === null || usersForApprovalChainRule === void 0 ? void 0 : usersForApprovalChainRule.data) && (usersForApprovalChainRule === null || usersForApprovalChainRule === void 0 ? void 0 : usersForApprovalChainRule.data.length) > 0) {
            setValue('rules.approval_chain', usersForApprovalChainRule === null || usersForApprovalChainRule === void 0 ? void 0 : usersForApprovalChainRule.data);
        }
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        usersForTriggers === null || usersForTriggers === void 0 ? void 0 : usersForTriggers.data,
        tagsForTriggers === null || tagsForTriggers === void 0 ? void 0 : tagsForTriggers.data,
        counterpartsForTriggers === null || counterpartsForTriggers === void 0 ? void 0 : counterpartsForTriggers.data,
        userForSingleUserRule,
        usersForUsersFromListRule === null || usersForUsersFromListRule === void 0 ? void 0 : usersForUsersFromListRule.data,
        rolesForRolesFromListRule === null || rolesForRolesFromListRule === void 0 ? void 0 : rolesForRolesFromListRule.data,
        usersForApprovalChainRule === null || usersForApprovalChainRule === void 0 ? void 0 : usersForApprovalChainRule.data,
        isEdit,
        setValue
    ]);
    React.useEffect(()=>{
        if (triggerInEdit) {
            setValue('triggerType', triggerInEdit);
        }
    }, [
        setValue,
        triggerInEdit
    ]);
    React.useEffect(()=>{
        if (scriptInEdit) {
            setValue('scriptType', scriptInEdit);
        }
    }, [
        setValue,
        scriptInEdit
    ]);
    React.useEffect(()=>{
        if (currentAmountOperator) {
            if (currentAmountOperator === 'range' && currentAmountRangeLeftValue && currentAmountRangeRightValue) {
                setValue('triggers.amount', {
                    currency: currentAmountCurrency !== null && currentAmountCurrency !== void 0 ? currentAmountCurrency : 'EUR',
                    value: [
                        [
                            '>=',
                            formatToMinorUnits(typeof currentAmountRangeLeftValue === 'number' ? currentAmountRangeLeftValue : parseInt(currentAmountRangeLeftValue), currentAmountCurrency !== null && currentAmountCurrency !== void 0 ? currentAmountCurrency : 'EUR') || 0
                        ],
                        [
                            '<=',
                            formatToMinorUnits(typeof currentAmountRangeRightValue === 'number' ? currentAmountRangeRightValue : parseInt(currentAmountRangeRightValue), currentAmountCurrency !== null && currentAmountCurrency !== void 0 ? currentAmountCurrency : 'EUR') || 0
                        ]
                    ]
                });
            } else if (currentAmountValue) {
                setValue('triggers.amount', {
                    currency: currentAmountCurrency !== null && currentAmountCurrency !== void 0 ? currentAmountCurrency : 'EUR',
                    value: [
                        [
                            currentAmountOperator,
                            formatToMinorUnits(typeof currentAmountValue === 'number' ? currentAmountValue : parseInt(currentAmountValue), currentAmountCurrency !== null && currentAmountCurrency !== void 0 ? currentAmountCurrency : 'EUR') || 0
                        ]
                    ]
                });
            }
        }
    }, [
        formatToMinorUnits,
        currentAmountOperator,
        currentAmountRangeLeftValue,
        currentAmountRangeRightValue,
        currentAmountValue,
        currentAmountCurrency,
        setValue
    ]);
    const resetFormTriggerOrScript = ()=>{
        // reset triggers from prev values
        if (!isAddingTrigger && triggerInEdit === 'was_created_by_user_id') {
            var _prevFormValues_triggers;
            setValue('triggers.was_created_by_user_id', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers = prevFormValues.triggers) === null || _prevFormValues_triggers === void 0 ? void 0 : _prevFormValues_triggers.was_created_by_user_id) || []);
        }
        if (!isAddingTrigger && triggerInEdit === 'tags') {
            var _prevFormValues_triggers1;
            setValue('triggers.tags', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers1 = prevFormValues.triggers) === null || _prevFormValues_triggers1 === void 0 ? void 0 : _prevFormValues_triggers1.tags) || []);
        }
        if (!isAddingTrigger && triggerInEdit === 'counterpart_id') {
            var _prevFormValues_triggers2;
            setValue('triggers.counterpart_id', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers2 = prevFormValues.triggers) === null || _prevFormValues_triggers2 === void 0 ? void 0 : _prevFormValues_triggers2.counterpart_id) || []);
        }
        if (!isAddingTrigger && triggerInEdit === 'amount') {
            var _prevFormValues_triggers3;
            setValue('triggers.amount', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers3 = prevFormValues.triggers) === null || _prevFormValues_triggers3 === void 0 ? void 0 : _prevFormValues_triggers3.amount) || undefined);
            setValue('amountOperator', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.amountOperator) || undefined);
            setValue('amountValue', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.amountValue) || undefined);
            setValue('amountRangeLeftValue', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.amountRangeLeftValue) || undefined);
            setValue('amountRangeRightValue', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.amountRangeRightValue) || undefined);
            setValue('amountCurrency', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.amountCurrency) || undefined);
        }
        if (isAddingTrigger && (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.triggers)) {
            setValue('triggers', prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.triggers);
        }
        // reset rules from prev values
        if (!isAddingRule && scriptInEdit === 'single_user') {
            var _prevFormValues_rules;
            setValue('rules.single_user', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules = prevFormValues.rules) === null || _prevFormValues_rules === void 0 ? void 0 : _prevFormValues_rules.single_user) || undefined);
        }
        if (!isAddingRule && scriptInEdit === 'users_from_list') {
            var _prevFormValues_rules1;
            setValue('rules.users_from_list', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules1 = prevFormValues.rules) === null || _prevFormValues_rules1 === void 0 ? void 0 : _prevFormValues_rules1.users_from_list) || undefined);
            setValue('usersFromListCount', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.usersFromListCount) || 1);
        }
        if (!isAddingRule && scriptInEdit === 'roles_from_list') {
            var _prevFormValues_rules2;
            setValue('rules.roles_from_list', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules2 = prevFormValues.rules) === null || _prevFormValues_rules2 === void 0 ? void 0 : _prevFormValues_rules2.roles_from_list) || undefined);
            setValue('rolesFromListCount', (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.rolesFromListCount) || 1);
        }
        if (!isAddingRule && scriptInEdit === 'approval_chain') {
            var _prevFormValues_rules3;
            setValue('rules.approval_chain', (prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules3 = prevFormValues.rules) === null || _prevFormValues_rules3 === void 0 ? void 0 : _prevFormValues_rules3.approval_chain) || undefined);
        }
        if (isAddingRule && (prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.rules)) {
            setValue('rules', prevFormValues === null || prevFormValues === void 0 ? void 0 : prevFormValues.rules);
        }
        setTriggerInEdit(null);
        setScriptInEdit(null);
        setIsAddingTrigger(false);
        setIsAddingRule(false);
        setPrevFormValues(null);
        setValue('triggerType', null);
        setValue('scriptType', null);
    };
    const isEditingTriggerOrRule = Boolean(triggerInEdit) || Boolean(scriptInEdit);
    const isAddingTriggerOrRule = isAddingTrigger || isAddingRule;
    const isInSecondaryView = isEditingTriggerOrRule || isAddingTriggerOrRule;
    const getTitle = ()=>{
        if (triggerInEdit) return i18n._({
            id: "lRjaGm"
        });
        if (isAddingTrigger) return i18n._({
            id: "zAYz1t"
        });
        if (scriptInEdit) return i18n._({
            id: "vfzxmF"
        });
        if (isAddingRule) return i18n._({
            id: "bmQLn5"
        });
        return isEdit ? i18n._({
            id: "w4Tw6q"
        }) : i18n._({
            id: "wF14js"
        });
    };
    const getPreviousTitle = ()=>{
        if (isInSecondaryView) {
            return isEdit ? i18n._({
                id: "w4Tw6q"
            }) : i18n._({
                id: "wF14js"
            });
        }
        return undefined;
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: isEdit || isInSecondaryView,
                title: getTitle(),
                previousLevelTitle: getPreviousTitle(),
                closeSecondaryLevelDialog: resetFormTriggerOrScript
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1u(_object_spread$2j({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formId,
                        noValidate: true,
                        onSubmit: handleSubmit((values)=>{
                            const approvalPolicyPayload = buildApprovalPolicyPayload(values);
                            isEdit ? updateApprovalPolicy(approvalPolicy.id, approvalPolicyPayload) : createApprovalPolicy(approvalPolicyPayload);
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            gap: 3,
                            children: [
                                (triggerInEdit || isAddingTrigger) && /*#__PURE__*/ jsxRuntime.jsxs(RHFTextField, {
                                    label: i18n._({
                                        id: "85rbPg"
                                    }),
                                    name: "triggerType",
                                    control: control,
                                    fullWidth: true,
                                    required: true,
                                    select: true,
                                    value: triggerInEdit || undefined,
                                    disabled: Boolean(triggerInEdit),
                                    children: [
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers = prevFormValues.triggers) === null || _prevFormValues_triggers === void 0 ? void 0 : _prevFormValues_triggers.amount) || triggerInEdit === 'amount') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "amount",
                                            children: getTriggerName('amount')
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers1 = prevFormValues.triggers) === null || _prevFormValues_triggers1 === void 0 ? void 0 : _prevFormValues_triggers1.counterpart_id) || triggerInEdit === 'counterpart_id') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "counterpart_id",
                                            children: getTriggerName('counterpart_id')
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers2 = prevFormValues.triggers) === null || _prevFormValues_triggers2 === void 0 ? void 0 : _prevFormValues_triggers2.was_created_by_user_id) || triggerInEdit === 'was_created_by_user_id') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "was_created_by_user_id",
                                            children: getTriggerName('was_created_by_user_id')
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_triggers3 = prevFormValues.triggers) === null || _prevFormValues_triggers3 === void 0 ? void 0 : _prevFormValues_triggers3.tags) || triggerInEdit === 'tags') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "tags",
                                            children: getTriggerName('tags')
                                        })
                                    ]
                                }),
                                (scriptInEdit || isAddingRule) && /*#__PURE__*/ jsxRuntime.jsxs(RHFTextField, {
                                    label: i18n._({
                                        id: "FhYMo6"
                                    }),
                                    name: "scriptType",
                                    control: control,
                                    fullWidth: true,
                                    required: true,
                                    select: true,
                                    value: scriptInEdit,
                                    disabled: Boolean(scriptInEdit),
                                    children: [
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules = prevFormValues.rules) === null || _prevFormValues_rules === void 0 ? void 0 : _prevFormValues_rules.single_user) || scriptInEdit === 'single_user') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "single_user",
                                            children: i18n._({
                                                id: "fh9mfj"
                                            })
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules1 = prevFormValues.rules) === null || _prevFormValues_rules1 === void 0 ? void 0 : _prevFormValues_rules1.users_from_list) || scriptInEdit === 'users_from_list') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "users_from_list",
                                            children: i18n._({
                                                id: "qsMofq"
                                            })
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules2 = prevFormValues.rules) === null || _prevFormValues_rules2 === void 0 ? void 0 : _prevFormValues_rules2.roles_from_list) || scriptInEdit === 'roles_from_list') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "roles_from_list",
                                            children: i18n._({
                                                id: "Re9bA2"
                                            })
                                        }),
                                        (!(prevFormValues === null || prevFormValues === void 0 ? void 0 : (_prevFormValues_rules3 = prevFormValues.rules) === null || _prevFormValues_rules3 === void 0 ? void 0 : _prevFormValues_rules3.approval_chain) || scriptInEdit === 'approval_chain') && /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                            value: "approval_chain",
                                            children: i18n._({
                                                id: "YxhvdU"
                                            })
                                        })
                                    ]
                                }),
                                (triggerInEdit === 'was_created_by_user_id' || isAddingTrigger && currentTriggerType === 'was_created_by_user_id') && /*#__PURE__*/ jsxRuntime.jsx(AutocompleteUsers, {
                                    control: control,
                                    name: "triggers.was_created_by_user_id",
                                    label: i18n._({
                                        id: "Sxm8rQ"
                                    })
                                }),
                                (triggerInEdit === 'tags' || isAddingTrigger && currentTriggerType === 'tags') && /*#__PURE__*/ jsxRuntime.jsx(TagsAutocompleteInput, {
                                    control: control,
                                    name: "triggers.tags",
                                    label: i18n._({
                                        id: "OYHzN1"
                                    }),
                                    variant: "standard",
                                    required: true
                                }),
                                (triggerInEdit === 'counterpart_id' || isAddingTrigger && currentTriggerType === 'counterpart_id') && /*#__PURE__*/ jsxRuntime.jsx(CounterpartAutocomplete, {
                                    control: control,
                                    name: "triggers.counterpart_id",
                                    label: i18n._({
                                        id: "dU8ZD6"
                                    }),
                                    multiple: true
                                }),
                                (triggerInEdit === 'amount' || isAddingTrigger && currentTriggerType === 'amount') && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                    container: true,
                                    spacing: 2,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                            item: true,
                                            xs: 4,
                                            children: /*#__PURE__*/ jsxRuntime.jsxs(RHFTextField, {
                                                label: i18n._({
                                                    id: "TJowrx"
                                                }),
                                                name: "amountOperator",
                                                control: control,
                                                select: true,
                                                fullWidth: true,
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: ">",
                                                        children: i18n._({
                                                            id: "JXaffl"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: "<",
                                                        children: i18n._({
                                                            id: "haJ2Hb"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: ">=",
                                                        children: i18n._({
                                                            id: "/sZgWl"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: "<=",
                                                        children: i18n._({
                                                            id: "QUuzW2"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: "==",
                                                        children: i18n._({
                                                            id: "pfKLo+"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                        value: "range",
                                                        children: i18n._({
                                                            id: "vOyUlD"
                                                        })
                                                    })
                                                ]
                                            })
                                        }),
                                        currentAmountOperator === 'range' ? /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                            item: true,
                                            container: true,
                                            spacing: 2,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                    item: true,
                                                    xs: 6,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                                        label: i18n._({
                                                            id: "w1ZzO+"
                                                        }),
                                                        name: "amountRangeLeftValue",
                                                        control: control,
                                                        type: "number",
                                                        fullWidth: true
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                                    item: true,
                                                    xs: 6,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                                        label: i18n._({
                                                            id: "sIMb2X"
                                                        }),
                                                        name: "amountRangeRightValue",
                                                        control: control,
                                                        type: "number",
                                                        fullWidth: true
                                                    })
                                                })
                                            ]
                                        }) : /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                            item: true,
                                            xs: 4,
                                            children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                                label: i18n._({
                                                    id: "hehnjM"
                                                }),
                                                name: "amountValue",
                                                control: control,
                                                type: "number",
                                                fullWidth: true
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                            item: true,
                                            xs: 4,
                                            children: /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                                name: "amountCurrency",
                                                control: control,
                                                showCodeOnly: true
                                            })
                                        })
                                    ]
                                }),
                                (scriptInEdit === 'single_user' || isAddingRule && currentScriptType === 'single_user') && /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                                    children: /*#__PURE__*/ jsxRuntime.jsx(AutocompleteUser, {
                                        control: control,
                                        name: "rules.single_user",
                                        label: i18n._({
                                            id: "cPlOFC"
                                        })
                                    })
                                }),
                                (scriptInEdit === 'users_from_list' || isAddingRule && currentScriptType === 'users_from_list') && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(AutocompleteUsers, {
                                            control: control,
                                            name: "rules.users_from_list",
                                            label: i18n._({
                                                id: "uGYOUp"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            control: control,
                                            label: i18n._({
                                                id: "jE9Ez4"
                                            }),
                                            name: "usersFromListCount",
                                            type: "number",
                                            required: true,
                                            inputProps: {
                                                min: 1
                                            }
                                        })
                                    ]
                                }),
                                (scriptInEdit === 'roles_from_list' || isAddingRule && currentScriptType === 'roles_from_list') && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(AutocompleteRoles, {
                                            control: control,
                                            name: "rules.roles_from_list",
                                            label: i18n._({
                                                id: "Re9bA2"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            control: control,
                                            label: i18n._({
                                                id: "jE9Ez4"
                                            }),
                                            name: "rolesFromListCount",
                                            type: "number",
                                            required: true,
                                            inputProps: {
                                                min: 1
                                            }
                                        })
                                    ]
                                }),
                                (scriptInEdit === 'approval_chain' || isAddingRule && currentScriptType === 'approval_chain') && /*#__PURE__*/ jsxRuntime.jsx(AutocompleteUsers, {
                                    control: control,
                                    name: "rules.approval_chain",
                                    label: i18n._({
                                        id: "uGYOUp"
                                    })
                                }),
                                !triggerInEdit && !scriptInEdit && !isAddingTrigger && !isAddingRule && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            label: i18n._({
                                                id: "TQBJVF"
                                            }),
                                            name: "name",
                                            control: control,
                                            fullWidth: true,
                                            required: true
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            label: i18n._({
                                                id: "Nu4oKW"
                                            }),
                                            name: "description",
                                            control: control,
                                            fullWidth: true,
                                            required: true,
                                            multiline: true,
                                            rows: 4
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "h5",
                                                    mt: 4,
                                                    mb: 1,
                                                    children: i18n._({
                                                        id: "0CuAor"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body1",
                                                    mb: 1,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
                                                        id: "INKhSX",
                                                        components: {
                                                            0: /*#__PURE__*/ jsxRuntime.jsx("strong", {})
                                                        }
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(ConditionsTable, {
                                                    triggers: currentTriggers,
                                                    onAddTrigger: ()=>{
                                                        setIsAddingTrigger(true);
                                                        setPrevFormValues({
                                                            triggers: _object_spread$2j({}, getValues('triggers')),
                                                            amountOperator: getValues('amountOperator'),
                                                            amountValue: getValues('amountValue'),
                                                            amountRangeLeftValue: getValues('amountRangeLeftValue'),
                                                            amountRangeRightValue: getValues('amountRangeRightValue'),
                                                            amountCurrency: getValues('amountCurrency')
                                                        });
                                                    },
                                                    onEditTrigger: (triggerKey)=>{
                                                        setTriggerInEdit(triggerKey);
                                                        setPrevFormValues({
                                                            triggers: _object_spread$2j({}, getValues('triggers')),
                                                            amountOperator: getValues('amountOperator'),
                                                            amountValue: getValues('amountValue'),
                                                            amountRangeLeftValue: getValues('amountRangeLeftValue'),
                                                            amountRangeRightValue: getValues('amountRangeRightValue'),
                                                            amountCurrency: getValues('amountCurrency')
                                                        });
                                                    },
                                                    onDeleteTrigger: (triggerKey)=>{
                                                        const updatedTriggers = _object_spread$2j({}, currentTriggers);
                                                        delete updatedTriggers[triggerKey];
                                                        setValue('triggers', updatedTriggers);
                                                        setValue('amountOperator', undefined);
                                                        setValue('amountValue', undefined);
                                                        setValue('amountRangeLeftValue', undefined);
                                                        setValue('amountRangeRightValue', undefined);
                                                        setValue('amountCurrency', undefined);
                                                    }
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "h5",
                                                    mt: 4,
                                                    mb: 1,
                                                    children: i18n._({
                                                        id: "FhYMo6"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(RulesTable, {
                                                    rules: currentRules,
                                                    usersFromListCount: currentUsersFromListCount,
                                                    rolesFromListCount: currentRolesFromListCount,
                                                    onAddRule: ()=>{
                                                        setIsAddingRule(true);
                                                        setPrevFormValues({
                                                            rules: _object_spread$2j({}, getValues('rules')),
                                                            usersFromListCount: getValues('usersFromListCount'),
                                                            rolesFromListCount: getValues('rolesFromListCount')
                                                        });
                                                    },
                                                    onEditRule: (ruleKey)=>{
                                                        setScriptInEdit(ruleKey);
                                                        setPrevFormValues({
                                                            rules: _object_spread$2j({}, getValues('rules')),
                                                            usersFromListCount: getValues('usersFromListCount'),
                                                            rolesFromListCount: getValues('rolesFromListCount')
                                                        });
                                                    },
                                                    onDeleteRule: (ruleKey)=>{
                                                        const updatedRules = _object_spread$2j({}, currentRules);
                                                        delete updatedRules[ruleKey];
                                                        setValue('rules', updatedRules);
                                                        setValue('usersFromListCount', undefined);
                                                        setValue('rolesFromListCount', undefined);
                                                    }
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: triggerInEdit || scriptInEdit || isAddingTrigger || isAddingRule ? {
                    label: triggerInEdit ? i18n._({
                        id: "EkH9pt"
                    }) : i18n._({
                        id: "m16xKo"
                    }),
                    onClick: (event)=>{
                        event === null || event === void 0 ? void 0 : event.preventDefault();
                        setTriggerInEdit(null);
                        setScriptInEdit(null);
                        setIsAddingTrigger(false);
                        setIsAddingRule(false);
                        setValue('triggerType', null);
                        setValue('scriptType', null);
                    }
                } : {
                    label: i18n._({
                        id: "tfDRzk"
                    }),
                    formId,
                    isLoading: updateMutation.isPending || createMutation.isPending
                },
                cancelButton: {
                    onClick: triggerInEdit || scriptInEdit || isAddingTrigger || isAddingRule ? resetFormTriggerOrScript : isEdit ? ()=>setIsEdit(false) : dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.onClose
                }
            })
        ]
    });
};

function asyncGeneratorStep$U(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$U(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$U(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$U(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const ApprovalPolicyView = ({ approvalPolicy, setIsEdit })=>{
    var _triggers_tags, _triggers_counterpart_id, _Object_keys;
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const { api, queryClient } = useMoniteContext();
    const { triggers, getTriggerLabel, getAmountLabel } = useApprovalPolicyTrigger({
        approvalPolicy
    });
    const { rules, getRuleLabel } = useApprovalPolicyScript({
        approvalPolicy
    });
    const { data: tagsForTriggers } = api.tags.getTags.useQuery({
        query: {
            id__in: Array.isArray(triggers === null || triggers === void 0 ? void 0 : triggers.tags) ? triggers.tags : []
        }
    }, {
        enabled: Boolean(triggers === null || triggers === void 0 ? void 0 : (_triggers_tags = triggers.tags) === null || _triggers_tags === void 0 ? void 0 : _triggers_tags.length)
    });
    const { data: counterpartsForTriggers } = api.counterparts.getCounterparts.useQuery({
        query: {
            id__in: Array.isArray(triggers === null || triggers === void 0 ? void 0 : triggers.counterpart_id) ? triggers.counterpart_id : []
        }
    }, {
        enabled: Boolean(triggers === null || triggers === void 0 ? void 0 : (_triggers_counterpart_id = triggers.counterpart_id) === null || _triggers_counterpart_id === void 0 ? void 0 : _triggers_counterpart_id.length)
    });
    const deleteMutation = api.approvalPolicies.deleteApprovalPoliciesId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$U(function*() {
                yield Promise.all([
                    api.approvalPolicies.getApprovalPolicies.invalidateQueries(queryClient),
                    api.approvalPolicies.getApprovalPoliciesId.invalidateQueries({
                        parameters: {
                            path: {
                                approval_policy_id: approvalPolicy.id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "OATosa"
                }));
            })()
    });
    const triggersList = Object.keys(triggers).map((triggerKey)=>{
        const triggerLabel = getTriggerLabel(triggerKey);
        let triggerValue;
        switch(triggerKey){
            case 'was_created_by_user_id':
                if (Array.isArray(triggers[triggerKey])) {
                    triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: triggers[triggerKey].map((userId)=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: userId
                            }, userId))
                    });
                }
                break;
            case 'tags':
                triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                    direction: "row",
                    gap: 1,
                    sx: {
                        flexWrap: 'wrap'
                    },
                    children: tagsForTriggers === null || tagsForTriggers === void 0 ? void 0 : tagsForTriggers.data.map((tag)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                            label: tag.name
                        }, tag.id))
                });
                break;
            case 'counterpart_id':
                triggerValue = /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                    direction: "row",
                    gap: 1,
                    sx: {
                        flexWrap: 'wrap'
                    },
                    children: counterpartsForTriggers === null || counterpartsForTriggers === void 0 ? void 0 : counterpartsForTriggers.data.map((counterpart)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                            label: getCounterpartName(counterpart)
                        }, counterpart.id))
                });
                break;
            case 'amount':
                var _triggers_amount, _triggers_amount1;
                var _triggers_amount_value, _triggers_amount_currency;
                triggerValue = /*#__PURE__*/ jsxRuntime.jsx("p", {
                    children: getAmountLabel((_triggers_amount_value = (_triggers_amount = triggers.amount) === null || _triggers_amount === void 0 ? void 0 : _triggers_amount.value) !== null && _triggers_amount_value !== void 0 ? _triggers_amount_value : [], (_triggers_amount_currency = (_triggers_amount1 = triggers.amount) === null || _triggers_amount1 === void 0 ? void 0 : _triggers_amount1.currency) !== null && _triggers_amount_currency !== void 0 ? _triggers_amount_currency : 'EUR')
                });
                break;
            default:
                triggerValue = triggerKey;
                break;
        }
        return {
            label: triggerLabel,
            value: triggerValue
        };
    });
    const approvalFlows = rules && ((_Object_keys = Object.keys(rules)) === null || _Object_keys === void 0 ? void 0 : _Object_keys.map((ruleKey)=>{
        if (!rules[ruleKey]) return null;
        switch(ruleKey){
            case 'single_user':
                return {
                    label: getRuleLabel(ruleKey),
                    value: /*#__PURE__*/ jsxRuntime.jsx(User, {
                        userId: rules[ruleKey].userId
                    })
                };
            case 'users_from_list':
                var _rules_ruleKey_userIds;
                return {
                    label: getRuleLabel(ruleKey, rules[ruleKey].count),
                    value: /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: (_rules_ruleKey_userIds = rules[ruleKey].userIds) === null || _rules_ruleKey_userIds === void 0 ? void 0 : _rules_ruleKey_userIds.map((userId)=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: userId
                            }, userId))
                    })
                };
            case 'roles_from_list':
                var _rules_ruleKey_roleIds;
                return {
                    label: getRuleLabel(ruleKey),
                    value: /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "row",
                        gap: 1,
                        sx: {
                            flexWrap: 'wrap'
                        },
                        children: (_rules_ruleKey_roleIds = rules[ruleKey].roleIds) === null || _rules_ruleKey_roleIds === void 0 ? void 0 : _rules_ruleKey_roleIds.map((roleId)=>/*#__PURE__*/ jsxRuntime.jsx(Role, {
                                roleId: roleId,
                                quoted: true
                            }, roleId))
                    })
                };
            case 'approval_chain':
                var _rules_ruleKey_chainUserIds;
                return {
                    label: getRuleLabel(ruleKey),
                    value: /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        spacing: 0.5,
                        children: (_rules_ruleKey_chainUserIds = rules[ruleKey].chainUserIds) === null || _rules_ruleKey_chainUserIds === void 0 ? void 0 : _rules_ruleKey_chainUserIds.map((userId)=>{
                            if (!userId) return null;
                            return /*#__PURE__*/ jsxRuntime.jsx(User, {
                                userId: userId
                            }, userId);
                        })
                    })
                };
        }
    }));
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                title: approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.name,
                closeButtonTooltip: i18n._({
                    id: "yFUhHz"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h5",
                        mt: 2,
                        mb: 1,
                        children: i18n._({
                            id: "Nu4oKW"
                        })
                    }),
                    (approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.description) && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: approvalPolicy.description
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h5",
                        mt: 4,
                        mb: 1,
                        children: i18n._({
                            id: "0CuAor"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        mb: 1,
                        children: /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
                            id: "INKhSX",
                            components: {
                                0: /*#__PURE__*/ jsxRuntime.jsx("strong", {})
                            }
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                        variant: "outlined",
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                children: i18n._({
                                                    id: "wpT1VN"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                children: i18n._({
                                                    id: "zelwwH"
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                    children: triggersList.length > 0 ? triggersList.map((trigger)=>/*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: trigger.label
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: trigger.value
                                                })
                                            ]
                                        }, trigger.label)) : /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                            colSpan: 2,
                                            children: i18n._({
                                                id: "6zS1ps"
                                            })
                                        })
                                    })
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h5",
                        mt: 4,
                        mb: 1,
                        children: i18n._({
                            id: "FhYMo6"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        mb: 1,
                        children: i18n._({
                            id: "aG28ZY"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                        variant: "outlined",
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                children: i18n._({
                                                    id: "VQApLJ"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                children: i18n._({
                                                    id: "yqcZCI"
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                    children: approvalFlows && approvalFlows.length > 0 ? approvalFlows.map((approvalFlow)=>/*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: approvalFlow === null || approvalFlow === void 0 ? void 0 : approvalFlow.label
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: approvalFlow === null || approvalFlow === void 0 ? void 0 : approvalFlow.value
                                                })
                                            ]
                                        }, approvalFlow === null || approvalFlow === void 0 ? void 0 : approvalFlow.label)) : /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                            colSpan: 2,
                                            children: i18n._({
                                                id: "HE5syK"
                                            })
                                        })
                                    })
                                })
                            ]
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "ePK91l"
                    }),
                    onClick: ()=>setIsEdit(true)
                },
                deleteButton: {
                    onClick: ()=>{
                        deleteMutation.mutate({
                            path: {
                                approval_policy_id: approvalPolicy.id
                            }
                        }, {
                            onSuccess: ()=>{
                                var _dialogContext_onClose;
                                return dialogContext === null || dialogContext === void 0 ? void 0 : (_dialogContext_onClose = dialogContext.onClose) === null || _dialogContext_onClose === void 0 ? void 0 : _dialogContext_onClose.call(dialogContext);
                            }
                        });
                    },
                    isLoading: deleteMutation.isPending
                }
            })
        ]
    });
};

/**
 * ApprovalPolicyDetails component
 *
 * This component renders the approval policy details form. It includes fields for the policy name, description, trigger, and script.
 * The `useApprovalPolicyDetails` hook is used to handle the creation of a new approval policy.
 *
 */ const ApprovalPolicyDetails = ({ id, onCreated, onUpdated })=>{
    const [isEdit, setIsEdit] = React.useState(false);
    const { data: approvalPolicy, isLoading } = useApprovalPolicyById(id);
    if (id && isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isEdit && approvalPolicy) {
        // READ
        return /*#__PURE__*/ jsxRuntime.jsx(ApprovalPolicyView, {
            approvalPolicy: approvalPolicy,
            setIsEdit: setIsEdit
        });
    }
    if (isEdit && approvalPolicy) {
        // UPDATE
        return /*#__PURE__*/ jsxRuntime.jsx(ApprovalPolicyForm, {
            approvalPolicy: approvalPolicy,
            setIsEdit: setIsEdit,
            onUpdated: onUpdated
        });
    }
    // CREATE by default
    return /*#__PURE__*/ jsxRuntime.jsx(ApprovalPolicyForm, {
        setIsEdit: setIsEdit,
        onCreated: onCreated
    });
};

function _define_property$2k(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2i(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2k(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$C(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$C(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$C(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UListUiAlt = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$C(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2i({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M3.5,6a1,1,0,1,0,1,1A1,1,0,0,0,3.5,6Zm4,2h14a1,1,0,0,0,0-2H7.5a1,1,0,0,0,0,2Zm0,3a1,1,0,1,0,1,1A1,1,0,0,0,7.5,11Zm4,5a1,1,0,1,0,1,1A1,1,0,0,0,11.5,16Zm10-5h-10a1,1,0,0,0,0,2h10a1,1,0,0,0,0-2Zm0,5h-6a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Z'
    }));
};

function _define_property$2j(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2h(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2j(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$B(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$B(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$B(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UUserCircle = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$B(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2h({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M12,2A10,10,0,0,0,4.65,18.76h0a10,10,0,0,0,14.7,0h0A10,10,0,0,0,12,2Zm0,18a8,8,0,0,1-5.55-2.25,6,6,0,0,1,11.1,0A8,8,0,0,1,12,20ZM10,10a2,2,0,1,1,2,2A2,2,0,0,1,10,10Zm8.91,6A8,8,0,0,0,15,12.62a4,4,0,1,0-6,0A8,8,0,0,0,5.09,16,7.92,7.92,0,0,1,4,12a8,8,0,0,1,16,0A7.92,7.92,0,0,1,18.91,16Z'
    }));
};

function _define_property$2i(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2g(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2i(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$A(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$A(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$A(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UUsersAlt = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$A(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2g({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z'
    }));
};

const ColumnList = /*#__PURE__*/ styled__default.default("ul", {
    target: "e1qwafx60"
})("margin:0;padding:0;list-style:none;li{display:flex;align-items:flex-start;margin-bottom:4px;svg:first-of-type{margin-right:16px;margin-top:2px;flex-shrink:0;}}");

const ApprovalPoliciesRules = ({ approvalPolicy })=>{
    const { rules, getRuleName } = useApprovalPolicyScript({
        approvalPolicy
    });
    if (!approvalPolicy) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx(ColumnList, {
        children: rules && Object.keys(rules).map((ruleKey)=>{
            switch(ruleKey){
                case 'single_user':
                    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(UUserCircle, {
                                width: 18
                            }),
                            getRuleName(ruleKey)
                        ]
                    }, ruleKey);
                case 'users_from_list':
                    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(UUsersAlt, {
                                width: 18
                            }),
                            getRuleName(ruleKey)
                        ]
                    }, ruleKey);
                case 'roles_from_list':
                    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(UUserSquare, {
                                width: 18
                            }),
                            getRuleName(ruleKey)
                        ]
                    }, ruleKey);
                case 'approval_chain':
                    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(UListUiAlt, {
                                width: 18
                            }),
                            getRuleName(ruleKey)
                        ]
                    }, ruleKey);
            }
        })
    });
};

const FILTER_TYPE_SEARCH$2 = 'search';
const FILTER_TYPE_CREATED_AT$2 = 'created_at';
const FILTER_TYPE_CREATED_BY = 'created_by';
const ROW_TO_STATUS_MUI_MAP$1 = {
    active: 'success',
    deleted: 'error',
    pending: 'warning'
};
const getRowToStatusTextMap$2 = (i18n)=>({
        active: i18n._({
            id: "F6pfE9"
        }),
        deleted: i18n._({
            id: "vGjmyl"
        }),
        pending: i18n._({
            id: "UbRKMZ"
        })
    });
const APPROVAL_STATUS_TO_MUI_ICON_MAP = {
    active: PaidOutlinedIcon__default.default,
    deleted: CancelIcon__default.default,
    pending: HourglassEmptyIcon__default.default
};

function _define_property$2h(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2f(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2h(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Displays the status of a Payable.
 */ const ApprovalStatusChip = /*#__PURE__*/ React.forwardRef((inProps, ref)=>{
    const { status, icon, size, variant } = styles$2.useThemeProps({
        props: inProps,
        name: 'MoniteApprovalStatusChip'
    });
    const { i18n } = react.useLingui();
    const Icon = APPROVAL_STATUS_TO_MUI_ICON_MAP[status];
    return /*#__PURE__*/ jsxRuntime.jsx(StyledChip$3, {
        className: "Monite-ApprovalStatusChip",
        ref: ref,
        color: ROW_TO_STATUS_MUI_MAP$1[status],
        icon: icon && Icon ? /*#__PURE__*/ jsxRuntime.jsx(Icon, {
            fontSize: "small"
        }) : /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Circle, {
            sx: {
                fontSize: '10px'
            }
        }),
        label: getRowToStatusTextMap$2(i18n)[status],
        size: size,
        status: status,
        variant: variant !== null && variant !== void 0 ? variant : 'filled'
    });
});
const StyledChip$3 = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, _object_spread$2f({
        ref: ref
    }, props))), {
    name: 'MoniteApprovalStatusChip',
    slot: 'root',
    shouldForwardProp: ()=>true
})({});

const APPROVAL_CALL_TYPES = {
    REQUEST_APPROVAL_BY_USERS: 'ApprovalRequests.request_approval_by_users',
    REQUEST_APPROVAL_BY_ROLES: 'ApprovalRequests.request_approval_by_roles'
};
const mapApprovalStatusToPayableStatus = (status)=>{
    switch(status){
        case 'approved':
            return 'waiting_to_be_paid';
        case 'rejected':
            return 'rejected';
        case 'canceled':
            return 'canceled';
        case 'waiting':
        default:
            return 'approve_in_progress';
    }
};
const findUserApprovalCall = (approvalCalls)=>approvalCalls.find((call)=>call.call === APPROVAL_CALL_TYPES.REQUEST_APPROVAL_BY_USERS);
const findRoleApprovalCall = (approvalCalls)=>approvalCalls.find((call)=>call.call === APPROVAL_CALL_TYPES.REQUEST_APPROVAL_BY_ROLES);
const filterRequestsByRoles = (requests, roleIds)=>{
    return requests.filter((request)=>{
        var _request_role_ids;
        return ((_request_role_ids = request.role_ids) === null || _request_role_ids === void 0 ? void 0 : _request_role_ids.length) > 0 && roleIds.some((roleId)=>request.role_ids.includes(roleId));
    });
};
const filterRequestsByUsers = (requests, userIds, includeAnyUser = false)=>{
    return requests.filter((request)=>{
        var _request_user_ids;
        if (!((_request_user_ids = request.user_ids) === null || _request_user_ids === void 0 ? void 0 : _request_user_ids.length)) return false;
        if (includeAnyUser) {
            return request.user_ids.some((userId)=>userIds.includes(userId));
        }
        return userIds.every((userId)=>request.user_ids.includes(userId));
    });
};
const getApprovalRuleLabel = (userApprovalCall, roleApprovalCall, i18n)=>{
    if (userApprovalCall === null || userApprovalCall === void 0 ? void 0 : userApprovalCall.params) {
        const { user_ids, required_approval_count } = userApprovalCall.params;
        if ((user_ids === null || user_ids === void 0 ? void 0 : user_ids.length) === 1) {
            return getSharedApprovalRuleLabel.singleUser(i18n);
        }
        return getUsersFromListLabel(i18n, required_approval_count);
    }
    if (roleApprovalCall === null || roleApprovalCall === void 0 ? void 0 : roleApprovalCall.params) {
        return getSharedApprovalRuleLabel.anyUserWithRole(i18n);
    }
    return '';
};
/**
 * Recursively extracts approval calls from nested structures
 * @param item - The nested approval structure item
 * @returns Array of approval calls
 */ const extractApprovalCalls = (item)=>{
    if (!item) return [];
    if (item.call && item.params) {
        return [
            item
        ];
    }
    if (Array.isArray(item.all)) {
        return item.all.flatMap(extractApprovalCalls);
    }
    if (item.if) {
        return extractApprovalCalls(item.if);
    }
    return [];
};
/**
 * Processes a nested approval structure to extract approval calls
 * @param items - Array of approval structure items
 * @returns Array of approval calls
 */ const processApprovalStructure = (items)=>{
    return items.flatMap(extractApprovalCalls);
};
/**
 * Extracts approval structure items from a script step
 * This utility consolidates the duplicated logic for processing script steps
 * @param scriptStep - The script step to process
 * @returns Array of approval structure items
 */ const extractStructureItemsFromScriptStep = (scriptStep)=>{
    const structureItems = [];
    if (scriptStep.all) {
        structureItems.push(...scriptStep.all);
    } else if (scriptStep.if) {
        const ifItem = scriptStep.if;
        if (ifItem.all) {
            structureItems.push(...ifItem.all);
        } else {
            structureItems.push(ifItem);
        }
    }
    return structureItems;
};
/**
 * Recursively extracts approval calls from nested structures for approval policies table
 * This utility handles the more generic case where items can be arrays or have different nesting patterns
 * @param item - The nested approval structure item (can be array or object)
 * @returns Array of approval calls
 */ const extractApprovalCallsForTable = (item)=>{
    if (!item) return [];
    if (item.call && item.params) {
        return [
            item
        ];
    }
    if (Array.isArray(item.all)) {
        return item.all.flatMap(extractApprovalCallsForTable);
    }
    if (Array.isArray(item)) {
        return item.flatMap(extractApprovalCallsForTable);
    }
    return [];
};
/**
 * Calculates integral status for a collection of approval requests
 */ const calculateIntegralStatus = (requests)=>{
    if (requests.length === 0) return 'waiting';
    const hasWaiting = requests.some((req)=>req.status === 'waiting');
    if (hasWaiting) return 'waiting';
    const allApproved = requests.every((req)=>req.status === 'approved');
    if (allApproved) return 'approved';
    const hasRejected = requests.some((req)=>req.status === 'rejected');
    if (hasRejected) return 'rejected';
    return 'waiting';
};
/**
 * Creates base EnhancedApprovalStep properties from ProcessedApprovalStep
 */ const createBaseApprovalStep = (processedStep, stepNumber, type)=>({
        stepNumber,
        type,
        assignee: undefined,
        assignees: processedStep.assignees,
        roleIds: processedStep.roleIds,
        status: processedStep.stepStatus,
        payableStatus: mapApprovalStatusToPayableStatus(processedStep.stepStatus),
        isRoleBased: processedStep.isRoleBased,
        actualAssignees: processedStep.actualAssignees,
        hasActiveRequests: processedStep.relatedRequests.length > 0,
        requestIds: processedStep.relatedRequests.map((req)=>req.id),
        approvalRequestId: processedStep.approvalRequestId,
        approvedBy: processedStep.approvedBy,
        objectId: processedStep.objectId,
        rejectedBy: processedStep.rejectedBy,
        requiredApprovalCount: processedStep.requiredApprovalCount
    });
/**
 * Creates EnhancedApprovalStep for chain approval scenario
 */ const createChainApprovalStep = (allChainUserIds, allChainRequests, stepNumber, typeLabel)=>{
    var _allChainRequests_, _allChainRequests_1, _allChainRequests_find;
    const integralStatus = calculateIntegralStatus(allChainRequests);
    return {
        stepNumber,
        type: typeLabel,
        assignee: undefined,
        assignees: allChainUserIds,
        roleIds: [],
        status: integralStatus,
        payableStatus: mapApprovalStatusToPayableStatus(integralStatus),
        isRoleBased: false,
        actualAssignees: allChainUserIds,
        hasActiveRequests: allChainRequests.length > 0,
        requestIds: allChainRequests.map((req)=>req.id),
        approvalRequestId: (_allChainRequests_ = allChainRequests[0]) === null || _allChainRequests_ === void 0 ? void 0 : _allChainRequests_.id,
        approvedBy: allChainRequests.flatMap((req)=>req.approved_by || []),
        objectId: (_allChainRequests_1 = allChainRequests[0]) === null || _allChainRequests_1 === void 0 ? void 0 : _allChainRequests_1.object_id,
        rejectedBy: (_allChainRequests_find = allChainRequests.find((req)=>req.rejected_by)) === null || _allChainRequests_find === void 0 ? void 0 : _allChainRequests_find.rejected_by,
        requiredApprovalCount: allChainRequests.reduce((sum, req)=>sum + req.required_approval_count, 0)
    };
};
/**
 * Processes chain approval calls (sequential user approvals)
 */ const processChainApprovalCalls = (userApprovalCalls, requests)=>{
    const allChainUserIds = userApprovalCalls.flatMap((call)=>{
        var _call_params;
        return ((_call_params = call.params) === null || _call_params === void 0 ? void 0 : _call_params.user_ids) || [];
    });
    const allChainRequests = requests.filter((req)=>{
        var _req_user_ids;
        return ((_req_user_ids = req.user_ids) === null || _req_user_ids === void 0 ? void 0 : _req_user_ids.length) && allChainUserIds.some((userId)=>req.user_ids.includes(userId));
    });
    return {
        allChainUserIds,
        allChainRequests
    };
};
/**
 * Extracts items to process from a script step
 */ const extractItemsFromScriptStep = (scriptStep)=>{
    const itemsToProcess = [];
    if (scriptStep.all) {
        itemsToProcess.push(...scriptStep.all);
    } else if (scriptStep.if) {
        const ifItem = scriptStep.if;
        if (ifItem.all) {
            itemsToProcess.push(...ifItem.all);
        } else {
            itemsToProcess.push(ifItem);
        }
    }
    return itemsToProcess;
};
const resolveStepForCall = (call, requests)=>{
    var _userApprovalCall_params, _roleApprovalCall_params, _call_params, _call_params1;
    const userApprovalCall = call.call === APPROVAL_CALL_TYPES.REQUEST_APPROVAL_BY_USERS ? call : undefined;
    const roleApprovalCall = call.call === APPROVAL_CALL_TYPES.REQUEST_APPROVAL_BY_ROLES ? call : undefined;
    let assignees = [];
    let roleIds = [];
    let actualAssignees = [];
    let relatedRequests = [];
    if (userApprovalCall === null || userApprovalCall === void 0 ? void 0 : (_userApprovalCall_params = userApprovalCall.params) === null || _userApprovalCall_params === void 0 ? void 0 : _userApprovalCall_params.user_ids) {
        assignees = userApprovalCall.params.user_ids;
    }
    if (roleApprovalCall === null || roleApprovalCall === void 0 ? void 0 : (_roleApprovalCall_params = roleApprovalCall.params) === null || _roleApprovalCall_params === void 0 ? void 0 : _roleApprovalCall_params.role_ids) {
        roleIds = roleApprovalCall.params.role_ids;
    }
    const isRoleBased = roleIds.length > 0 && assignees.length === 0;
    if (isRoleBased) {
        relatedRequests = filterRequestsByRoles(requests, roleIds);
    } else {
        relatedRequests = filterRequestsByUsers(requests, assignees, true);
    }
    if (assignees.length === 0 && !isRoleBased) {
        const userIds = relatedRequests.flatMap((req)=>req.user_ids || []);
        actualAssignees = [
            ...new Set(userIds)
        ];
    } else {
        actualAssignees = assignees;
    }
    const stepStatus = relatedRequests.length ? relatedRequests[0].status : 'waiting';
    const firstRequest = relatedRequests.find((req)=>req.status !== 'waiting');
    const approvedBy = relatedRequests.flatMap((req)=>req.approved_by || []);
    const uniqueApprovedBy = [
        ...new Set(approvedBy)
    ];
    return {
        assignees,
        roleIds,
        actualAssignees,
        relatedRequests,
        isRoleBased,
        stepStatus,
        approvalRequestId: firstRequest === null || firstRequest === void 0 ? void 0 : firstRequest.id,
        approvedBy: uniqueApprovedBy.length > 0 ? uniqueApprovedBy : undefined,
        objectId: (firstRequest === null || firstRequest === void 0 ? void 0 : firstRequest.object_id) || ((_call_params = call.params) === null || _call_params === void 0 ? void 0 : _call_params.object_id),
        rejectedBy: firstRequest === null || firstRequest === void 0 ? void 0 : firstRequest.rejected_by,
        requiredApprovalCount: ((_call_params1 = call.params) === null || _call_params1 === void 0 ? void 0 : _call_params1.required_approval_count) || (firstRequest === null || firstRequest === void 0 ? void 0 : firstRequest.required_approval_count) || 1
    };
};

function _define_property$2g(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2e(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2g(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$z(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$z(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$z(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UBuilding = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$z(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2e({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M14,8h1a1,1,0,0,0,0-2H14a1,1,0,0,0,0,2Zm0,4h1a1,1,0,0,0,0-2H14a1,1,0,0,0,0,2ZM9,8h1a1,1,0,0,0,0-2H9A1,1,0,0,0,9,8Zm0,4h1a1,1,0,0,0,0-2H9a1,1,0,0,0,0,2Zm12,8H20V3a1,1,0,0,0-1-1H5A1,1,0,0,0,4,3V20H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Zm-8,0H11V16h2Zm5,0H15V15a1,1,0,0,0-1-1H10a1,1,0,0,0-1,1v5H6V4H18Z'
    }));
};

function _define_property$2f(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2d(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2f(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$y(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$y(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$y(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const ULabel = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$y(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2d({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M21.71,11.29l-5-5A1,1,0,0,0,16,6H5A3,3,0,0,0,2,9v6a3,3,0,0,0,3,3H16a1,1,0,0,0,.71-.29l5-5A1,1,0,0,0,21.71,11.29ZM15.59,16H5a1,1,0,0,1-1-1V9A1,1,0,0,1,5,8H15.59l4,4Z'
    }));
};

function _define_property$2e(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2c(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2e(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$x(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$x(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$x(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UMoneyBill = (_param)=>{
    var { color = 'currentColor', size } = _param, otherProps = _object_without_properties$x(_param, [
        "color",
        "size"
    ]);
    return /*#__PURE__*/ React.createElement('svg', _object_spread$2c({
        xmlns: 'http://www.w3.org/2000/svg',
        width: size,
        height: size,
        viewBox: '0 0 24 24',
        fill: color
    }, otherProps), /*#__PURE__*/ React.createElement('path', {
        d: 'M6,11a1,1,0,1,0,1,1A1,1,0,0,0,6,11Zm12,0a1,1,0,1,0,1,1A1,1,0,0,0,18,11Zm2-6H4A3,3,0,0,0,1,8v8a3,3,0,0,0,3,3H20a3,3,0,0,0,3-3V8A3,3,0,0,0,20,5Zm1,11a1,1,0,0,1-1,1H4a1,1,0,0,1-1-1V8A1,1,0,0,1,4,7H20a1,1,0,0,1,1,1ZM12,9a3,3,0,1,0,3,3A3,3,0,0,0,12,9Zm0,4a1,1,0,1,1,1-1A1,1,0,0,1,12,13Z'
    }));
};

const ApprovalPoliciesTriggers = ({ approvalPolicy })=>{
    const { triggers, getTriggerName } = useApprovalPolicyTrigger({
        approvalPolicy
    });
    if (!approvalPolicy) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx(ColumnList, {
        children: Object.keys(triggers).map((triggerKey)=>{
            switch(triggerKey){
                case 'amount':
                    {
                        return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(UMoneyBill, {
                                    width: 18
                                }),
                                getTriggerName(triggerKey)
                            ]
                        }, triggerKey);
                    }
                case 'was_created_by_user_id':
                    {
                        return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(UUserCircle, {
                                    width: 18
                                }),
                                getTriggerName(triggerKey)
                            ]
                        }, triggerKey);
                    }
                case 'counterpart_id':
                    {
                        return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(UBuilding, {
                                    width: 18
                                }),
                                getTriggerName(triggerKey)
                            ]
                        }, triggerKey);
                    }
                case 'tags':
                    {
                        return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(ULabel, {
                                    width: 18
                                }),
                                getTriggerName(triggerKey)
                            ]
                        }, triggerKey);
                    }
                default:
                    return null;
            }
        })
    });
};

function _define_property$2d(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2b(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2d(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1t(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1t(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1t(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AutocompleteCreatedBy = ({ onChange: onChangeFilter, className })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { root } = useRootElements();
    const [open, setOpen] = React.useState(false);
    const [value, setValue] = React.useState(null);
    const [inputValue, setInputValue] = React.useState('');
    const { data: users, isLoading: isUsersLoading, refetch } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            name__istartswith: inputValue || undefined
        }
    }, {
        enabled: open
    });
    return /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, {
        autoComplete: true,
        includeInputInList: true,
        filterSelectedOptions: true,
        value: value,
        noOptionsText: i18n._({
            id: "qpC74J"
        }),
        slotProps: {
            popper: {
                container: root
            }
        },
        open: open,
        onOpen: ()=>{
            setOpen(true);
        },
        onClose: ()=>{
            setOpen(false);
        },
        loading: isUsersLoading,
        options: (users === null || users === void 0 ? void 0 : users.data) || [],
        getOptionLabel: (option)=>{
            var _option_first_name, _option_last_name;
            return `${(_option_first_name = option.first_name) !== null && _option_first_name !== void 0 ? _option_first_name : ''} ${(_option_last_name = option.last_name) !== null && _option_last_name !== void 0 ? _option_last_name : ''}`.trim();
        },
        isOptionEqualToValue: (option, value)=>option.id === value.id,
        filterOptions: (_)=>_,
        onInputChange: (_, newInputValue)=>{
            setInputValue(newInputValue);
        },
        onChange: (_, newValue)=>{
            setValue(newValue);
            onChangeFilter(newValue === null || newValue === void 0 ? void 0 : newValue.id);
            refetch();
        },
        className: classNames('Monite-ApprovalAddedByFilter-Container', 'Monite-FilterControl', className),
        sx: {
            '&.MuiAutocomplete-root': {
                display: 'flex',
                alignItems: 'center'
            }
        },
        renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1t(_object_spread$2b({}, params), {
                variant: "standard",
                placeholder: i18n._({
                    id: "NxahIk"
                }),
                className: "Monite-ApprovalAddedByFilter Monite-FilterControl",
                InputProps: _object_spread_props$1t(_object_spread$2b({}, params.InputProps), {
                    endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            isUsersLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                color: "inherit",
                                size: 20
                            }) : null,
                            params.InputProps.endAdornment
                        ]
                    })
                })
            }))
    });
};

const Filters$3 = ({ onChangeFilter, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const className = 'Monite-ApprovalPoliciesFilters';
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        sx: sx,
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "A1taO8"
            }),
            onChange: (search)=>{
                onChangeFilter(FILTER_TYPE_SEARCH$2, search);
            }
        }),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(AutocompleteCreatedBy, {
                onChange: (id)=>onChangeFilter(FILTER_TYPE_CREATED_BY, id || null)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, {
                className: "Monite-ApprovalPolicyCreateAtFilter Monite-FilterControl Monite-DateFilterControl",
                onChange: (value, error)=>{
                    if (error.validationError) {
                        return;
                    }
                    onChangeFilter(FILTER_TYPE_CREATED_AT$2, value);
                },
                slotProps: {
                    textField: {
                        variant: 'standard',
                        placeholder: i18n._({
                            id: "YeUQpx"
                        })
                    },
                    popper: {
                        container: root
                    },
                    dialog: {
                        container: root
                    },
                    actionBar: {
                        actions: [
                            'clear',
                            'today'
                        ]
                    }
                },
                views: [
                    'year',
                    'month',
                    'day'
                ]
            })
        ]
    });
};

function _define_property$2c(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2a(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2c(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1s(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1s(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1s(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * ApprovalPoliciesTable component
 *
 * This component renders a table of approval policies. It includes pagination and filtering functionality.
 */ const ApprovalPoliciesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesTableBase, _object_spread$2a({}, props))
    });
const ApprovalPoliciesTableBase = ({ onChangeFilter: onChangeFilterCallback, onRowClick, onCreateClick })=>{
    const { i18n } = react.useLingui();
    const { api, locale, componentSettings } = useMoniteContext();
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.approvalPolicies.pageSizeOptions[0]);
    const [currentFilters, setCurrentFilters] = React.useState({});
    var _currentFilters_FILTER_TYPE_SEARCH, _currentFilters_FILTER_TYPE_CREATED_BY;
    const { data: approvalPolicies, isLoading, isError, refetch } = api.approvalPolicies.getApprovalPolicies.useQuery({
        query: {
            limit: pageSize,
            name__ncontains: (_currentFilters_FILTER_TYPE_SEARCH = currentFilters[FILTER_TYPE_SEARCH$2]) !== null && _currentFilters_FILTER_TYPE_SEARCH !== void 0 ? _currentFilters_FILTER_TYPE_SEARCH : undefined,
            created_by: (_currentFilters_FILTER_TYPE_CREATED_BY = currentFilters[FILTER_TYPE_CREATED_BY]) !== null && _currentFilters_FILTER_TYPE_CREATED_BY !== void 0 ? _currentFilters_FILTER_TYPE_CREATED_BY : undefined,
            pagination_token: currentPaginationToken !== null && currentPaginationToken !== void 0 ? currentPaginationToken : undefined,
            created_at__gte: currentFilters[FILTER_TYPE_CREATED_AT$2] ? dateFns.formatISO(currentFilters[FILTER_TYPE_CREATED_AT$2]) : undefined,
            created_at__lte: currentFilters[FILTER_TYPE_CREATED_AT$2] ? dateFns.formatISO(dateFns.addDays(currentFilters[FILTER_TYPE_CREATED_AT$2], 1)) : undefined
        }
    });
    React.useEffect(()=>{
        if (currentPaginationToken && (approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.data.length) === 0) {
            setCurrentPaginationToken(null);
        }
    }, [
        currentPaginationToken,
        approvalPolicies
    ]);
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'name',
                headerName: i18n._({
                    id: "7gmeVf"
                }),
                sortable: false,
                flex: 1
            },
            {
                field: 'triggers',
                headerName: i18n._({
                    id: "0CuAor"
                }),
                sortable: false,
                flex: 1,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesTriggers, {
                        approvalPolicy: params.row
                    })
            },
            {
                field: 'approvals',
                headerName: i18n._({
                    id: "yRsSBw"
                }),
                sortable: false,
                flex: 1,
                renderCell: (params)=>{
                    var _params_row_script__if, _params_row_script_, _params_row_script;
                    const script = (_params_row_script = params.row.script) === null || _params_row_script === void 0 ? void 0 : (_params_row_script_ = _params_row_script[0]) === null || _params_row_script_ === void 0 ? void 0 : (_params_row_script__if = _params_row_script_.if) === null || _params_row_script__if === void 0 ? void 0 : _params_row_script__if.all;
                    if (!script) {
                        return /*#__PURE__*/ jsxRuntime.jsxs("span", {
                            children: [
                                i18n._({
                                    id: "fj5byd"
                                }),
                                " ",
                                i18n._({
                                    id: "BmQaMa"
                                })
                            ]
                        });
                    }
                    const allApprovalCalls = extractApprovalCallsForTable(script);
                    const totalRequiredApprovals = allApprovalCalls.reduce((sum, call)=>{
                        var _call_params;
                        return sum + (((_call_params = call.params) === null || _call_params === void 0 ? void 0 : _call_params.required_approval_count) || 0);
                    }, 0);
                    const requiredApprovalCount = totalRequiredApprovals || i18n._({
                        id: "fj5byd"
                    });
                    return /*#__PURE__*/ jsxRuntime.jsxs("span", {
                        children: [
                            requiredApprovalCount,
                            " ",
                            i18n._({
                                id: "BmQaMa"
                            })
                        ]
                    });
                }
            },
            {
                field: 'rule',
                headerName: i18n._({
                    id: "ylQd2j"
                }),
                sortable: false,
                flex: 1,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesRules, {
                        approvalPolicy: params.row
                    })
            },
            {
                field: 'status',
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                sortable: false,
                flex: 0.7,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(ApprovalStatusChip, {
                        status: params.row.status
                    })
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "YeUQpx"
                }),
                sortable: false,
                flex: 0.7,
                valueFormatter: (value)=>i18n.date(value, locale.dateFormat)
            },
            {
                field: 'created_by',
                headerName: i18n._({
                    id: "NCIYDF"
                }),
                sortable: false,
                flex: 0.8,
                renderCell: ({ value })=>/*#__PURE__*/ jsxRuntime.jsx(User, {
                        userId: value
                    })
            }
        ];
    }, [
        locale.dateFormat,
        i18n
    ]);
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        setCurrentFilters((prevFilters)=>_object_spread_props$1s(_object_spread$2a({}, prevFilters), {
                [field]: value === 'all' ? null : value
            }));
        onChangeFilterCallback && onChangeFilterCallback({
            field,
            value
        });
    };
    const isFiltering = Object.keys(currentFilters).some((key)=>currentFilters[key] !== null && currentFilters[key] !== undefined);
    const isSearching = !!currentFilters[FILTER_TYPE_SEARCH$2];
    if (!isLoading && (approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "QKgwS0"
            }),
            descriptionLine1: i18n._({
                id: "0NT6WY"
            }),
            descriptionLine2: i18n._({
                id: "SokYM5"
            }),
            actionButtonLabel: i18n._({
                id: "hYgDIe"
            }),
            actionOptions: [
                i18n._({
                    id: "0Vjr5J"
                })
            ],
            onAction: ()=>{
                onCreateClick === null || onCreateClick === void 0 ? void 0 : onCreateClick();
            },
            type: "no-data"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: ScopedCssBaselineContainerClassName,
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(Filters$3, {
                onChangeFilter: onChangeFilter,
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                disableColumnFilter: true,
                rowSelection: false,
                sx: {
                    '&.MuiDataGrid-root--densityCompact .MuiDataGrid-cell': {
                        py: '8px'
                    },
                    '&.MuiDataGrid-root--densityStandard .MuiDataGrid-cell': {
                        py: '15px'
                    },
                    '&.MuiDataGrid-root--densityComfortable .MuiDataGrid-cell': {
                        py: '22px'
                    }
                },
                loading: isLoading,
                getRowHeight: ()=>'auto',
                columns: columns,
                rows: (approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.data) || [],
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row);
                    }
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.approvalPolicies.pageSizeOptions,
                            nextPage: approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.next_pagination_token,
                            prevPage: approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.prev_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (approvalPolicies === null || approvalPolicies === void 0 ? void 0 : approvalPolicies.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            onCreate: ()=>onCreateClick === null || onCreateClick === void 0 ? void 0 : onCreateClick(),
                            refetch: refetch,
                            entityName: i18n._({
                                id: "8ows4t"
                            }),
                            actionButtonLabel: i18n._({
                                id: "hYgDIe"
                            }),
                            type: "no-data"
                        })
                }
            })
        ]
    });
};

/**
 * ApprovalPolicies component
 * TODO: Check if this component is still needed
 *
 * This component renders the approval policies page. It includes a table of approval policies, a dialog for creating new approval policies,
 * and a header with a button for opening the create dialog.
 */ const ApprovalPolicies = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesBase, {})
    });
const ApprovalPoliciesBase = ()=>{
    const { i18n } = react.useLingui();
    const [selectedApprovalPolicyId, setSelectedApprovalPolicyId] = React.useState(undefined);
    const [isCreateDialogOpened, setIsCreateDialogOpened] = React.useState(false);
    const onRowClick = React.useCallback((approvalPolicy)=>{
        setSelectedApprovalPolicyId(approvalPolicy.id);
        setIsCreateDialogOpened(true);
    }, []);
    const onCreateClick = ()=>{
        setIsCreateDialogOpened(true);
        setSelectedApprovalPolicyId(undefined);
    };
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'approval_policy',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'approval_policy',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "8ows4t"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        id: "create",
                        variant: "contained",
                        disabled: !isCreateAllowed,
                        onClick: onCreateClick,
                        children: i18n._({
                            id: "hYgDIe"
                        })
                    })
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesTable, {
                onRowClick: onRowClick,
                onCreateClick: onCreateClick
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: isCreateDialogOpened,
                alignDialog: "right",
                onClose: ()=>setIsCreateDialogOpened(false),
                children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalPolicyDetails, {
                    id: selectedApprovalPolicyId,
                    onCreated: (id)=>setSelectedApprovalPolicyId(id)
                })
            })
        ]
    });
};

function _define_property$2b(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$29(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2b(target, key, source[key]);
        });
    }
    return target;
}
const useUserRoleMutations = ({ onCreated, onUpdated, onDeleted })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const roleCreateMutation = api.roles.postRoles.useMutation({}, {
        onSuccess: (role)=>Promise.all([
                api.roles.getRoles.invalidateQueries(queryClient),
                api.roles.getRolesId.invalidateQueries({
                    parameters: {
                        path: {
                            role_id: role.id
                        }
                    }
                }, queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const roleUpdateMutation = api.roles.patchRolesId.useMutation(undefined, {
        onSuccess: (role)=>Promise.all([
                api.roles.getRoles.invalidateQueries(queryClient),
                api.roles.getRolesId.invalidateQueries({
                    parameters: {
                        path: {
                            role_id: role.id
                        }
                    }
                }, queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const roleDeleteMutation = api.roles.deleteRolesId.useMutation(undefined, {
        onSuccess: (_, variables)=>{
            const roleId = variables === null || variables === void 0 ? void 0 : variables.path.role_id;
            Promise.all([
                api.roles.getRoles.invalidateQueries(queryClient),
                api.roles.getRolesId.invalidateQueries({
                    parameters: {
                        path: {
                            role_id: roleId
                        }
                    }
                }, queryClient),
                api.entityUsers.getEntityUsers.invalidateQueries({
                    parameters: {
                        query: {
                            role_id: roleId
                        }
                    }
                }, queryClient)
            ]);
            reactHotToast.toast.success(i18n._({
                id: "qh34x/"
            }));
        },
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const createRole = (role)=>{
        roleCreateMutation.mutate(_object_spread$29({}, role), {
            onSuccess: (role)=>{
                reactHotToast.toast.success(i18n._({
                    id: "pkEgEu",
                    values: {
                        0: role.name
                    }
                }));
                onCreated === null || onCreated === void 0 ? void 0 : onCreated(role);
            }
        });
    };
    const updateRole = (roleId, req)=>{
        roleUpdateMutation.mutate({
            path: {
                role_id: roleId
            },
            body: req
        }, {
            onSuccess: (role)=>{
                reactHotToast.toast.success(i18n._({
                    id: "+Bo+ZG",
                    values: {
                        0: role.name
                    }
                }));
                onUpdated === null || onUpdated === void 0 ? void 0 : onUpdated(role);
            }
        });
    };
    const deleteRole = (roleId)=>{
        roleDeleteMutation.mutate({
            path: {
                role_id: roleId
            }
        }, {
            onSuccess: ()=>{
                onDeleted === null || onDeleted === void 0 ? void 0 : onDeleted();
            }
        });
    };
    return {
        createRole,
        updateRole,
        deleteRole,
        isCreating: roleCreateMutation.isPending,
        isUpdating: roleUpdateMutation.isPending,
        isDeleting: roleDeleteMutation.isPending
    };
};
const useUserRoleQuery = ({ id })=>{
    const { api } = useMoniteContext();
    const { isLoading: isLoadingRole, isPending: isPendingRole, data: roleData, error: roleQueryError } = api.roles.getRolesId.useQuery({
        path: {
            role_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
    return {
        isLoadingRole,
        isPendingRole,
        roleData,
        roleQueryError
    };
};

const UserRoleDeleteDialog = ({ id, onDeleted })=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    const { data: role } = api.roles.getRolesId.useQuery({
        path: {
            role_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
    const { data: users } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            role_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
    const { deleteRole, isDeleting } = useUserRoleMutations({
        onDeleted
    });
    const handleClickDelete = ()=>{
        if (!!id && !(users && users.data && users.data.length > 0)) {
            deleteRole(id);
        }
    };
    if (!dialogContext) {
        return null;
    }
    const handleClose = ()=>{
        var _dialogContext_onClose;
        (_dialogContext_onClose = dialogContext.onClose) === null || _dialogContext_onClose === void 0 ? void 0 : _dialogContext_onClose.call(dialogContext);
    };
    if (users && users.data && users.data.length > 0) {
        return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                    variant: "h3",
                    id: "responsive-dialog-title",
                    children: i18n._({
                        id: "KG0z6j"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogActions, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        onClick: handleClose,
                        children: i18n._({
                            id: "yz7wBu"
                        })
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: true,
        title: i18n._({
            id: "KpnwJK",
            values: {
                0: role === null || role === void 0 ? void 0 : role.name
            }
        }),
        message: i18n._({
            id: "YDoRgd"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: handleClose,
        onConfirm: handleClickDelete,
        isLoading: isDeleting
    });
};

const StyledTableCell$1 = material.styled(material.TableCell)(({ theme })=>({
        [`&.${material.tableCellClasses.head}`]: {
            backgroundColor: theme.palette.grey[100],
            whiteSpace: 'nowrap'
        },
        [`&.${material.tableCellClasses.head}:first-of-type`]: {
            position: 'sticky',
            left: 0,
            zIndex: '9999',
            minWidth: '180px',
            borderRight: `1px solid ${theme.palette.grey[300]}`
        },
        [`&.${material.tableCellClasses.body}:first-of-type`]: {
            position: 'sticky',
            left: 0,
            zIndex: '9998',
            fontWeight: '600',
            minWidth: '180px',
            backgroundColor: theme.palette.background.default,
            borderRight: `1px solid ${theme.palette.grey[300]}`
        }
    }));

const FILTER_TYPE_SEARCH$1 = 'search';
const FILTER_TYPE_CREATED_AT$1 = 'created_at';
/**
 * An object that maps action names to their order of appearance in the UI.
 * This constant guarantees a consistent order of available actions in the UI.
 */ const actionOrder = {
    read: 1,
    create: 2,
    update: 3,
    delete: 4,
    submit: 5,
    approve: 6,
    pay: 7,
    create_from_mail: 8,
    cancel: 9,
    reopen: 10
};
const getPermissionToLabelMap = (i18n)=>({
        approval_policy: i18n._({
            id: "7/tK/O"
        }),
        approval_request: i18n._({
            id: "2KWxyn"
        }),
        comment: i18n._({
            id: "NBdIgR"
        }),
        counterpart_vat_id: i18n._({
            id: "hJmWGP"
        }),
        counterpart: i18n._({
            id: "np/2yA"
        }),
        entity_bank_account: i18n._({
            id: "S02NRM"
        }),
        entity_user: i18n._({
            id: "WdHDN+"
        }),
        entity_vat_ids: i18n._({
            id: "c8ZqBz"
        }),
        entity: i18n._({
            id: "E/8A4V"
        }),
        export: i18n._({
            id: "GS+Mus"
        }),
        mailbox: i18n._({
            id: "UCxRMK"
        }),
        onboarding: i18n._({
            id: "gukxZ5"
        }),
        overdue_reminder: i18n._({
            id: "KCm2is"
        }),
        payable: i18n._({
            id: "CzygNg"
        }),
        payables_purchase_order: i18n._({
            id: "YjtTAK"
        }),
        payment_record: i18n._({
            id: "X8xXZu"
        }),
        payment_reminder: i18n._({
            id: "PzmMD6"
        }),
        person: i18n._({
            id: "OZdaTZ"
        }),
        product: i18n._({
            id: "K47k8R"
        }),
        project: i18n._({
            id: "e0NrBM"
        }),
        receivable: i18n._({
            id: "Y7Tsdm"
        }),
        reconciliation: i18n._({
            id: "zu5gZ1"
        }),
        role: i18n._({
            id: "GDvlUT"
        }),
        tag: i18n._({
            id: "UL8A9w"
        }),
        todo_task_mute: i18n._({
            id: "PoCXbi"
        }),
        todo_task: i18n._({
            id: "T41dcM"
        }),
        transaction: i18n._({
            id: "ayxkVX"
        }),
        workflow: i18n._({
            id: "bLt/0J"
        })
    });
const ACTION_TO_LATTER_MAP = {
    read: 'R',
    create: 'C',
    update: 'U',
    delete: 'D',
    submit: 'S',
    approve: 'A',
    pay: 'P',
    create_from_mail: 'M',
    cancel: 'X',
    reopen: 'O'
};
const getActionToLabelMap = (i18n)=>({
        read: i18n._({
            id: "jpctdh"
        }),
        create: i18n._({
            id: "hYgDIe"
        }),
        update: i18n._({
            id: "ePK91l"
        }),
        delete: i18n._({
            id: "cnGeoo"
        }),
        submit: i18n._({
            id: "hQRttt"
        }),
        approve: i18n._({
            id: "Z7ZXbT"
        }),
        pay: i18n._({
            id: "4fL/V7"
        }),
        create_from_mail: i18n._({
            id: "j7ycPO"
        }),
        cancel: i18n._({
            id: "dEgA5A"
        }),
        reopen: i18n._({
            id: "M7SqjM"
        })
    });

function _define_property$2a(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$28(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2a(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1r(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1r(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1r(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$w(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$w(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$w(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFCheckbox = (_param)=>{
    var { control, name, label } = _param, other = _object_without_properties$w(_param, [
        "control",
        "name",
        "label"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: (_param)=>{
            var { field: { value }, fieldState: { error } } = _param, field = _object_without_properties$w(_param.field, [
                "value"
            ]);
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, _object_spread_props$1r(_object_spread$28({}, other, field), {
                        id: name,
                        label: label,
                        checked: value,
                        control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {})
                    })),
                    (error === null || error === void 0 ? void 0 : error.message) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                        severity: "error",
                        icon: false,
                        sx: {
                            marginTop: -2
                        },
                        children: error === null || error === void 0 ? void 0 : error.message
                    })
                ]
            });
        }
    });
};

/** View mode of the user role */ var UserRoleViewMode = /*#__PURE__*/ function(UserRoleViewMode) {
    /** Read mode - the user is only viewing the role details */ UserRoleViewMode["Read"] = "read";
    /** Mutate mode - the user is adding or editing the role */ UserRoleViewMode["Mutate"] = "mutate";
    return UserRoleViewMode;
}({});
const ActionPermissionCellCheckbox = ({ name, label })=>{
    const { control } = reactHookForm.useFormContext();
    return /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
        control: control,
        name: name,
        "aria-label": label
    });
};
const ActionPermissionCell = ({ view, rowIndex, rowName, action, actionPermissionValue })=>{
    if (typeof actionPermissionValue !== 'boolean') return null;
    if (view === "mutate") {
        return /*#__PURE__*/ jsxRuntime.jsx(ActionPermissionCellCheckbox, {
            name: `permissions[${rowIndex}][${action}]`,
            label: `${rowName} ${action}`
        });
    }
    if (actionPermissionValue) return /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CheckRounded, {
        color: "primary"
    });
    return /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CloseRounded, {
        color: "secondary"
    });
};
const UserRoleRow = ({ view, row, index: rowIndex, columns })=>{
    const { i18n } = react.useLingui();
    const actionPermissionsColumns = columns.filter((column)=>column.id !== 'name');
    return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(StyledTableCell$1, {
                children: row.name && getPermissionToLabelMap(i18n)[row.name]
            }),
            actionPermissionsColumns.map((column)=>{
                const action = column.id;
                const actionPermissionValue = row[action];
                return /*#__PURE__*/ jsxRuntime.jsx(StyledTableCell$1, {
                    align: "center",
                    children: /*#__PURE__*/ jsxRuntime.jsx(ActionPermissionCell, {
                        view: view,
                        rowIndex: rowIndex,
                        rowName: row.name,
                        action: action,
                        actionPermissionValue: actionPermissionValue
                    })
                }, column.id);
            })
        ]
    });
};

const UserCell$1 = ({ id })=>{
    const { data: user, isLoading } = useEntityUserById(id);
    return /*#__PURE__*/ jsxRuntime.jsx("span", {
        children: isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            animation: "wave",
            height: 10,
            width: "100%",
            sx: {
                minWidth: '4em'
            }
        }) : !!user && `${(user === null || user === void 0 ? void 0 : user.first_name) || ''} ${(user === null || user === void 0 ? void 0 : user.last_name) || ''}`
    });
};

const schema$3 = {
    create: 'create',
    read: 'read',
    update: 'update',
    delete: 'delete'
};
const ActionEnum = Object.values(schema$3);

const schema$2 = {
    create: 'create',
    read: 'read',
    update: 'update',
    delete: 'delete',
    pay: 'pay',
    approve: 'approve',
    cancel: 'cancel',
    submit: 'submit',
    create_from_mail: 'create_from_mail',
    reopen: 'reopen'
};
const PayableActionEnum = Object.values(schema$2);

const isCommonPermissionObjectType = (objectType)=>{
    return COMMON_PERMISSIONS_OBJECTS_TYPES.includes(objectType);
};
const isPayablePermissionObjectType = (objectType)=>{
    return PAYABLE_PERMISSIONS_OBJECTS_TYPES.includes(objectType);
};
const checkIfPermissionIsAllowed = (permission)=>{
    return permission === 'allowed' || permission === 'allowed_for_own';
};
const transformActionsToComponentFormat = (actions, enumType, permission)=>{
    const permissionsObject = actions === null || actions === void 0 ? void 0 : actions.map((action)=>{
        if (action.action_name && enumType.includes(action.action_name)) {
            const result = {
                key: action.action_name,
                value: checkIfPermissionIsAllowed(action.permission)
            };
            return {
                [result.key]: result.value
            };
        }
        return {};
    });
    return Object.assign({}, permission, ...permissionsObject);
};
const createInitialPermissionState = (objectType, actionEnum)=>{
    const permission = {};
    permission.name = objectType;
    actionEnum.forEach((action)=>{
        permission[action] = false;
    });
    return permission;
};
const transformPermissionsToComponentFormat = (objects)=>{
    return objects.map((object)=>{
        if (!object.object_type) return null;
        if (isCommonPermissionObjectType(object.object_type)) {
            const permission = {
                name: object.object_type
            };
            return transformActionsToComponentFormat(object.actions, ActionEnum, permission);
        }
        if (isPayablePermissionObjectType(object.object_type)) {
            const permission = {
                name: object.object_type
            };
            return transformActionsToComponentFormat(object.actions, PayableActionEnum, permission);
        }
        return null;
    }).filter((permission)=>permission !== null).sort((a, b)=>{
        if (a.name && b.name) {
            return a.name.localeCompare(b.name);
        }
        return 0;
    });
};
const createInitialPermissionsState = ()=>{
    return [
        ...PAYABLE_PERMISSIONS_OBJECTS_TYPES.map((objectType)=>createInitialPermissionState(objectType, PayableActionEnum)),
        ...COMMON_PERMISSIONS_OBJECTS_TYPES.map((objectType)=>createInitialPermissionState(objectType, ActionEnum))
    ].sort((a, b)=>{
        if (a.name && b.name) {
            return a.name.localeCompare(b.name);
        }
        return 0;
    });
};
const transformPermissionsToRequestFormat = (permissions)=>{
    return {
        objects: permissions.map((permission)=>{
            const objectType = permission.name;
            if (!objectType) return null;
            if (isCommonPermissionObjectType(objectType)) {
                return {
                    object_type: objectType,
                    actions: Object.entries(permission).filter(([key])=>key !== 'name').map(([action, permission])=>({
                            action_name: action,
                            permission: permission ? 'allowed' : 'not_allowed'
                        }))
                };
            }
            if (isPayablePermissionObjectType(objectType)) {
                return {
                    object_type: objectType,
                    actions: Object.entries(permission).filter(([key])=>key !== 'name').map(([action, permission])=>({
                            action_name: action,
                            permission: permission ? 'allowed' : 'not_allowed'
                        }))
                };
            }
        }).filter((value)=>value !== null && value !== undefined)
    };
};

const StyledDialogContainer = material.styled(material.DialogContent)`
  display: flex;
  flex-direction: column;
`;
const StyledTableTitle = material.styled(material.Typography)`
  display: flex;
  justify-content: space-between;
  align-items: center;
`;
const StyledTableContainer$1 = material.styled(material.TableContainer)`
  min-height: 300px;
`;
const StyledTableHead$1 = material.styled(material.TableHead)(({ theme })=>({
        background: theme.palette.grey[300]
    }));
const UserRoleDetailsDialog = ({ id, onClickEditRole, onClickDeleteRole })=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isUpdateAllowed } = useIsActionAllowed({
        method: 'role',
        action: 'update',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isDeleteAllowed } = useIsActionAllowed({
        method: 'role',
        action: 'delete',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { isLoadingRole, isPendingRole, roleData, roleQueryError } = useUserRoleQuery({
        id
    });
    const { isLoading: isLoadingUsers, isPending: isPendingUsers, data: users } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            role_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
    const rows = (roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) ? transformPermissionsToComponentFormat(roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) : createInitialPermissionsState();
    const columns = [
        {
            id: 'name',
            headerName: i18n._({
                id: "TH3Irz"
            })
        },
        {
            id: 'read',
            headerName: i18n._({
                id: "jpctdh"
            })
        },
        {
            id: 'create',
            headerName: i18n._({
                id: "hYgDIe"
            })
        },
        {
            id: 'update',
            headerName: i18n._({
                id: "ePK91l"
            })
        },
        {
            id: 'delete',
            headerName: i18n._({
                id: "cnGeoo"
            })
        },
        {
            id: 'submit',
            headerName: i18n._({
                id: "hQRttt"
            })
        },
        {
            id: 'approve',
            headerName: i18n._({
                id: "Z7ZXbT"
            })
        },
        {
            id: 'pay',
            headerName: i18n._({
                id: "4fL/V7"
            })
        },
        {
            id: 'cancel',
            headerName: i18n._({
                id: "dEgA5A"
            })
        },
        {
            id: 'reopen',
            headerName: i18n._({
                id: "M7SqjM"
            })
        },
        {
            id: 'create_from_mail',
            headerName: i18n._({
                id: "j7ycPO"
            })
        }
    ];
    if (id && (isLoadingRole || isPendingRole || isLoadingUsers || isPendingUsers)) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (roleQueryError || !roleData) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "MvTCyk"
            }),
            description: i18n._({
                id: "XhXKVM",
                values: {
                    id: id
                }
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                title: roleData.name,
                closeButtonTooltip: i18n._({
                    id: "izvbFN"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(StyledDialogContainer, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        direction: "column",
                        alignItems: "stretch",
                        sx: {
                            width: '100%',
                            maxHeight: '100%'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(StyledTableTitle, {
                                variant: "subtitle2",
                                my: 1,
                                children: i18n._({
                                    id: "9cDpsw"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(StyledTableContainer$1, {
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                                    stickyHeader: true,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(StyledTableHead$1, {
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                                children: columns.map((column)=>/*#__PURE__*/ jsxRuntime.jsx(StyledTableCell$1, {
                                                        children: column.headerName
                                                    }, column.id))
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                            children: rows.map((row, index)=>/*#__PURE__*/ jsxRuntime.jsx(UserRoleRow, {
                                                    index: index,
                                                    view: UserRoleViewMode.Read,
                                                    row: row,
                                                    columns: columns
                                                }, row.name))
                                        })
                                    ]
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        mt: 2,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle2",
                                my: 1,
                                children: i18n._({
                                    id: "Sxm8rQ"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                                variant: "outlined",
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    p: 2,
                                    direction: "row",
                                    alignItems: "start",
                                    justifyContent: 'space-between',
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                            flexShrink: 0,
                                            pr: 2,
                                            children: i18n._({
                                                id: "M5w1yh"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                            flexGrow: 1,
                                            overflow: 'scroll',
                                            children: users && users.data && users.data.length > 0 ? /*#__PURE__*/ jsxRuntime.jsx(material.List, {
                                                disablePadding: true,
                                                children: users.data.map((user)=>/*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(UserCell$1, {
                                                            id: user.id
                                                        })
                                                    }, user.id))
                                            }) : i18n._({
                                                id: "EdQY6l"
                                            })
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "ePK91l"
                    }),
                    onClick: onClickEditRole,
                    isDisabled: !isUpdateAllowed
                },
                deleteButton: {
                    label: i18n._({
                        id: "cnGeoo"
                    }),
                    onClick: onClickDeleteRole,
                    isDisabled: !isDeleteAllowed
                }
            })
        ]
    });
};

const getValidationSchema$2 = (i18n)=>zod.z.object({
        name: zod.z.string().trim().max(255, i18n._({
            id: "MVGER/"
        })).min(1, i18n._({
            id: "8/brI5"
        })).meta({
            title: i18n._({
                id: "PSP1MZ"
            })
        }),
        permissions: zod.z.array(zod.z.custom()).meta({
            title: i18n._({
                id: "9cDpsw"
            })
        })
    });

function _define_property$29(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$27(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$29(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1q(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1q(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1q(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const FullScreenModalHeader = ({ title, statusElement, actions, className, closeButtonTooltip })=>{
    const { i18n } = react.useLingui();
    const dialogContext = useDialog();
    return /*#__PURE__*/ jsxRuntime.jsxs(StyledToolbar, {
        className: className,
        disableGutters: true,
        children: [
            (dialogContext === null || dialogContext === void 0 ? void 0 : dialogContext.isDialogContent) && /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                color: "inherit",
                onClick: dialogContext.onClose,
                ariaLabelOverride: closeButtonTooltip || i18n._({
                    id: "RWw9Lg"
                }),
                tooltip: closeButtonTooltip || i18n._({
                    id: "RWw9Lg"
                }),
                children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                direction: "row",
                spacing: 2,
                alignItems: "center",
                ml: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(StyledDialogTitle, {
                        children: title
                    }),
                    statusElement
                ]
            }),
            actions && /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                direction: "row",
                spacing: 2,
                ml: "auto",
                children: actions
            })
        ]
    });
};
const StyledToolbar = material.styled(material.Toolbar)(()=>({
        padding: '24px 32px',
        flexShrink: 0
    }));
const StyledDialogTitle = material.styled(material.DialogTitle)(({ theme })=>({
        '&.MuiDialogTitle-root.MuiTypography-root': _object_spread_props$1q(_object_spread$27({}, theme.typography.h3), {
            padding: '0'
        })
    }));

function _define_property$28(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$26(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$28(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1p(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1p(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1p(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const StyledTableContainer = material.styled(material.TableContainer)`
  flex: 1;
  overflow: auto;
  min-height: 0;
`;
const StyledTableHead = material.styled(material.TableHead)(({ theme })=>({
        background: theme.palette.grey[300]
    }));
const StyledTableCell = material.styled(material.TableCell)(({ theme })=>({
        [`&.${material.tableCellClasses.head}`]: {
            backgroundColor: theme.palette.grey[100],
            whiteSpace: 'nowrap'
        },
        [`&.${material.tableCellClasses.head}:first-of-type`]: {
            position: 'sticky',
            left: 0,
            zIndex: '9999',
            minWidth: '180px',
            borderRight: `1px solid ${theme.palette.grey[300]}`
        },
        [`&.${material.tableCellClasses.body}:first-of-type`]: {
            position: 'sticky',
            left: 0,
            zIndex: '9998',
            fontWeight: '600',
            minWidth: '180px',
            backgroundColor: theme.palette.background.default,
            borderRight: `1px solid ${theme.palette.grey[300]}`
        }
    }));
const UserRoleEditDialog = ({ id, onCreated, onUpdated, onClickDeleteRole })=>{
    const { i18n } = react.useLingui();
    const { data: user } = useEntityUserByAuthToken();
    const { isLoadingRole, isPendingRole, roleData, roleQueryError } = useUserRoleQuery({
        id
    });
    const { createRole, updateRole, isCreating, isUpdating } = useUserRoleMutations({
        onCreated,
        onUpdated
    });
    const { data: isUpdateAllowed } = useIsActionAllowed({
        method: 'role',
        action: 'update',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isDeleteAllowed } = useIsActionAllowed({
        method: 'role',
        action: 'delete',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getValidationSchema$2(i18n)),
        defaultValues: {
            name: (roleData === null || roleData === void 0 ? void 0 : roleData.name) || '',
            permissions: (roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) ? transformPermissionsToComponentFormat(roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) : createInitialPermissionsState()
        }
    });
    const { control, handleSubmit, formState: { isDirty } } = methods;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const formName = `Monite-Form-UserRoles-${React.useId()}`;
    const onBeforeUnload = React.useCallback((event)=>{
        if (isDirty) {
            event.preventDefault();
            // eslint-disable-next-line lingui/no-unlocalized-strings
            event.returnValue = 'Dirty state. Save changes before exiting.';
        }
    }, [
        isDirty
    ]);
    React.useEffect(()=>{
        window.addEventListener('beforeunload', onBeforeUnload);
        return ()=>{
            window.removeEventListener('beforeunload', onBeforeUnload);
        };
    }, [
        onBeforeUnload
    ]);
    const rows = (roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) ? transformPermissionsToComponentFormat(roleData === null || roleData === void 0 ? void 0 : roleData.permissions.objects) : createInitialPermissionsState();
    const columns = [
        {
            id: 'name',
            headerName: i18n._({
                id: "TH3Irz"
            })
        },
        {
            id: 'read',
            headerName: i18n._({
                id: "jpctdh"
            })
        },
        {
            id: 'create',
            headerName: i18n._({
                id: "hYgDIe"
            })
        },
        {
            id: 'update',
            headerName: i18n._({
                id: "ePK91l"
            })
        },
        {
            id: 'delete',
            headerName: i18n._({
                id: "cnGeoo"
            })
        },
        {
            id: 'submit',
            headerName: i18n._({
                id: "hQRttt"
            })
        },
        {
            id: 'approve',
            headerName: i18n._({
                id: "Z7ZXbT"
            })
        },
        {
            id: 'pay',
            headerName: i18n._({
                id: "4fL/V7"
            })
        },
        {
            id: 'cancel',
            headerName: i18n._({
                id: "dEgA5A"
            })
        },
        {
            id: 'reopen',
            headerName: i18n._({
                id: "M7SqjM"
            })
        },
        {
            id: 'create_from_mail',
            headerName: i18n._({
                id: "j7ycPO"
            })
        }
    ];
    const handleRoleFormSubmission = (data)=>{
        const formattedData = {
            name: data.name,
            permissions: transformPermissionsToRequestFormat(data.permissions)
        };
        if (roleData === null || roleData === void 0 ? void 0 : roleData.id) {
            return updateRole(roleData.id, formattedData);
        }
        return createRole(formattedData);
    };
    const title = id ? i18n._({
        id: "cri3mL"
    }) : i18n._({
        id: "5+3XEC"
    });
    const actions = /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            id && isDeleteAllowed && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "text",
                color: "error",
                onClick: onClickDeleteRole,
                disabled: isCreating || isUpdating,
                children: i18n._({
                    id: "cnGeoo"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "contained",
                type: "submit",
                form: formName,
                disabled: !isDirty || isCreating || isUpdating || !isUpdateAllowed,
                children: i18n._({
                    id: "tfDRzk"
                })
            })
        ]
    });
    if (id && (isLoadingRole || isPendingRole)) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (roleQueryError) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "MvTCyk"
            }),
            description: i18n._({
                id: "XhXKVM",
                values: {
                    id: id
                }
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(FullScreenModalHeader, {
                title: title,
                actions: actions,
                closeButtonTooltip: i18n._({
                    id: "M2NuNS"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                dividers: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1p(_object_spread$26({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formName,
                        noValidate: true,
                        onSubmit: handleSubmit(handleRoleFormSubmission),
                        style: {
                            height: '100%',
                            display: 'flex',
                            flexDirection: 'column'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "column",
                            alignItems: "stretch",
                            spacing: 2,
                            sx: {
                                width: '100%',
                                height: '100%',
                                display: 'flex',
                                flexDirection: 'column'
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    control: control,
                                    name: "name",
                                    label: i18n._({
                                        id: "6YtxFj"
                                    }),
                                    required: true
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "9cDpsw"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(StyledTableContainer, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                                        stickyHeader: true,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(StyledTableHead, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                                    children: columns.map((column)=>/*#__PURE__*/ jsxRuntime.jsx(StyledTableCell, {
                                                            children: column.headerName
                                                        }, column.id))
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                                children: rows.map((row, index)=>/*#__PURE__*/ jsxRuntime.jsx(UserRoleRow, {
                                                        row: row,
                                                        view: UserRoleViewMode.Mutate,
                                                        columns: columns,
                                                        index: index
                                                    }, row.name))
                                            })
                                        ]
                                    })
                                })
                            ]
                        })
                    })
                }))
            })
        ]
    });
};

const Filters$2 = ({ onChangeFilter, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const className = 'Monite-UserRolesFilters';
    return /*#__PURE__*/ jsxRuntime.jsx(FilterContainer, {
        className: className,
        sx: sx,
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "Fs+py6"
            }),
            onChange: (search)=>{
                onChangeFilter(FILTER_TYPE_SEARCH$1, search);
            }
        }),
        children: /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, {
            className: "Monite-UserRoleCreateAtFilter Monite-FilterControl Monite-DateFilterControl",
            onChange: (value, error)=>{
                if (error.validationError) {
                    return;
                }
                if (value instanceof Date || value === null) {
                    onChangeFilter(FILTER_TYPE_CREATED_AT$1, value);
                }
            },
            slotProps: {
                textField: {
                    variant: 'standard',
                    placeholder: i18n._({
                        id: "45O6zJ"
                    })
                },
                popper: {
                    container: root
                },
                dialog: {
                    container: root
                },
                actionBar: {
                    actions: [
                        'clear',
                        'today'
                    ]
                }
            },
            views: [
                'year',
                'month',
                'day'
            ]
        })
    });
};

const normalizeActions = (actions)=>{
    return Object.keys(actionOrder).map((actionName)=>{
        const existingAction = actions.find((action)=>action.action_name === actionName);
        return existingAction;
    });
};
const StyledPermission = material.styled('span')`
  display: inline-block;
  font-weight: 600;
  width: 14px;
  text-align: center;
`;
const StyledActivePermission = material.styled(StyledPermission)(({ theme })=>({
        color: theme.palette.primary.main
    }));
const StyledInactivePermission = material.styled(StyledPermission)(({ theme })=>({
        color: theme.palette.grey[500]
    }));
const Permission = ({ actions })=>{
    const { i18n } = react.useLingui();
    const normalizedActions = normalizeActions(actions);
    const sortedActions = [
        ...normalizedActions
    ].sort((a, b)=>{
        if ((a === null || a === void 0 ? void 0 : a.action_name) === undefined && (b === null || b === void 0 ? void 0 : b.action_name) === undefined) {
            return 0;
        }
        const aOrder = (a === null || a === void 0 ? void 0 : a.action_name) ? actionOrder[a.action_name] : undefined;
        const bOrder = (b === null || b === void 0 ? void 0 : b.action_name) ? actionOrder[b.action_name] : undefined;
        if (aOrder === undefined) {
            return 1;
        }
        if (bOrder === undefined) {
            return -1;
        }
        return aOrder - bOrder;
    });
    const renderAction = (action)=>{
        if (!(action === null || action === void 0 ? void 0 : action.action_name)) return {
            element: null,
            tooltip: null
        };
        if (action.permission === 'allowed' || action.permission === 'allowed_for_own') {
            return {
                element: /*#__PURE__*/ jsxRuntime.jsx(StyledActivePermission, {
                    children: ACTION_TO_LATTER_MAP[action.action_name]
                }, action.action_name),
                tooltip: /*#__PURE__*/ jsxRuntime.jsx("p", {
                    children: `[${ACTION_TO_LATTER_MAP[action.action_name]}] ${getActionToLabelMap(i18n)[action.action_name]} — ${i18n._({
                        id: "joLIQz"
                    })}`
                }, action.action_name)
            };
        } else if (action.permission === 'not_allowed') {
            return {
                element: /*#__PURE__*/ jsxRuntime.jsx(StyledInactivePermission, {
                    children: "-"
                }, action.action_name),
                tooltip: /*#__PURE__*/ jsxRuntime.jsx("p", {
                    children: `[${ACTION_TO_LATTER_MAP[action.action_name]}] ${getActionToLabelMap(i18n)[action.action_name]} — ${i18n._({
                        id: "2ZGQoS"
                    })}`
                }, action.action_name)
            };
        }
        return {
            element: /*#__PURE__*/ jsxRuntime.jsx(StyledPermission, {
                children: " "
            }, action.action_name),
            tooltip: null
        };
    };
    const actionsToRender = sortedActions.map(renderAction).filter(({ element })=>element);
    const renderedActions = actionsToRender.map(({ element })=>element);
    const renderedActionsTooltip = actionsToRender.map(({ tooltip })=>tooltip);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
        arrow: true,
        title: renderedActionsTooltip.length ? /*#__PURE__*/ jsxRuntime.jsx("span", {
            children: renderedActionsTooltip
        }) : null,
        children: /*#__PURE__*/ jsxRuntime.jsx("span", {
            children: renderedActions
        })
    });
};

const PermissionsCell = ({ permissions })=>{
    var _permissions_objects;
    const { i18n } = react.useLingui();
    const filteredPermissionsObjects = (_permissions_objects = permissions.objects) === null || _permissions_objects === void 0 ? void 0 : _permissions_objects.filter((object)=>{
        var _object_actions;
        return object.object_type && (isCommonPermissionObjectType(object.object_type) || isPayablePermissionObjectType(object.object_type)) && ((_object_actions = object.actions) === null || _object_actions === void 0 ? void 0 : _object_actions.some((action)=>action.permission !== 'not_allowed'));
    }).sort((a, b)=>{
        if (a.object_type && b.object_type) {
            return a.object_type.localeCompare(b.object_type);
        }
        return 0;
    });
    if (!(filteredPermissionsObjects === null || filteredPermissionsObjects === void 0 ? void 0 : filteredPermissionsObjects.length)) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            children: i18n._({
                id: "EdQY6l"
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
        container: true,
        children: filteredPermissionsObjects.map((object)=>/*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                item: true,
                container: true,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 6,
                        children: getPermissionToLabelMap(i18n)[object.object_type]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 6,
                        children: object.actions && /*#__PURE__*/ jsxRuntime.jsx(Permission, {
                            actions: object.actions
                        })
                    })
                ]
            }, object.object_type))
    });
};

function _define_property$27(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$25(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$27(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1o(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1o(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1o(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const UserRolesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(UserRolesTableBase, _object_spread$25({}, props))
    });
const UserRolesTableBase = ({ onFilterChanged, onSortChanged, onRowClick, handleCreateNew })=>{
    const { i18n } = react.useLingui();
    const { api, locale, componentSettings } = useMoniteContext();
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.userRoles.pageSizeOptions[0]);
    const [currentFilter, setCurrentFilter] = React.useState({});
    const [sortModel, setSortModel] = React.useState({
        field: 'created_at',
        sort: 'desc'
    });
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadSupported, isLoading: isReadSupportedLoading } = useIsActionAllowed({
        method: 'role',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: roles, isLoading, isError, refetch } = api.roles.getRoles.useQuery({
        query: {
            sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
            order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
            limit: pageSize,
            pagination_token: currentPaginationToken || undefined,
            name: currentFilter[FILTER_TYPE_SEARCH$1] || undefined,
            created_at__gte: currentFilter[FILTER_TYPE_CREATED_AT$2] ? dateFns.formatISO(currentFilter[FILTER_TYPE_CREATED_AT$2]) : undefined,
            created_at__lte: currentFilter[FILTER_TYPE_CREATED_AT$2] ? dateFns.formatISO(dateFns.addDays(currentFilter[FILTER_TYPE_CREATED_AT$2], 1)) : undefined
        }
    });
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        setCurrentFilter((prevFilter)=>_object_spread_props$1o(_object_spread$25({}, prevFilter), {
                [field]: value
            }));
        onFilterChanged === null || onFilterChanged === void 0 ? void 0 : onFilterChanged({
            field,
            value
        });
    };
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setCurrentPaginationToken(null);
        onSortChanged === null || onSortChanged === void 0 ? void 0 : onSortChanged(model[0]);
    };
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'name',
                headerName: i18n._({
                    id: "6YtxFj"
                }),
                sortable: false,
                flex: 1
            },
            {
                field: 'permissions',
                headerName: i18n._({
                    id: "9cDpsw"
                }),
                sortable: false,
                flex: 2,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(PermissionsCell, {
                        permissions: params.value
                    })
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "45O6zJ"
                }),
                sortable: true,
                type: 'date',
                flex: 1,
                valueFormatter: (value)=>i18n.date(value, locale.dateFormat)
            }
        ];
    }, [
        locale.dateFormat,
        i18n
    ]);
    if (isReadSupportedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadSupported) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    const isFiltering = Object.keys(currentFilter).some((key)=>currentFilter[key] !== null && currentFilter[key] !== undefined);
    const isSearching = !!currentFilter[FILTER_TYPE_SEARCH$1];
    if (!isLoading && (roles === null || roles === void 0 ? void 0 : roles.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "nyfbuw"
            }),
            descriptionLine1: i18n._({
                id: "T0yTBU"
            }),
            descriptionLine2: i18n._({
                id: "TPILzR"
            }),
            actionButtonLabel: i18n._({
                id: "BOqY23"
            }),
            actionOptions: [
                i18n._({
                    id: "GDvlUT"
                })
            ],
            onAction: ()=>{
                handleCreateNew === null || handleCreateNew === void 0 ? void 0 : handleCreateNew();
            },
            type: "no-data"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: ScopedCssBaselineContainerClassName,
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(Filters$2, {
                onChangeFilter: onChangeFilter,
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: [
                            sortModel
                        ]
                    }
                },
                rowSelection: false,
                disableColumnFilter: true,
                loading: isLoading,
                columns: columns,
                rows: (roles === null || roles === void 0 ? void 0 : roles.data) || [],
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id);
                    }
                },
                getRowHeight: ()=>'auto',
                sx: {
                    [`& .${xDataGrid.gridClasses.cell}`]: {
                        py: 1
                    }
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.userRoles.pageSizeOptions,
                            prevPage: roles === null || roles === void 0 ? void 0 : roles.prev_pagination_token,
                            nextPage: roles === null || roles === void 0 ? void 0 : roles.next_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setCurrentPaginationToken(page);
                                setPageSize(pageSize);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (roles === null || roles === void 0 ? void 0 : roles.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            onCreate: ()=>handleCreateNew === null || handleCreateNew === void 0 ? void 0 : handleCreateNew(),
                            refetch: refetch,
                            entityName: i18n._({
                                id: "5dJK4M"
                            }),
                            actionButtonLabel: i18n._({
                                id: "BOqY23"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "GDvlUT"
                                })
                            ],
                            type: "no-data"
                        })
                }
            })
        ]
    });
};

function _define_property$26(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$24(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$26(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1n(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1n(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1n(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const UserRoles = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(UserRolesBase, {})
    });
const initialState$1 = {
    isDetailsDialogOpened: false,
    isEditDialogOpened: false,
    isDeleteDialogOpened: false,
    selectedUserRoleId: undefined
};
const userRolesReducer = (state, action)=>{
    switch(action.type){
        case 'OPEN_DETAILS':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                selectedUserRoleId: action.payload,
                isDetailsDialogOpened: true
            });
        case 'CLOSE_DETAILS':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                isDetailsDialogOpened: false
            });
        case 'OPEN_EDIT':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                isEditDialogOpened: true
            });
        case 'CLOSE_EDIT':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                isEditDialogOpened: false
            });
        case 'OPEN_DELETE':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                isDeleteDialogOpened: true
            });
        case 'CLOSE_DELETE':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                isDeleteDialogOpened: false
            });
        case 'DELETED':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                selectedUserRoleId: undefined,
                isDeleteDialogOpened: false,
                isEditDialogOpened: false,
                isDetailsDialogOpened: false
            });
        case 'OPEN_CREATE':
            return _object_spread_props$1n(_object_spread$24({}, state), {
                selectedUserRoleId: undefined,
                isEditDialogOpened: true
            });
        default:
            return state;
    }
};
const UserRolesBase = ()=>{
    const { i18n } = react.useLingui();
    const [state, dispatch] = React.useReducer(userRolesReducer, initialState$1);
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'role',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'role',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: i18n._({
                    id: "LVecP9"
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    variant: "contained",
                    color: "primary",
                    disabled: isCreateAllowedLoading || !isCreateAllowed,
                    onClick: ()=>dispatch({
                            type: 'OPEN_CREATE'
                        }),
                    children: i18n._({
                        id: "8faOjQ"
                    })
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(UserRolesTable, {
                onRowClick: (id)=>dispatch({
                        type: 'OPEN_DETAILS',
                        payload: id
                    }),
                handleCreateNew: ()=>dispatch({
                        type: 'OPEN_CREATE'
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: state.isDetailsDialogOpened,
                alignDialog: "right",
                onClose: ()=>dispatch({
                        type: 'CLOSE_DETAILS'
                    }),
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleDetailsDialog, {
                    id: state.selectedUserRoleId,
                    onClickEditRole: ()=>dispatch({
                            type: 'OPEN_EDIT'
                        }),
                    onClickDeleteRole: ()=>dispatch({
                            type: 'OPEN_DELETE'
                        })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                fullScreen: true,
                open: state.isEditDialogOpened,
                onClose: ()=>dispatch({
                        type: 'CLOSE_EDIT'
                    }),
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleEditDialog, {
                    id: state.selectedUserRoleId,
                    onCreated: ()=>dispatch({
                            type: 'CLOSE_EDIT'
                        }),
                    onUpdated: ()=>dispatch({
                            type: 'CLOSE_EDIT'
                        }),
                    onClickDeleteRole: ()=>dispatch({
                            type: 'OPEN_DELETE'
                        })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: state.isDeleteDialogOpened,
                onClose: ()=>dispatch({
                        type: 'CLOSE_DELETE'
                    }),
                fullWidth: true,
                maxWidth: "sm",
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleDeleteDialog, {
                    id: state.selectedUserRoleId,
                    onDeleted: ()=>dispatch({
                            type: 'DELETED'
                        })
                })
            })
        ]
    });
};

function _define_property$25(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$23(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$25(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1m(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1m(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1m(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * ApprovalPolicies component
 *
 * This component renders the user roles & approval policies page. It includes a table of approval policies,
 * a dialog for creating new approval policies,
 * and a header with a button for opening the create dialog.
 */ const RolesAndApprovalPolicies = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(RolesAndApprovalPoliciesBase, {})
    });
const initialState = {
    isRoleDetailsDialogOpened: false,
    isRoleEditDialogOpened: false,
    isRoleDeleteDialogOpened: false,
    selectedUserRoleId: undefined,
    isPolicyDetailsDialogOpened: false,
    selectedApprovalPolicyId: undefined
};
const rolesPoliciesReducer = (state, action)=>{
    switch(action.type){
        case 'OPEN_ROLE_DETAILS':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                selectedUserRoleId: action.payload,
                isRoleDetailsDialogOpened: true
            });
        case 'CLOSE_ROLE_DETAILS':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isRoleDetailsDialogOpened: false
            });
        case 'OPEN_ROLE_EDIT':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isRoleEditDialogOpened: true
            });
        case 'CLOSE_ROLE_EDIT':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isRoleEditDialogOpened: false
            });
        case 'OPEN_ROLE_DELETE':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isRoleDeleteDialogOpened: true
            });
        case 'CLOSE_ROLE_DELETE':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isRoleDeleteDialogOpened: false
            });
        case 'ROLE_DELETED':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                selectedUserRoleId: undefined,
                isRoleDeleteDialogOpened: false,
                isRoleEditDialogOpened: false,
                isRoleDetailsDialogOpened: false
            });
        case 'OPEN_ROLE_CREATE':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                selectedUserRoleId: undefined,
                isRoleEditDialogOpened: true
            });
        case 'OPEN_POLICY_DETAILS':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                selectedApprovalPolicyId: action.payload,
                isPolicyDetailsDialogOpened: true
            });
        case 'CLOSE_POLICY_DETAILS':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                isPolicyDetailsDialogOpened: false
            });
        case 'OPEN_POLICY_CREATE':
            return _object_spread_props$1m(_object_spread$23({}, state), {
                selectedApprovalPolicyId: undefined,
                isPolicyDetailsDialogOpened: true
            });
        default:
            return state;
    }
};
const RolesAndApprovalPoliciesBase = ()=>{
    const { i18n } = react.useLingui();
    const [activeTab, setActiveTab] = React.useState(0);
    const [open, setOpen] = React.useState(false);
    const [state, dispatch] = React.useReducer(rolesPoliciesReducer, initialState);
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadPolicyAllowed, isLoading: isReadPolicyAllowedLoading } = useIsActionAllowed({
        method: 'approval_policy',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isCreatePolicyAllowed, isLoading: isCreatePolicyAllowedLoading } = useIsActionAllowed({
        method: 'approval_policy',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    // The following code duplicates state found in UserRoles.tsx and ApprovalPolicies.tsx
    const { data: isReadRoleAllowed, isLoading: isReadRoleAllowedLoading } = useIsActionAllowed({
        method: 'role',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isCreateRoleAllowed, isLoading: isCreateRoleAllowedLoading } = useIsActionAllowed({
        method: 'role',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const isRolesTab = activeTab == 0;
    const isLoadingPermissions = isReadPolicyAllowedLoading || isCreatePolicyAllowedLoading || isReadRoleAllowedLoading || isCreateRoleAllowedLoading;
    const isAccessRestricted = isRolesTab && !isReadRoleAllowed && !isReadRoleAllowedLoading || !isRolesTab && !isReadPolicyAllowed && !isReadPolicyAllowedLoading;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const tabIdPrefix = `ReceivablesTable-Tab-${React.useId()}-`;
    // eslint-disable-next-line lingui/no-unlocalized-strings
    const tabPanelIdPrefix = `ReceivablesTable-TabPanel-${React.useId()}-`;
    const className = 'Monite-RolesAndPoliciesTable';
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "McU8nI"
                        }),
                        isLoadingPermissions && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
                    open: open,
                    onOpenChange: setOpen,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                            asChild: true,
                            children: /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                size: "lg",
                                disabled: !isCreateRoleAllowed && !isCreatePolicyAllowed,
                                children: [
                                    i18n._({
                                        id: "BOqY23"
                                    }),
                                    open ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronUpIcon, {}) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {})
                                ]
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                            className: "mtw:w-56",
                            align: "end",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                    disabled: !isCreateRoleAllowed,
                                    onClick: ()=>{
                                        setActiveTab(0);
                                        dispatch({
                                            type: 'OPEN_ROLE_CREATE'
                                        });
                                    },
                                    children: i18n._({
                                        id: "b67AzS"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                    disabled: !isCreatePolicyAllowed,
                                    onClick: ()=>{
                                        setActiveTab(1);
                                        dispatch({
                                            type: 'OPEN_POLICY_CREATE'
                                        });
                                    },
                                    children: i18n._({
                                        id: "7/tK/O"
                                    })
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                className: classNames(ScopedCssBaselineContainerClassName, className + '-Tabs'),
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Tabs, {
                    value: activeTab,
                    variant: "standard",
                    "aria-label": i18n._({
                        id: "uIUvwE"
                    }),
                    onChange: (_, value)=>setActiveTab(value),
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Tab, {
                            id: `${tabIdPrefix}-${0}`,
                            "aria-controls": `${tabPanelIdPrefix}-${0}`,
                            label: i18n._({
                                id: "3XIgKU"
                            }),
                            value: 0
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Tab, {
                            id: `${tabIdPrefix}-${1}`,
                            "aria-controls": `${tabPanelIdPrefix}-${1}`,
                            label: i18n._({
                                id: "CsaDy8"
                            }),
                            value: 1
                        })
                    ]
                })
            }),
            isAccessRestricted && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            !isRolesTab && isReadPolicyAllowed && /*#__PURE__*/ jsxRuntime.jsx(ApprovalPoliciesTable, {
                onRowClick: (approvalPolicy)=>dispatch({
                        type: 'OPEN_POLICY_DETAILS',
                        payload: approvalPolicy.id
                    }),
                onCreateClick: ()=>dispatch({
                        type: 'OPEN_POLICY_CREATE'
                    })
            }),
            isRolesTab && isReadRoleAllowed && /*#__PURE__*/ jsxRuntime.jsx(UserRolesTable, {
                onRowClick: (id)=>dispatch({
                        type: 'OPEN_ROLE_DETAILS',
                        payload: id
                    }),
                handleCreateNew: ()=>dispatch({
                        type: 'OPEN_ROLE_CREATE'
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: state.isPolicyDetailsDialogOpened,
                alignDialog: "right",
                onClose: ()=>dispatch({
                        type: 'CLOSE_POLICY_DETAILS'
                    }),
                children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalPolicyDetails, {
                    id: state.selectedApprovalPolicyId,
                    onCreated: (id)=>{
                        dispatch({
                            type: 'OPEN_POLICY_DETAILS',
                            payload: id
                        });
                    }
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: state.isRoleDetailsDialogOpened,
                alignDialog: "right",
                onClose: ()=>dispatch({
                        type: 'CLOSE_ROLE_DETAILS'
                    }),
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleDetailsDialog, {
                    id: state.selectedUserRoleId,
                    onClickEditRole: ()=>dispatch({
                            type: 'OPEN_ROLE_EDIT'
                        }),
                    onClickDeleteRole: ()=>dispatch({
                            type: 'OPEN_ROLE_DELETE'
                        })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                fullScreen: true,
                open: state.isRoleEditDialogOpened,
                onClose: ()=>dispatch({
                        type: 'CLOSE_ROLE_EDIT'
                    }),
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleEditDialog, {
                    id: state.selectedUserRoleId,
                    onCreated: ()=>dispatch({
                            type: 'CLOSE_ROLE_EDIT'
                        }),
                    onUpdated: ()=>dispatch({
                            type: 'CLOSE_ROLE_EDIT'
                        }),
                    onClickDeleteRole: ()=>dispatch({
                            type: 'OPEN_ROLE_DELETE'
                        })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: state.isRoleDeleteDialogOpened,
                onClose: ()=>dispatch({
                        type: 'CLOSE_ROLE_DELETE'
                    }),
                fullWidth: true,
                maxWidth: "sm",
                children: /*#__PURE__*/ jsxRuntime.jsx(UserRoleDeleteDialog, {
                    id: state.selectedUserRoleId,
                    onDeleted: ()=>dispatch({
                            type: 'ROLE_DELETED'
                        })
                })
            })
        ]
    });
};

const APPROVAL_REQUEST_STATUSES = [
    'waiting',
    'approved',
    'rejected',
    'canceled'
];
const ROW_TO_STATUS_MUI_MAP = {
    approved: 'success',
    canceled: 'secondary',
    rejected: 'error',
    waiting: 'warning'
};
const APPROVAL_REQUEST_STATUS_TO_MUI_ICON_MAP = {
    approved: PaidOutlinedIcon__default.default,
    canceled: CancelIcon__default.default,
    rejected: DangerousOutlinedIcon__default.default,
    waiting: HourglassEmptyIcon__default.default
};
const FILTER_TYPE_STATUS = 'status';
const FILTER_TYPE_CREATED_AT = 'created_at';
const FILTER_TYPE_ADDED_BY = 'created_by';
const FILTER_TYPE_CURRENT_USER = 'current_user';

const getRowToStatusTextMap$1 = (i18n)=>({
        approved: i18n._({
            id: "7kb4LU"
        }),
        canceled: i18n._({
            id: "GGWsTU"
        }),
        rejected: i18n._({
            id: "ekCRTP"
        }),
        waiting: i18n._({
            id: "70WSsK"
        })
    });

const ApprovalRequestsFilter = ({ onChangeFilter, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const className = 'Monite-ApprovalRequestsFilters';
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        sx: sx,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                className: "Monite-ApprovalStatusFilter Monite-FilterControl",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                        id: "status",
                        children: i18n._({
                            id: "uAQUqI"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                        labelId: "status",
                        label: i18n._({
                            id: "uAQUqI"
                        }),
                        defaultValue: "all",
                        MenuProps: {
                            container: root
                        },
                        onChange: (selected)=>{
                            onChangeFilter(FILTER_TYPE_STATUS, selected && selected.target.value);
                        },
                        children: [
                            {
                                label: i18n._({
                                    id: "+FsEVV"
                                }),
                                value: 'all'
                            },
                            ...Object.values(APPROVAL_REQUEST_STATUSES).map((status)=>({
                                    label: getRowToStatusTextMap$1(i18n)[status],
                                    value: status
                                }))
                        ].map(({ label, value })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                value: value,
                                children: label
                            }, value))
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(AutocompleteCreatedBy, {
                onChange: (id)=>onChangeFilter(FILTER_TYPE_ADDED_BY, id || null)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, {
                label: i18n._({
                    id: "txuH6H"
                }),
                className: "Monite-ApprovalRequestedOnFilter Monite-FilterControl Monite-DateFilterControl",
                onChange: (value, error)=>{
                    if (error.validationError) {
                        return;
                    }
                    onChangeFilter(FILTER_TYPE_CREATED_AT, value);
                },
                slotProps: {
                    textField: {
                        variant: 'standard'
                    },
                    popper: {
                        container: root
                    },
                    dialog: {
                        container: root
                    },
                    actionBar: {
                        actions: [
                            'clear',
                            'today'
                        ]
                    }
                },
                views: [
                    'year',
                    'month',
                    'day'
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                control: /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {}),
                className: "Monite-ApprovalOnlyMyFilter Monite-FilterControl",
                label: i18n._({
                    id: "ChBdq8"
                }),
                onChange: (_, checked)=>onChangeFilter(FILTER_TYPE_CURRENT_USER, checked)
            })
        ]
    });
};

function _define_property$24(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$22(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$24(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Displays the status of an Approval Request.
 */ const ApprovalRequestStatusChip = /*#__PURE__*/ React.forwardRef((inProps, ref)=>{
    const { status, icon, size, variant } = styles$2.useThemeProps({
        props: inProps,
        name: 'MoniteApprovalRequestStatusChip'
    });
    const { i18n } = react.useLingui();
    const Icon = APPROVAL_REQUEST_STATUS_TO_MUI_ICON_MAP[status];
    return /*#__PURE__*/ jsxRuntime.jsx(StyledChip$2, {
        ref: ref,
        color: ROW_TO_STATUS_MUI_MAP[status],
        icon: icon && Icon ? /*#__PURE__*/ jsxRuntime.jsx(Icon, {
            fontSize: "small"
        }) : undefined,
        label: getRowToStatusTextMap$1(i18n)[status],
        size: size,
        status: status,
        variant: variant !== null && variant !== void 0 ? variant : 'filled'
    });
});
const StyledChip$2 = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, _object_spread$22({
        ref: ref
    }, props))), {
    // eslint-disable-next-line lingui/no-unlocalized-strings
    name: 'MoniteApprovalRequestStatusChip',
    slot: 'root',
    shouldForwardProp: ()=>true
})({});

const ApproveButton = ({ id, onClick })=>{
    const { i18n } = react.useLingui();
    const [isApprovePending, setIsApprovePending] = React.useState(false);
    return /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
        "aria-label": i18n._({
            id: "rgp8XV"
        }),
        color: "success",
        disabled: isApprovePending,
        onClick: (event)=>{
            var _onClick;
            event.preventDefault();
            setIsApprovePending(true);
            (_onClick = onClick({
                id,
                action: 'approve'
            })) === null || _onClick === void 0 ? void 0 : _onClick.finally(()=>setIsApprovePending(false));
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(CheckCircleOutlineRoundedIcon__default.default, {})
    });
};
const RejectButton = ({ id, onClick })=>{
    const { i18n } = react.useLingui();
    const [isRejectPending, setIsRejectPending] = React.useState(false);
    return /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
        "aria-label": i18n._({
            id: "yETUOh"
        }),
        color: "error",
        disabled: isRejectPending,
        onClick: (event)=>{
            var _onClick;
            event.preventDefault();
            setIsRejectPending(true);
            (_onClick = onClick({
                id,
                action: 'reject'
            })) === null || _onClick === void 0 ? void 0 : _onClick.finally(()=>setIsRejectPending(false));
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(HighlightOffRoundedIcon__default.default, {})
    });
};
const useApprovalRequestActionsCell = (props)=>{
    const { i18n } = react.useLingui();
    const { data: user } = useEntityUserByAuthToken();
    if (!('onRowActionClick' in props && props.onRowActionClick)) return;
    return {
        field: 'actions',
        headerName: i18n._({
            id: "7L01XJ"
        }),
        sortable: false,
        display: 'flex',
        align: 'right',
        renderCell: (params)=>{
            var _params_row_approved_by;
            if (params.row.status === 'waiting' && (user === null || user === void 0 ? void 0 : user.id) && params.row.user_ids.includes(user.id) && !((_params_row_approved_by = params.row.approved_by) === null || _params_row_approved_by === void 0 ? void 0 : _params_row_approved_by.includes(user.id))) {
                return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                    direction: "row",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(ApproveButton, {
                            id: params.row.id,
                            onClick: props.onRowActionClick
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(RejectButton, {
                            id: params.row.id,
                            onClick: props.onRowActionClick
                        })
                    ]
                });
            }
        }
    };
};

function _define_property$23(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$21(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$23(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$v(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$v(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$v(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const UserAvatar = (_param)=>{
    var { alt, fileId } = _param, other = _object_without_properties$v(_param, [
        "alt",
        "fileId"
    ]);
    if (fileId) {
        return /*#__PURE__*/ jsxRuntime.jsx(UserAvatarPicture, _object_spread$21({
            fileId: fileId,
            alt: alt
        }, other));
    }
    return /*#__PURE__*/ jsxRuntime.jsx(material.Avatar, _object_spread$21({
        alt: alt
    }, other));
};
const UserAvatarPicture = (_param)=>{
    var { alt, fileId } = _param, other = _object_without_properties$v(_param, [
        "alt",
        "fileId"
    ]);
    const { data } = useFileById(fileId);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Avatar, _object_spread$21({
        alt: alt,
        src: data === null || data === void 0 ? void 0 : data.url
    }, other));
};

const UserCell = ({ entityUserId })=>{
    const { data: entityUser, isLoading } = useEntityUserById(entityUserId);
    if (!entityUser) {
        return null;
    }
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
            label: /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
                variant: "rounded",
                height: "50%",
                width: 100,
                animation: "wave"
            })
        });
    }
    var _entityUser_first_name, _entityUser_last_name;
    return /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
        avatar: /*#__PURE__*/ jsxRuntime.jsx(UserAvatar, {
            fileId: entityUser.userpic_file_id
        }),
        label: `${(_entityUser_first_name = entityUser.first_name) !== null && _entityUser_first_name !== void 0 ? _entityUser_first_name : ''} ${(_entityUser_last_name = entityUser.last_name) !== null && _entityUser_last_name !== void 0 ? _entityUser_last_name : ''}`.trim() || '—',
        variant: "outlined",
        color: "secondary"
    });
};

function _define_property$22(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$20(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$22(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1l(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1l(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1l(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$u(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$u(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$u(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const ApprovalRequestsTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalRequestsTableBase, _object_spread$20({}, props))
    });
const ApprovalRequestsTableBase = (_param)=>{
    var { onRowClick } = _param, restProps = _object_without_properties$u(_param, [
        "onRowClick"
    ]);
    const { api, locale, componentSettings } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isApprovalReadSupported, isLoading: isApprovalReadSupportedLoading } = useIsActionAllowed({
        method: 'approval_request',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isPayableReadSupported, isLoading: isPayableReadSupportedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isApprovalUpdateSupported, isLoading: isApprovalUpdateSupportedLoading } = useIsActionAllowed({
        method: 'approval_request',
        action: 'update',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const actionsCell = useApprovalRequestActionsCell({
        onRowActionClick: 'onRowActionClick' in restProps && restProps.onRowActionClick,
        isApprovePending: 'isApprovePending' in restProps && restProps.isApprovePending,
        isRejectPending: 'isRejectPending' in restProps && restProps.isRejectPending
    });
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.approvalRequests.pageSizeOptions[0]);
    const [currentFilter, setCurrentFilter] = React.useState({});
    const { data: approvalRequests, isLoading: isApprovalRequestsLoading, isError, refetch } = api.approvalRequests.getApprovalRequests.useQuery({
        query: {
            sort: 'updated_at',
            order: 'desc',
            object_type: 'payable',
            pagination_token: currentPaginationToken !== null && currentPaginationToken !== void 0 ? currentPaginationToken : undefined,
            limit: pageSize,
            status: currentFilter[FILTER_TYPE_STATUS] || undefined,
            created_at__lt: currentFilter[FILTER_TYPE_CREATED_AT] ? dateFns.formatISO(dateFns.addDays(currentFilter[FILTER_TYPE_CREATED_AT], 1)) : undefined,
            created_at__gte: currentFilter[FILTER_TYPE_CREATED_AT] ? dateFns.formatISO(currentFilter[FILTER_TYPE_CREATED_AT]) : undefined,
            created_by: currentFilter[FILTER_TYPE_CURRENT_USER] ? user === null || user === void 0 ? void 0 : user.id : currentFilter[FILTER_TYPE_ADDED_BY] || undefined
        }
    });
    const { data: payables, isLoading: isPayablesLoading } = api.payables.getPayables.useQuery({
        query: {
            id__in: approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.data.map((approvalRequest)=>approvalRequest.object_id)
        }
    });
    const rows = approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.data.map((approvalRequest)=>{
        const approvingPayable = payables === null || payables === void 0 ? void 0 : payables.data.find((payable)=>payable.id === approvalRequest.object_id);
        return {
            id: approvalRequest.id,
            number: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.document_id,
            counterpart_id: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.counterpart_id,
            issued_at: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.issued_at,
            due_date: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.due_date,
            status: approvalRequest.status,
            amount_to_pay: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.amount_to_pay,
            currency: approvingPayable === null || approvingPayable === void 0 ? void 0 : approvingPayable.currency,
            created_by: approvalRequest.created_by,
            user_ids: approvalRequest.user_ids,
            approved_by: approvalRequest.approved_by
        };
    });
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        setCurrentFilter((prevFilter)=>_object_spread_props$1l(_object_spread$20({}, prevFilter), {
                [field]: value === 'all' ? null : value
            }));
    };
    const areCounterpartsLoading = useAreCounterpartsLoading(rows);
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'number',
                headerName: i18n._({
                    id: "J6e4kp"
                }),
                sortable: false,
                flex: 0.7
            },
            {
                field: 'counterpart_id',
                headerName: i18n._({
                    id: "np/2yA"
                }),
                sortable: false,
                display: 'flex',
                flex: 1,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCellById, {
                        counterpartId: params.value
                    })
            },
            {
                field: 'issued_at',
                type: 'date',
                headerName: i18n._({
                    id: "X7pkpC"
                }),
                sortable: false,
                flex: 0.7,
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat)
            },
            {
                field: 'due_date',
                type: 'date',
                headerName: i18n._({
                    id: "XicmhT"
                }),
                sortable: false,
                flex: 0.7,
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat)
            },
            {
                field: 'status',
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                sortable: false,
                flex: 0.7,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(ApprovalRequestStatusChip, {
                        status: params.value
                    })
            },
            {
                field: 'amount',
                headerName: i18n._({
                    id: "hehnjM"
                }),
                sortable: false,
                flex: 0.5,
                valueGetter: (_, payable)=>{
                    return payable.amount_to_pay && payable.currency ? formatCurrencyToDisplay(payable.amount_to_pay, payable.currency) : '';
                }
            },
            {
                field: 'created_by',
                headerName: i18n._({
                    id: "NxahIk"
                }),
                sortable: false,
                flex: 1,
                renderCell: ({ value })=>/*#__PURE__*/ jsxRuntime.jsx(UserCell, {
                        entityUserId: value
                    })
            },
            ...actionsCell ? [
                actionsCell
            ] : []
        ];
    }, [
        actionsCell,
        locale.dateFormat,
        formatCurrencyToDisplay,
        i18n
    ]);
    const gridApiRef = useAutosizeGridColumns(payables === null || payables === void 0 ? void 0 : payables.data, columns, areCounterpartsLoading, // eslint-disable-next-line lingui/no-unlocalized-strings
    'ApprovalRequestsTable');
    if (isApprovalReadSupportedLoading || isPayableReadSupportedLoading || isApprovalUpdateSupportedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isApprovalReadSupported || !isPayableReadSupported) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    const isFiltering = Object.keys(currentFilter).some((key)=>currentFilter[key] !== null && currentFilter[key] !== undefined);
    const isSearching = !!currentFilter[FILTER_TYPE_CREATED_AT] || !!currentFilter[FILTER_TYPE_ADDED_BY];
    if (!isApprovalRequestsLoading && (approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "d4dtCj"
            }),
            descriptionLine1: i18n._({
                id: "dswLtM"
            }),
            descriptionLine2: i18n._({
                id: "XpgGAV"
            }),
            type: "no-data"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: ScopedCssBaselineContainerClassName,
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(ApprovalRequestsFilter, {
                onChangeFilter: onChangeFilter,
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                rowSelection: false,
                disableColumnFilter: true,
                initialState: {
                    columns: {
                        columnVisibilityModel: {
                            actions: isApprovalUpdateSupported && 'onRowActionClick' in restProps
                        }
                    }
                },
                apiRef: gridApiRef,
                loading: isApprovalRequestsLoading || isPayablesLoading,
                onRowClick: (params)=>onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id),
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.approvalRequests.pageSizeOptions,
                            prevPage: approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.prev_pagination_token,
                            nextPage: approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.next_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isApprovalRequestsLoading,
                            dataLength: (approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            refetch: refetch,
                            entityName: i18n._({
                                id: "zNOioy"
                            }),
                            type: "no-data"
                        })
                },
                columns: columns,
                rows: rows !== null && rows !== void 0 ? rows : []
            })
        ]
    });
};

const ApprovalRequests = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ApprovalRequestsBase, {})
    });
const ApprovalRequestsBase = ()=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'approval_request',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const approveRequestMutation = api.approvalRequests.postApprovalRequestsIdApprove.useMutation();
    const rejectRequestMutation = api.approvalRequests.postApprovalRequestsIdReject.useMutation();
    const onApprove = (approvalRequestId)=>approveRequestMutation.mutateAsync({
            path: {
                approval_request_id: approvalRequestId
            }
        }, {
            onSuccess: ()=>{
                reactHotToast.toast.success(i18n._({
                    id: "bumqpS"
                }));
                return api.approvalRequests.getApprovalRequests.invalidateQueries(queryClient);
            }
        });
    const onReject = (approvalRequestId)=>rejectRequestMutation.mutateAsync({
            body: undefined,
            path: {
                approval_request_id: approvalRequestId
            }
        }, {
            onSuccess: ()=>{
                reactHotToast.toast.success(i18n._({
                    id: "onnG9m"
                }));
                return api.approvalRequests.getApprovalRequests.invalidateQueries(queryClient);
            }
        });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "zNOioy"
                        }),
                        isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                })
            }),
            !isReadAllowedLoading && !isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(ApprovalRequestsTable, {
                onRowActionClick: ({ id, action })=>{
                    switch(action){
                        case 'approve':
                            return onApprove(id);
                        case 'reject':
                            return onReject(id);
                    }
                }
            })
        ]
    });
};

function _define_property$21(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1$(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$21(target, key, source[key]);
        });
    }
    return target;
}
const PayableDetailsAttachFile = ({ payableId })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const theme = material.useTheme();
    const { FileInput, openFileInput, checkFileError } = useFileInput();
    const [dragIsOver, setDragIsOver] = React.useState(false);
    const attachFileMutation = api.payables.postPayablesIdAttachFile.useMutation({
        path: {
            payable_id: payableId
        }
    }, {
        onSuccess: ()=>Promise.all([
                api.payables.getPayables.invalidateQueries(queryClient),
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payableId
                        }
                    }
                }, queryClient)
            ]),
        onError: ()=>{
            // This onError does nothing.
            // The actionable onError is defined in attachFileMutation.mutate().
            // Need to define this onError so that global QueryClient.mutationCache.onError is skipped.
            return;
        }
    });
    const dragOverStyle = React.useMemo(()=>({
            border: 2,
            borderRadius: 2,
            borderStyle: 'dashed',
            borderColor: 'primary.main',
            backgroundColor: material.alpha(theme.palette.primary.main, 0.05)
        }), [
        theme.palette.primary.main
    ]);
    const handleDragOver = (event)=>{
        event.preventDefault();
        setDragIsOver(true);
    };
    const handleDragLeave = (event)=>{
        event.preventDefault();
        setDragIsOver(false);
    };
    const handleDrop = (event)=>{
        event.preventDefault();
        setDragIsOver(false);
        const droppedFile = Array.from(event.dataTransfer.files)[0];
        if (droppedFile) {
            handleFileUpload(droppedFile);
        }
    };
    const handleFileUpload = (file)=>{
        const error = checkFileError(file);
        if (error) {
            reactHotToast.toast.error(error);
            return;
        }
        payableId && attachFileMutation.mutate({
            file
        }, {
            onSuccess: ()=>{
                reactHotToast.toast.success(i18n._({
                    id: "ebniIL"
                }));
            },
            onError: (error)=>{
                reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
            }
        });
    };
    return attachFileMutation.isPending ? /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
        children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {})
    }) : /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        className: "Monite-PayableDetailsAttachFile",
        sx: _object_spread$1$({
            width: '100%',
            height: '100%',
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
            textAlign: 'center'
        }, dragIsOver && dragOverStyle),
        onDragOver: handleDragOver,
        onDragLeave: handleDragLeave,
        onDrop: handleDrop,
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            sx: {
                margin: 'auto'
            },
            children: dragIsOver ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(CloudUploadOutlinedIcon__default.default, {
                        color: "primary",
                        fontSize: "large"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        color: "primary",
                        variant: "subtitle2",
                        children: i18n._({
                            id: "Q0M5b1"
                        })
                    })
                ]
            }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(AttachFileIcon__default.default, {
                        color: "primary",
                        fontSize: "large",
                        sx: {
                            marginBottom: 2
                        }
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h3",
                        sx: {
                            marginBottom: 1
                        },
                        children: i18n._({
                            id: "tCyvAw"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        color: "secondary",
                        children: i18n._({
                            id: "v/OJUt"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        color: "secondary",
                        sx: {
                            marginBottom: 2
                        },
                        children: i18n._({
                            id: "a5d5W6"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "outlined",
                        component: "label",
                        onClick: openFileInput,
                        children: i18n._({
                            id: "9O830A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(FileInput, {
                        onChange: (event)=>{
                            const file = event.target.files ? event.target.files[0] : null;
                            if (file) handleFileUpload(file);
                        }
                    })
                ]
            })
        })
    });
};

const getRowToStatusTextMap = (i18n)=>({
        draft: i18n._({
            id: "eneWvv"
        }),
        new: i18n._({
            id: "isRobC"
        }),
        approve_in_progress: i18n._({
            id: "70WSsK"
        }),
        paid: i18n._({
            id: "v4nCHK"
        }),
        waiting_to_be_paid: i18n._({
            id: "7kb4LU"
        }),
        rejected: i18n._({
            id: "ekCRTP"
        }),
        partially_paid: i18n._({
            id: "FG7vqH"
        }),
        canceled: i18n._({
            id: "GGWsTU"
        })
    });
const PAYABLE_STATUS_TO_MUI_ICON_MAP = {
    new: TaskOutlinedIcon__default.default,
    approve_in_progress: ScheduleOutlinedIcon__default.default,
    waiting_to_be_paid: HourglassEmptyIcon__default.default,
    rejected: DangerousOutlinedIcon__default.default,
    draft: InsertDriveFileOutlinedIcon__default.default,
    partially_paid: Contrast__default.default,
    paid: PaidOutlinedIcon__default.default,
    canceled: CancelIcon__default.default
};

function _define_property$20(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1_(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$20(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Displays the status of a Payable.
 */ const PayableStatusChip = /*#__PURE__*/ React.forwardRef((inProps, ref)=>{
    const { status, icon, size } = styles$2.useThemeProps({
        props: inProps,
        name: 'MonitePayableStatusChip'
    });
    const { i18n } = react.useLingui();
    const theme = styles$2.useTheme();
    const Icon = PAYABLE_STATUS_TO_MUI_ICON_MAP[status];
    var _theme_palette_status_status;
    const statusColor = (_theme_palette_status_status = theme.palette.status[status]) !== null && _theme_palette_status_status !== void 0 ? _theme_palette_status_status : theme.palette.grey[300];
    return /*#__PURE__*/ jsxRuntime.jsx(StyledChip$1, {
        className: "Monite-PayableStatusChip",
        ref: ref,
        sx: {
            color: statusColor,
            backgroundColor: styles$2.lighten(statusColor, 0.9),
            border: 'none',
            '& .MuiChip-icon': {
                color: statusColor
            }
        },
        icon: icon && Icon ? /*#__PURE__*/ jsxRuntime.jsx(Icon, {
            fontSize: "small"
        }) : /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Circle, {
            sx: {
                fontSize: '10px !important'
            }
        }),
        label: getRowToStatusTextMap(i18n)[status],
        size: size,
        status: status,
        variant: "outlined"
    });
});
const StyledChip$1 = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, _object_spread$1_({
        ref: ref
    }, props))), {
    name: 'MonitePayableStatusChip',
    slot: 'root',
    shouldForwardProp: ()=>true
})({});

function _define_property$1$(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1Z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1$(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1k(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1k(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1k(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DropdownMenu = ({ id = 'dropdown-menu-button', items, iconButtonProps, menuProps })=>{
    const [anchorEl, setAnchorEl] = React.useState(null);
    const isMenuOpen = Boolean(anchorEl);
    const handleMenuClick = (event)=>{
        setAnchorEl(event.currentTarget);
    };
    const handleMenuClose = ()=>{
        setAnchorEl(null);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, _object_spread_props$1k(_object_spread$1Z({
                id: id,
                onClick: handleMenuClick,
                sx: {
                    border: '1px solid',
                    borderColor: 'divider',
                    borderRadius: 1,
                    width: 40,
                    height: 40
                },
                "aria-expanded": isMenuOpen,
                "aria-haspopup": "true"
            }, iconButtonProps), {
                children: /*#__PURE__*/ jsxRuntime.jsx(MoreVertIcon__default.default, {})
            })),
            /*#__PURE__*/ jsxRuntime.jsx(material.Menu, _object_spread_props$1k(_object_spread$1Z({
                anchorEl: anchorEl,
                open: isMenuOpen,
                onClose: handleMenuClose,
                container: ()=>document.body,
                anchorOrigin: {
                    vertical: 'bottom',
                    horizontal: 'right'
                },
                transformOrigin: {
                    vertical: 'top',
                    horizontal: 'right'
                },
                MenuListProps: {
                    'aria-labelledby': id,
                    role: 'menu'
                }
            }, menuProps), {
                children: items.map(({ key, label, onClick, sx })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                        id: key,
                        onClick: (e)=>{
                            handleMenuClose();
                            onClick === null || onClick === void 0 ? void 0 : onClick(e);
                        },
                        sx: sx,
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                            primary: label
                        })
                    }, key))
            }))
        ]
    });
};

/** Returns true if the payable is in OCR processing.
 *
 * @param {PayableResponseSchema} payable - payable to check
 *
 * @returns {Boolean} - true if payable is in OCR processing
 */ const isPayableInOCRProcessing = (payable)=>{
    return payable.source_of_payable_data === 'ocr' && payable.ocr_status === 'processing';
};

const PayableDetailsCancelModal = ({ isOpen, handleCloseModal, handleConfirmation })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: isOpen,
        title: i18n._({
            id: "17ybUC"
        }),
        message: i18n._({
            id: "dwErLy"
        }),
        confirmLabel: i18n._({
            id: "gV8PY3"
        }),
        cancelLabel: i18n._({
            id: "yz7wBu"
        }),
        onClose: handleCloseModal,
        onConfirm: ()=>{
            handleCloseModal();
            handleConfirmation();
        }
    });
};

function _define_property$1_(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1Y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1_(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1j(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1j(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1j(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$t(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$t(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$t(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const PayableDetailsHeader = ({ payable, permissions, setEdit, isEdit, submitInvoice, rejectInvoice, approveInvoice, forceRejectInvoice, forceApproveInvoice, cancelInvoice, reopenInvoice, deleteInvoice, payInvoice, payableDetailsFormId, onClose, modalComponent, showPayButton })=>{
    const { i18n } = react.useLingui();
    const { data: counterpart } = useCounterpartById(payable === null || payable === void 0 ? void 0 : payable.counterpart_id);
    const [showCancelationModal, setShowCancelationModal] = React.useState(false);
    const counterpartName = getCounterpartName(counterpart);
    const buttonsByPermissions = {
        edit: {
            variant: 'outlined',
            onClick: ()=>setEdit(true),
            children: i18n._({
                id: "ePK91l"
            })
        },
        save: {
            variant: 'contained',
            form: payableDetailsFormId,
            type: 'submit',
            children: i18n._({
                id: "tfDRzk"
            })
        },
        cancelEdit: {
            variant: 'outlined',
            onClick: ()=>{
                setEdit(false);
                !payable && onClose && onClose();
            },
            children: i18n._({
                id: "dEgA5A"
            })
        },
        submit: {
            variant: 'contained',
            onClick: submitInvoice,
            children: i18n._({
                id: "hQRttt"
            })
        },
        reject: {
            variant: 'text',
            color: 'error',
            onClick: rejectInvoice,
            children: i18n._({
                id: "1t/NnN"
            })
        },
        reopen: {
            variant: 'text',
            color: 'error',
            onClick: reopenInvoice,
            children: i18n._({
                id: "M7SqjM"
            })
        },
        approve: {
            variant: 'contained',
            onClick: approveInvoice,
            children: i18n._({
                id: "Z7ZXbT"
            })
        },
        cancel: {
            variant: 'text',
            color: 'error',
            onClick: ()=>setShowCancelationModal(true),
            children: i18n._({
                id: "gV8PY3"
            })
        },
        delete: {
            variant: 'text',
            color: 'error',
            onClick: ()=>{
                deleteInvoice();
                onClose === null || onClose === void 0 ? void 0 : onClose();
            },
            children: i18n._({
                id: "WjOQ6i"
            })
        },
        pay: {
            variant: 'contained',
            onClick: payInvoice,
            disabled: !showPayButton,
            children: i18n._({
                id: "4fL/V7"
            })
        },
        forceApprove: {
            variant: 'outlined',
            onClick: forceApproveInvoice,
            children: i18n._({
                id: "r5itpS"
            })
        },
        forceReject: {
            variant: 'outlined',
            color: 'error',
            onClick: forceRejectInvoice,
            children: i18n._({
                id: "DkyYG5"
            })
        }
    };
    const className = 'Monite-PayableDetails-Header';
    const canCancel = permissions.includes('cancel');
    const title = (payable === null || payable === void 0 ? void 0 : payable.document_id) ? counterpartName ? `${i18n._({
        id: "+oNtoi"
    })} #${payable.document_id} ${i18n._({
        id: "GtmO8/"
    })} ${counterpartName}` : isEdit ? `${i18n._({
        id: "/rg8lL"
    })} #${payable.document_id}` : `${i18n._({
        id: "+oNtoi"
    })} #${payable.document_id}` : i18n._({
        id: "HAk4s+"
    });
    let actions = null;
    if (!payable || !isPayableInOCRProcessing(payable)) {
        const normalActions = permissions.filter((p)=>p === 'approve' || p === 'reject');
        const forceActions = permissions.filter((p)=>p === 'forceApprove' || p === 'forceReject');
        const forceActionsOrdered = [
            'forceApprove',
            'forceReject'
        ].filter((p)=>forceActions.includes(p));
        const forceDropdownItems = forceActionsOrdered.map((permission)=>{
            const { children, onClick } = buttonsByPermissions[permission];
            return {
                key: permission,
                label: children,
                onClick: onClick,
                sx: {
                    color: permission === 'forceReject' ? 'error.main' : 'text.primary'
                }
            };
        });
        const otherActions = permissions.filter((p)=>![
                'approve',
                'reject',
                'forceApprove',
                'forceReject'
            ].includes(p));
        actions = /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            sx: {
                display: 'flex',
                alignItems: 'center',
                gap: 1
            },
            children: [
                otherActions.map((permission)=>{
                    const _buttonsByPermissions_permission = buttonsByPermissions[permission], { children } = _buttonsByPermissions_permission, restProps = _object_without_properties$t(_buttonsByPermissions_permission, [
                        "children"
                    ]);
                    return /*#__PURE__*/ jsxRuntime.jsx(material.Button, _object_spread_props$1j(_object_spread$1Y({}, restProps), {
                        children: children
                    }), permission);
                }),
                normalActions.length > 0 && normalActions.map((permission)=>{
                    const _buttonsByPermissions_permission = buttonsByPermissions[permission], { children } = _buttonsByPermissions_permission, restProps = _object_without_properties$t(_buttonsByPermissions_permission, [
                        "children"
                    ]);
                    return /*#__PURE__*/ jsxRuntime.jsx(material.Button, _object_spread_props$1j(_object_spread$1Y({}, restProps), {
                        children: children
                    }), permission);
                }),
                forceActionsOrdered.length > 0 && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenu, {
                    items: forceDropdownItems
                })
            ]
        });
    }
    var _payable_status;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(FullScreenModalHeader, {
                className: className,
                title: title,
                statusElement: /*#__PURE__*/ jsxRuntime.jsx(PayableStatusChip, {
                    status: (_payable_status = payable === null || payable === void 0 ? void 0 : payable.status) !== null && _payable_status !== void 0 ? _payable_status : 'draft'
                }),
                actions: actions,
                closeButtonTooltip: i18n._({
                    id: "oaBfzi"
                })
            }),
            modalComponent,
            canCancel && /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsCancelModal, {
                isOpen: showCancelationModal,
                handleCloseModal: ()=>setShowCancelationModal(false),
                handleConfirmation: cancelInvoice
            })
        ]
    });
};

const useGetPayableCounterpart = ({ payable })=>{
    var _AISuggestions_suggested_counterpart, _payable_counterpart_raw_data, _AISuggestions_suggested_counterpart1;
    // Heuristic to get the Counterpart for the Payable, potentially with AI suggestions or OCR matching.
    // A) Get Counterpart data from Payable data, if payable.counterpart_id
    // also, if Payable status is 'draft' or 'new':
    // B) Get Counterpart data from AI suggestions, if !payable.counterpart_id
    // C) Get Counterpart matching name from raw OCR, if !payable.counterpart_id && !aiSuggestions?.suggested_counterpart?.id
    const { api } = useMoniteContext();
    // Get AI suggestions for the Payable, if not set payable.counterpart_id
    const shouldFetchAISuggestions = React.useMemo(()=>Boolean(!(payable === null || payable === void 0 ? void 0 : payable.counterpart_id)) && Boolean((payable === null || payable === void 0 ? void 0 : payable.status) === 'draft' || (payable === null || payable === void 0 ? void 0 : payable.status) === 'new'), [
        payable === null || payable === void 0 ? void 0 : payable.counterpart_id,
        payable === null || payable === void 0 ? void 0 : payable.status
    ]);
    var _payable_id;
    const { data: AISuggestions, isLoading: isAISuggestionsLoading } = api.payables.getPayablesIdSuggestions.useQuery({
        path: {
            payable_id: (_payable_id = payable === null || payable === void 0 ? void 0 : payable.id) !== null && _payable_id !== void 0 ? _payable_id : ''
        }
    }, {
        enabled: !!shouldFetchAISuggestions && !!(payable === null || payable === void 0 ? void 0 : payable.id)
    });
    // Determine the Counterpart ID to use, based on the AI suggestions and the Payable data
    const counterpartId = React.useMemo(()=>{
        var _AISuggestions_suggested_counterpart;
        var _payable_counterpart_id, _ref;
        return (_ref = (_payable_counterpart_id = payable === null || payable === void 0 ? void 0 : payable.counterpart_id) !== null && _payable_counterpart_id !== void 0 ? _payable_counterpart_id : AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart === void 0 ? void 0 : _AISuggestions_suggested_counterpart.id) !== null && _ref !== void 0 ? _ref : null;
    }, [
        payable === null || payable === void 0 ? void 0 : payable.counterpart_id,
        AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart === void 0 ? void 0 : _AISuggestions_suggested_counterpart.id
    ]);
    // Get the Counterpart data, based on the determined Counterpart ID
    const { data: counterpart, isLoading: isCounterpartLoading } = useCounterpartById(counterpartId !== null && counterpartId !== void 0 ? counterpartId : undefined);
    // Get Counterpart that matches raw OCR data name
    const counterpartRawName = React.useMemo(()=>{
        var _payable_counterpart_raw_data;
        return payable === null || payable === void 0 ? void 0 : (_payable_counterpart_raw_data = payable.counterpart_raw_data) === null || _payable_counterpart_raw_data === void 0 ? void 0 : _payable_counterpart_raw_data.name;
    }, [
        payable === null || payable === void 0 ? void 0 : (_payable_counterpart_raw_data = payable.counterpart_raw_data) === null || _payable_counterpart_raw_data === void 0 ? void 0 : _payable_counterpart_raw_data.name
    ]);
    const shouldCheckOCRMatching = React.useMemo(()=>Boolean(!counterpartId) && Boolean(counterpartRawName) && !isAISuggestionsLoading && Boolean((payable === null || payable === void 0 ? void 0 : payable.status) === 'draft' || (payable === null || payable === void 0 ? void 0 : payable.status) === 'new'), [
        counterpartId,
        counterpartRawName,
        isAISuggestionsLoading,
        payable === null || payable === void 0 ? void 0 : payable.status
    ]);
    const { data: counterpartMatchingToOCR, isLoading: isCounterpartMatchingToOCRLoading } = api.counterparts.getCounterparts.useQuery({
        query: {
            counterpart_name__icontains: counterpartRawName,
            is_vendor: true,
            limit: 1
        }
    }, {
        enabled: shouldCheckOCRMatching,
        select: (data)=>data.data[0]
    });
    const isCounterpartAIMatched = React.useMemo(()=>{
        var _AISuggestions_suggested_counterpart;
        return Boolean(AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart === void 0 ? void 0 : _AISuggestions_suggested_counterpart.id) && shouldFetchAISuggestions;
    }, [
        AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart1 = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart1 === void 0 ? void 0 : _AISuggestions_suggested_counterpart1.id,
        shouldFetchAISuggestions
    ]);
    const isCounterpartMatchingToOCRFound = React.useMemo(()=>Boolean(counterpartMatchingToOCR === null || counterpartMatchingToOCR === void 0 ? void 0 : counterpartMatchingToOCR.id) && shouldCheckOCRMatching, [
        counterpartMatchingToOCR === null || counterpartMatchingToOCR === void 0 ? void 0 : counterpartMatchingToOCR.id,
        shouldCheckOCRMatching
    ]);
    const isCounterpartLoadingCombined = React.useMemo(()=>isAISuggestionsLoading || isCounterpartMatchingToOCRLoading || isCounterpartLoading, [
        isAISuggestionsLoading,
        isCounterpartMatchingToOCRLoading,
        isCounterpartLoading
    ]);
    return {
        counterpart: counterpartMatchingToOCR !== null && counterpartMatchingToOCR !== void 0 ? counterpartMatchingToOCR : counterpart,
        counterpartRawName,
        isCounterpartAIMatched,
        isCounterpartMatchingToOCRFound,
        isCounterpartLoading: isCounterpartLoadingCombined,
        AISuggestions: AISuggestions
    };
};

const usePayableDetailsThemeProps = (inProps)=>{
    var _componentSettings_payables, _componentSettings_payables1, _componentSettings_payables2, _componentSettings_payables3;
    const { componentSettings } = useMoniteContext();
    var _inProps_optionalFields, _inProps_ocrRequiredFields, _inProps_ocrMismatchFields, _inProps_isTagsDisabled;
    return {
        optionalFields: (_inProps_optionalFields = inProps === null || inProps === void 0 ? void 0 : inProps.optionalFields) !== null && _inProps_optionalFields !== void 0 ? _inProps_optionalFields : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables = componentSettings.payables) === null || _componentSettings_payables === void 0 ? void 0 : _componentSettings_payables.optionalFields,
        ocrRequiredFields: (_inProps_ocrRequiredFields = inProps === null || inProps === void 0 ? void 0 : inProps.ocrRequiredFields) !== null && _inProps_ocrRequiredFields !== void 0 ? _inProps_ocrRequiredFields : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables1 = componentSettings.payables) === null || _componentSettings_payables1 === void 0 ? void 0 : _componentSettings_payables1.ocrRequiredFields,
        ocrMismatchFields: (_inProps_ocrMismatchFields = inProps === null || inProps === void 0 ? void 0 : inProps.ocrMismatchFields) !== null && _inProps_ocrMismatchFields !== void 0 ? _inProps_ocrMismatchFields : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables2 = componentSettings.payables) === null || _componentSettings_payables2 === void 0 ? void 0 : _componentSettings_payables2.ocrMismatchFields,
        isTagsDisabled: (_inProps_isTagsDisabled = inProps === null || inProps === void 0 ? void 0 : inProps.isTagsDisabled) !== null && _inProps_isTagsDisabled !== void 0 ? _inProps_isTagsDisabled : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables3 = componentSettings.payables) === null || _componentSettings_payables3 === void 0 ? void 0 : _componentSettings_payables3.isTagsDisabled
    };
};

/**
 * Custom hook that creates memoized payable callbacks.
 * Each callback calls both the direct prop callback and the component settings callback.
 * Returns undefined for callbacks when neither the direct prop nor component settings callback is defined.
 *
 * @param props - Direct callback props from component props
 * @returns Object with memoized callback handlers (or undefined when no callbacks are defined)
 */ const usePayableCallbacks = (props)=>{
    const { payablesCallbacks } = useComponentSettings();
    const { onSaved, onCanceled, onSubmitted, onRejected, onApproved, onReopened, onDeleted, onPay } = props;
    const savedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onSaved;
        onSaved === null || onSaved === void 0 ? void 0 : onSaved(id);
        (_payablesCallbacks_onSaved = payablesCallbacks.onSaved) === null || _payablesCallbacks_onSaved === void 0 ? void 0 : _payablesCallbacks_onSaved.call(payablesCallbacks, id);
    }, [
        onSaved,
        payablesCallbacks
    ]);
    const handleSaved = onSaved || payablesCallbacks.onSaved ? savedCallback : undefined;
    const canceledCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onCanceled;
        onCanceled === null || onCanceled === void 0 ? void 0 : onCanceled(id);
        (_payablesCallbacks_onCanceled = payablesCallbacks.onCanceled) === null || _payablesCallbacks_onCanceled === void 0 ? void 0 : _payablesCallbacks_onCanceled.call(payablesCallbacks, id);
    }, [
        onCanceled,
        payablesCallbacks
    ]);
    const handleCanceled = onCanceled || payablesCallbacks.onCanceled ? canceledCallback : undefined;
    const submittedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onSubmitted;
        onSubmitted === null || onSubmitted === void 0 ? void 0 : onSubmitted(id);
        (_payablesCallbacks_onSubmitted = payablesCallbacks.onSubmitted) === null || _payablesCallbacks_onSubmitted === void 0 ? void 0 : _payablesCallbacks_onSubmitted.call(payablesCallbacks, id);
    }, [
        onSubmitted,
        payablesCallbacks
    ]);
    const handleSubmitted = onSubmitted || payablesCallbacks.onSubmitted ? submittedCallback : undefined;
    const rejectedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onRejected;
        onRejected === null || onRejected === void 0 ? void 0 : onRejected(id);
        (_payablesCallbacks_onRejected = payablesCallbacks.onRejected) === null || _payablesCallbacks_onRejected === void 0 ? void 0 : _payablesCallbacks_onRejected.call(payablesCallbacks, id);
    }, [
        onRejected,
        payablesCallbacks
    ]);
    const handleRejected = onRejected || payablesCallbacks.onRejected ? rejectedCallback : undefined;
    const approvedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onApproved;
        onApproved === null || onApproved === void 0 ? void 0 : onApproved(id);
        (_payablesCallbacks_onApproved = payablesCallbacks.onApproved) === null || _payablesCallbacks_onApproved === void 0 ? void 0 : _payablesCallbacks_onApproved.call(payablesCallbacks, id);
    }, [
        onApproved,
        payablesCallbacks
    ]);
    const handleApproved = onApproved || payablesCallbacks.onApproved ? approvedCallback : undefined;
    const reopenedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onReopened;
        onReopened === null || onReopened === void 0 ? void 0 : onReopened(id);
        (_payablesCallbacks_onReopened = payablesCallbacks.onReopened) === null || _payablesCallbacks_onReopened === void 0 ? void 0 : _payablesCallbacks_onReopened.call(payablesCallbacks, id);
    }, [
        onReopened,
        payablesCallbacks
    ]);
    const handleReopened = onReopened || payablesCallbacks.onReopened ? reopenedCallback : undefined;
    const deletedCallback = React.useCallback((id)=>{
        var _payablesCallbacks_onDeleted;
        onDeleted === null || onDeleted === void 0 ? void 0 : onDeleted(id);
        (_payablesCallbacks_onDeleted = payablesCallbacks.onDeleted) === null || _payablesCallbacks_onDeleted === void 0 ? void 0 : _payablesCallbacks_onDeleted.call(payablesCallbacks, id);
    }, [
        onDeleted,
        payablesCallbacks
    ]);
    const handleDeleted = onDeleted || payablesCallbacks.onDeleted ? deletedCallback : undefined;
    const payCallback = React.useCallback((id, data, actions)=>{
        var _payablesCallbacks_onPay;
        onPay === null || onPay === void 0 ? void 0 : onPay(id, data, actions);
        (_payablesCallbacks_onPay = payablesCallbacks.onPay) === null || _payablesCallbacks_onPay === void 0 ? void 0 : _payablesCallbacks_onPay.call(payablesCallbacks, id, data, actions);
    }, [
        onPay,
        payablesCallbacks
    ]);
    const handlePay = onPay || payablesCallbacks.onPay ? payCallback : undefined;
    return {
        handleSaved,
        handleCanceled,
        handleSubmitted,
        handleRejected,
        handleApproved,
        handleReopened,
        handleDeleted,
        handlePay
    };
};

const usePayButtonVisibility = ({ payable, payableRecentPaymentRecordByIntent })=>{
    const { data: isPayAllowed } = useIsActionAllowed({
        method: 'payable',
        action: 'pay',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const payableStatusCanBePaid = React.useMemo(()=>payable ? [
            'waiting_to_be_paid',
            'partially_paid'
        ].includes(payable.status) : false, [
        payable
    ]);
    const intentsAnalysis = React.useMemo(()=>{
        const scheduledIntents = [];
        const processingIntents = [];
        const succeededIntents = [];
        const createdRecords = [];
        let hasAnyIntentOtherThanCreated = false;
        const aggregation = {};
        // Aggregate the payment intents by status
        payableRecentPaymentRecordByIntent.forEach((item)=>{
            const { record } = item;
            // Collect for different status arrays
            if (record.planned_payment_date) {
                scheduledIntents.push(item);
            }
            if (record.status === 'processing') {
                processingIntents.push(item);
            }
            if (record.status === 'succeeded') {
                succeededIntents.push(item);
            }
            if (record.status === 'created') {
                createdRecords.push(item);
            }
            if (record.status !== 'created') {
                hasAnyIntentOtherThanCreated = true;
            }
            // Build aggregation
            const status = record.planned_payment_date ? 'scheduled' : record.status;
            if (!aggregation[status]) {
                aggregation[status] = {
                    count: 0,
                    sum: 0,
                    records: []
                };
            }
            aggregation[status].count++;
            aggregation[status].sum += record.amount;
            aggregation[status].records.push(record);
        });
        return {
            scheduledIntents,
            processingIntents,
            succeededIntents,
            createdRecords,
            hasAnyIntentOtherThanCreated,
            aggregation,
            idPaymentIntentInCreated: createdRecords.length > 0 ? createdRecords[0].intent : undefined
        };
    }, [
        payableRecentPaymentRecordByIntent
    ]);
    const showPayButton = React.useMemo(()=>{
        // Don't show pay button if payable data hasn't loaded yet
        if (!payable) {
            return false;
        }
        const hasAmountToPay = Number(payable.amount_to_pay) > 0;
        // Has only intents on status 'created' or 'canceled'
        const hasPaidIntents = intentsAnalysis.scheduledIntents.length > 0 || intentsAnalysis.processingIntents.length > 0 || intentsAnalysis.succeededIntents.length > 0;
        return isPayAllowed && payableStatusCanBePaid && hasAmountToPay && !hasPaidIntents;
    }, [
        payable,
        isPayAllowed,
        payableStatusCanBePaid,
        intentsAnalysis.scheduledIntents.length,
        intentsAnalysis.processingIntents.length,
        intentsAnalysis.succeededIntents.length
    ]);
    return {
        showPayButton,
        isPayAllowed,
        payableStatusCanBePaid,
        intentsAnalysis
    };
};

const useLedgerAccounts = (enabled = true)=>{
    const { api } = useMoniteContext();
    return api.ledgerAccounts.getLedgerAccounts.useQuery({
        query: {
            limit: 250,
            sort: 'name'
        }
    }, {
        enabled,
        staleTime: 5 * 60 * 1000
    });
};

const useCounterpartsBankAccountsList = (counterpartId)=>{
    const { api } = useMoniteContext();
    return api.counterparts.getCounterpartsIdBankAccounts.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: !!counterpartId
    });
};

function usePayableDetailsInfo({ currentCounterpartId, payableId }) {
    const { api } = useMoniteContext();
    const counterpartBankAccountQuery = useCounterpartsBankAccountsList(currentCounterpartId);
    const lineItemsQuery = api.payables.getPayablesIdLineItems.useQuery({
        path: {
            payable_id: payableId
        }
    });
    return {
        counterpartBankAccountQuery,
        lineItemsQuery
    };
}

function _define_property$1Z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1X(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1Z(target, key, source[key]);
        });
    }
    return target;
}
const UserDisplayCell = ({ user, showUserEmail = false, showAvatar = true, avatarSize = 24, variant = 'inline', typographyVariant = 'body2', sx })=>{
    const displayName = React.useMemo(()=>getUserDisplayName(user, showUserEmail), [
        user,
        showUserEmail
    ]);
    const altDisplayName = React.useMemo(()=>getIndividualName(user.first_name || '', user.last_name || ''), [
        user.first_name,
        user.last_name
    ]);
    if (variant === 'stacked') {
        return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            sx: _object_spread$1X({
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                gap: 1
            }, sx),
            children: [
                showAvatar && /*#__PURE__*/ jsxRuntime.jsx(UserAvatar, {
                    sx: {
                        width: avatarSize,
                        height: avatarSize
                    },
                    alt: altDisplayName,
                    fileId: user.userpic_file_id
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: typographyVariant,
                    title: displayName !== null && displayName !== void 0 ? displayName : '',
                    sx: {
                        overflow: 'hidden',
                        textOverflow: 'ellipsis',
                        whiteSpace: 'nowrap',
                        textAlign: 'center'
                    },
                    children: displayName !== null && displayName !== void 0 ? displayName : ''
                })
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: _object_spread$1X({
            display: 'flex',
            alignItems: 'center',
            gap: 1
        }, sx),
        children: [
            showAvatar && /*#__PURE__*/ jsxRuntime.jsx(UserAvatar, {
                sx: {
                    width: avatarSize,
                    height: avatarSize
                },
                alt: altDisplayName,
                fileId: user.userpic_file_id
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: typographyVariant,
                title: displayName !== null && displayName !== void 0 ? displayName : '',
                sx: {
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                },
                children: displayName !== null && displayName !== void 0 ? displayName : ''
            })
        ]
    });
};

function _define_property$1Y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
class ApprovalStepResolver {
    processApprovalItem(item, stepNumber) {
        const approvalCalls = extractApprovalCalls(item);
        const userApprovalCall = findUserApprovalCall(approvalCalls);
        const roleApprovalCall = findRoleApprovalCall(approvalCalls);
        const stepType = getApprovalRuleLabel(userApprovalCall, roleApprovalCall, this.i18n);
        if (approvalCalls.length > 1 && userApprovalCall) {
            const { allChainUserIds, allChainRequests } = processChainApprovalCalls(approvalCalls, this.requests);
            const chainTypeLabel = this.i18n._({
                id: "KH5s01"
            });
            return createChainApprovalStep(allChainUserIds, allChainRequests, stepNumber, chainTypeLabel);
        } else {
            const firstCall = approvalCalls[0];
            if (firstCall) {
                const processedStep = resolveStepForCall(firstCall, this.requests);
                return createBaseApprovalStep(processedStep, stepNumber, stepType);
            }
            const emptyProcessedStep = {
                assignees: [],
                roleIds: [],
                actualAssignees: [],
                relatedRequests: [],
                isRoleBased: false,
                stepStatus: 'waiting',
                approvalRequestId: undefined,
                approvedBy: undefined,
                objectId: undefined,
                rejectedBy: undefined,
                requiredApprovalCount: 1
            };
            return createBaseApprovalStep(emptyProcessedStep, stepNumber, stepType);
        }
    }
    buildCompleteSteps() {
        const steps = [];
        let stepNumber = 1;
        this.policyScript.forEach((scriptStep)=>{
            const itemsToProcess = extractItemsFromScriptStep(scriptStep);
            if (itemsToProcess.length > 0) {
                itemsToProcess.forEach((item)=>{
                    const step = this.processApprovalItem(item, stepNumber);
                    steps.push(step);
                });
                stepNumber++;
            }
        });
        return steps;
    }
    constructor(policyScript, requests, i18n){
        _define_property$1Y(this, "policyScript", void 0);
        _define_property$1Y(this, "requests", void 0);
        _define_property$1Y(this, "i18n", void 0);
        this.policyScript = policyScript;
        this.requests = requests;
        this.i18n = i18n;
    }
}

function _define_property$1X(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1W(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1X(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1i(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1i(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1i(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Base hook that handles the core logic for resolving approval steps
 * @param payableId - The payable ID for fetching approval requests
 * @param policyId - The approval policy ID for fetching policy details
 * @param order - The order for fetching approval requests (default: 'desc')
 * @returns Resolved approval steps with user and role information
 */ function useResolvedApprovalStepsBase(payableId, policyId, order = 'desc') {
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { data: approvalRequests, isLoading: isLoadingRequests } = api.approvalRequests.getApprovalRequests.useQuery({
        query: {
            object_id: payableId,
            object_type: 'payable',
            limit: 50,
            order
        }
    });
    const { data: approvalPolicyDetails, isLoading: isLoadingPolicy } = api.approvalPolicies.getApprovalPoliciesId.useQuery({
        path: {
            approval_policy_id: policyId
        }
    });
    const requests = React.useMemo(()=>(approvalRequests === null || approvalRequests === void 0 ? void 0 : approvalRequests.data) || [], [
        approvalRequests
    ]);
    const policyScript = React.useMemo(()=>(approvalPolicyDetails === null || approvalPolicyDetails === void 0 ? void 0 : approvalPolicyDetails.script) || [], [
        approvalPolicyDetails
    ]);
    const enhancedSteps = React.useMemo(()=>{
        if (!policyScript.length || !requests) return [];
        const resolver = new ApprovalStepResolver(policyScript, requests, i18n);
        return resolver.buildCompleteSteps();
    }, [
        policyScript,
        requests,
        i18n
    ]);
    const allUserIds = React.useMemo(()=>{
        const userIds = new Set();
        policyScript.forEach((scriptStep)=>{
            var _userApprovalCall_params;
            const structureItems = extractStructureItemsFromScriptStep(scriptStep);
            const approvalCalls = processApprovalStructure(structureItems);
            const userApprovalCall = findUserApprovalCall(approvalCalls);
            if (userApprovalCall === null || userApprovalCall === void 0 ? void 0 : (_userApprovalCall_params = userApprovalCall.params) === null || _userApprovalCall_params === void 0 ? void 0 : _userApprovalCall_params.user_ids) {
                userApprovalCall.params.user_ids.forEach((userId)=>userIds.add(userId));
            }
        });
        enhancedSteps.forEach((step)=>{
            step.actualAssignees.forEach((userId)=>userIds.add(userId));
        });
        return Array.from(userIds);
    }, [
        policyScript,
        enhancedSteps
    ]);
    const allRoleIds = React.useMemo(()=>{
        const ids = new Set();
        enhancedSteps.forEach((step)=>{
            if (step.isRoleBased) {
                step.roleIds.forEach((id)=>ids.add(id));
            }
        });
        return Array.from(ids);
    }, [
        enhancedSteps
    ]);
    const { data: entityUsers, isLoading: isLoadingUsers } = api.entityUsers.getEntityUsers.useQuery({
        query: {
            id__in: allUserIds.length > 0 ? allUserIds : undefined,
            limit: 100
        }
    }, {
        enabled: allUserIds.length > 0
    });
    const { data: rolesData, isLoading: isLoadingRoles } = api.roles.getRoles.useQuery({
        query: {
            id__in: allRoleIds.length > 0 ? allRoleIds : undefined
        }
    }, {
        enabled: allRoleIds.length > 0
    });
    const userDataMap = React.useMemo(()=>{
        const map = new Map();
        if (entityUsers === null || entityUsers === void 0 ? void 0 : entityUsers.data) {
            entityUsers.data.forEach((user)=>{
                map.set(user.id, user);
            });
        }
        return map;
    }, [
        entityUsers
    ]);
    const roleDataMap = React.useMemo(()=>{
        var _rolesData_data;
        const map = new Map();
        rolesData === null || rolesData === void 0 ? void 0 : (_rolesData_data = rolesData.data) === null || _rolesData_data === void 0 ? void 0 : _rolesData_data.forEach((role)=>{
            map.set(role.id, role);
        });
        return map;
    }, [
        rolesData
    ]);
    const resolvedSteps = React.useMemo(()=>enhancedSteps.map((step)=>_object_spread_props$1i(_object_spread$1W({}, step), {
                resolvedUsers: step.actualAssignees.map((id)=>userDataMap.get(id)),
                resolvedRoles: step.roleIds.map((id)=>roleDataMap.get(id)),
                roleNames: step.roleIds.map((id)=>{
                    const role = roleDataMap.get(id);
                    return (role === null || role === void 0 ? void 0 : role.name) || id;
                }),
                userNames: step.actualAssignees.map((id)=>{
                    const user = userDataMap.get(id);
                    if (!user) return id;
                    const fullName = `${user.first_name || ''} ${user.last_name || ''}`.trim();
                    return fullName || user.email || user.login || id;
                })
            })), [
        enhancedSteps,
        userDataMap,
        roleDataMap
    ]);
    const isLoading = isLoadingRequests || isLoadingPolicy || isLoadingUsers || isLoadingRoles;
    return {
        steps: resolvedSteps,
        isLoading,
        error: null
    };
}
/**
 * Hook for resolving approval steps with a specific approval policy
 * @param payableId - The payable ID for fetching approval requests
 * @param approvalPolicy - The approval policy resource containing the policy ID
 * @returns Resolved approval steps with user and role information
 */ function useResolvedApprovalStepsWithPolicy(payableId, approvalPolicy) {
    return useResolvedApprovalStepsBase(payableId, approvalPolicy.id, 'desc');
}

const PayableApprovalFlowSection = ({ approvalPolicy, payableId, showUsersAsEmail = true })=>{
    const { i18n } = react.useLingui();
    const { steps, isLoading } = useResolvedApprovalStepsWithPolicy(payableId, approvalPolicy);
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            sx: {
                display: 'flex',
                justifyContent: 'center',
                p: 3
            },
            children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                size: 20
            })
        });
    }
    if (!steps.length) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: {
            mt: 4
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "h6",
                gutterBottom: true,
                sx: {
                    fontWeight: 600
                },
                children: i18n._({
                    id: "FhYMo6"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                variant: "outlined",
                sx: {
                    mt: 2
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                    sx: {
                        tableLayout: 'fixed',
                        width: '100%'
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                        children: steps.map((step, index)=>/*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        sx: {
                                            verticalAlign: 'middle',
                                            py: 2,
                                            width: '160px'
                                        },
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body2",
                                            color: "text.primary",
                                            sx: {
                                                fontWeight: 'normal'
                                            },
                                            children: step.type
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        sx: {
                                            py: 2,
                                            verticalAlign: 'middle',
                                            minWidth: '52px'
                                        },
                                        children: step.isRoleBased ? step.roleIds.length > 0 ? /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                                            direction: "row",
                                            spacing: 1,
                                            flexWrap: "wrap",
                                            useFlexGap: true,
                                            sx: {
                                                '& > *': {
                                                    flexShrink: 0
                                                }
                                            },
                                            children: step.resolvedRoles.map((role)=>role && /*#__PURE__*/ jsxRuntime.jsx(Role, {
                                                    roleId: role.id,
                                                    roleData: role,
                                                    quoted: true
                                                }, role.id))
                                        }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body2",
                                            color: "text.secondary",
                                            sx: {
                                                fontWeight: 'medium'
                                            },
                                            children: i18n._({
                                                id: "Ztme7I"
                                            })
                                        }) : step.userNames.length > 0 ? /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                                            direction: "column",
                                            spacing: 0.5,
                                            sx: {
                                                overflow: 'hidden'
                                            },
                                            children: step.resolvedUsers.map((user)=>{
                                                if (!user) return null;
                                                return /*#__PURE__*/ jsxRuntime.jsx(User, {
                                                    user: user,
                                                    variant: "cell",
                                                    showUsersAsEmail: showUsersAsEmail,
                                                    showAvatar: false
                                                }, user.id);
                                            })
                                        }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body2",
                                            color: "text.secondary",
                                            sx: {
                                                fontWeight: 'medium'
                                            },
                                            children: i18n._({
                                                id: "Mxm2Pc"
                                            })
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        sx: {
                                            py: 2,
                                            textAlign: 'right',
                                            verticalAlign: 'middle',
                                            width: '140px'
                                        },
                                        children: /*#__PURE__*/ jsxRuntime.jsx(PayableStatusChip, {
                                            status: step.payableStatus,
                                            size: "small"
                                        })
                                    })
                                ]
                            }, index))
                    })
                })
            })
        ]
    });
};

/**
 * Resolve how to propagate a possibly-nullable field.
 *
 * Behavior:
 * - If current is provided (including null), return current
 * - Else if previous exists, return null (explicit unset)
 * - Else return undefined (omit)
 */ function resolveNullableUpdate(current, previous) {
    if (current !== undefined) return current;
    if (previous !== undefined) return null;
    return undefined;
}

const counterpartsToSelect = (counterparts)=>{
    if (!counterparts) return [];
    return counterparts.map((counterpart)=>({
            value: counterpart.id,
            label: isIndividualCounterpart(counterpart) ? getIndividualName(counterpart.individual.first_name, counterpart.individual.last_name) : isOrganizationCounterpart(counterpart) ? counterpart.organization.legal_name : ''
        }));
};
/** Prepare date to be sent to the Monite API with the correct format (yyyy-MM-dd)
 *
 * @see {@link https://docs.monite.com/reference/patch_payables_id} for additional information.
 * @param {date} date - Date to be formatted
 * @returns {string} - Formatted date
 * */ const dateToString = (date)=>{
    return dateFns.format(date, 'yyyy-MM-dd');
};
const prepareDefaultValues = (formatFromMinorUnits, payable, lineItems)=>{
    if (!payable) {
        return {
            invoiceNumber: '',
            counterpart: '',
            counterpartBankAccount: '',
            invoiceDate: undefined,
            dueDate: undefined,
            currency: 'EUR',
            tags: [],
            discount: null,
            lineItems: [
                {
                    id: '',
                    name: '',
                    quantity: 1,
                    price: 0,
                    tax: 19
                }
            ]
        };
    }
    const { document_id, counterpart_id, counterpart_bank_account_id, issued_at, due_date, currency, tags, discount } = payable;
    return {
        invoiceNumber: document_id !== null && document_id !== void 0 ? document_id : '',
        counterpart: counterpart_id !== null && counterpart_id !== void 0 ? counterpart_id : '',
        counterpartBankAccount: counterpart_bank_account_id !== null && counterpart_bank_account_id !== void 0 ? counterpart_bank_account_id : '',
        invoiceDate: issued_at ? new Date(issued_at) : undefined,
        dueDate: due_date ? new Date(due_date) : undefined,
        currency: currency !== null && currency !== void 0 ? currency : 'EUR',
        tags: tags !== null && tags !== void 0 ? tags : [],
        discount: discount && currency ? formatFromMinorUnits(discount, currency) : null,
        lineItems: (lineItems || []).map((lineItem)=>{
            var _lineItem_id, _lineItem_name, _lineItem_quantity, _formatFromMinorUnits;
            return {
                id: (_lineItem_id = lineItem.id) !== null && _lineItem_id !== void 0 ? _lineItem_id : '',
                name: (_lineItem_name = lineItem.name) !== null && _lineItem_name !== void 0 ? _lineItem_name : '',
                quantity: (_lineItem_quantity = lineItem.quantity) !== null && _lineItem_quantity !== void 0 ? _lineItem_quantity : 1,
                price: lineItem.unit_price && currency ? (_formatFromMinorUnits = formatFromMinorUnits(lineItem.unit_price, currency)) !== null && _formatFromMinorUnits !== void 0 ? _formatFromMinorUnits : 0 : 0,
                tax: lineItem.tax ? formatTaxFromMinorUnits(lineItem.tax) : 0,
                ledger_account_id: lineItem.ledger_account_id
            };
        })
    };
};
const prepareSubmit = ({ discount, invoiceNumber, counterpart, counterpartBankAccount, invoiceDate, dueDate, currency, tags, counterpartAddressId }, formatToMinorUnits)=>{
    var _formatToMinorUnits;
    return {
        document_id: invoiceNumber,
        discount: discount && currency ? (_formatToMinorUnits = formatToMinorUnits(discount, currency)) !== null && _formatToMinorUnits !== void 0 ? _formatToMinorUnits : 0 : 0,
        counterpart_id: counterpart || undefined,
        counterpart_bank_account_id: counterpartBankAccount || undefined,
        issued_at: invoiceDate instanceof Date ? dateToString(invoiceDate) : undefined,
        due_date: dueDate instanceof Date ? dateToString(dueDate) : undefined,
        currency: currency,
        tag_ids: tags.map((tag)=>tag.id),
        counterpart_address_id: counterpartAddressId
    };
};
const calculateLineItemSubtotal = (price, quantity)=>{
    const subtotal = price * quantity;
    return parseFloat(subtotal.toFixed(2));
};
const calculateLineItemTotal = (subtotal, taxRate)=>{
    const total = subtotal + taxRate * subtotal / 100;
    return parseFloat(total.toFixed(2));
};
const calculateTotalPriceForLineItem = (lineItem)=>{
    const { price, quantity, tax } = lineItem;
    if (!price || !quantity) return 0;
    const subtotal = calculateLineItemSubtotal(price, quantity);
    return calculateLineItemTotal(subtotal, tax || 0);
};
const calculateTotalsForPayable = (currentLineItems, discount)=>{
    const { subtotal, taxes, total } = currentLineItems.reduce((result, lineItem)=>{
        const newSubtotal = calculateLineItemSubtotal(lineItem.price, lineItem.quantity);
        const newTotal = calculateLineItemTotal(newSubtotal, lineItem.tax || 0);
        return {
            subtotal: result.subtotal + newSubtotal,
            taxes: result.taxes + (newTotal - newSubtotal),
            total: result.total + newTotal
        };
    }, {
        subtotal: 0,
        taxes: 0,
        total: 0
    });
    return {
        subtotal,
        taxes,
        total: total - (discount !== null && discount !== void 0 ? discount : 0)
    };
};
const prepareLineItemSubmit = (currency, lineItem, formatToMinorUnits, options)=>{
    const { name, quantity, price, tax, ledger_account_id } = lineItem;
    const resolvedLedgerId = (options === null || options === void 0 ? void 0 : options.allowLedgerUpdate) ? resolveNullableUpdate(ledger_account_id, options === null || options === void 0 ? void 0 : options.previous) : ledger_account_id;
    var _formatToMinorUnits;
    const payload = {
        name,
        quantity,
        tax: formatTaxToMinorUnits(tax),
        unit_price: (_formatToMinorUnits = formatToMinorUnits(price, currency)) !== null && _formatToMinorUnits !== void 0 ? _formatToMinorUnits : 0
    };
    if (resolvedLedgerId !== undefined) {
        payload.ledger_account_id = resolvedLedgerId;
    }
    return payload;
};
function formatTaxToMinorUnits(tax) {
    return toMinorUnits(tax);
}
function formatTaxFromMinorUnits(tax) {
    return fromMinorUnits(tax);
}
const isFieldRequired = (fieldName, ocrRequiredFields, value)=>{
    const defaultRequiredFields = {
        invoiceNumber: true,
        dueDate: true,
        tags: true,
        currency: true
    };
    if (value) {
        return false;
    }
    var _defaultRequiredFields_fieldName;
    const isDefaultRequired = (_defaultRequiredFields_fieldName = defaultRequiredFields[fieldName]) !== null && _defaultRequiredFields_fieldName !== void 0 ? _defaultRequiredFields_fieldName : false;
    var _ocrRequiredFields_fieldName;
    const isOcrRequired = (_ocrRequiredFields_fieldName = ocrRequiredFields === null || ocrRequiredFields === void 0 ? void 0 : ocrRequiredFields[fieldName]) !== null && _ocrRequiredFields_fieldName !== void 0 ? _ocrRequiredFields_fieldName : false;
    return isDefaultRequired || isOcrRequired;
};
const isOcrMismatch = (payableData)=>{
    const { amount_to_pay, counterpart_bank_account_id, other_extracted_data } = payableData;
    if (!other_extracted_data || !('total' in other_extracted_data)) {
        return {
            isAmountMismatch: false,
            isBankAccountMismatch: false
        };
    }
    const { total: ocrTotal } = other_extracted_data;
    const ocrBankAccountId = 'counterpart_account_id' in other_extracted_data ? other_extracted_data.counterpart_account_id : undefined;
    const isAmountMismatch = amount_to_pay !== ocrTotal;
    const isBankAccountMismatch = counterpart_bank_account_id && ocrBankAccountId ? counterpart_bank_account_id !== ocrBankAccountId : false;
    return {
        isAmountMismatch,
        isBankAccountMismatch
    };
};
const findDefaultBankAccount = (accounts, currentCurrency)=>{
    const defaultAccount = accounts.find((acc)=>acc.currency === currentCurrency && acc.is_default_for_currency);
    return (defaultAccount === null || defaultAccount === void 0 ? void 0 : defaultAccount.id) || '';
};

const TagsModal = ({ opened, onClose, value, updateTags })=>{
    const { root } = useRootElements();
    const { i18n } = react.useLingui();
    const [updatedValue, setUpdatedValue] = React.useState(value);
    const handleTagsChange = (newTags)=>{
        setUpdatedValue(newTags);
    };
    const onUpdate = ()=>{
        updateTags === null || updateTags === void 0 ? void 0 : updateTags(updatedValue);
        onClose();
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Dialog, {
        open: opened,
        onClose: onClose,
        container: root,
        fullWidth: true,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                children: i18n._({
                    id: "7mRvJz"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                dividers: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(TagsAutocomplete, {
                    value: updatedValue,
                    onChange: handleTagsChange
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "text",
                        color: "inherit",
                        onClick: onClose,
                        children: i18n._({
                            id: "dEgA5A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        onClick: onUpdate,
                        children: i18n._({
                            id: "EkH9pt"
                        })
                    })
                ]
            })
        ]
    });
};

function _define_property$1W(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1V(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1W(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$s(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$s(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$s(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const DetailsWrapper = styles$2.styled(material.Box)(()=>({
        pb: 6,
        display: 'flex',
        flex: '1 1 auto',
        overflow: 'auto',
        width: '100%',
        height: 0
    }));
/**
 * PayableDetailsInfo component.
 *
 * This component is responsible for rendering the information about the payable..
 *
 * @component
 * @example Monite Provider customisation
 * ```ts
 * // You can configure the component through Monite Provider property `componentSettings` like this:
 * const componentSettings = {
 *   optionalFields: {
 *     invoiceDate: true,         // Show the invoice date field
 *     tags: true,                // Show the tags field
 *   },
 *   ocrMismatchFields: {
 *     amount_to_pay: true,       // Show the amount to pay field
 *     counterpart_bank_account_id: true,  // Show the counterpart bank account id field
 *   },
 *   ocrRequiredFields: {
 *     invoiceNumber: true,       // The invoice number is required based on OCR data
 *     dueDate: true,             // The due date is required based on OCR data
 *     currency: true,            // The currency is required based on OCR data
 *   },
 *   isTagsDisabled: true,        // The tags field is disabled
 * };
 * ```
 */ const PayableDetailsInfo = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsInfoBase, _object_spread$1V({}, props))
    });
const PayableDetailsInfoBase = (_param)=>{
    var { payable, enableGLCodes, updateTags } = _param, inProps = _object_without_properties$s(_param, [
        "payable",
        "enableGLCodes",
        "updateTags"
    ]);
    var _payable_currency_exchange, _payable_tags_, _payable_tags, _payable_tags1;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { ocrRequiredFields, optionalFields, ocrMismatchFields } = usePayableDetailsThemeProps(inProps);
    const { showInvoiceDate, showTags } = useOptionalFields(optionalFields, {
        showInvoiceDate: true,
        showTags: true
    });
    const { counterpart, counterpartRawName, isCounterpartLoading, isCounterpartAIMatched, isCounterpartMatchingToOCRFound } = useGetPayableCounterpart({
        payable
    });
    const { counterpartBankAccountQuery, lineItemsQuery } = usePayableDetailsInfo({
        currentCounterpartId: counterpart === null || counterpart === void 0 ? void 0 : counterpart.id,
        payableId: payable.id
    });
    const { data: ledgerAccounts } = useLedgerAccounts(enableGLCodes);
    const getLedgerAccountSubtitle = (ledgerAccountId)=>{
        if (!ledgerAccountId || !(ledgerAccounts === null || ledgerAccounts === void 0 ? void 0 : ledgerAccounts.data)) return undefined;
        const account = ledgerAccounts.data.find((acc)=>acc.id === ledgerAccountId);
        if (!account) return undefined;
        var _account_nominal_code, _ref;
        const main = account.nominal_code && account.type ? `${account.nominal_code} — ${account.type}` : (_ref = (_account_nominal_code = account.nominal_code) !== null && _account_nominal_code !== void 0 ? _account_nominal_code : account.type) !== null && _ref !== void 0 ? _ref : '';
        return main ? `${i18n._({
            id: "jPR71c"
        })}: ${main}` : undefined;
    };
    const ocrMismatchWarning = React.useMemo(()=>{
        if (!payable || !ocrMismatchFields) return null;
        const { isAmountMismatch, isBankAccountMismatch } = isOcrMismatch(payable);
        if (ocrMismatchFields.amount_to_pay && isAmountMismatch || ocrMismatchFields.counterpart_bank_account_id && isBankAccountMismatch) {
            return i18n._({
                id: "WmffQ0"
            });
        }
        return null;
    }, [
        payable,
        ocrMismatchFields,
        i18n
    ]);
    const { data: lineItemsData } = lineItemsQuery;
    const lineItems = lineItemsData === null || lineItemsData === void 0 ? void 0 : lineItemsData.data;
    const { data: contacts } = useCounterpartContactList(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const { data: addedByUser } = useEntityUserById(payable.was_created_by_user_id);
    const { data: approvalPolicy, isLoading: isApprovalPolicyLoading } = useApprovalPolicyById(payable.approval_policy_id);
    const showApprovalFlow = Boolean(approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.id);
    const defaultContact = React.useMemo(()=>contacts === null || contacts === void 0 ? void 0 : contacts.find((contact)=>contact.is_default), [
        contacts
    ]);
    const counterpartBankAccount = React.useMemo(()=>{
        var _counterpartBankAccountQuery_data;
        return (_counterpartBankAccountQuery_data = counterpartBankAccountQuery.data) === null || _counterpartBankAccountQuery_data === void 0 ? void 0 : _counterpartBankAccountQuery_data.data.find((bankAccount)=>bankAccount.id === payable.counterpart_bank_account_id);
    }, [
        counterpartBankAccountQuery,
        payable
    ]);
    const className = 'Monite-PayableDetailsInfo';
    const theme = styles$2.useTheme();
    const [showTagsModal, setShowTagsModal] = React.useState(false);
    if (isPayableInOCRProcessing(payable)) {
        return /*#__PURE__*/ jsxRuntime.jsx(DetailsWrapper, {
            className: classNames(ScopedCssBaselineContainerClassName, className, className + '--ocr-processing'),
            children: /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    textAlign: "center",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CachedOutlined, {
                            color: "primary",
                            fontSize: "large"
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h3",
                            mb: 2,
                            children: i18n._({
                                id: "217NKk"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "5GDmlP"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "yOOsg0"
                            })
                        })
                    ]
                })
            })
        });
    }
    var _payable_document_id, _payable_discount;
    return /*#__PURE__*/ jsxRuntime.jsxs(DetailsWrapper, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                spacing: 3,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        item: true,
                        xs: 12,
                        className: className + '-Details',
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle2",
                                mb: 2,
                                children: i18n._({
                                    id: "URmyfc"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                                variant: "outlined",
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                        children: [
                                            ocrMismatchWarning && /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    colSpan: 2,
                                                    style: {
                                                        color: theme.palette.error.main
                                                    },
                                                    children: ocrMismatchWarning
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('invoiceNumber', ocrRequiredFields, payable === null || payable === void 0 ? void 0 : payable.document_id) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "HptUxX"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: (_payable_document_id = payable.document_id) !== null && _payable_document_id !== void 0 ? _payable_document_id : '—'
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('counterpartName', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "lO6GxP"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(PayableCounterpartName, {
                                                            counterpart: counterpart,
                                                            counterpartRawName: counterpartRawName,
                                                            isCounterpartAIMatched: isCounterpartAIMatched,
                                                            isCounterpartMatchingToOCRFound: isCounterpartMatchingToOCRFound,
                                                            isCounterpartLoading: isCounterpartLoading
                                                        })
                                                    })
                                                ]
                                            }),
                                            defaultContact && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('contactPerson', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "OSRvgd"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: `${defaultContact.first_name} ${defaultContact.last_name}`
                                                    })
                                                ]
                                            }),
                                            counterpartBankAccount && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('counterpartBankAccount', ocrRequiredFields, counterpartBankAccount === null || counterpartBankAccount === void 0 ? void 0 : counterpartBankAccount.name) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "EYONgp"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: counterpartBankAccount.name
                                                    })
                                                ]
                                            }),
                                            showInvoiceDate && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('issueDate', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "X7pkpC"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: payable.issued_at ? i18n.date(payable.issued_at, locale.dateFormat) : '—'
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('dueDate', ocrRequiredFields, payable.due_date) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "XicmhT"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: payable.due_date ? i18n.date(payable.due_date, locale.dateFormat) : '—'
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('amount', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "72c5Qo"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                            sx: {
                                                                display: 'flex',
                                                                justifyContent: 'space-between'
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                                    children: payable.total_amount && payable.currency ? formatCurrencyToDisplay(payable.total_amount, payable.currency) : payable.currency ? formatCurrencyToDisplay(0, payable.currency) : '—'
                                                                }),
                                                                ((_payable_currency_exchange = payable.currency_exchange) === null || _payable_currency_exchange === void 0 ? void 0 : _payable_currency_exchange.default_currency_code) && payable.currency !== payable.currency_exchange.default_currency_code && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                    sx: {
                                                                        color: 'text.secondary'
                                                                    },
                                                                    children: [
                                                                        "≈",
                                                                        ' ',
                                                                        formatCurrencyToDisplay(payable.currency_exchange.total, payable.currency_exchange.default_currency_code)
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    })
                                                ]
                                            }),
                                            showTags && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('tags', ocrRequiredFields, (_payable_tags = payable.tags) === null || _payable_tags === void 0 ? void 0 : (_payable_tags_ = _payable_tags[0]) === null || _payable_tags_ === void 0 ? void 0 : _payable_tags_.id) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "OYHzN1"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                                            direction: "row",
                                                            gap: 1,
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                                    sx: {
                                                                        width: '100%'
                                                                    },
                                                                    children: ((_payable_tags1 = payable.tags) === null || _payable_tags1 === void 0 ? void 0 : _payable_tags1.length) ? /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                                                                        spacing: 1,
                                                                        direction: "row",
                                                                        useFlexGap: true,
                                                                        flexWrap: "wrap",
                                                                        children: payable.tags.map((tag)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                                                                                label: tag.name,
                                                                                color: "primary",
                                                                                sx: {
                                                                                    maxWidth: 200
                                                                                }
                                                                            }, tag.id))
                                                                    }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        sx: {
                                                                            marginTop: 1
                                                                        },
                                                                        children: i18n._({
                                                                            id: "MTqQMG"
                                                                        })
                                                                    })
                                                                }),
                                                                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                                                        "aria-label": i18n._({
                                                                            id: "7mRvJz"
                                                                        }),
                                                                        size: "small",
                                                                        onClick: ()=>setShowTagsModal(true),
                                                                        children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Edit, {
                                                                            fontSize: "small"
                                                                        })
                                                                    })
                                                                })
                                                            ]
                                                        })
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('appliedPolicy', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "jackz0"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: !isApprovalPolicyLoading && (approvalPolicy === null || approvalPolicy === void 0 ? void 0 : approvalPolicy.name) ? /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                            sx: {
                                                                display: 'flex',
                                                                alignItems: 'center',
                                                                gap: 1
                                                            },
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                                    children: approvalPolicy.name
                                                                }),
                                                                (payable.status === 'waiting_to_be_paid' || payable.status === 'paid' || payable.status === 'partially_paid') && /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                                                                    label: i18n._({
                                                                        id: "7kb4LU"
                                                                    }),
                                                                    color: "success",
                                                                    size: "small"
                                                                })
                                                            ]
                                                        }) : !isApprovalPolicyLoading && i18n._({
                                                            id: "BA0G/o"
                                                        })
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            })
                        ]
                    }),
                    showApprovalFlow && approvalPolicy && /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 12,
                        children: /*#__PURE__*/ jsxRuntime.jsx(PayableApprovalFlowSection, {
                            approvalPolicy: approvalPolicy,
                            payableId: payable.id,
                            currentStatus: payable.status
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        item: true,
                        xs: 12,
                        className: className + '-Items',
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle2",
                                mb: 2,
                                children: i18n._({
                                    id: "BzfzPK"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                                variant: "outlined",
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                                            children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: i18n._({
                                                            id: "6YtxFj"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: i18n._({
                                                            id: "VbWX2u"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: i18n._({
                                                            id: "a7u1N9"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        align: "right",
                                                        children: i18n._({
                                                            id: "gz2anp"
                                                        })
                                                    })
                                                ]
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                            children: lineItems === null || lineItems === void 0 ? void 0 : lineItems.map((item)=>{
                                                var _payable_currency, _item_subtotal;
                                                return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                    children: [
                                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                                        children: item.name
                                                                    }),
                                                                    enableGLCodes && item.ledger_account_id && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        color: "secondary.main",
                                                                        children: getLedgerAccountSubtitle(item.ledger_account_id)
                                                                    })
                                                                ]
                                                            })
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                            children: item.quantity
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                            children: item.unit_price ? formatCurrencyToDisplay(item.unit_price, (_payable_currency = payable.currency) !== null && _payable_currency !== void 0 ? _payable_currency : 'EUR') : '—'
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                            align: "right",
                                                            children: item.subtotal && payable.currency ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                                        children: formatCurrencyToDisplay((_item_subtotal = item.subtotal) !== null && _item_subtotal !== void 0 ? _item_subtotal : 0, payable.currency)
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                        sx: {
                                                                            color: 'secondary.main'
                                                                        },
                                                                        children: [
                                                                            i18n._({
                                                                                id: "F4IM4+"
                                                                            }),
                                                                            ' ',
                                                                            `${item.tax ? (item.tax / 100).toFixed(0) : 0}%`
                                                                        ]
                                                                    })
                                                                ]
                                                            }) : payable.currency ? formatCurrencyToDisplay(0, payable.currency) : '—'
                                                        })
                                                    ]
                                                }, item.id);
                                            })
                                        })
                                    ]
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: 12,
                        className: className + '-Totals',
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                            variant: "outlined",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: i18n._({
                                                        id: "X2rrlw"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    align: "right",
                                                    children: payable.subtotal && payable.currency ? formatCurrencyToDisplay(payable.subtotal, payable.currency) : payable.currency ? formatCurrencyToDisplay(0, payable.currency) : '—'
                                                })
                                            ]
                                        }),
                                        Boolean(payable.discount) && payable.currency && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: i18n._({
                                                        id: "H6Ma8Z"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    align: "right",
                                                    children: formatCurrencyToDisplay((_payable_discount = payable.discount) !== null && _payable_discount !== void 0 ? _payable_discount : 0, payable.currency)
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: i18n._({
                                                        id: "htLvaW"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    align: "right",
                                                    children: payable.tax_amount && payable.currency ? formatCurrencyToDisplay(payable.tax_amount, payable.currency) : payable.currency ? formatCurrencyToDisplay(0, payable.currency) : '—'
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "subtitle1",
                                                        children: i18n._({
                                                            id: "72c5Qo"
                                                        })
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                    align: "right",
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "subtitle1",
                                                        children: payable.total_amount && payable.currency ? formatCurrencyToDisplay(payable.total_amount, payable.currency) : payable.currency ? formatCurrencyToDisplay(0, payable.currency) : '—'
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                })
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        item: true,
                        xs: 12,
                        className: className + '-History',
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle2",
                                mb: 2,
                                children: i18n._({
                                    id: "0caMy7"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                                variant: "outlined",
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                        children: [
                                            addedByUser && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('addedByUser', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "NxahIk"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(UserDisplayCell, {
                                                            user: {
                                                                id: addedByUser.id,
                                                                first_name: addedByUser.first_name,
                                                                last_name: addedByUser.last_name,
                                                                userpic_file_id: addedByUser.userpic_file_id
                                                            },
                                                            showAvatar: true,
                                                            avatarSize: 24,
                                                            typographyVariant: "body2"
                                                        })
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('addedOn', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "z1dTLo"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: payable.created_at ? i18n.date(payable.created_at, {
                                                            dateStyle: 'short',
                                                            timeStyle: 'short'
                                                        }) : '—'
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                                                        isRequired: isFieldRequired('updatedOn', ocrRequiredFields) && (payable === null || payable === void 0 ? void 0 : payable.ocr_status) === null,
                                                        children: i18n._({
                                                            id: "0BIqwq"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        children: payable.updated_at ? i18n.date(payable.updated_at, {
                                                            dateStyle: 'short',
                                                            timeStyle: 'short'
                                                        }) : '—'
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(TagsModal, {
                opened: showTagsModal,
                value: payable.tags || [],
                updateTags: updateTags,
                onClose: ()=>setShowTagsModal(false)
            })
        ]
    });
};
const PayableCounterpartName = ({ counterpart, counterpartRawName, isCounterpartAIMatched, isCounterpartMatchingToOCRFound, isCounterpartLoading })=>{
    const { i18n } = react.useLingui();
    if (isCounterpartLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
            size: 14,
            color: "secondary"
        });
    }
    const counterpartName = getCounterpartName(counterpart);
    if (counterpartName && !isCounterpartMatchingToOCRFound) {
        return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
            component: "span",
            gap: 1,
            direction: "row",
            children: [
                counterpartName,
                isCounterpartAIMatched && /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
                    title: i18n._({
                        id: "xGx4S0"
                    }),
                    children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Sparkles, {
                        className: "mtw:text-blue-600"
                    })
                })
            ]
        });
    }
    if (!counterpartRawName) {
        return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
            children: "—"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        component: "span",
        gap: 1,
        direction: "row",
        children: [
            counterpartRawName,
            /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
                title: isCounterpartMatchingToOCRFound ? i18n._({
                    id: "MQZ+qK"
                }) : i18n._({
                    id: "6ySfA5"
                }),
                children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.WarningAmberRounded, {
                    color: "warning",
                    fontSize: "small",
                    sx: {
                        alignSelf: 'center'
                    }
                })
            })
        ]
    });
};

const PayableDetailsNoAttachedFile = ()=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        className: "Monite-PayableDetailsNoAttachedFile",
        sx: {
            width: '100%',
            height: '100%',
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
            textAlign: 'center'
        },
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            sx: {
                margin: 'auto'
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(AttachFileIcon__default.default, {
                    color: "primary",
                    fontSize: "large",
                    sx: {
                        marginBottom: 2
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    color: "secondary",
                    children: i18n._({
                        id: "v/OJUt"
                    })
                })
            ]
        })
    });
};

const FileViewer = ({ url, mimetype, name, showCloseButton, onClose })=>{
    if (mimetype === 'application/pdf') return /*#__PURE__*/ jsxRuntime.jsx(PdfFileViewer, {
        url: url,
        showCloseButton: showCloseButton,
        onClose: onClose
    });
    return /*#__PURE__*/ jsxRuntime.jsx("img", {
        className: "Monite-ImageFileViewer",
        src: url,
        alt: name,
        loading: "lazy",
        style: {
            width: '100%',
            objectFit: 'contain'
        }
    });
};
const PdfFileViewer = ({ url, showCloseButton, onClose })=>{
    const pdfRef = React.useRef(null);
    const pageNavigationPluginInstance = pageNavigation.pageNavigationPlugin();
    const zoomPluginInstance = zoom.zoomPlugin();
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        ref: pdfRef,
        className: "mtw:w-full mtw:h-full mtw:p-4 mtw:flex mtw:flex-col mtw:justify-between mtw:max-h-full mtw:border-none mtw:bg-[#F0F2F4]",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center mtw:justify-between",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:items-center mtw:gap-2 mtw:bg-white mtw:rounded-md mtw:shadow-xs mtw:p-0.5",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(zoomPluginInstance.ZoomOut, {
                                children: ({ onClick })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                                        variant: "ghost",
                                        size: "icon",
                                        onClick: onClick,
                                        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ZoomOut, {})
                                    })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(zoomPluginInstance.ZoomPopover, {}),
                            /*#__PURE__*/ jsxRuntime.jsx(zoomPluginInstance.ZoomIn, {
                                children: ({ onClick })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                                        variant: "ghost",
                                        size: "icon",
                                        onClick: onClick,
                                        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ZoomIn, {})
                                    })
                            })
                        ]
                    }),
                    showCloseButton && /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:flex mtw:items-center",
                        children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            variant: "ghost",
                            size: "icon",
                            onClick: onClose,
                            children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.X, {})
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:h-[85%] mtw:rounded-md",
                children: /*#__PURE__*/ jsxRuntime.jsx(core$1.Worker, {
                    workerUrl: "https://js.monite.com/libs/pdf.js/3.4.120/pdf.worker.min.js",
                    children: /*#__PURE__*/ jsxRuntime.jsx(core$1.Viewer, {
                        fileUrl: url,
                        scrollMode: core$1.ScrollMode.Page,
                        plugins: [
                            pageNavigationPluginInstance,
                            zoomPluginInstance
                        ],
                        defaultScale: core$1.SpecialZoomLevel.PageFit
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center mtw:gap-2 mtw:bg-white mtw:w-fit mtw:rounded-md mtw:shadow-xs mtw:p-0.5",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(pageNavigationPluginInstance.GoToPreviousPage, {
                        children: ({ onClick, isDisabled })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                                variant: "ghost",
                                size: "icon",
                                onClick: onClick,
                                disabled: isDisabled,
                                children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronLeft, {})
                            })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(pageNavigationPluginInstance.CurrentPageLabel, {
                        children: (props)=>/*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: "mtw:text-sm mtw:mx-1",
                                children: `${i18n._({
                                    id: "6WdDG7"
                                })} ${props.currentPage + 1} ${i18n._({
                                    id: "BwJKBw"
                                })} ${props.numberOfPages}`
                            })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(pageNavigationPluginInstance.GoToNextPage, {
                        children: ({ onClick, isDisabled })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                                variant: "ghost",
                                size: "icon",
                                onClick: onClick,
                                disabled: isDisabled,
                                children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronRight, {})
                            })
                    })
                ]
            })
        ]
    });
};

const PayableDetailsForceActionDialog = ({ open, type, onClose, onConfirm })=>{
    const { i18n } = react.useLingui();
    const isApprove = type === 'approve';
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Dialog, {
        open: open,
        onClose: onClose,
        maxWidth: "sm",
        fullWidth: true,
        container: ()=>document.body,
        PaperProps: {
            sx: {
                borderRadius: 3,
                padding: 2
            }
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                sx: {
                    p: '16px !important'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "h5",
                    fontWeight: 600,
                    children: isApprove ? i18n._({
                        id: "nMfBUv"
                    }) : i18n._({
                        id: "cOQg+L"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                sx: {
                    px: 2,
                    pb: 3
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body1",
                    color: "text.secondary",
                    children: isApprove ? i18n._({
                        id: "lcSVnT"
                    }) : i18n._({
                        id: "2rxDOh"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                sx: {
                    px: 0,
                    pt: 2,
                    gap: 2
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        onClick: onClose,
                        variant: "text",
                        sx: {
                            color: 'primary.main',
                            fontWeight: 500,
                            textTransform: 'none',
                            fontSize: '16px'
                        },
                        children: i18n._({
                            id: "dEgA5A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        onClick: onConfirm,
                        variant: "contained",
                        color: isApprove ? 'primary' : 'error',
                        children: isApprove ? i18n._({
                            id: "r5itpS"
                        }) : i18n._({
                            id: "DkyYG5"
                        })
                    })
                ]
            })
        ]
    });
};

function _define_property$1V(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1U(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1V(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1h(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1h(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1h(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const GLCodeSelector = ({ value, error, helperText, disabled, placeholder, onChange })=>{
    const { i18n } = react.useLingui();
    const { data: ledgerAccounts, isLoading, error: fetchError } = useLedgerAccounts();
    const { root } = useRootElements();
    const options = React.useMemo(()=>{
        var _ledgerAccounts_data;
        return (_ledgerAccounts_data = ledgerAccounts === null || ledgerAccounts === void 0 ? void 0 : ledgerAccounts.data) !== null && _ledgerAccounts_data !== void 0 ? _ledgerAccounts_data : [];
    }, [
        ledgerAccounts === null || ledgerAccounts === void 0 ? void 0 : ledgerAccounts.data
    ]);
    const selectedOption = React.useMemo(()=>{
        if (!value) return null;
        var _options_find;
        return (_options_find = options.find((option)=>option.id === value)) !== null && _options_find !== void 0 ? _options_find : null;
    }, [
        value,
        options
    ]);
    if (fetchError) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
            error: true,
            fullWidth: true,
            children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
                label: i18n._({
                    id: "u+hA/j"
                }),
                variant: "standard",
                disabled: true,
                error: true,
                helperText: i18n._({
                    id: "sr9jZd"
                })
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, {
        options: options,
        value: selectedOption,
        onChange: (_, newValue)=>onChange((newValue === null || newValue === void 0 ? void 0 : newValue.id) || null),
        getOptionLabel: (option)=>option.nominal_code && option.type ? `${option.nominal_code} — ${option.type}` : option.nominal_code || option.type || option.name,
        isOptionEqualToValue: (option, value)=>option.id === value.id,
        loading: isLoading,
        disabled: disabled || isLoading,
        slotProps: {
            popper: {
                container: root
            }
        },
        renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1h(_object_spread$1U({}, params), {
                label: i18n._({
                    id: "u+hA/j"
                }),
                variant: "standard",
                fullWidth: true,
                error: error,
                helperText: helperText,
                placeholder: placeholder,
                InputProps: _object_spread_props$1h(_object_spread$1U({}, params.InputProps), {
                    endAdornment: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                color: "inherit",
                                size: 20
                            }) : null,
                            params.InputProps.endAdornment
                        ]
                    })
                })
            })),
        renderOption: (props, option)=>/*#__PURE__*/ react$3.createElement("li", _object_spread_props$1h(_object_spread$1U({}, props), {
                key: option.id
            }), /*#__PURE__*/ jsxRuntime.jsxs("div", {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        color: "text.secondary",
                        component: "div",
                        fontWeight: 600,
                        children: option.nominal_code && option.type ? `${option.nominal_code} — ${option.type}` : option.nominal_code || option.type
                    }),
                    option.subtype && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        component: "div",
                        fontWeight: 400,
                        children: option.subtype
                    })
                ]
            })),
        noOptionsText: i18n._({
            id: "/08peu"
        })
    });
};

function _define_property$1U(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1T(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1U(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1g(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1g(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1g(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const PayableLineItemsForm = ({ enableGLCodes })=>{
    const { i18n } = react.useLingui();
    const { getSymbolFromCurrency, formatCurrencyToDisplay, formatToMinorUnits } = useCurrencies();
    const { control, watch } = reactHookForm.useFormContext();
    const { fields, append, remove } = reactHookForm.useFieldArray({
        control,
        name: 'lineItems'
    });
    const currentCurrency = watch('currency');
    const currentLineItems = watch('lineItems');
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
        container: true,
        direction: "column",
        spacing: 4,
        children: [
            fields.map((item, index)=>/*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                    item: true,
                    container: true,
                    gap: 2,
                    className: "Monite-PayableDetailsForm-Item",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            item: true,
                            xs: 12,
                            gap: 2,
                            container: true,
                            flexWrap: "nowrap",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 8,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: `lineItems.${index}.name`,
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1g(_object_spread$1T({}, field), {
                                                id: field.name,
                                                label: i18n._({
                                                    id: "6YtxFj"
                                                }),
                                                variant: "standard",
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                fullWidth: true
                                            }))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 3,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: `lineItems.${index}.quantity`,
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1g(_object_spread$1T({}, field), {
                                                id: field.name,
                                                label: i18n._({
                                                    id: "VbWX2u"
                                                }),
                                                variant: "standard",
                                                type: "number",
                                                inputProps: {
                                                    min: 1
                                                },
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                fullWidth: true
                                            }))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 1,
                                    container: true,
                                    sx: {
                                        justifyContent: 'flex-end',
                                        alignItems: 'center'
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                        "aria-label": "delete",
                                        onClick: ()=>remove(index),
                                        disabled: fields.length === 1,
                                        children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {})
                                    })
                                })
                            ]
                        }),
                        enableGLCodes && /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            item: true,
                            xs: 12,
                            gap: 2,
                            container: true,
                            flexWrap: "nowrap",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 11,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: `lineItems.${index}.ledger_account_id`,
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _field_value;
                                            return /*#__PURE__*/ jsxRuntime.jsx(GLCodeSelector, {
                                                value: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : undefined,
                                                onChange: (value)=>field.onChange(value !== null && value !== void 0 ? value : undefined),
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message
                                            });
                                        }
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 1
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            item: true,
                            xs: 12,
                            gap: 2,
                            container: true,
                            flexWrap: "nowrap",
                            justifyContent: "flex-end",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 8,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: `lineItems.${index}.price`,
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1g(_object_spread$1T({}, field), {
                                                id: field.name,
                                                label: i18n._({
                                                    id: "a7u1N9"
                                                }),
                                                variant: "standard",
                                                type: "number",
                                                inputProps: {
                                                    min: 0
                                                },
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                fullWidth: true,
                                                InputProps: {
                                                    endAdornment: getSymbolFromCurrency(watch('currency'))
                                                }
                                            }))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 3,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: `lineItems.${index}.tax`,
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1g(_object_spread$1T({}, field), {
                                                id: field.name,
                                                label: i18n._({
                                                    id: "khBZkl"
                                                }),
                                                variant: "standard",
                                                type: "number",
                                                inputProps: {
                                                    min: 0,
                                                    max: 100
                                                },
                                                error: Boolean(error),
                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                fullWidth: true,
                                                InputProps: {
                                                    endAdornment: '%'
                                                }
                                            }))
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 1
                                })
                            ]
                        }),
                        (currentLineItems === null || currentLineItems === void 0 ? void 0 : currentLineItems[index]) && currentCurrency && /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                            item: true,
                            xs: 12,
                            gap: 2,
                            className: "Monite-PayableDetailsForm-Item-Total",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                fontWeight: "bold",
                                align: "right",
                                children: formatCurrencyToDisplay(formatToMinorUnits(calculateTotalPriceForLineItem(currentLineItems === null || currentLineItems === void 0 ? void 0 : currentLineItems[index]), currentCurrency) || 0, currentCurrency)
                            })
                        })
                    ]
                }, item.id)),
            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                item: true,
                xs: 12,
                gap: 2,
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                    onClick: ()=>append({
                            id: '',
                            name: '',
                            quantity: 1,
                            price: 0,
                            tax: 19
                        }),
                    children: i18n._({
                        id: "NQ8llq"
                    })
                })
            })
        ]
    });
};

function usePayableDetailsForm({ currentCounterpartId }) {
    const counterpartQuery = useCounterpartList({
        query: {
            is_vendor: true
        }
    });
    const counterpartBankAccountQuery = useCounterpartsBankAccountsList(currentCounterpartId);
    return {
        counterpartQuery,
        counterpartBankAccountQuery
    };
}

const isFieldRequiredByValidations = (fieldName, payablesValidations)=>{
    var _payablesValidations_required_fields;
    return Boolean(payablesValidations === null || payablesValidations === void 0 ? void 0 : (_payablesValidations_required_fields = payablesValidations.required_fields) === null || _payablesValidations_required_fields === void 0 ? void 0 : _payablesValidations_required_fields.includes(fieldName));
};
const getPayableDetailsFormSchemaInternal = (i18n)=>{
    const lineItemsSchema = zod.z.array(zod.z.object({
        id: zod.z.string().meta({
            title: i18n._({
                id: "gWkqfi"
            })
        }),
        name: zod.z.string().min(1, i18n._({
            id: "1xzYv5"
        })).meta({
            title: i18n._({
                id: "SrBzjo"
            })
        }),
        quantity: zod.z.coerce.number().positive(i18n._({
            id: "5G6yki"
        })).meta({
            title: i18n._({
                id: "VbWX2u"
            })
        }),
        price: zod.z.coerce.number().min(0, i18n._({
            id: "qq17MG"
        })).meta({
            title: i18n._({
                id: "a7u1N9"
            })
        }),
        tax: zod.z.coerce.number().min(0, i18n._({
            id: "WfpxR6"
        })).max(100, i18n._({
            id: "l1jcVv"
        })).meta({
            title: i18n._({
                id: "JpohL9"
            })
        }),
        ledger_account_id: zod.z.string().nullable().optional().meta({
            title: i18n._({
                id: "u+hA/j"
            })
        })
    })).meta({
        title: i18n._({
            id: "SgduFH"
        })
    });
    const tagSchema = zod.z.object({
        id: zod.z.string(),
        name: zod.z.string(),
        created_at: zod.z.string(),
        updated_at: zod.z.string(),
        category: zod.z.enum([
            'document_type',
            'department',
            'project',
            'cost_center',
            'vendor_type',
            'payment_method',
            'approval_status'
        ]).optional(),
        created_by_entity_user_id: zod.z.string().optional(),
        description: zod.z.string().optional()
    }).meta({
        title: i18n._({
            id: "UL8A9w"
        })
    });
    return zod.z.object({
        invoiceNumber: zod.z.string().min(1, i18n._({
            id: "0jm21S"
        })).meta({
            title: i18n._({
                id: "MhyecB"
            })
        }),
        counterpart: zod.z.string().meta({
            title: i18n._({
                id: "np/2yA"
            })
        }),
        counterpartBankAccount: zod.z.string().optional().meta({
            title: i18n._({
                id: "tfIdY7"
            })
        }),
        invoiceDate: zod.z.preprocess((v)=>v === null ? undefined : v, zod.z.date()).optional().meta({
            title: i18n._({
                id: "dzZ1ju"
            })
        }),
        dueDate: zod.z.preprocess((v)=>v === null ? undefined : v, zod.z.date()).optional().meta({
            title: i18n._({
                id: "YOowcq"
            })
        }),
        currency: getCurrencyEnum().optional().meta({
            title: i18n._({
                id: "Q2lUR2"
            })
        }),
        tags: zod.z.array(tagSchema).meta({
            title: i18n._({
                id: "OYHzN1"
            })
        }),
        lineItems: lineItemsSchema,
        discount: zod.z.union([
            zod.z.coerce.number().min(0),
            zod.z.null()
        ]).optional().meta({
            title: i18n._({
                id: "H6Ma8Z"
            })
        })
    });
};
const getPayableDetailsFormSchema = (i18n, payablesValidations)=>getPayableDetailsFormSchemaInternal(i18n).refine((v)=>v.dueDate instanceof Date, {
        path: [
            'dueDate'
        ],
        message: i18n._({
            id: "r+AV22"
        })
    }).refine((v)=>!isFieldRequiredByValidations('counterpart_id', payablesValidations) || Boolean(v.counterpart), {
        path: [
            'counterpart'
        ],
        message: i18n._({
            id: "D5TW2z"
        })
    }).refine((v)=>!isFieldRequiredByValidations('counterpart_bank_account_id', payablesValidations) || Boolean(v.counterpartBankAccount), {
        path: [
            'counterpartBankAccount'
        ],
        message: i18n._({
            id: "NuxEgy"
        })
    }).refine((v)=>!isFieldRequiredByValidations('issued_at', payablesValidations) || v.invoiceDate instanceof Date, {
        path: [
            'invoiceDate'
        ],
        message: i18n._({
            id: "j7MHRl"
        })
    }).refine((v)=>!isFieldRequiredByValidations('currency', payablesValidations) || v.currency !== undefined, {
        path: [
            'currency'
        ],
        message: i18n._({
            id: "DGCx5V"
        })
    });

const getBankAccountName = (i18n, bankAccount)=>{
    const bankAccountName = getBankAccountBaseName(i18n, bankAccount);
    if (bankAccount.is_default_for_currency) {
        return i18n._({
            id: "R4DYJL",
            values: {
                bankAccountName: bankAccountName
            }
        });
    }
    return bankAccountName;
};
const getBankAccountBaseName = (i18n, bankAccount)=>{
    if (bankAccount.name) {
        return bankAccount.name;
    }
    if (bankAccount.country && bankAccount.currency) {
        return `${getCountries(i18n)[bankAccount.country]} (${getCurrencies(i18n)[bankAccount.currency]})`;
    }
    return bankAccount.id;
};

/**
 * Type-safe wrapper around zodResolver that handles schemas with any input type.
 * This allows using schemas where the input type might not extend FieldValues.
 *
 * We use z.ZodObject<z.ZodRawShape> which is the base type for all Zod objects.
 * This is necessary because zodResolver expects the schema's input type to extend
 * FieldValues, but our schemas may have different input types. This is safe because:
 * 1. The runtime behavior is identical
 * 2. The resolver's output type is explicitly specified via TFieldValues
 * 3. React Hook Form will validate the actual form data against the schema
 */ function safeZodResolver(schema) {
    const resolver = zod$1.zodResolver(schema);
    return resolver;
}

function asyncGeneratorStep$T(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$T(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$T(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$T(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1T(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1S(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1T(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1f(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1f(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1f(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$r(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$r(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$r(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * PayableDetailsForm component.
 *
 * This component is responsible for rendering a form that allows users to create or edit payable details, including invoice number, counterpart, due date, line items, and tags. It uses various hooks and utilities to manage form state, validation, and submission.
 *
 * The component supports both controlled and uncontrolled modes, allowing for either external control or internal state management.
 *
 * @component
 * @example Monite Provider customisation
 * ```ts
 * // You can configure the component through Monite Provider property `componentSettings` like this:
 * const componentSettings = {
 *   optionalFields: {
 *     invoiceDate: true,         // Show the invoice date field
 *     tags: true,                // Show the tags field
 *   },
 *   ocrMismatchFields: {
 *     amount_to_pay: true,       // Show the amount to pay field
 *     counterpart_bank_account_id: true,  // Show the counterpart bank account id field
 *   },
 *   ocrRequiredFields: {
 *     invoiceNumber: true,       // The invoice number is required based on OCR data
 *     dueDate: true,             // The due date is required based on OCR data
 *     currency: true,            // The currency is required based on OCR data
 *   },
 *   isTagsDisabled: true,        // The tags field is disabled
 * };
 * ```
 *
 * @param {components['schemas']['PayableResponseSchema']} [payable] - Optional payable data to pre-fill the form for editing.
 * @param {(id: string, payable: components['schemas']['PayableUpdateSchema'], lineItems?: Array<LineItem>, dirtyFields?: FieldNamesMarkedBoolean<PayableDetailsFormFields>) => void} [savePayable] - Callback function to save changes to an existing payable.
 * @param {(payable: components['schemas']['PayableUploadWithDataSchema'], createdLineItems?: Array<LineItem>) => void} [createPayable] - Callback function to create a new payable.
 * @param {OptionalFields} [optionalFields] - Configuration object to show or hide optional fields.
 * @param {components['schemas']['LineItemResponse'][]} [lineItems] - Array of line items associated with the payable.
 * @param {Record<string, boolean> | undefined} [ocrRequiredFields] - Array of required fields that should be provided by OCR.
 * @param {string} payableDetailsFormId - Unique identifier for the form.
 *
 * @returns {JSX.Element} The PayableDetailsForm component.
 */ const PayableDetailsForm = /*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsFormBase, _object_spread$1S({
            ref: ref
        }, props))
    }));
const PayableDetailsFormBase = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { payable, savePayable, createPayable, lineItems, payableDetailsFormId, customerTypes, enableGLCodes } = _param, inProps = _object_without_properties$r(_param, [
        "payable",
        "savePayable",
        "createPayable",
        "lineItems",
        "payableDetailsFormId",
        "customerTypes",
        "enableGLCodes"
    ]);
    var _componentSettings_counterparts;
    const { i18n } = react.useLingui();
    const { api, componentSettings } = useMoniteContext();
    const { root } = useRootElements();
    const className = 'Monite-PayableDetailsForm';
    const { formatFromMinorUnits, formatToMinorUnits, formatCurrencyToDisplay, getSymbolFromCurrency } = useCurrencies();
    const { isTagsDisabled } = usePayableDetailsThemeProps(inProps);
    const { data: payablesValidations } = api.payables.getPayablesValidations.useQuery();
    const defaultValues = React.useMemo(()=>prepareDefaultValues(formatFromMinorUnits, payable, lineItems), [
        formatFromMinorUnits,
        payable,
        lineItems
    ]);
    const methods = reactHookForm.useForm({
        resolver: safeZodResolver(getPayableDetailsFormSchema(i18n, payablesValidations)),
        defaultValues,
        mode: 'onTouched'
    });
    const { control, handleSubmit, watch, reset, trigger, setValue, getValues, getFieldState } = methods;
    const { dirtyFields } = reactHookForm.useFormState({
        control
    });
    const currentCounterpart = watch('counterpart');
    const currentCounterpartBankAccount = watch('counterpartBankAccount');
    const currentInvoiceDate = watch('invoiceDate');
    const currentDueDate = watch('dueDate');
    const currentCurrency = watch('currency');
    const currentLineItems = watch('lineItems');
    const currentDiscount = watch('discount');
    const totals = calculateTotalsForPayable(currentLineItems, currentDiscount);
    const [isEditCounterpartOpened, setIsEditCounterpartOpened] = React.useState(false);
    const { counterpartQuery, counterpartBankAccountQuery } = usePayableDetailsForm({
        currentCounterpartId: currentCounterpart
    });
    const { ocrRequiredFields, optionalFields } = usePayableDetailsThemeProps(inProps);
    const { showInvoiceDate, showTags } = useOptionalFields(optionalFields, {
        showInvoiceDate: true,
        showTags: true
    });
    const { data: user } = useEntityUserByAuthToken();
    const { data: isTagsReadAllowed } = useIsActionAllowed({
        method: 'tag',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const isSubmittedByKeyboardRef = React.useRef(false);
    const { counterpart, counterpartRawName, isCounterpartAIMatched, isCounterpartMatchingToOCRFound, isCounterpartLoading } = useGetPayableCounterpart({
        payable
    });
    const counterpartEditShowInlineSuggestions = counterpart && isCounterpartAIMatched && counterpart.id === currentCounterpart;
    React.useEffect(()=>{
        reset(prepareDefaultValues(formatFromMinorUnits, payable, lineItems));
    }, [
        payable,
        formatFromMinorUnits,
        reset,
        lineItems
    ]);
    React.useEffect(()=>{
        if (!currentCounterpart && !!currentCounterpartBankAccount) {
            setValue('counterpartBankAccount', '', {
                shouldValidate: true
            });
        }
    }, [
        currentCounterpart,
        currentCounterpartBankAccount,
        setValue
    ]);
    React.useEffect(()=>{
        if (!isCounterpartMatchingToOCRFound || !counterpart) return;
        if (getFieldState('counterpart').isTouched) return;
        setValue('counterpart', counterpart.id);
    }, [
        counterpart,
        getFieldState,
        isCounterpartMatchingToOCRFound,
        setValue
    ]);
    React.useEffect(()=>{
        var _counterpartBankAccountQuery_data;
        if (counterpartBankAccountQuery.isSuccess && ((_counterpartBankAccountQuery_data = counterpartBankAccountQuery.data) === null || _counterpartBankAccountQuery_data === void 0 ? void 0 : _counterpartBankAccountQuery_data.data)) {
            const defaultBankAccount = findDefaultBankAccount(counterpartBankAccountQuery.data.data, currentCurrency);
            const currentValue = getValues('counterpartBankAccount');
            if (currentValue !== defaultBankAccount) {
                setValue('counterpartBankAccount', defaultBankAccount, {
                    shouldDirty: true,
                    shouldTouch: true,
                    shouldValidate: true
                });
            }
        }
    }, [
        counterpartBankAccountQuery.data,
        counterpartBankAccountQuery.isSuccess,
        currentCurrency,
        getValues,
        setValue
    ]);
    React.useEffect(()=>{
        // Trigger validation for existing payables (not new ones)
        if (payable === null || payable === void 0 ? void 0 : payable.id) {
            trigger();
        }
    }, [
        trigger,
        payable === null || payable === void 0 ? void 0 : payable.id
    ]);
    const { currencyGroups, isLoadingCurrencyGroups } = useProductCurrencyGroups();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                className: classNames(ScopedCssBaselineContainerClassName, className),
                sx: {
                    pb: 6,
                    display: 'flex',
                    flex: '1 1 auto',
                    overflow: 'auto',
                    width: '100%',
                    height: 0
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$1f(_object_spread$1S({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        style: {
                            width: '100%'
                        },
                        ref: ref,
                        id: payableDetailsFormId,
                        noValidate: true,
                        onBlur: ()=>{
                            isSubmittedByKeyboardRef.current = false;
                        },
                        onKeyDown: (event)=>{
                            isSubmittedByKeyboardRef.current = event.key === 'Enter';
                        },
                        onSubmit: handleSubmit((values)=>_async_to_generator$T(function*() {
                                var _counterpartQuery_data_data_find, _counterpartQuery_data_data, _counterpartQuery_data;
                                const submitPayload = _object_spread_props$1f(_object_spread$1S({}, values), {
                                    currency: values.currency,
                                    counterpartAddressId: (_counterpartQuery_data = counterpartQuery.data) === null || _counterpartQuery_data === void 0 ? void 0 : (_counterpartQuery_data_data = _counterpartQuery_data.data) === null || _counterpartQuery_data_data === void 0 ? void 0 : (_counterpartQuery_data_data_find = _counterpartQuery_data_data.find(({ id })=>id === values.counterpart)) === null || _counterpartQuery_data_data_find === void 0 ? void 0 : _counterpartQuery_data_data_find.default_billing_address_id
                                });
                                const invoiceData = prepareSubmit(submitPayload, formatToMinorUnits);
                                if (payable) {
                                    savePayable && savePayable(payable.id, invoiceData, values.lineItems, dirtyFields);
                                } else {
                                    createPayable && createPayable(invoiceData, values.lineItems);
                                }
                            })()),
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            spacing: 3,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 12,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Paper, {
                                        variant: "outlined",
                                        sx: {
                                            p: 3
                                        },
                                        className: className + '-Details',
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "subtitle2",
                                                mb: 2,
                                                children: i18n._({
                                                    id: "URmyfc"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                                spacing: 3,
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "invoiceNumber",
                                                        control: control,
                                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1f(_object_spread$1S({}, field), {
                                                                id: field.name,
                                                                label: i18n._({
                                                                    id: "HptUxX"
                                                                }),
                                                                variant: "standard",
                                                                fullWidth: true,
                                                                error: Boolean(error),
                                                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                                                required: isFieldRequired('invoiceNumber', ocrRequiredFields)
                                                            }))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(CounterpartAutocomplete, {
                                                        control: control,
                                                        disabled: isCounterpartLoading,
                                                        name: "counterpart",
                                                        label: i18n._({
                                                            id: "lO6GxP"
                                                        }),
                                                        customerTypes: customerTypes,
                                                        required: isFieldRequired('counterpart', ocrRequiredFields) || isFieldRequiredByValidations('counterpart_id', payablesValidations),
                                                        getCounterpartDefaultValues: (counterpartType)=>{
                                                            const { counterpart_address_object = null, tax_payer_id = '', counterpart_name = '' } = (payable === null || payable === void 0 ? void 0 : payable.other_extracted_data) || {};
                                                            return {
                                                                tax_id: tax_payer_id || '',
                                                                counterpart: _object_spread$1S({
                                                                    email: '',
                                                                    phone: '',
                                                                    isCustomer: false,
                                                                    isVendor: false,
                                                                    line1: (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.line1) || '',
                                                                    line2: (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.line2) || '',
                                                                    city: (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.city) || '',
                                                                    state: (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.state) || '',
                                                                    postalCode: (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.postal_code) || ''
                                                                }, (counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.country) && {
                                                                    country: counterpart_address_object === null || counterpart_address_object === void 0 ? void 0 : counterpart_address_object.country
                                                                }, counterpartType === 'individual' && {
                                                                    firstName: counterpart_name
                                                                }, counterpartType === 'individual' && {
                                                                    lastName: ''
                                                                }, counterpartType === 'organization' && {
                                                                    companyName: counterpart_name
                                                                })
                                                            };
                                                        },
                                                        counterpartMatchingToOCR: isCounterpartMatchingToOCRFound ? counterpart : undefined,
                                                        counterpartRawName: counterpartRawName,
                                                        showEditCounterpartButton: true,
                                                        setShowEditCounterpartDialog: setIsEditCounterpartOpened,
                                                        counterpartAISuggested: isCounterpartAIMatched ? counterpart : undefined
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "counterpartBankAccount",
                                                        control: control,
                                                        render: ({ field, fieldState: { error } })=>{
                                                            var _counterpartBankAccountQuery_data, _counterpartBankAccountQuery_data1;
                                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                                                variant: "standard",
                                                                fullWidth: true,
                                                                error: Boolean(error),
                                                                required: isFieldRequired('counterpartBankAccount', ocrRequiredFields) || isFieldRequiredByValidations('counterpart_bank_account_id', payablesValidations),
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                                                        htmlFor: field.name,
                                                                        children: i18n._({
                                                                            id: "EYONgp"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Select, _object_spread_props$1f(_object_spread$1S({}, field), {
                                                                        id: field.name,
                                                                        labelId: field.name,
                                                                        label: i18n._({
                                                                            id: "0/wcJO"
                                                                        }),
                                                                        MenuProps: {
                                                                            container: root
                                                                        },
                                                                        disabled: !(counterpartBankAccountQuery === null || counterpartBankAccountQuery === void 0 ? void 0 : counterpartBankAccountQuery.data) || (counterpartBankAccountQuery === null || counterpartBankAccountQuery === void 0 ? void 0 : (_counterpartBankAccountQuery_data = counterpartBankAccountQuery.data) === null || _counterpartBankAccountQuery_data === void 0 ? void 0 : _counterpartBankAccountQuery_data.data.length) === 0,
                                                                        children: [
                                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                                                variant: "text",
                                                                                startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                                                                                fullWidth: true,
                                                                                sx: {
                                                                                    justifyContent: 'flex-start',
                                                                                    px: 2,
                                                                                    py: 1
                                                                                },
                                                                                onClick: ()=>setIsEditCounterpartOpened(true),
                                                                                children: i18n._({
                                                                                    id: "3N06ae"
                                                                                })
                                                                            }),
                                                                            counterpartBankAccountQuery === null || counterpartBankAccountQuery === void 0 ? void 0 : (_counterpartBankAccountQuery_data1 = counterpartBankAccountQuery.data) === null || _counterpartBankAccountQuery_data1 === void 0 ? void 0 : _counterpartBankAccountQuery_data1.data.map((bankAccount)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                                                    value: bankAccount.id,
                                                                                    children: getBankAccountName(i18n, bankAccount)
                                                                                }, bankAccount.id))
                                                                        ]
                                                                    })),
                                                                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                                                                        children: error.message
                                                                    })
                                                                ]
                                                            });
                                                        }
                                                    }),
                                                    showInvoiceDate && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "invoiceDate",
                                                        control: control,
                                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, _object_spread_props$1f(_object_spread$1S({
                                                                maxDate: currentDueDate,
                                                                slotProps: {
                                                                    popper: {
                                                                        container: root
                                                                    },
                                                                    dialog: {
                                                                        container: root
                                                                    },
                                                                    actionBar: {
                                                                        actions: [
                                                                            'clear',
                                                                            'today'
                                                                        ]
                                                                    },
                                                                    textField: {
                                                                        id: field.name,
                                                                        variant: 'outlined',
                                                                        fullWidth: true,
                                                                        error: Boolean(error),
                                                                        helperText: error === null || error === void 0 ? void 0 : error.message,
                                                                        required: isFieldRequired('invoiceDate', ocrRequiredFields) || isFieldRequiredByValidations('issued_at', payablesValidations)
                                                                    }
                                                                }
                                                            }, field), {
                                                                label: i18n._({
                                                                    id: "X7pkpC"
                                                                }),
                                                                views: [
                                                                    'year',
                                                                    'month',
                                                                    'day'
                                                                ]
                                                            }))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                        name: "dueDate",
                                                        control: control,
                                                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, _object_spread_props$1f(_object_spread$1S({
                                                                minDate: currentInvoiceDate,
                                                                slotProps: {
                                                                    popper: {
                                                                        container: root
                                                                    },
                                                                    dialog: {
                                                                        container: root
                                                                    },
                                                                    actionBar: {
                                                                        actions: [
                                                                            'clear',
                                                                            'today'
                                                                        ]
                                                                    },
                                                                    textField: {
                                                                        id: field.name,
                                                                        variant: 'outlined',
                                                                        fullWidth: true,
                                                                        error: Boolean(error),
                                                                        helperText: error === null || error === void 0 ? void 0 : error.message,
                                                                        required: isFieldRequired('dueDate', ocrRequiredFields)
                                                                    }
                                                                }
                                                            }, field), {
                                                                label: i18n._({
                                                                    id: "XicmhT"
                                                                }),
                                                                views: [
                                                                    'year',
                                                                    'month',
                                                                    'day'
                                                                ]
                                                            }))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                                        name: "currency",
                                                        control: control,
                                                        required: isFieldRequired('currency', ocrRequiredFields) || isFieldRequiredByValidations('currency', payablesValidations),
                                                        groups: currencyGroups,
                                                        disabled: isLoadingCurrencyGroups
                                                    }),
                                                    showTags && /*#__PURE__*/ jsxRuntime.jsx(TagsAutocompleteInput, {
                                                        control: control,
                                                        name: "tags",
                                                        label: i18n._({
                                                            id: "OYHzN1"
                                                        }),
                                                        variant: "standard",
                                                        disabled: isTagsDisabled || !isTagsReadAllowed,
                                                        required: isFieldRequired('tags', ocrRequiredFields)
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 12,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Paper, {
                                        variant: "outlined",
                                        sx: {
                                            p: 3
                                        },
                                        className: className + '-Items',
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "subtitle2",
                                                mb: 2,
                                                children: i18n._({
                                                    id: "BzfzPK"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(PayableLineItemsForm, {
                                                enableGLCodes: enableGLCodes
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 12,
                                    className: className + '-Totals',
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                                        variant: "outlined",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                            children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                        className: className + '-Totals-Subtotal',
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                children: i18n._({
                                                                    id: "X2rrlw"
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                align: "right",
                                                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                    gap: 0.5,
                                                                    alignItems: "center",
                                                                    justifyContent: "flex-end",
                                                                    display: "flex",
                                                                    children: [
                                                                        currentDiscount === null && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                                                                            size: "small",
                                                                            sx: {
                                                                                pl: 1.25,
                                                                                pr: 2,
                                                                                py: 0
                                                                            },
                                                                            onClick: ()=>{
                                                                                const setValue = methods.setValue;
                                                                                setValue('discount', 0);
                                                                            },
                                                                            children: i18n._({
                                                                                id: "fl8EjE"
                                                                            })
                                                                        }),
                                                                        totals.subtotal && currentCurrency ? formatCurrencyToDisplay(formatToMinorUnits(totals.subtotal, currentCurrency) || 0, currentCurrency) : '—'
                                                                    ]
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    currentDiscount !== null && /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                        className: className + '-Totals-Discount',
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                children: i18n._({
                                                                    id: "H6Ma8Z"
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                align: "right",
                                                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                    gap: 0.5,
                                                                    alignItems: "center",
                                                                    justifyContent: "flex-end",
                                                                    display: "flex",
                                                                    children: [
                                                                        /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                                                            "aria-label": "delete",
                                                                            onClick: ()=>{
                                                                                const setValue = methods.setValue;
                                                                                setValue('discount', null);
                                                                            },
                                                                            children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {})
                                                                        }),
                                                                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                                                            name: "discount",
                                                                            control: control,
                                                                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$1f(_object_spread$1S({}, field), {
                                                                                    id: field.name,
                                                                                    variant: "standard",
                                                                                    type: "number",
                                                                                    inputProps: {
                                                                                        min: 0,
                                                                                        step: 0.01
                                                                                    },
                                                                                    error: Boolean(error),
                                                                                    sx: {
                                                                                        width: 150
                                                                                    },
                                                                                    InputProps: {
                                                                                        endAdornment: getSymbolFromCurrency(currentCurrency)
                                                                                    }
                                                                                }))
                                                                        })
                                                                    ]
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                        className: className + '-Totals-Taxes',
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                children: i18n._({
                                                                    id: "TWzp+9"
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                align: "right",
                                                                children: totals.taxes && currentCurrency ? formatCurrencyToDisplay(formatToMinorUnits(totals.taxes, currentCurrency) || 0, currentCurrency) : '—'
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                        className: className + '-Totals-Total',
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                    variant: "subtitle1",
                                                                    children: i18n._({
                                                                        id: "72c5Qo"
                                                                    })
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                                align: "right",
                                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                    variant: "subtitle1",
                                                                    children: totals.total && currentCurrency ? formatCurrencyToDisplay(formatToMinorUnits(totals.total, currentCurrency) || 0, currentCurrency) : '—'
                                                                })
                                                            })
                                                        ]
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                alignDialog: "right",
                open: isEditCounterpartOpened,
                container: root,
                onClose: ()=>setIsEditCounterpartOpened(false),
                children: /*#__PURE__*/ jsxRuntime.jsx(CounterpartDetails, {
                    id: currentCounterpart,
                    customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes),
                    payableCounterpartRawData: counterpartEditShowInlineSuggestions ? payable === null || payable === void 0 ? void 0 : payable.counterpart_raw_data : undefined
                })
            })
        ]
    });
});

function asyncGeneratorStep$S(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$S(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$S(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$S(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const usePaymentLinkById = (paymentLinkId)=>{
    const { api } = useMoniteContext();
    return api.paymentLinks.getPaymentLinksId.useQuery({
        path: {
            payment_link_id: paymentLinkId !== null && paymentLinkId !== void 0 ? paymentLinkId : ''
        }
    }, {
        enabled: !!paymentLinkId
    });
};
const useCreatePayablePaymentLink = ()=>{
    const { api } = useMoniteContext();
    const createPaymentLinkMutation = api.paymentLinks.postPaymentLinks.useMutation({});
    const createPaymentLink = (payableId, counterpartId, paymentMethods, expiresInDays)=>_async_to_generator$S(function*() {
            return createPaymentLinkMutation.mutateAsync({
                recipient: {
                    id: counterpartId,
                    type: 'counterpart'
                },
                object: {
                    id: payableId,
                    type: 'payable'
                },
                payment_methods: paymentMethods,
                expires_at: new Date(Date.now() + expiresInDays * 24 * 3600 * 1000 // x days from now
                ).toISOString()
            });
        })();
    return createPaymentLink;
};

function asyncGeneratorStep$R(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$R(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$R(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$R(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const usePaymentHandler = (payableId, counterpartId, onPaymentComplete, existingPaymentIntentId)=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const createPaymentLink = useCreatePayablePaymentLink();
    const [modalOpen, setModalOpen] = React.useState(false);
    const [iframeUrl, setIframeUrl] = React.useState(null);
    const [paymentLinkId, setPaymentLinkId] = React.useState(null);
    const [isCreatingPaymentLink, setIsCreatingPaymentLink] = React.useState(false);
    // Fetch existing payment intent if existingPaymentIntentId is provided
    const { data: existingPaymentIntent, isSuccess: isExistingPaymentIntentSuccess } = usePaymentIntentById(existingPaymentIntentId !== null && existingPaymentIntentId !== void 0 ? existingPaymentIntentId : '');
    // Set payment link ID from existing payment intent
    React.useEffect(()=>{
        if (isExistingPaymentIntentSuccess && (existingPaymentIntent === null || existingPaymentIntent === void 0 ? void 0 : existingPaymentIntent.payment_link_id) && existingPaymentIntentId) {
            setPaymentLinkId(existingPaymentIntent.payment_link_id);
        }
    }, [
        isExistingPaymentIntentSuccess,
        existingPaymentIntent,
        existingPaymentIntentId
    ]);
    const { data: currentPaymentLink, refetch: refetchCurrentPaymentLink, isSuccess: isCurrentPaymentLinkSuccess, isLoading: isCurrentPaymentLinkLoading } = usePaymentLinkById(paymentLinkId !== null && paymentLinkId !== void 0 ? paymentLinkId : '');
    React.useEffect(()=>{
        var _currentPaymentLink_payment_intent;
        if (isCurrentPaymentLinkSuccess && (currentPaymentLink === null || currentPaymentLink === void 0 ? void 0 : (_currentPaymentLink_payment_intent = currentPaymentLink.payment_intent) === null || _currentPaymentLink_payment_intent === void 0 ? void 0 : _currentPaymentLink_payment_intent.status) === 'processing') {
            var _currentPaymentLink_payment_intent1;
            var _currentPaymentLink_payment_intent_status;
            onPaymentComplete === null || onPaymentComplete === void 0 ? void 0 : onPaymentComplete(payableId !== null && payableId !== void 0 ? payableId : '', (_currentPaymentLink_payment_intent_status = currentPaymentLink === null || currentPaymentLink === void 0 ? void 0 : (_currentPaymentLink_payment_intent1 = currentPaymentLink.payment_intent) === null || _currentPaymentLink_payment_intent1 === void 0 ? void 0 : _currentPaymentLink_payment_intent1.status) !== null && _currentPaymentLink_payment_intent_status !== void 0 ? _currentPaymentLink_payment_intent_status : '');
        }
    }, [
        currentPaymentLink,
        isCurrentPaymentLinkSuccess,
        onPaymentComplete,
        payableId
    ]);
    const handleCloseModal = ()=>_async_to_generator$R(function*() {
            yield refetchCurrentPaymentLink();
            setModalOpen(false);
            setIframeUrl(null);
        })();
    const handlePay = ()=>_async_to_generator$R(function*() {
            if (!counterpartId) {
                reactHotToast.toast.error(i18n._({
                    id: "8n2ci9"
                }));
                return;
            }
            // Prevent multiple simultaneous requests
            if (isCreatingPaymentLink) {
                return;
            }
            try {
                var _currentPaymentLink_payment_intent;
                // Prevent creating duplicate payment links while loading
                if (isCurrentPaymentLinkLoading) {
                    reactHotToast.toast.error(i18n._({
                        id: "enHjGX"
                    }));
                    return;
                }
                if (!paymentLinkId || isCurrentPaymentLinkSuccess && (currentPaymentLink === null || currentPaymentLink === void 0 ? void 0 : (_currentPaymentLink_payment_intent = currentPaymentLink.payment_intent) === null || _currentPaymentLink_payment_intent === void 0 ? void 0 : _currentPaymentLink_payment_intent.status) !== 'created') {
                    // A) Create new payment link
                    setIsCreatingPaymentLink(true);
                    if (!payableId) throw new Error('Payable ID is undefined');
                    const createdPaymentLink = yield createPaymentLink(payableId, counterpartId, [
                        'sepa_credit'
                    ], 60 // 60 days from now
                    );
                    if (createdPaymentLink.payment_page_url) {
                        setPaymentLinkId(createdPaymentLink.id);
                        setIframeUrl(createdPaymentLink.payment_page_url);
                    } else {
                        setPaymentLinkId(null);
                        setIframeUrl(null);
                        throw new Error('No payment page URL in response');
                    }
                } else {
                    // B) Use existing payment link
                    if (currentPaymentLink === null || currentPaymentLink === void 0 ? void 0 : currentPaymentLink.payment_page_url) {
                        setIframeUrl(currentPaymentLink.payment_page_url);
                    } else {
                        throw new Error('No payment page URL in existing payment link');
                    }
                }
                setModalOpen(true);
            } catch (error) {
                console.error('Payment link creation/retrieval error:', error);
                reactHotToast.toast.error(existingPaymentIntentId && (existingPaymentIntent === null || existingPaymentIntent === void 0 ? void 0 : existingPaymentIntent.status) === 'created' ? i18n._({
                    id: "RuKpoG"
                }) : i18n._({
                    id: "WmsOil"
                }));
                setModalOpen(false);
            } finally{
                setIsCreatingPaymentLink(false);
            }
        })();
    return {
        handlePay,
        isCreatingPaymentLink,
        modalComponent: /*#__PURE__*/ jsxRuntime.jsx(material.Modal, {
            open: modalOpen,
            onClose: handleCloseModal,
            container: root,
            children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    position: 'absolute',
                    top: '50%',
                    left: '50%',
                    transform: 'translate(-50%, -50%)',
                    width: '80%',
                    maxWidth: 600,
                    bgcolor: 'background.paper',
                    boxShadow: 24,
                    p: 4,
                    borderRadius: 2
                },
                children: iframeUrl ? /*#__PURE__*/ jsxRuntime.jsx("iframe", {
                    src: iframeUrl,
                    title: "Payment Page",
                    width: "100%",
                    height: "400px",
                    style: {
                        border: 'none'
                    }
                }) : /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'center',
                        gap: 2,
                        py: 4
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {}),
                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                            children: i18n._({
                                id: "Cy7FkU"
                            })
                        })
                    ]
                })
            })
        })
    };
};

function asyncGeneratorStep$Q(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$Q(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$Q(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$Q(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1S(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1R(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1S(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$q(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$q(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$q(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
// Payable refetch intervals, in milliseconds
const REFETCH_INTERVAL_DEFAULT = 15000;
const REFETCH_INTERVAL_OCR_PROCESSING = 2000;
const REFETCH_INTERVAL_APPROVE_IN_PROGRESS = 1000;
const REFETCH_APPROVE_IN_PROGRESS_WINDOW = 10000;
function usePayableDetails({ id, enableGLCodes, onSaved, onCanceled, onSubmitted, onRejected, onApproved, onReopened, onDeleted, onPay, onPayUS }) {
    var _approvalRequests_data, _approvalRequests_data1;
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { formatToMinorUnits } = useCurrencies();
    const [payableId, setPayableId] = React.useState(id);
    const [isPermissionsLoading, setIsPermissionsLoading] = React.useState(true);
    const { data: currentUser } = useEntityUserByAuthToken();
    const { data: currentUserRole } = useEntityUserRoleByAuthToken();
    const [permissions, setPermissions] = React.useState([]);
    const [isEdit, setEdit] = React.useState(false);
    const [isFormLoading, setIsFormLoading] = React.useState(false);
    const [isActionButtonLoading, setIsActionButtonLoading] = React.useState(false);
    //TODO: align better with internal state structure
    const [tempPayableID, setTempPayableID] = React.useState(payableId);
    const cachedPayable = api.payables.getPayablesId.getQueryData({
        path: {
            payable_id: payableId !== null && payableId !== void 0 ? payableId : ''
        }
    }, queryClient);
    const isOcrProcessing = cachedPayable && isPayableInOCRProcessing(cachedPayable);
    const { data: payable, error: payableQueryError, isLoading, refetch: refetchPayable } = api.payables.getPayablesId.useQuery({
        path: {
            payable_id: payableId !== null && payableId !== void 0 ? payableId : ''
        }
    }, {
        enabled: !!payableId,
        refetchInterval: (data)=>{
            const payable = data.state.data;
            // Payable is in OCR processing, refetch every 2 seconds.
            if (isOcrProcessing) {
                return REFETCH_INTERVAL_OCR_PROCESSING;
            }
            // Payable is in approve_in_progress status and has no approval policy, refetch every 1 second,
            // until 10 seconds after the last Payable update (the submit action).
            // Needed because the server takes some time to apply the approval policy to the Payable.
            if ((payable === null || payable === void 0 ? void 0 : payable.status) === 'approve_in_progress' && !payable.approval_policy_id) {
                const updatedAt = new Date(payable.updated_at);
                const now = new Date();
                const timeDifferenceMs = now.getTime() - updatedAt.getTime();
                if (timeDifferenceMs < REFETCH_APPROVE_IN_PROGRESS_WINDOW) {
                    return REFETCH_INTERVAL_APPROVE_IN_PROGRESS;
                }
            }
            return REFETCH_INTERVAL_DEFAULT;
        },
        refetchOnMount: true
    });
    // Fetch payment records for the payable
    const { payablesPaymentIntentsRecord, refetch: refetchPaymentRecords } = usePayablePaymentIntentsAndRecords(payableId ? [
        payableId
    ] : []);
    // Determine pay button visibility
    const { showPayButton, intentsAnalysis } = usePayButtonVisibility({
        payable,
        payableRecentPaymentRecordByIntent: (payablesPaymentIntentsRecord === null || payablesPaymentIntentsRecord === void 0 ? void 0 : payablesPaymentIntentsRecord[payableId !== null && payableId !== void 0 ? payableId : '']) || []
    });
    const { handlePay, modalComponent } = usePaymentHandler(tempPayableID !== null && tempPayableID !== void 0 ? tempPayableID : id, payable === null || payable === void 0 ? void 0 : payable.counterpart_id, ()=>{
        refetchPayable();
        refetchPaymentRecords();
    }, intentsAnalysis.idPaymentIntentInCreated);
    const { counterpart, isCounterpartAIMatched, AISuggestions } = useGetPayableCounterpart({
        payable
    });
    React.useEffect(()=>{
        if (isOcrProcessing) return ()=>void api.payables.getPayables.invalidateQueries(queryClient);
    }, [
        api,
        isOcrProcessing,
        queryClient
    ]);
    const { data: lineItemsData } = api.payables.getPayablesIdLineItems.useQuery({
        path: {
            payable_id: payableId !== null && payableId !== void 0 ? payableId : ''
        }
    }, {
        enabled: !!payableId
    });
    const lineItems = lineItemsData === null || lineItemsData === void 0 ? void 0 : lineItemsData.data;
    const { data: approvalRequests } = api.approvalRequests.getApprovalRequests.useQuery({
        query: {
            object_id: payableId,
            object_type: 'payable',
            order: 'desc'
        }
    }, {
        enabled: !!payableId && (payable === null || payable === void 0 ? void 0 : payable.status) === 'approve_in_progress'
    });
    const activeApprovalRequest = approvalRequests === null || approvalRequests === void 0 ? void 0 : (_approvalRequests_data = approvalRequests.data) === null || _approvalRequests_data === void 0 ? void 0 : _approvalRequests_data[0];
    const currentUserApprovalRequest = approvalRequests === null || approvalRequests === void 0 ? void 0 : (_approvalRequests_data1 = approvalRequests.data) === null || _approvalRequests_data1 === void 0 ? void 0 : _approvalRequests_data1.find((request)=>{
        var _request_approved_by, _request_user_ids, _request_role_ids;
        var _currentUser_id, _currentUser_id1, _currentUserRole_id;
        return request.status === 'waiting' && !((_request_approved_by = request.approved_by) === null || _request_approved_by === void 0 ? void 0 : _request_approved_by.includes((_currentUser_id = currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) !== null && _currentUser_id !== void 0 ? _currentUser_id : '')) && (((_request_user_ids = request.user_ids) === null || _request_user_ids === void 0 ? void 0 : _request_user_ids.includes((_currentUser_id1 = currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) !== null && _currentUser_id1 !== void 0 ? _currentUser_id1 : '')) || ((_request_role_ids = request.role_ids) === null || _request_role_ids === void 0 ? void 0 : _request_role_ids.includes((_currentUserRole_id = currentUserRole === null || currentUserRole === void 0 ? void 0 : currentUserRole.id) !== null && _currentUserRole_id !== void 0 ? _currentUserRole_id : '')));
    });
    const { data: isCancelAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'cancel',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isUpdatesAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'update',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isSubmitAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'submit',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isApproveAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'approve',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isPayAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'pay',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isReopenAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'reopen',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isDeleteAvailable } = useIsActionAllowed({
        method: 'payable',
        action: 'delete',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const createMutation = api.payables.postPayables.useMutation({}, {
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const updateMutation = api.payables.patchPayablesId.useMutation(undefined, {
        onSuccess: (payable)=>Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient),
                api.payables.getPayablesIdLineItems.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const createLineItemMutation = api.payables.postPayablesIdLineItems.useMutation(undefined, {
        onSuccess: ()=>api.payables.getPayablesIdLineItems.invalidateQueries({
                parameters: {
                    path: {
                        payable_id: payableId
                    }
                }
            }, queryClient),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const updateLineItemMutation = api.payables.patchPayablesIdLineItemsId.useMutation(undefined, {
        onSuccess: ()=>api.payables.getPayablesIdLineItems.invalidateQueries({
                parameters: {
                    path: {
                        payable_id: payableId
                    }
                }
            }, queryClient),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const deleteLineItemMutation = api.payables.deletePayablesIdLineItemsId.useMutation(undefined, {
        onSuccess: ()=>api.payables.getPayablesIdLineItems.invalidateQueries({
                parameters: {
                    path: {
                        payable_id: payableId
                    }
                }
            }, queryClient),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const cancelMutation = api.payables.postPayablesIdCancel.useMutation(undefined, {
        onSuccess: (payable)=>Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const submitMutation = api.payables.postPayablesIdSubmitForApproval.useMutation(undefined, {
        onSuccess: (payable)=>{
            Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient),
                api.approvalRequests.getApprovalRequests.invalidateQueries(queryClient)
            ]);
        },
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const rejectApprovalRequestMutation = api.approvalRequests.postApprovalRequestsIdReject.useMutation(undefined, {
        onSuccess: ()=>{
            // Invalidate the approval requests cache to show the new status
            api.approvalRequests.getApprovalRequests.invalidateQueries(queryClient);
            // Return a Promise that resolves after the delay and invalidations
            // Needed because the server doesn't return the updated Payable status immediately
            return new Promise((resolve)=>{
                // Delay before invalidating queries to allow server processing
                setTimeout(()=>{
                    Promise.all([
                        api.payables.getPayablesId.invalidateQueries({
                            parameters: {
                                path: {
                                    payable_id: payableId !== null && payableId !== void 0 ? payableId : ''
                                }
                            }
                        }, queryClient),
                        api.payables.getPayables.invalidateQueries(queryClient)
                    ]).then(()=>resolve());
                }, 500);
            });
        },
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const approveApprovalRequestMutation = api.approvalRequests.postApprovalRequestsIdApprove.useMutation(undefined, {
        onSuccess: ()=>{
            // Invalidate the approval requests cache to show the new status
            api.approvalRequests.getApprovalRequests.invalidateQueries(queryClient);
            // Return a Promise that resolves after the delay and invalidations
            // Needed because the server doesn't return the updated Payable status immediately
            return new Promise((resolve)=>{
                // Delay before invalidating queries to allow server processing
                setTimeout(()=>{
                    Promise.all([
                        api.payables.getPayablesId.invalidateQueries({
                            parameters: {
                                path: {
                                    payable_id: payableId !== null && payableId !== void 0 ? payableId : ''
                                }
                            }
                        }, queryClient),
                        api.payables.getPayables.invalidateQueries(queryClient)
                    ]).then(()=>resolve());
                }, 500);
            });
        },
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const forceRejectMutation = api.payables.postPayablesIdReject.useMutation(undefined, {
        onSuccess: (payable)=>Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const forceApproveMutation = api.payables.postPayablesIdApprovePaymentOperation.useMutation(undefined, {
        onSuccess: (payable)=>Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const reopenMutation = api.payables.postPayablesIdReopen.useMutation(undefined, {
        onSuccess: (payable)=>Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const deleteMutation = api.payables.deletePayablesId.useMutation(undefined, {
        onSuccess: ()=>Promise.all([
                api.payables.getPayables.invalidateQueries(queryClient)
            ]),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const status = payable === null || payable === void 0 ? void 0 : payable.status;
    React.useEffect(()=>{
        setPayableId(id);
    }, [
        id
    ]);
    React.useEffect(()=>{
        if (!payableId) setEdit(true);
    }, [
        payableId
    ]);
    React.useEffect(()=>{
        if (!status) {
            if (!isLoading) {
                setIsPermissionsLoading(false);
            }
            if (!payableId) {
                setPermissions([
                    'cancelEdit',
                    'save'
                ]);
            }
            return;
        }
        setPermissions([]);
        setIsPermissionsLoading(true);
        switch(status){
            case 'draft':
                {
                    const permissions = [];
                    if (isEdit) {
                        if (isUpdatesAvailable) {
                            permissions.push('cancelEdit');
                            permissions.push('save');
                        }
                    } else {
                        if (isUpdatesAvailable) {
                            permissions.push('edit');
                        }
                    }
                    setPermissions(permissions);
                    break;
                }
            case 'new':
                {
                    const permissions = [];
                    if (isEdit) {
                        if (isUpdatesAvailable) {
                            permissions.push('cancelEdit');
                            permissions.push('save');
                        }
                    } else {
                        if (isCancelAvailable) {
                            permissions.push('cancel');
                        }
                        if (isUpdatesAvailable) {
                            permissions.push('edit');
                        }
                        if (isSubmitAvailable) {
                            permissions.push('submit');
                        }
                    }
                    setPermissions(permissions);
                    break;
                }
            case 'approve_in_progress':
                {
                    var _approvalRequests_data, _approvalRequests_data_, _approvalRequests_data1;
                    const permissions = [];
                    var _approvalRequests_data_length;
                    const hasWaitingApprovalRequests = ((_approvalRequests_data_length = approvalRequests === null || approvalRequests === void 0 ? void 0 : (_approvalRequests_data = approvalRequests.data) === null || _approvalRequests_data === void 0 ? void 0 : _approvalRequests_data.length) !== null && _approvalRequests_data_length !== void 0 ? _approvalRequests_data_length : 0) > 0 && (approvalRequests === null || approvalRequests === void 0 ? void 0 : (_approvalRequests_data1 = approvalRequests.data) === null || _approvalRequests_data1 === void 0 ? void 0 : (_approvalRequests_data_ = _approvalRequests_data1[0]) === null || _approvalRequests_data_ === void 0 ? void 0 : _approvalRequests_data_.status) === 'waiting';
                    // Show regular approve/reject buttons only if there are waiting approval requests
                    // These buttons use /approval_requests endpoints and don't require payable-level permissions
                    if (hasWaitingApprovalRequests) {
                        const hasCurrentUserPendingRequest = currentUserApprovalRequest !== undefined;
                        // Show approve/reject buttons if user has pending approval request
                        if (hasCurrentUserPendingRequest) {
                            permissions.push('reject', 'approve');
                        }
                    }
                    // Force buttons are available to super users regardless of approval request status
                    // These buttons DO require payable-level permissions (isApproveAvailable)
                    const hasApprovePermission = ()=>{
                        var _currentUserRole_permissions_objects, _currentUserRole_permissions;
                        const payableObj = currentUserRole === null || currentUserRole === void 0 ? void 0 : (_currentUserRole_permissions = currentUserRole.permissions) === null || _currentUserRole_permissions === void 0 ? void 0 : (_currentUserRole_permissions_objects = _currentUserRole_permissions.objects) === null || _currentUserRole_permissions_objects === void 0 ? void 0 : _currentUserRole_permissions_objects.find((o)=>o.object_type === 'payable');
                        if (!(payableObj === null || payableObj === void 0 ? void 0 : payableObj.actions)) return false;
                        return Array.isArray(payableObj.actions) && payableObj.actions.some((a)=>a.action_name === 'approve' && a.permission === 'allowed');
                    };
                    const isApprovalSuperUser = hasApprovePermission();
                    if (isApproveAvailable && isApprovalSuperUser) {
                        permissions.push('forceReject', 'forceApprove');
                    }
                    setPermissions(permissions);
                    break;
                }
            case 'waiting_to_be_paid':
            case 'partially_paid':
                {
                    if (isPayAvailable && Number(payable.amount_to_pay) > 0) {
                        setPermissions([
                            'pay'
                        ]);
                    }
                    break;
                }
            case 'rejected':
                {
                    if (isReopenAvailable) {
                        setPermissions([
                            'reopen'
                        ]);
                    }
                    break;
                }
            case 'canceled':
                {
                    if (isDeleteAvailable) {
                        setPermissions([
                            'delete'
                        ]);
                    }
                    break;
                }
        }
        setIsPermissionsLoading(false);
    }, [
        isEdit,
        isLoading,
        isCancelAvailable,
        isApproveAvailable,
        isPayAvailable,
        isSubmitAvailable,
        isUpdatesAvailable,
        isReopenAvailable,
        isDeleteAvailable,
        status,
        payableId,
        payable === null || payable === void 0 ? void 0 : payable.amount_to_pay,
        activeApprovalRequest,
        currentUserApprovalRequest,
        currentUser === null || currentUser === void 0 ? void 0 : currentUser.id,
        currentUserRole === null || currentUserRole === void 0 ? void 0 : currentUserRole.id,
        currentUserRole === null || currentUserRole === void 0 ? void 0 : currentUserRole.permissions,
        approvalRequests
    ]);
    React.useEffect(()=>{
        setIsFormLoading(createMutation.isPending || updateMutation.isPending || submitMutation.isPending);
    }, [
        createMutation.isPending,
        updateMutation.isPending,
        submitMutation.isPending
    ]);
    React.useEffect(()=>{
        setIsActionButtonLoading(createMutation.isPending || updateMutation.isPending || cancelMutation.isPending || submitMutation.isPending || forceRejectMutation.isPending || forceApproveMutation.isPending || reopenMutation.isPending || rejectApprovalRequestMutation.isPending || approveApprovalRequestMutation.isPending);
    }, [
        createMutation.isPending,
        updateMutation.isPending,
        cancelMutation.isPending,
        submitMutation.isPending,
        forceRejectMutation.isPending,
        forceApproveMutation.isPending,
        reopenMutation.isPending,
        rejectApprovalRequestMutation.isPending,
        approveApprovalRequestMutation.isPending
    ]);
    const createInvoice = (data, lineItemsToCreate)=>_async_to_generator$Q(function*() {
            const payable = yield createMutation.mutateAsync(_object_spread$1R({}, data), {
                onSuccess: (createdPayable)=>{
                    reactHotToast.toast.success(i18n._({
                        id: "u/kWBT",
                        values: {
                            0: createdPayable.document_id
                        }
                    }));
                }
            });
            if (lineItemsToCreate) {
                const lineItemsMutation = [];
                lineItemsToCreate === null || lineItemsToCreate === void 0 ? void 0 : lineItemsToCreate.forEach((lineItem)=>{
                    if (payable.currency && !lineItem.id) {
                        lineItemsMutation.push(createLineItemMutation.mutateAsync({
                            path: {
                                payable_id: payable.id
                            },
                            body: prepareLineItemSubmit(payable.currency, lineItem, formatToMinorUnits, {
                                allowLedgerUpdate: false
                            })
                        }));
                    }
                });
                yield Promise.all(lineItemsMutation);
            }
            // Invalidate queries BEFORE calling onSaved to ensure they happen while component is still mounted
            yield Promise.all([
                api.payables.getPayablesId.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient),
                api.payables.getPayables.invalidateQueries(queryClient),
                api.payables.getPayablesIdLineItems.invalidateQueries({
                    parameters: {
                        path: {
                            payable_id: payable.id
                        }
                    }
                }, queryClient)
            ]);
            setPayableId(payable.id);
            isEdit && setEdit(false);
            onSaved === null || onSaved === void 0 ? void 0 : onSaved(payable.id);
        })();
    const saveInvoice = (id, data, updatedLineItems, dirtyFields)=>_async_to_generator$Q(function*() {
            const payable = yield updateMutation.mutateAsync({
                path: {
                    payable_id: id
                },
                body: data
            }, {
                onSuccess: (updatedPayable)=>{
                    reactHotToast.toast.success(i18n._({
                        id: "ylCEUu",
                        values: {
                            0: updatedPayable.document_id
                        }
                    }));
                }
            });
            if (updatedLineItems && dirtyFields) {
                var // update line items
                _dirtyFields_lineItems;
                const lineItemsMutation = [];
                // create line items
                updatedLineItems === null || updatedLineItems === void 0 ? void 0 : updatedLineItems.forEach((lineItem)=>{
                    if (payable.currency && !lineItem.id) {
                        lineItemsMutation.push(createLineItemMutation.mutateAsync({
                            path: {
                                payable_id: payable.id
                            },
                            body: prepareLineItemSubmit(payable.currency, lineItem, formatToMinorUnits)
                        }));
                    }
                });
                dirtyFields === null || dirtyFields === void 0 ? void 0 : (_dirtyFields_lineItems = dirtyFields.lineItems) === null || _dirtyFields_lineItems === void 0 ? void 0 : _dirtyFields_lineItems.forEach((_param, index)=>{
                    var { id: isIdDirty } = _param, lineItemsDirtyFields = _object_without_properties$q(_param, [
                        "id"
                    ]);
                    var _updatedLineItems_index;
                    const isLineItemDirty = Object.values(lineItemsDirtyFields).some((isFieldDirty)=>isFieldDirty);
                    const lineItemId = (_updatedLineItems_index = updatedLineItems[index]) === null || _updatedLineItems_index === void 0 ? void 0 : _updatedLineItems_index.id;
                    const updatedLineItem = updatedLineItems[index];
                    const isLineItemPersistAndUpdated = !isIdDirty && Boolean(isLineItemDirty) && Boolean(lineItemId) && Boolean(updatedLineItem);
                    if (payable.currency && isLineItemPersistAndUpdated) {
                        var _lineItems_find;
                        lineItemsMutation.push(updateLineItemMutation.mutateAsync({
                            path: {
                                payable_id: payable.id,
                                line_item_id: lineItemId
                            },
                            body: prepareLineItemSubmit(payable.currency, updatedLineItem, formatToMinorUnits, {
                                allowLedgerUpdate: enableGLCodes && Boolean(lineItemsDirtyFields.ledger_account_id),
                                previous: lineItems === null || lineItems === void 0 ? void 0 : (_lineItems_find = lineItems.find((li)=>li.id === lineItemId)) === null || _lineItems_find === void 0 ? void 0 : _lineItems_find.ledger_account_id
                            })
                        }));
                    }
                });
                // delete line items
                lineItems === null || lineItems === void 0 ? void 0 : lineItems.forEach((defaultValue)=>{
                    const formValue = updatedLineItems === null || updatedLineItems === void 0 ? void 0 : updatedLineItems.find((lineItem)=>lineItem.id === defaultValue.id);
                    if (!formValue) {
                        lineItemsMutation.push(deleteLineItemMutation.mutateAsync({
                            path: {
                                payable_id: payable.id,
                                line_item_id: defaultValue.id
                            }
                        }));
                    }
                });
                yield Promise.all(lineItemsMutation);
            }
            yield api.payables.getPayablesId.invalidateQueries({
                parameters: {
                    path: {
                        payable_id: payable.id
                    }
                }
            }, queryClient);
            isEdit && setEdit(false);
            onSaved === null || onSaved === void 0 ? void 0 : onSaved(id);
        })();
    const updateTags = (id, tags)=>_async_to_generator$Q(function*() {
            const tagIds = tags.map((tag)=>tag.id);
            yield updateMutation.mutateAsync({
                path: {
                    payable_id: id
                },
                body: {
                    tag_ids: tagIds
                }
            }, {
                onSuccess: (payable)=>{
                    api.payables.getPayablesId.invalidateQueries({
                        parameters: {
                            path: {
                                payable_id: payable.id
                            }
                        }
                    }, queryClient);
                }
            });
        })();
    const cancelInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                yield cancelMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: (payable)=>{
                        reactHotToast.toast.success(i18n._({
                            id: "IqIO9/",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                onCanceled === null || onCanceled === void 0 ? void 0 : onCanceled(payableId);
            }
        })();
    const submitInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                // Update Payable with AI suggested Counterpart, if it exists
                if ((counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) && isCounterpartAIMatched) {
                    try {
                        var _AISuggestions_suggested_counterpart, _AISuggestions_suggested_counterpart1, _AISuggestions_suggested_counterpart2;
                        yield updateMutation.mutateAsync({
                            path: {
                                payable_id: payableId
                            },
                            body: _object_spread$1R({
                                counterpart_id: counterpart.id
                            }, (AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart === void 0 ? void 0 : _AISuggestions_suggested_counterpart.bank_account_id) && {
                                counterpart_bank_account_id: AISuggestions.suggested_counterpart.bank_account_id
                            }, (AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart1 = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart1 === void 0 ? void 0 : _AISuggestions_suggested_counterpart1.address_id) && {
                                counterpart_address_id: AISuggestions.suggested_counterpart.address_id
                            }, (AISuggestions === null || AISuggestions === void 0 ? void 0 : (_AISuggestions_suggested_counterpart2 = AISuggestions.suggested_counterpart) === null || _AISuggestions_suggested_counterpart2 === void 0 ? void 0 : _AISuggestions_suggested_counterpart2.vat_id_id) && {
                                counterpart_vat_id_id: AISuggestions.suggested_counterpart.vat_id_id
                            })
                        });
                    } catch (error) {
                        console.error('Error updating Payable with AI suggested Counterpart', error);
                        reactHotToast.toast.error(i18n._({
                            id: "ynXXmt"
                        }));
                        return; // Return early, don't proceed to submit
                    }
                }
                // Submit Payable
                yield submitMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: (payable)=>{
                        reactHotToast.toast.success(i18n._({
                            id: "LxtyIU",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                setTempPayableID(payableId);
                onSubmitted === null || onSubmitted === void 0 ? void 0 : onSubmitted(payableId);
            }
        })();
    const rejectInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId && currentUserApprovalRequest) {
                yield rejectApprovalRequestMutation.mutateAsync({
                    body: undefined,
                    path: {
                        approval_request_id: currentUserApprovalRequest.id
                    }
                }, {
                    onSuccess: ()=>{
                        if (!payable) return;
                        reactHotToast.toast.success(i18n._({
                            id: "cbinwq",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                onRejected === null || onRejected === void 0 ? void 0 : onRejected(payableId);
            }
        })();
    const approveInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId && currentUserApprovalRequest) {
                yield approveApprovalRequestMutation.mutateAsync({
                    path: {
                        approval_request_id: currentUserApprovalRequest.id
                    }
                }, {
                    onSuccess: ()=>{
                        var _payable_document_id;
                        reactHotToast.toast.success(i18n._({
                            id: "wN8V8r",
                            values: {
                                0: (_payable_document_id = payable === null || payable === void 0 ? void 0 : payable.document_id) !== null && _payable_document_id !== void 0 ? _payable_document_id : 'document id is unknown'
                            }
                        }));
                    }
                });
                onApproved === null || onApproved === void 0 ? void 0 : onApproved(payableId);
            }
        })();
    const forceRejectInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                yield forceRejectMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: (payable)=>{
                        reactHotToast.toast.success(i18n._({
                            id: "fU7pLE",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                onRejected === null || onRejected === void 0 ? void 0 : onRejected(payableId);
            }
        })();
    const forceApproveInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                yield forceApproveMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: (payable)=>{
                        reactHotToast.toast.success(i18n._({
                            id: "f7R/rb",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                onApproved === null || onApproved === void 0 ? void 0 : onApproved(payableId);
            }
        })();
    const reopenInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                yield reopenMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: (payable)=>{
                        reactHotToast.toast.success(i18n._({
                            id: "3503Rk",
                            values: {
                                0: payable.document_id
                            }
                        }));
                    }
                });
                onReopened === null || onReopened === void 0 ? void 0 : onReopened(payableId);
            }
        })();
    const deleteInvoice = ()=>_async_to_generator$Q(function*() {
            if (payableId) {
                yield deleteMutation.mutateAsync({
                    path: {
                        payable_id: payableId
                    }
                }, {
                    onSuccess: ()=>{
                        onDeleted === null || onDeleted === void 0 ? void 0 : onDeleted(payableId);
                    }
                });
            }
        })();
    const payInvoice = React.useCallback(()=>{
        if (payable) {
            // TODO: remove onPayUS prop
            if (onPayUS && payable.currency === 'USD') {
                onPayUS(payable.id);
            } else {
                if (!onPay) return handlePay();
                if ((onPay === null || onPay === void 0 ? void 0 : onPay.length) < 2) return onPay(payable.id);
                onPay(payable.id, undefined, {
                    resolve: (options)=>{
                        if (options === null || options === void 0 ? void 0 : options.showToast) reactHotToast.toast.success(i18n._({
                            id: "av9ba1"
                        }));
                        refetchPayable();
                        refetchPaymentRecords();
                    },
                    reject: (_error, options)=>{
                        if (options === null || options === void 0 ? void 0 : options.showToast) reactHotToast.toast.error(i18n._({
                            id: "6/utKi"
                        }));
                        refetchPayable();
                        refetchPaymentRecords();
                    }
                });
            }
        }
    }, [
        i18n,
        payable,
        handlePay,
        onPay,
        onPayUS,
        refetchPayable,
        refetchPaymentRecords
    ]);
    return {
        payable,
        isLoading: isLoading || isActionButtonLoading || isPermissionsLoading || isFormLoading,
        payableQueryError,
        isEdit,
        permissions,
        lineItems,
        showPayButton,
        activeApprovalRequest,
        currentUserApprovalRequest,
        actions: {
            setEdit,
            createInvoice,
            saveInvoice,
            submitInvoice,
            rejectInvoice,
            approveInvoice,
            forceRejectInvoice,
            forceApproveInvoice,
            reopenInvoice,
            cancelInvoice,
            deleteInvoice,
            payInvoice,
            handlePay,
            updateTags,
            modalComponent
        }
    };
}

function asyncGeneratorStep$P(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$P(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$P(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$P(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1R(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1Q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1R(target, key, source[key]);
        });
    }
    return target;
}
const PayableDetails = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsBase, _object_spread$1Q({}, props))
    });
const PayableDetailsBase = ({ id, optionalFields, customerTypes, enableGLCodes, onClose, onSaved, onCanceled, onSubmitted, onRejected, onApproved, onReopened, onDeleted, onPay, onPayUS })=>{
    var _componentSettings_counterparts;
    const { payable, payableQueryError, permissions, lineItems, isEdit, isLoading, showPayButton, actions: { setEdit, createInvoice, saveInvoice, submitInvoice, payInvoice, rejectInvoice, approveInvoice, forceRejectInvoice, forceApproveInvoice, cancelInvoice, reopenInvoice, deleteInvoice, updateTags, modalComponent } } = usePayableDetails({
        id,
        enableGLCodes,
        onSaved,
        onCanceled,
        onSubmitted,
        onRejected,
        onApproved,
        onReopened,
        onDeleted,
        onPay,
        onPayUS
    });
    const [forceDialog, setForceDialog] = React.useState(null);
    const handleForceDialogClose = ()=>setForceDialog(null);
    const handleForceApprove = ()=>_async_to_generator$P(function*() {
            handleForceDialogClose();
            yield forceApproveInvoice();
        })();
    const handleForceReject = ()=>_async_to_generator$P(function*() {
            handleForceDialogClose();
            yield forceRejectInvoice();
        })();
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { data: isUpdateAllowed, isLoading: isUpdateAllowedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'update',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'read',
        entityUserId: payable === null || payable === void 0 ? void 0 : payable.was_created_by_user_id
    });
    const payableDetailsFormId = `Monite-PayableDetailsForm-${React.useId()}`;
    if (isReadAllowedLoading || isUpdateAllowedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadAllowed) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    if (payableQueryError) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "UMi+yY"
            }),
            description: i18n._({
                id: "kTJvUE",
                values: {
                    id: id
                }
            })
        });
    }
    const className = 'Monite-PayableDetails';
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            className: classNames(ScopedCssBaselineContainerClassName, className),
            sx: {
                width: '100%',
                height: '100%',
                display: 'flex',
                flexDirection: 'column',
                position: 'absolute'
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Backdrop, {
                    open: isLoading,
                    sx: {
                        zIndex: (theme)=>theme.zIndex.drawer + 1
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {})
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsHeader, {
                    payable: payable,
                    permissions: permissions,
                    setEdit: setEdit,
                    isEdit: isEdit,
                    submitInvoice: submitInvoice,
                    rejectInvoice: rejectInvoice,
                    approveInvoice: approveInvoice,
                    forceRejectInvoice: ()=>setForceDialog('reject'),
                    forceApproveInvoice: ()=>setForceDialog('approve'),
                    reopenInvoice: reopenInvoice,
                    cancelInvoice: cancelInvoice,
                    deleteInvoice: deleteInvoice,
                    payInvoice: payInvoice,
                    payableDetailsFormId: payableDetailsFormId,
                    onClose: onClose,
                    modalComponent: modalComponent,
                    showPayButton: showPayButton
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsForceActionDialog, {
                    open: forceDialog === 'approve',
                    type: "approve",
                    onClose: handleForceDialogClose,
                    onConfirm: handleForceApprove
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsForceActionDialog, {
                    open: forceDialog === 'reject',
                    type: "reject",
                    onClose: handleForceDialogClose,
                    onConfirm: handleForceReject
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                    sx: {
                        display: 'flex',
                        flexDirection: 'column'
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        container: true,
                        columnSpacing: 4,
                        height: "100%",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                item: true,
                                container: true,
                                xs: 6,
                                height: "100%",
                                children: [
                                    (payable === null || payable === void 0 ? void 0 : payable.file) && /*#__PURE__*/ jsxRuntime.jsx(FileViewer, {
                                        name: payable.file.name,
                                        mimetype: payable.file.mimetype,
                                        url: payable.file.url
                                    }),
                                    isUpdateAllowed && (payable === null || payable === void 0 ? void 0 : payable.id) && !(payable === null || payable === void 0 ? void 0 : payable.file) && /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsAttachFile, {
                                        payableId: payable.id
                                    }),
                                    !isUpdateAllowed && (payable === null || payable === void 0 ? void 0 : payable.id) && !(payable === null || payable === void 0 ? void 0 : payable.file) && /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsNoAttachedFile, {})
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                item: true,
                                container: true,
                                xs: 6,
                                flexDirection: "column",
                                height: "100%",
                                overflow: "auto",
                                children: [
                                    payable && (payable.status === 'new' || payable.status === 'draft') && payable.ocr_status === 'error' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                        mb: 2,
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                                            severity: "error",
                                            children: i18n._({
                                                id: "9W65z2"
                                            })
                                        })
                                    }),
                                    isEdit ? /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsForm, {
                                        savePayable: saveInvoice,
                                        createPayable: createInvoice,
                                        payable: payable,
                                        optionalFields: optionalFields,
                                        lineItems: lineItems,
                                        payableDetailsFormId: payableDetailsFormId,
                                        customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes),
                                        enableGLCodes: enableGLCodes
                                    }) : payable && /*#__PURE__*/ jsxRuntime.jsx(PayableDetailsInfo, {
                                        updateTags: (tags)=>id && updateTags(id, tags || []),
                                        payable: payable,
                                        optionalFields: optionalFields,
                                        enableGLCodes: enableGLCodes
                                    })
                                ]
                            })
                        ]
                    })
                })
            ]
        })
    });
};

const schema$1 = {
    draft: 'draft',
    new: 'new',
    approve_in_progress: 'approve_in_progress',
    waiting_to_be_paid: 'waiting_to_be_paid',
    partially_paid: 'partially_paid',
    paid: 'paid',
    canceled: 'canceled',
    rejected: 'rejected'
};
const PayableStateEnum = Object.values(schema$1);

function _define_property$1Q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1P(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1Q(target, key, source[key]);
        });
    }
    return target;
}
const Filters$1 = ({ onChangeFilter, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const className = 'Monite-PayableFilters';
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        sx: _object_spread$1P({
            borderTopLeftRadius: '12px',
            borderTopRightRadius: '12px'
        }, sx),
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "QrPXF7"
            }),
            onChange: (search)=>{
                onChangeFilter(FILTER_TYPE_SEARCH$3, search);
            }
        }),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                className: "Monite-PayableStatusFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                    labelId: "status",
                    label: i18n._({
                        id: "uAQUqI"
                    }),
                    defaultValue: "all",
                    MenuProps: {
                        container: root
                    },
                    onChange: (selected)=>{
                        onChangeFilter(FILTER_TYPE_STATUS$1, selected && selected.target.value);
                    },
                    children: [
                        {
                            label: i18n._({
                                id: "jBtpMP"
                            }),
                            value: 'all'
                        },
                        ...Object.values(PayableStateEnum).map((status)=>({
                                label: getRowToStatusTextMap(i18n)[status],
                                value: status
                            }))
                    ].map(({ label, value })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: value,
                            children: label
                        }, value))
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, {
                className: "Monite-PayableDueDateFilter Monite-FilterControl Monite-DateFilterControl",
                onChange: (value, error)=>{
                    if (error.validationError) {
                        return;
                    }
                    onChangeFilter(FILTER_TYPE_DUE_DATE, value);
                },
                slotProps: {
                    textField: {
                        variant: 'standard',
                        placeholder: 'Due date',
                        InputProps: {
                            sx: {
                                '&::placeholder': {
                                    opacity: 1,
                                    color: 'text.primary'
                                },
                                '& input::placeholder': {
                                    opacity: 1,
                                    color: 'text.primary'
                                }
                            }
                        }
                    },
                    popper: {
                        container: root
                    },
                    dialog: {
                        container: root
                    },
                    actionBar: {
                        actions: [
                            'clear',
                            'today'
                        ]
                    }
                },
                views: [
                    'year',
                    'month',
                    'day'
                ]
            })
        ]
    });
};

const FALLBACK_CURRENCY = 'USD';
const PayablesTableAction = ({ payable, payableRecentPaymentRecordByIntent, refetchPaymentRecords, onPay, onPayUS, onPayableActionComplete = ()=>{} })=>{
    const theme = styles$2.useTheme();
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { showPayButton, intentsAnalysis } = usePayButtonVisibility({
        payable,
        payableRecentPaymentRecordByIntent
    });
    const handlePaymentComplete = React.useCallback((payableId, status)=>{
        onPayableActionComplete(payableId, status);
        refetchPaymentRecords();
    }, [
        onPayableActionComplete,
        refetchPaymentRecords
    ]);
    const { handlePay, modalComponent } = usePaymentHandler(payable.id, payable.counterpart_id, handlePaymentComplete, intentsAnalysis.idPaymentIntentInCreated);
    const handlePayClick = React.useCallback((e)=>{
        e.stopPropagation();
        // TODO: remove onPayUS prop
        if (onPayUS && payable.currency === 'USD') {
            onPayUS === null || onPayUS === void 0 ? void 0 : onPayUS(payable.id);
        } else {
            if (!onPay) return handlePay();
            if (onPay.length < 2) return onPay(payable.id);
            return onPay(payable.id, undefined, {
                resolve: ()=>{
                    handlePaymentComplete(payable.id, 'success');
                },
                reject: ()=>{
                    handlePaymentComplete(payable.id, 'failed');
                }
            });
        }
    }, [
        onPayUS,
        payable.currency,
        payable.id,
        onPay,
        handlePay,
        handlePaymentComplete
    ]);
    if (intentsAnalysis.scheduledIntents.length > 0) {
        const earliestScheduledIntent = intentsAnalysis.scheduledIntents[0];
        const formattedDate = earliestScheduledIntent.record.planned_payment_date ? i18n.date(earliestScheduledIntent.record.planned_payment_date, locale.dateFormat) : '';
        return /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
            title: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                children: i18n._('Scheduled for {amount} on {date}', {
                    amount: formatCurrencyToDisplay(earliestScheduledIntent.record.amount, payable.currency || FALLBACK_CURRENCY),
                    date: formattedDate
                })
            }),
            arrow: true,
            children: /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                icon: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CalendarMonthOutlined, {
                    fontSize: "small"
                }),
                label: i18n._('Scheduled {date}', {
                    date: formattedDate
                }),
                size: "small",
                sx: {
                    color: theme.palette.grey[700],
                    backgroundColor: styles$2.lighten(theme.palette.grey[500], 0.9),
                    '& .MuiChip-icon': {
                        color: theme.palette.grey[700]
                    }
                }
            })
        });
    }
    if (intentsAnalysis.processingIntents.length > 0) {
        const processingData = intentsAnalysis.aggregation['processing'];
        return /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
            title: processingData && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                children: i18n._('{count} payment for {amount} processing', {
                    count: processingData.count,
                    amount: formatCurrencyToDisplay(processingData.sum, payable.currency || FALLBACK_CURRENCY)
                })
            }),
            arrow: true,
            children: /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                icon: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.AccessTimeRounded, {
                    fontSize: "small"
                }),
                label: i18n._('{count} Processing', {
                    count: processingData.count
                }),
                size: "small",
                sx: {
                    color: theme.palette.grey[700],
                    backgroundColor: styles$2.lighten(theme.palette.grey[500], 0.9),
                    '& .MuiChip-icon': {
                        color: theme.palette.grey[700]
                    }
                }
            })
        });
    }
    if (intentsAnalysis.succeededIntents.length > 0) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
            icon: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CheckCircleOutlineRounded, {
                fontSize: "small"
            }),
            label: i18n._({
                id: "KWsCqG"
            }),
            size: "small",
            sx: {
                color: theme.palette.success.main,
                backgroundColor: styles$2.lighten(theme.palette.success.main, 0.9),
                '& .MuiChip-icon': {
                    color: theme.palette.success.main
                }
            }
        });
    }
    if (!showPayButton) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: {
            display: 'flex',
            flexDirection: 'row',
            gap: 0.5,
            height: '100%',
            alignItems: 'center'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "outlined",
                color: "primary",
                size: "small",
                sx: {
                    padding: '0',
                    borderRadius: '8px'
                },
                onClick: handlePayClick,
                children: i18n._({
                    id: "4fL/V7"
                })
            }),
            modalComponent
        ]
    });
};

const useDragScroll = ()=>{
    const containerRef = React.useRef(null);
    const [isDragging, setIsDragging] = React.useState(false);
    const [startX, setStartX] = React.useState(0);
    const [scrollLeft, setScrollLeft] = React.useState(0);
    const handleMouseDown = React.useCallback((e)=>{
        var _containerRef_current, _containerRef_current1;
        setIsDragging(true);
        setStartX(e.pageX - (((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.offsetLeft) || 0));
        setScrollLeft(((_containerRef_current1 = containerRef.current) === null || _containerRef_current1 === void 0 ? void 0 : _containerRef_current1.scrollLeft) || 0);
    }, []);
    const handleMouseLeave = React.useCallback(()=>{
        setIsDragging(false);
    }, []);
    const handleMouseUp = React.useCallback(()=>{
        setIsDragging(false);
    }, []);
    const handleMouseMove = React.useCallback((e)=>{
        var _containerRef_current;
        if (!isDragging) return;
        e.preventDefault();
        const x = e.pageX - (((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.offsetLeft) || 0);
        const walk = x - startX;
        if (containerRef.current) {
            containerRef.current.scrollLeft = scrollLeft - walk;
        }
    }, [
        isDragging,
        startX,
        scrollLeft
    ]);
    const handleWheel = React.useCallback((e)=>{
        if (containerRef.current) {
            if (e.deltaMode === 0 && Math.abs(e.deltaX) > Math.abs(e.deltaY)) {
                e.preventDefault();
                containerRef.current.scrollLeft += e.deltaX * 2;
            } else {
                e.preventDefault();
            }
        }
    }, []);
    React.useEffect(()=>{
        const currentRef = containerRef.current;
        if (currentRef) {
            currentRef.addEventListener('wheel', handleWheel);
            return ()=>{
                currentRef.removeEventListener('wheel', handleWheel);
            };
        }
    }, [
        handleWheel
    ]);
    return {
        containerRef,
        handleMouseDown,
        handleMouseLeave,
        handleMouseUp,
        handleMouseMove,
        isDragging
    };
};

function _define_property$1P(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1O(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1P(target, key, source[key]);
        });
    }
    return target;
}
const SummaryStyledCard = styles$2.styled(material.Card, {
    shouldForwardProp: (prop)=>prop !== 'selected' && prop !== 'isAllItems' && prop !== 'theme'
})(({ isAllItems })=>({
        cursor: 'pointer',
        display: 'flex',
        padding: '12px 16px',
        flexDirection: 'column',
        justifyContent: 'center',
        height: 80,
        minWidth: isAllItems ? '118px' : '230px',
        flexShrink: 0
    }));
const summaryCardClassName = 'Monite-SummaryCard';
const SummaryCard = ({ status, count, amount, onClick, selected, currency })=>{
    const { i18n } = react.useLingui();
    const isAllItems = status === 'all';
    const theme = styles$2.useTheme();
    const statusText = isAllItems ? i18n._({
        id: "J3EsIX"
    }) : getRowToStatusTextMap(i18n)[status];
    const formatAmount = (amount, currency)=>{
        const dividedAmount = amount / 100;
        return dividedAmount.toLocaleString(undefined, {
            minimumFractionDigits: 2,
            style: 'currency',
            currency: currency
        });
    };
    const formattedAmount = amount != null ? formatAmount(amount, currency) : '';
    const [integerPart, decimalPart] = formattedAmount.includes('.') ? formattedAmount.split('.') : [
        '0',
        '00'
    ];
    const getColor = (palette, status)=>{
        var _palette_status;
        var _palette_status_status;
        return (_palette_status_status = (_palette_status = palette.status) === null || _palette_status === void 0 ? void 0 : _palette_status[status]) !== null && _palette_status_status !== void 0 ? _palette_status_status : palette.grey[300];
    };
    const colorValue = getColor(theme.palette, status);
    return /*#__PURE__*/ jsxRuntime.jsx(SummaryStyledCard, {
        theme: theme,
        onClick: onClick,
        selected: selected,
        isAllItems: isAllItems,
        className: classNames(summaryCardClassName, `${summaryCardClassName}-${status}`, selected ? `${summaryCardClassName}-selected` : ''),
        sx: {
            '&.Monite-SummaryCard': {
                background: styles$2.lighten(colorValue, 0.92)
            }
        },
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.CardContent, {
            sx: {
                padding: 0,
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'space-between',
                height: '100%'
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    display: "flex",
                    justifyContent: amount != null ? 'space-between' : 'flex-start',
                    alignItems: isAllItems ? 'flex-start' : 'center',
                    flexDirection: amount != null ? 'row' : 'column',
                    children: isAllItems ? /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        display: "flex",
                        flexDirection: "column",
                        justifyContent: "space-between",
                        alignItems: "flex-start",
                        sx: {
                            width: '100%'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h6",
                                fontWeight: 500,
                                sx: {
                                    fontSize: 14
                                },
                                className: classNames(summaryCardClassName, `${summaryCardClassName}-title-${status}`),
                                children: statusText
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body2",
                                color: "text.secondary",
                                fontWeight: 400,
                                fontSize: "small",
                                sx: {
                                    mt: 0.5
                                },
                                children: [
                                    count,
                                    " ",
                                    count === 1 ? i18n._({
                                        id: "/uUlFU"
                                    }) : i18n._({
                                        id: "hgr8eo"
                                    })
                                ]
                            })
                        ]
                    }) : /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        display: "flex",
                        justifyContent: "space-between",
                        alignItems: "center",
                        flexDirection: "row",
                        width: "100%",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "h6",
                                fontWeight: 500,
                                fontSize: "small",
                                className: classNames(`${summaryCardClassName}-StatusTypography`, `${summaryCardClassName}-StatusTypography-${status}`, `${summaryCardClassName}-StatusTypography-${status}-${selected}`),
                                color: 'body.primary',
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Circle, {
                                        sx: {
                                            color: styles$2.lighten(colorValue, 0.4),
                                            fontSize: 10,
                                            background: styles$2.lighten(colorValue, 0.82),
                                            borderRadius: '100%',
                                            border: `2px solid ${styles$2.lighten(colorValue, 0.82)}`,
                                            mr: 1
                                        }
                                    }),
                                    statusText
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                color: "text.primary",
                                fontWeight: 400,
                                fontSize: "small",
                                sx: {},
                                children: count
                            })
                        ]
                    })
                }),
                status !== 'all' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    display: "flex",
                    justifyContent: "flex-start",
                    alignItems: "flex-end",
                    mt: "auto",
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                        variant: "body2",
                        color: "#000",
                        fontWeight: 400,
                        fontSize: "small",
                        className: classNames(`${summaryCardClassName}-AmountTypography`, `${summaryCardClassName}-AmountTypography-${status}`, `${summaryCardClassName}-AmountTypography-${status}-${selected}`),
                        children: [
                            integerPart,
                            ".",
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                component: "span",
                                color: "#000",
                                fontWeight: 700,
                                fontSize: "small",
                                sx: {},
                                children: decimalPart
                            })
                        ]
                    })
                })
            ]
        })
    });
};
const SummaryCardsFilters = ({ onChangeFilter, selectedStatus, sx })=>{
    var _entitySettings_currency;
    const { data: summaryData } = usePayablesTableSummaryData();
    const { api, entityId } = useMoniteContext();
    const { data: entitySettings } = api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    });
    var _entitySettings_currency_default;
    const currency = (_entitySettings_currency_default = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_currency = entitySettings.currency) === null || _entitySettings_currency === void 0 ? void 0 : _entitySettings_currency.default) !== null && _entitySettings_currency_default !== void 0 ? _entitySettings_currency_default : 'USD';
    const { containerRef, handleMouseDown, handleMouseLeave, handleMouseUp, handleMouseMove } = useDragScroll();
    if (!summaryData) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "rectangular",
            height: 80,
            className: classNames(`${summaryCardClassName}-Skeleton`),
            sx: {
                m: 2,
                borderRadius: 3
            }
        });
    }
    const enhancedData = [
        {
            status: 'all',
            count: summaryData.data.reduce((acc, item)=>acc + item.count, 0),
            sum_total_amount: summaryData.data.reduce((acc, item)=>acc + (item.sum_total_amount || 0), 0)
        },
        ...summaryData.data
    ];
    const sortedData = enhancedData.sort((a, b)=>DEFAULT_CARDS_ORDER.indexOf(a.status) - DEFAULT_CARDS_ORDER.indexOf(b.status));
    const handleSelectStatus = (status)=>{
        onChangeFilter('status', status === 'all' ? null : status);
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        ref: containerRef,
        display: "flex",
        gap: 1,
        onMouseDown: handleMouseDown,
        onMouseLeave: handleMouseLeave,
        onMouseUp: handleMouseUp,
        onMouseMove: handleMouseMove,
        sx: _object_spread$1O({
            overflowX: 'auto',
            whiteSpace: 'nowrap',
            padding: '3px',
            paddingBottom: 1,
            width: '100%',
            justifyContent: 'flex-start',
            alignItems: 'center',
            userSelect: 'none',
            scrollbarWidth: 'none',
            msOverflowStyle: 'none',
            cursor: 'grab'
        }, sx),
        children: sortedData.map((item)=>/*#__PURE__*/ jsxRuntime.jsx(SummaryCard, {
                status: item.status,
                count: item.count,
                amount: item.sum_total_amount,
                currency: currency,
                onClick: ()=>handleSelectStatus(item.status),
                selected: selectedStatus === item.status
            }, item.status))
    });
};
const usePayablesTableSummaryData = ()=>{
    const { api, queryClient } = useMoniteContext();
    if (queryClient) {
        api.payables.getPayablesAnalytics.invalidateQueries(queryClient);
    }
    return api.payables.getPayablesAnalytics.useQuery({}, {
        enabled: !!queryClient
    });
};

function _define_property$1O(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1N(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1O(target, key, source[key]);
        });
    }
    return target;
}
const CustomStyledCard = styles$2.styled(material.Card)(({ selected, isAllItems, theme })=>({
        cursor: 'pointer',
        border: `2px solid ${selected ? theme.palette.primary.main : 'transparent'}`,
        '&:hover': {
            border: `2px solid ${theme.palette.primary.main}`
        },
        display: 'flex',
        padding: '16px 18px',
        flexDirection: 'column',
        justifyContent: 'center',
        height: 40,
        minWidth: isAllItems ? '118px' : '220px',
        flexShrink: 0
    }));
const MoniteCustomFilter = ({ title, onClick, selected })=>{
    const { i18n } = react.useLingui();
    const isAllItems = title === 'all';
    const theme = styles$2.useTheme();
    const titleText = isAllItems ? i18n._({
        id: "J3EsIX"
    }) : title;
    return /*#__PURE__*/ jsxRuntime.jsx(CustomStyledCard, {
        theme: theme,
        onClick: onClick,
        selected: selected,
        isAllItems: isAllItems,
        className: classNames(summaryCardClassName, `${summaryCardClassName}-${title}`, selected ? `${summaryCardClassName}-selected` : ''),
        children: /*#__PURE__*/ jsxRuntime.jsx(material.CardContent, {
            sx: {
                padding: 0,
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'space-between',
                paddingBottom: '0 !important'
            },
            children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                display: "flex",
                justifyContent: 'space-between',
                alignItems: isAllItems ? 'flex-start' : 'center',
                flexDirection: 'row',
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "h6",
                    fontWeight: 700,
                    sx: {
                        fontSize: 16,
                        paddingBottom: 0
                    },
                    className: classNames(summaryCardClassName, `${summaryCardClassName}-Title-${title}`),
                    children: titleText
                })
            })
        })
    });
};
const MoniteCustomFilters = ({ onChangeFilter, summaryCardFiltersData, selectedFilter, sx })=>{
    const { containerRef, handleMouseDown, handleMouseLeave, handleMouseUp, handleMouseMove } = useDragScroll();
    if (!summaryCardFiltersData) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "rectangular",
            height: 80,
            className: classNames(`${summaryCardClassName}-Skeleton`),
            sx: {
                m: 2,
                borderRadius: 3
            }
        });
    }
    const enhancedData = [
        {
            title: 'all'
        },
        ...Object.keys(summaryCardFiltersData).map((key)=>({
                title: key,
                filterData: summaryCardFiltersData[key]
            }))
    ];
    const handleSelectTitle = (title)=>{
        onChangeFilter(FILTER_TYPE_SUMMARY_CARD, title === 'all' ? null : title);
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        ref: containerRef,
        display: "flex",
        gap: 2,
        onMouseDown: handleMouseDown,
        onMouseLeave: handleMouseLeave,
        onMouseUp: handleMouseUp,
        onMouseMove: handleMouseMove,
        sx: _object_spread$1N({
            overflowX: 'auto',
            whiteSpace: 'nowrap',
            paddingBottom: 1,
            width: '100%',
            justifyContent: 'flex-start',
            alignItems: 'center',
            userSelect: 'none',
            cursor: 'grab',
            '&::-webkit-scrollbar': {
                display: 'none'
            },
            scrollbarWidth: 'none',
            msOverflowStyle: 'none'
        }, sx),
        children: enhancedData.map((item)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteCustomFilter, {
                title: item.title,
                onClick: ()=>handleSelectTitle(item.title),
                selected: selectedFilter === item.title
            }, item.title))
    });
};

const statuses = [
    'draft',
    'new',
    'waiting_to_be_paid',
    'approve_in_progress'
];
const MILLISECONDS_IN_A_DAY = 1000 * 60 * 60 * 24;
const getInvoiceOverdueDays = (invoice)=>{
    if (!invoice.due_date) return 0;
    const today = new Date();
    today.setUTCHours(0, 0, 0, 0); // Normalize today to UTC midnight
    const dueDate = new Date(invoice.due_date);
    dueDate.setUTCHours(0, 0, 0, 0); // Normalize dueDate to UTC midnight
    if (dueDate.getTime() === today.getTime()) return 0;
    const isStatusOverdue = statuses.includes(invoice.status);
    const isDateOverdue = dueDate.getTime() < today.getTime();
    if (!isStatusOverdue || !isDateOverdue) {
        return 0;
    }
    return Math.floor((today.getTime() - dueDate.getTime()) / MILLISECONDS_IN_A_DAY);
};

function _define_property$1N(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1M(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1N(target, key, source[key]);
        });
    }
    return target;
}
const DueDateCell = ({ data })=>{
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { palette } = material.useTheme();
    if (!data.due_date) return /*#__PURE__*/ jsxRuntime.jsx("span", {
        style: {
            opacity: 0.4
        },
        children: "-"
    });
    const formattedDate = i18n.date(new Date(data.due_date), locale.dateFormat);
    const overdueDays = getInvoiceOverdueDays(data);
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        style: {
            display: 'flex',
            flexDirection: 'column',
            height: '100%',
            justifyContent: 'center',
            gap: '4px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                style: _object_spread$1M({
                    lineHeight: 1
                }, overdueDays > 0 ? {
                    color: palette.error.main
                } : {}),
                children: formattedDate
            }),
            overdueDays > 0 && /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "Monite-DueDateCell-OverdueDays",
                style: {
                    color: palette.error.main,
                    fontWeight: 'bold',
                    fontSize: '10px',
                    lineHeight: 1
                },
                children: i18n._({
                    id: "hBxNhw",
                    values: {
                        overdueDays: overdueDays,
                        0: createDayPluralForm(i18n, overdueDays)
                    }
                })
            })
        ]
    });
};

function _define_property$1M(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1L(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1M(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1e(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1e(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1e(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$p(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$p(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$p(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * PayablesTable component.
 * @component
 * @example Monite Provider customisation
 * ```ts
 * // You can configure the component through Monite Provider property `componentSettings` like this:
 * const componentSettings = {
 *   payables: {
 *     fieldOrder: ['document_id', 'counterpart_id', 'created_at', 'issued_at', 'due_date', 'status', 'amount', 'pay'],
 *     summaryCardFilters: {
 *       'Overdue Invoices': {
 *         status__in: ['waiting_to_be_paid'],
 *         overdue: true,
 *       },
 *       'High-Value Invoices': {
 *         amount__gte: 10000,
 *       },
 *     },
 *   },
 * };
 * ```
 */ const PayablesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PayablesTableBase, _object_spread$1L({}, props))
    });
const PayablesTableBase = (_param)=>{
    var { onRowClick, onPay, onPayUS, onChangeFilter: onChangeFilterCallback, openFileInput, setIsCreateInvoiceDialogOpen } = _param, inProps = _object_without_properties$p(_param, [
        "onRowClick",
        "onPay",
        "onPayUS",
        "onChangeFilter",
        "openFileInput",
        "setIsCreateInvoiceDialogOpen"
    ]);
    var _componentSettings_payables_pageSizeOptions, _api_payables_getPayables_getQueryData;
    const { i18n } = react.useLingui();
    const { api, locale, queryClient, componentSettings } = useMoniteContext();
    const { isShowingSummaryCards, fieldOrder, requiredColumns, summaryCardFilters } = usePayableTableThemeProps(inProps);
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    var _componentSettings_payables_pageSizeOptions_;
    const [pageSize, setPageSize] = React.useState((_componentSettings_payables_pageSizeOptions_ = (_componentSettings_payables_pageSizeOptions = componentSettings.payables.pageSizeOptions) === null || _componentSettings_payables_pageSizeOptions === void 0 ? void 0 : _componentSettings_payables_pageSizeOptions[0]) !== null && _componentSettings_payables_pageSizeOptions_ !== void 0 ? _componentSettings_payables_pageSizeOptions_ : 15);
    const [sortModel, setSortModel] = React.useState({
        field: 'created_at',
        sort: 'desc'
    });
    const [currentFilter, setCurrentFilter] = React.useState({});
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadSupported, isLoading: isReadSupportedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const payablesQueryParameters = api.payables.getPayables.getQueryKey({
        query: _object_spread$1L({
            sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
            order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
            limit: pageSize,
            pagination_token: currentPaginationToken || undefined,
            status: currentFilter[FILTER_TYPE_STATUS$1] || undefined,
            due_date: currentFilter[FILTER_TYPE_DUE_DATE] ? dateFns.formatISO(currentFilter[FILTER_TYPE_DUE_DATE], {
                representation: 'date'
            }) : undefined,
            search_text: currentFilter[FILTER_TYPE_SEARCH$3] || undefined
        }, typeof currentFilter[FILTER_TYPE_SUMMARY_CARD] === 'string' ? (summaryCardFilters === null || summaryCardFilters === void 0 ? void 0 : summaryCardFilters[currentFilter[FILTER_TYPE_SUMMARY_CARD]]) || {} : {})
    });
    const { data: payables, isLoading, isError, error, refetch } = api.payables.getPayables.useQuery(payablesQueryParameters, {
        refetchInterval: ((_api_payables_getPayables_getQueryData = api.payables.getPayables.getQueryData(payablesQueryParameters, queryClient)) === null || _api_payables_getPayables_getQueryData === void 0 ? void 0 : _api_payables_getPayables_getQueryData.data.filter(isPayableInOCRProcessing).length) ? 2000 : undefined
    });
    // Get IDs of payables in status [waiting_to_be_paid, partially_paid]
    const payableIdsInWaitingToBePaidOrPartiallyPaid = React.useMemo(()=>{
        var _payables_data;
        return payables === null || payables === void 0 ? void 0 : (_payables_data = payables.data) === null || _payables_data === void 0 ? void 0 : _payables_data.filter((payable)=>payable.status === 'waiting_to_be_paid' || payable.status === 'partially_paid').map((payable)=>payable.id);
    }, [
        payables === null || payables === void 0 ? void 0 : payables.data
    ]);
    // Fetch payment records for payables in status [waiting_to_be_paid, partially_paid]
    const { payablesPaymentIntentsRecord, isLoading: isPaymentRecordsLoading, refetch: refetchPaymentRecords } = usePayablePaymentIntentsAndRecords(payableIdsInWaitingToBePaidOrPartiallyPaid || []);
    //TODO: Remove this error handling and replace with proper error handling
    React.useEffect(()=>{
        if (isError) {
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    }, [
        isError,
        error,
        i18n
    ]);
    const areCounterpartsLoading = useAreCounterpartsLoading(payables === null || payables === void 0 ? void 0 : payables.data);
    const calculatedFieldOrder = React.useMemo(()=>{
        if (fieldOrder && Array.isArray(fieldOrder)) {
            return fieldOrder;
        }
        return DEFAULT_FIELD_ORDER;
    }, [
        fieldOrder
    ]);
    const columnsConfig = React.useMemo(()=>{
        return [
            {
                field: 'document_id',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('document_id')),
                headerName: i18n._({
                    id: "HptUxX"
                }),
                width: 140,
                display: 'flex',
                cellClassName: 'Monite-Cell-Highlight',
                colSpan: (_, row)=>isPayableInOCRProcessing(row) ? 5 : 1,
                renderCell: (params)=>{
                    const payable = params.row;
                    if (isPayableInOCRProcessing(payable)) {
                        var _payable_file;
                        return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    size: 22,
                                    sx: {
                                        mr: 1
                                    }
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                    sx: {
                                        ml: 1
                                    },
                                    children: [
                                        i18n._({
                                            id: "WhzUpN"
                                        }),
                                        " '",
                                        (_payable_file = payable.file) === null || _payable_file === void 0 ? void 0 : _payable_file.name,
                                        "'"
                                    ]
                                })
                            ]
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "Monite-TextOverflowContainer",
                        children: payable.document_id
                    });
                }
            },
            {
                field: 'counterpart_id',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('counterpart_id')),
                headerName: i18n._({
                    id: "lO6GxP"
                }),
                display: 'flex',
                width: defaultCounterpartColumnWidth,
                renderCell: (params)=>{
                    var _payable_counterpart;
                    const payable = params.row;
                    if ((_payable_counterpart = payable.counterpart) === null || _payable_counterpart === void 0 ? void 0 : _payable_counterpart.name) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: payable.counterpart.name
                        });
                    } else if (params.value) {
                        return /*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCellById, {
                            counterpartId: params.value
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        style: {
                            opacity: 0.4
                        },
                        children: "-"
                    });
                }
            },
            {
                field: 'created_at',
                type: 'date',
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('created_at')),
                headerName: i18n._({
                    id: "z1dTLo"
                }),
                width: 120,
                display: 'flex',
                renderCell: ({ formattedValue })=>formattedValue,
                valueFormatter: (value)=>i18n.date(value, locale.dateFormat)
            },
            {
                field: 'issued_at',
                type: 'date',
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('issued_at')),
                headerName: i18n._({
                    id: "Wx2NzT"
                }),
                width: 120,
                display: 'flex',
                renderCell: ({ formattedValue })=>formattedValue,
                valueFormatter: (value)=>value ? i18n.date(value, locale.dateFormat) : ''
            },
            {
                field: 'due_date',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('due_date')),
                type: 'date',
                headerName: i18n._({
                    id: "Due date Name"
                }),
                width: 120,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(DueDateCell, {
                        data: params.row
                    }),
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat)
            },
            {
                field: 'status',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('status')),
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                display: 'flex',
                width: 100,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(PayableStatusChip, {
                        status: params.value,
                        size: "small"
                    })
            },
            {
                field: 'amount',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('amount')),
                headerAlign: 'right',
                align: 'right',
                headerName: i18n._({
                    id: "Total"
                }),
                width: 120,
                valueGetter: (_, payable)=>{
                    return payable.total_amount && payable.currency ? formatCurrencyToDisplay(payable.total_amount, payable.currency) : null;
                },
                renderCell: (params)=>{
                    if (!params.value) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:opacity-40",
                            children: "-"
                        });
                    }
                    return params.value;
                }
            },
            {
                field: 'amount_to_pay',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('amount_to_pay')),
                headerAlign: 'right',
                align: 'right',
                headerName: i18n._({
                    id: "Due"
                }),
                width: 120,
                valueGetter: (_, payable)=>{
                    // If the payable is paid, just return null.
                    if (payable.status === 'paid') {
                        return null;
                    }
                    // The truthiness check filters out zero values, returning null so the cell renders "0.00" with reduced opacity
                    return payable.amount_to_pay && payable.currency ? payable.amount_to_pay : null;
                },
                renderCell: (params)=>{
                    const statusShowPaymentValues = [
                        'waiting_to_be_paid',
                        'partially_paid',
                        'paid'
                    ].includes(params.row.status);
                    if (statusShowPaymentValues) {
                        return params.value ? formatCurrencyToDisplay(params.value, params.row.currency) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:opacity-40",
                            children: "0.00"
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "mtw:opacity-40",
                        children: "-"
                    });
                }
            },
            {
                field: 'amount_paid',
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('amount_paid')),
                headerAlign: 'right',
                align: 'right',
                headerName: i18n._({
                    id: "Paid"
                }),
                width: 120,
                valueGetter: (_, payable)=>{
                    // If the payable is paid, just return the total amount.
                    if (payable.status === 'paid') {
                        return payable.total_amount && payable.currency ? payable.total_amount : null;
                    }
                    // The truthiness check filters out zero values, returning null so the cell renders "0.00" with reduced opacity
                    return payable.amount_paid && payable.currency ? payable.amount_paid : null;
                },
                renderCell: (params)=>{
                    const statusShowPaymentValues = [
                        'waiting_to_be_paid',
                        'partially_paid',
                        'paid'
                    ].includes(params.row.status);
                    if (statusShowPaymentValues) {
                        return params.value ? formatCurrencyToDisplay(params.value, params.row.currency) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:opacity-40",
                            children: "0.00"
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "mtw:opacity-40",
                        children: "-"
                    });
                }
            },
            // {
            //   field: 'was_created_by_user_id',
            //   sortable: false,
            //   headerName: t(i18n)`Added by`,
            //   display: 'flex',
            //   width: 240,
            //   minWidth: 200,
            //   renderCell: (params) => (
            //     <UserCell userId={params.row.was_created_by_user_id} />
            //   ),
            // },
            {
                field: 'pay',
                headerName: i18n._({
                    id: "621rYf"
                }),
                sortable: false,
                hideable: !(requiredColumns === null || requiredColumns === void 0 ? void 0 : requiredColumns.includes('pay')),
                width: 200,
                minWidth: 150,
                maxWidth: 450,
                renderCell: (params)=>{
                    const payable = params.row;
                    const statusShowPaymentActions = [
                        'waiting_to_be_paid',
                        'partially_paid'
                    ].includes(payable.status);
                    if (!statusShowPaymentActions) {
                        return null;
                    }
                    if (isPaymentRecordsLoading) {
                        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: 22,
                            sx: {
                                mr: 1
                            }
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx(PayablesTableAction, {
                        payable: payable,
                        payableRecentPaymentRecordByIntent: (payablesPaymentIntentsRecord === null || payablesPaymentIntentsRecord === void 0 ? void 0 : payablesPaymentIntentsRecord[payable.id]) || [],
                        refetchPaymentRecords: refetchPaymentRecords,
                        onPayableActionComplete: ()=>{
                            refetch();
                        },
                        onPay: onPay,
                        onPayUS: onPayUS
                    });
                }
            }
        ];
    }, [
        requiredColumns,
        i18n,
        locale.dateFormat,
        formatCurrencyToDisplay,
        isPaymentRecordsLoading,
        payablesPaymentIntentsRecord,
        refetchPaymentRecords,
        onPay,
        onPayUS,
        refetch
    ]);
    const columns = React.useMemo(()=>{
        return columnsConfig.sort((a, b)=>{
            const aIndex = calculatedFieldOrder.indexOf(a.field);
            const bIndex = calculatedFieldOrder.indexOf(b.field);
            if (aIndex === -1 || bIndex === -1) return 0;
            return aIndex - bIndex;
        });
    }, [
        columnsConfig,
        calculatedFieldOrder
    ]);
    const gridApiRef = useAutosizeGridColumns(payables === null || payables === void 0 ? void 0 : payables.data, columns, areCounterpartsLoading, // eslint-disable-next-line lingui/no-unlocalized-strings
    'PayablesTable');
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        if (field === FILTER_TYPE_SUMMARY_CARD && value) {
            setCurrentFilter((prevFilter)=>_object_spread_props$1e(_object_spread$1L({}, prevFilter), {
                    [FILTER_TYPE_SUMMARY_CARD]: value
                }));
        } else {
            setCurrentFilter((prevFilter)=>_object_spread_props$1e(_object_spread$1L({}, prevFilter), {
                    [field]: value === 'all' ? null : value
                }));
        }
        onChangeFilterCallback === null || onChangeFilterCallback === void 0 ? void 0 : onChangeFilterCallback({
            field,
            value
        });
    };
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setCurrentPaginationToken(null);
    };
    if (isReadSupportedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    /** We have to wait until `usePayablesList` and `useIsActionAllowed` is finished */ if (!isReadSupported) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    const isFiltering = Object.keys(currentFilter).some((key)=>currentFilter[key] !== null && currentFilter[key] !== undefined);
    const isSearching = !!currentFilter[FILTER_TYPE_SEARCH$3];
    const className = 'Monite-PayablesTable';
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            isShowingSummaryCards && !summaryCardFilters && /*#__PURE__*/ jsxRuntime.jsx(SummaryCardsFilters, {
                onChangeFilter: onChangeFilter,
                selectedStatus: currentFilter[FILTER_TYPE_STATUS$1] || 'all',
                sx: {
                    mb: 2
                }
            }),
            summaryCardFilters && Object.keys(summaryCardFilters).length > 0 && /*#__PURE__*/ jsxRuntime.jsx(MoniteCustomFilters, {
                summaryCardFiltersData: summaryCardFilters,
                onChangeFilter: onChangeFilter,
                selectedFilter: typeof currentFilter[FILTER_TYPE_SUMMARY_CARD] === 'string' ? currentFilter[FILTER_TYPE_SUMMARY_CARD] : 'all',
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Filters$1, {
                onChangeFilter: onChangeFilter
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: [
                            sortModel
                        ]
                    }
                },
                apiRef: gridApiRef,
                rowSelection: false,
                disableColumnFilter: true,
                loading: isLoading,
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    const payable = params.row;
                    if (!hasSelectedText() && payable.ocr_status !== 'processing') {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(payable.id);
                    }
                },
                sx: {
                    '& .MuiDataGrid-withBorderColor': {
                        borderColor: 'divider'
                    },
                    '&.MuiDataGrid-withBorderColor': {
                        borderColor: 'divider'
                    },
                    '& .MuiDataGrid-row.ocr-processing': {
                        pointerEvents: 'none',
                        backgroundColor: 'inherit'
                    }
                },
                getRowClassName: (params)=>isPayableInOCRProcessing(params.row) ? 'ocr-processing' : '',
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.payables.pageSizeOptions,
                            nextPage: payables === null || payables === void 0 ? void 0 : payables.next_pagination_token,
                            prevPage: payables === null || payables === void 0 ? void 0 : payables.prev_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            noDataTitle: i18n._({
                                id: "duCVgY"
                            }),
                            noDataDescription1: i18n._({
                                id: "2Fu3L0"
                            }),
                            noDataDescription2: i18n._({
                                id: "9GjPE+"
                            }),
                            filterTitle: i18n._({
                                id: "zTuJ1X"
                            }),
                            isLoading: isLoading,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            dataLength: (payables === null || payables === void 0 ? void 0 : payables.data.length) || 0,
                            onCreate: (type)=>{
                                if (type === 'New Invoice') {
                                    setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true);
                                } else if (type === 'Upload File') {
                                    openFileInput === null || openFileInput === void 0 ? void 0 : openFileInput();
                                }
                            },
                            refetch: refetch,
                            entityName: i18n._({
                                id: "CzygNg"
                            }),
                            type: "no-data=payables"
                        })
                },
                columns: columns,
                rows: (payables === null || payables === void 0 ? void 0 : payables.data) || []
            })
        ]
    });
};
const usePayableTableThemeProps = (inProps)=>{
    var _componentSettings_payables, _componentSettings_payables1, _componentSettings_payables2, _componentSettings_payables3;
    const { componentSettings } = useMoniteContext();
    var _inProps_isShowingSummaryCards, _inProps_fieldOrder, _inProps_summaryCardFilters, _inProps_requiredColumns;
    return {
        isShowingSummaryCards: (_inProps_isShowingSummaryCards = inProps === null || inProps === void 0 ? void 0 : inProps.isShowingSummaryCards) !== null && _inProps_isShowingSummaryCards !== void 0 ? _inProps_isShowingSummaryCards : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables = componentSettings.payables) === null || _componentSettings_payables === void 0 ? void 0 : _componentSettings_payables.isShowingSummaryCards,
        fieldOrder: (_inProps_fieldOrder = inProps === null || inProps === void 0 ? void 0 : inProps.fieldOrder) !== null && _inProps_fieldOrder !== void 0 ? _inProps_fieldOrder : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables1 = componentSettings.payables) === null || _componentSettings_payables1 === void 0 ? void 0 : _componentSettings_payables1.fieldOrder,
        summaryCardFilters: (_inProps_summaryCardFilters = inProps === null || inProps === void 0 ? void 0 : inProps.summaryCardFilters) !== null && _inProps_summaryCardFilters !== void 0 ? _inProps_summaryCardFilters : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables2 = componentSettings.payables) === null || _componentSettings_payables2 === void 0 ? void 0 : _componentSettings_payables2.summaryCardFilters,
        requiredColumns: (_inProps_requiredColumns = inProps === null || inProps === void 0 ? void 0 : inProps.requiredColumns) !== null && _inProps_requiredColumns !== void 0 ? _inProps_requiredColumns : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables3 = componentSettings.payables) === null || _componentSettings_payables3 === void 0 ? void 0 : _componentSettings_payables3.requiredColumns
    };
};

function _define_property$1L(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$3() {
    _extends$3 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$3.apply(this, arguments);
}
function _object_destructuring_empty$3(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$1K(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1L(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$o(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$o(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$o(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Popover(_param) {
    var props = _extends$3({}, _object_destructuring_empty$3(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(PopoverPrimitive__namespace.Root, _object_spread$1K({
        "data-slot": "popover"
    }, props));
}
const PopoverTrigger = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var props = _extends$3({}, _object_destructuring_empty$3(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(PopoverPrimitive__namespace.Trigger, _object_spread$1K({
        "data-slot": "popover-trigger",
        ref: ref
    }, props));
});
PopoverTrigger.displayName = PopoverPrimitive__namespace.Trigger.displayName;
function PopoverContent(_param) {
    var { className, align = 'center', sideOffset = 4 } = _param, props = _object_without_properties$o(_param, [
        "className",
        "align",
        "sideOffset"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(PopoverPrimitive__namespace.Portal, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PopoverPrimitive__namespace.Content, _object_spread$1K({
            "data-slot": "popover-content",
            align: align,
            sideOffset: sideOffset,
            className: cn('mtw:bg-popover mtw:text-popover-foreground mtw:data-[state=open]:animate-in mtw:data-[state=closed]:animate-out mtw:data-[state=closed]:fade-out-0 mtw:data-[state=open]:fade-in-0 mtw:data-[state=closed]:zoom-out-95 mtw:data-[state=open]:zoom-in-95 mtw:data-[side=bottom]:slide-in-from-top-2 mtw:data-[side=left]:slide-in-from-right-2 mtw:data-[side=right]:slide-in-from-left-2 mtw:data-[side=top]:slide-in-from-bottom-2 mtw:z-1300 mtw:w-72 mtw:origin-(--radix-popover-content-transform-origin) mtw:rounded-md mtw:border mtw:p-4 mtw:shadow-md mtw:outline-hidden', className)
        }, props))
    });
}

const CreatePayableMenu = ({ isCreateAllowed, onCreateInvoice, handleFileUpload })=>{
    const { i18n } = react.useLingui();
    const [open, setOpen] = React.useState(false);
    const { FileInput, openFileInput, checkFileError } = useFileInput();
    const [dragIsOver, setDragIsOver] = React.useState(false);
    const handleDragOver = (event)=>{
        event.preventDefault();
        setDragIsOver(true);
    };
    const handleDragLeave = (event)=>{
        event.preventDefault();
        setDragIsOver(false);
    };
    const handleDrop = (event)=>{
        event.preventDefault();
        setDragIsOver(false);
        const droppedFiles = Array.from(event.dataTransfer.files);
        droppedFiles.forEach((file)=>{
            const error = checkFileError(file);
            if (error) {
                reactHotToast.toast.error(error);
                return;
            }
            handleFileUpload(file);
        });
        setOpen(false);
    };
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsxs(Popover, {
            open: open,
            onOpenChange: setOpen,
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(PopoverTrigger, {
                    asChild: true,
                    children: /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                        variant: "default",
                        size: "lg",
                        disabled: !isCreateAllowed,
                        children: [
                            i18n._({
                                id: "r/mz/U"
                            }),
                            open ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronUpIcon, {}) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {})
                        ]
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(PopoverContent, {
                    align: "end",
                    className: "mtw:w-auto mtw:min-w-[550px] mtw:border-none",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:p-4 mtw:w-[550px]",
                            onClick: (e)=>{
                                e.preventDefault();
                                e.stopPropagation();
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-xl mtw:font-semibold mtw:mb-2",
                                            children: i18n._({
                                                id: "sCtyHQ"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                                            className: cn('mtw:box-border mtw:cursor-pointer mtw:w-full mtw:h-[170px] mtw:flex mtw:flex-col mtw:items-center mtw:justify-center mtw:text-center mtw:border-2 mtw:rounded-xl mtw:border-dashed mtw:border-neutral-80 mtw:bg-white mtw:hover:bg-neutral-95', dragIsOver && 'mtw:bg-transparent'),
                                            onDragOver: handleDragOver,
                                            onDragLeave: handleDragLeave,
                                            onDrop: handleDrop,
                                            onClick: openFileInput,
                                            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                                className: "mtw:mx-auto",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.CloudUpload, {
                                                        className: "mtw:text-primary-30 mtw:w-10 mtw:h-10 mtw:mx-auto"
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                                                        className: "mtw:text-lg mtw:font-semibold mtw:text-neutral-30",
                                                        children: i18n._({
                                                            id: "bKp9GC"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                                                        className: "mtw:text-sm mtw:text-neutral-50",
                                                        children: i18n._({
                                                            id: "64puzR"
                                                        })
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    className: "mtw:mt-4",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-xl mtw:font-semibold mtw:mb-2",
                                            children: i18n._({
                                                id: "Mj7m37"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                                            children: /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                                variant: "secondary",
                                                onClick: ()=>{
                                                    setOpen(false);
                                                    onCreateInvoice();
                                                },
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Plus, {}),
                                                    i18n._({
                                                        id: "r/mz/U"
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(FileInput, {
                            "aria-label": i18n._({
                                id: "RK4mVN"
                            }),
                            multiple: true,
                            onChange: (event)=>{
                                const files = event.target.files;
                                if (files) handleFileUpload(files);
                                setOpen(false);
                            }
                        })
                    ]
                })
            ]
        })
    });
};

function _define_property$1K(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1J(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1K(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1d(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1d(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1d(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const Payables = (props)=>{
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(PayablesBase, _object_spread$1J({}, props))
    });
};
const PayablesBase = ({ customerTypes, enableGLCodes, onSaved, onCanceled, onSubmitted, onRejected, onApproved, onReopened, onDeleted, onPay, onPayUS })=>{
    var _componentSettings_payables, _componentSettings_counterparts, _componentSettings_counterparts1;
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { componentSettings } = useComponentSettings();
    const { handleSaved, handleCanceled, handleSubmitted, handleRejected, handleApproved, handleReopened, handleDeleted, handlePay } = usePayableCallbacks({
        onSaved,
        onCanceled,
        onSubmitted,
        onRejected,
        onApproved,
        onReopened,
        onDeleted,
        onPay
    });
    const [invoiceIdDialog, setInvoiceIdDialog] = React.useState({
        invoiceId: undefined,
        open: false
    });
    const closeEditDialog = ()=>{
        setInvoiceIdDialog((prev)=>_object_spread_props$1d(_object_spread$1J({}, prev), {
                open: false,
                invoiceId: undefined
            }));
    };
    const [isCreateInvoiceDialogOpen, setIsCreateInvoiceDialogOpen] = React.useState(false);
    const { FileInput, openFileInput, checkFileError } = useFileInput();
    const payableUploadFromFileMutation = api.payables.postPayablesUploadFromFile.useMutation({}, {
        onSuccess: ()=>api.payables.getPayables.invalidateQueries(queryClient),
        onError: ()=>{
            // This onError does nothing.
            // The actionable onError is defined in payableUploadFromFileMutation.mutateAsync().
            // Need to define this onError so that global QueryClient.mutationCache.onError is skipped.
            return;
        }
    });
    const handleFileUpload = (files)=>{
        const fileArray = files instanceof File ? [
            files
        ] : Array.from(files);
        fileArray.forEach((file)=>{
            const error = checkFileError(file);
            if (error) {
                reactHotToast.toast.error(error);
                return;
            }
            reactHotToast.toast.promise(payableUploadFromFileMutation.mutateAsync({
                file
            }), {
                loading: i18n._({
                    id: "xonzEV",
                    values: {
                        0: file.name
                    }
                }),
                success: i18n._({
                    id: "GC98fF",
                    values: {
                        0: file.name
                    }
                }),
                error: (error)=>getAPIErrorMessage(i18n, error)
            });
        });
    };
    const { data: user } = useEntityUserByAuthToken();
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'payable',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { root } = useRootElements();
    const className = 'Monite-Payables-Header';
    var _ref;
    const finalEnableGLCodes = (_ref = enableGLCodes !== null && enableGLCodes !== void 0 ? enableGLCodes : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_payables = componentSettings.payables) === null || _componentSettings_payables === void 0 ? void 0 : _componentSettings_payables.enableGLCodes) !== null && _ref !== void 0 ? _ref : false;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                className: className + '-Header',
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "1/la1y"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx(CreatePayableMenu, {
                    isCreateAllowed: isCreateAllowed,
                    onCreateInvoice: ()=>setIsCreateInvoiceDialogOpen(true),
                    handleFileUpload: handleFileUpload
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(PayablesTable, {
                onRowClick: (id)=>setInvoiceIdDialog({
                        open: true,
                        invoiceId: id
                    }),
                onPay: handlePay,
                onPayUS: onPayUS,
                openFileInput: openFileInput,
                setIsCreateInvoiceDialogOpen: setIsCreateInvoiceDialogOpen
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FileInput, {
                "aria-label": i18n._({
                    id: "RK4mVN"
                }),
                multiple: true,
                onChange: (event)=>{
                    const files = event.target.files;
                    if (files) handleFileUpload(files);
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                className: className + '-Dialog-PayableDetails',
                open: invoiceIdDialog.open,
                container: root,
                onClose: closeEditDialog,
                onClosed: closeEditDialog,
                fullScreen: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(PayableDetails, {
                    id: invoiceIdDialog.invoiceId,
                    customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes),
                    enableGLCodes: finalEnableGLCodes,
                    onClose: closeEditDialog,
                    onSaved: handleSaved,
                    onCanceled: handleCanceled,
                    onSubmitted: handleSubmitted,
                    onRejected: handleRejected,
                    onApproved: handleApproved,
                    onReopened: handleReopened,
                    onDeleted: (payableId)=>{
                        handleDeleted === null || handleDeleted === void 0 ? void 0 : handleDeleted(payableId);
                        closeEditDialog();
                        reactHotToast.toast(i18n._({
                            id: "TUPCh3",
                            values: {
                                payableId: payableId
                            }
                        }), {
                            duration: 5000
                        });
                    },
                    onPay: handlePay,
                    onPayUS: onPayUS
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                className: className + '-Dialog-CreatePayable',
                open: isCreateInvoiceDialogOpen,
                container: root,
                onClose: ()=>setIsCreateInvoiceDialogOpen(false),
                fullScreen: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(PayableDetails, {
                    customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts1 = componentSettings.counterparts) === null || _componentSettings_counterparts1 === void 0 ? void 0 : _componentSettings_counterparts1.customerTypes),
                    enableGLCodes: finalEnableGLCodes,
                    onClose: ()=>setIsCreateInvoiceDialogOpen(false),
                    onSaved: handleSaved
                })
            })
        ]
    });
};

const FinanceBannerWrapper = ({ children, shouldApplyFinanceStyles = false })=>{
    const theme = material.useTheme();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        sx: {
            background: `linear-gradient(180deg, ${theme.palette.primary.light} 0%, ${theme.palette.background.paper} 100%)`,
            display: 'flex',
            flexDirection: 'column',
            gap: 1,
            px: 3,
            py: shouldApplyFinanceStyles ? 3 : 2.5,
            width: '100%',
            minHeight: 'auto',
            borderRadius: '16px',
            boxShadow: '0 16px 24px 0 rgba(0, 0, 0, 0.02)',
            border: shouldApplyFinanceStyles ? 'none' : `1px solid ${theme.palette.divider}`
        },
        children: children
    });
};

const faqs = [
    {
        id: 1,
        // eslint-disable-next-line lingui/no-unlocalized-strings
        question: 'Does enrolling in the program affect my credit score?',
        answer: // eslint-disable-next-line lingui/no-unlocalized-strings
        'Nope! During the onboarding process we will only conduct a soft pull on your credit report, which will not affect your personal credit score.'
    },
    {
        id: 2,
        // eslint-disable-next-line lingui/no-unlocalized-strings
        question: 'Why do I need to provide my bank connection details?',
        answer: // eslint-disable-next-line lingui/no-unlocalized-strings
        'Securely connecting your business bank account allows us to review your cashflow and determine your best loan offers.'
    },
    {
        id: 3,
        // eslint-disable-next-line lingui/no-unlocalized-strings
        question: 'When should I expect to receive a loan offer?',
        answer: // eslint-disable-next-line lingui/no-unlocalized-strings
        'Once you are enrolled into the program, we will be actively analyzing your financials and creating pre-approved offers that work best for your business needs. We do this to help you avoid debt trap. Loan offers are usually provided within less than 48 hours.'
    },
    {
        id: 4,
        // eslint-disable-next-line lingui/no-unlocalized-strings
        question: 'How do I repay the loan?',
        answer: // eslint-disable-next-line lingui/no-unlocalized-strings
        'At the moment we support monthly loan repayment once you agree to the loan payment schedule. A fixed amount will be automatically deducted from the bank you linked during the onboarding.In the near future, you can also choose to pay back the loan as a fixed percentage of your daily sales until the loan is fully repaid.'
    }
];
const FinanceFaqDetails = ()=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        p: 4,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h3",
                        children: i18n._({
                            id: "4xJysX"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle2",
                        mt: 2,
                        children: i18n._({
                            id: "JmHsD2"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                mt: 5,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        mb: 1,
                        variant: "h3",
                        children: i18n._({
                            id: "/lDBHm"
                        })
                    }),
                    faqs.map((faq)=>/*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            mt: 3,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "subtitle2",
                                    children: i18n._({
                                        id: "J/hVSQ",
                                        values: {
                                            0: faq.question
                                        }
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body1",
                                    mt: 1,
                                    children: i18n._({
                                        id: "J/hVSQ",
                                        values: {
                                            0: faq.answer
                                        }
                                    })
                                })
                            ]
                        }, faq.id))
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                mt: 5,
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                    variant: "body2",
                    children: [
                        i18n._({
                            id: "ONlNeq"
                        }),
                        ' ',
                        /*#__PURE__*/ jsxRuntime.jsx(material.Link, {
                            target: "_blank",
                            rel: "noopener noreferrer",
                            href: "https://kanmon.com",
                            children: i18n._({
                                id: "jqVo/k"
                            })
                        })
                    ]
                })
            })
        ]
    });
};

const FinanceFaqWrapper = ({ children })=>{
    const [dialogIsOpen, setDialogIsOpen] = React.useState(false);
    const openModal = ()=>{
        setDialogIsOpen(true);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            children({
                openModal
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: dialogIsOpen,
                onClose: ()=>setDialogIsOpen(false),
                alignDialog: "right",
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceFaqDetails, {})
            })
        ]
    });
};

const FinanceProgressBar = ({ progress })=>{
    const theme = material.useTheme();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        sx: {
            backgroundColor: theme.palette.divider,
            width: '100%',
            height: '6px',
            borderRadius: 0.5
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            sx: {
                backgroundColor: theme.palette.primary.main,
                width: `${progress}%`,
                height: '6px',
                borderRadius: 0.5
            }
        })
    });
};

const useGetFinanceOffers = ()=>{
    const { api } = useMoniteContext();
    return api.financingOffers.getFinancingOffers.useQuery();
};

const useGetFinancingConnectToken = ()=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.financingTokens.postFinancingTokens.useMutation({}, {
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "2knO/H"
            }));
        }
    });
};

/**
 * @internal
 */ const KanmonContext = /*#__PURE__*/ React.createContext(null);
function useKanmonContext() {
    const kanmonContext = React.useContext(KanmonContext);
    if (!kanmonContext) {
        throw new Error('Could not find KanmonContext. Make sure that you are using "MoniteProvider" component before calling this hook.');
    }
    return kanmonContext;
}
const stopFinanceSession = ()=>{
    var _window_KANMON_CONNECT, _window;
    (_window = window) === null || _window === void 0 ? void 0 : (_window_KANMON_CONNECT = _window.KANMON_CONNECT) === null || _window_KANMON_CONNECT === void 0 ? void 0 : _window_KANMON_CONNECT.stop();
};
const KanmonContextProvider = ({ children })=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(KanmonContextProviderBase, {
            children: children
        })
    });
const KanmonContextProviderBase = ({ children })=>{
    const { i18n } = react.useLingui();
    const [isKanmonInitialized, setIsKanmonInitialized] = React.useState(false);
    const [buttonText, setButtonText] = React.useState(i18n._({
        id: "BeBv4C"
    }));
    const handleButtonText = React.useCallback((value)=>{
        setButtonText(value);
    }, []);
    const toggleKanmon = React.useCallback((state)=>{
        setIsKanmonInitialized(state);
    }, []);
    const startFinanceSession = React.useCallback(({ sessionToken, component } = {})=>{
        var _window_KANMON_CONNECT, _window;
        (_window = window) === null || _window === void 0 ? void 0 : (_window_KANMON_CONNECT = _window.KANMON_CONNECT) === null || _window_KANMON_CONNECT === void 0 ? void 0 : _window_KANMON_CONNECT.show({
            sessionToken,
            component
        });
    }, []);
    React.useEffect(()=>{
        return ()=>stopFinanceSession();
    }, []);
    return /*#__PURE__*/ jsxRuntime.jsx(KanmonContext.Provider, {
        value: {
            isKanmonInitialized,
            buttonText,
            toggleKanmon,
            startFinanceSession,
            handleButtonText
        },
        children: children
    });
};

function asyncGeneratorStep$O(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$O(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$O(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$O(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1J(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1I(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1J(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1c(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1c(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1c(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const KANMON_CONNECT_SCRIPT_URL_SANDBOX = `https://cdn.sandbox.kanmon.dev/scripts/v2/kanmon-connect.js`;
const KANMON_CONNECT_SCRIPT_URL_PRODUCTION = `https://cdn.kanmon.dev/scripts/v2/kanmon-connect.js`;
var FinancialApplicationState = /*#__PURE__*/ function(FinancialApplicationState) {
    FinancialApplicationState["INIT"] = "init";
    FinancialApplicationState["IN_PROGRESS"] = "in_progress";
    FinancialApplicationState["PENDING_APPROVAL"] = "pending_approval";
    FinancialApplicationState["NO_OFFERS_AVAILABLE"] = "no_offers";
    FinancialApplicationState["SERVICING"] = "servicing";
    FinancialApplicationState["APPROVED"] = "approved";
    FinancialApplicationState["OFFER_ACCEPTED"] = "offer_accepted";
    FinancialApplicationState["OFFERS_EXPIRED"] = "offers_expired";
    return FinancialApplicationState;
}({});
const useFinancing = ()=>{
    var _finance_offers_, _finance_offers, _finance_offers1;
    const { apiUrl, api, queryClient, entityId } = useMoniteContext();
    const { isKanmonInitialized, toggleKanmon, handleButtonText, buttonText } = useKanmonContext();
    const { onboardingCallbacks } = useComponentSettings();
    const { i18n } = react.useLingui();
    const getConnectToken = useGetFinancingConnectToken();
    const { data: finance } = useGetFinanceOffers();
    const { isUSEntity } = useMyEntity();
    const handleApplicationState = ()=>{
        switch(finance === null || finance === void 0 ? void 0 : finance.business_status){
            case 'NEW':
            default:
                return "init";
            case 'INPUT_REQUIRED':
                return "in_progress";
            case 'ONBOARDED':
                var _finance_offers, _finance_offers_, _finance_offers1, _finance_offers_1, _finance_offers2, _finance_offers_2, _finance_offers3;
                if ((finance === null || finance === void 0 ? void 0 : (_finance_offers = finance.offers) === null || _finance_offers === void 0 ? void 0 : _finance_offers.length) === 0) {
                    return "pending_approval";
                }
                if ((finance === null || finance === void 0 ? void 0 : (_finance_offers1 = finance.offers) === null || _finance_offers1 === void 0 ? void 0 : (_finance_offers_ = _finance_offers1[0]) === null || _finance_offers_ === void 0 ? void 0 : _finance_offers_.status) === 'NEW') {
                    return "approved";
                }
                if ((finance === null || finance === void 0 ? void 0 : (_finance_offers2 = finance.offers) === null || _finance_offers2 === void 0 ? void 0 : (_finance_offers_1 = _finance_offers2[0]) === null || _finance_offers_1 === void 0 ? void 0 : _finance_offers_1.status) === 'EXPIRED') {
                    return "offers_expired";
                }
                if ((finance === null || finance === void 0 ? void 0 : (_finance_offers3 = finance.offers) === null || _finance_offers3 === void 0 ? void 0 : (_finance_offers_2 = _finance_offers3[0]) === null || _finance_offers_2 === void 0 ? void 0 : _finance_offers_2.status) === 'ACCEPTED') {
                    return "offer_accepted";
                }
                return "servicing";
        }
    };
    const applicationState = handleApplicationState();
    const isProduction = (()=>{
        try {
            const url = new URL(apiUrl);
            return ![
                'api.dev.monite.com',
                'api.sandbox.monite.com'
            ].includes(url.hostname);
        } catch (e) {
            // If URL parsing fails, default to production for safety
            return true;
        }
    })();
    const kanmonConnectScriptUrl = isProduction ? KANMON_CONNECT_SCRIPT_URL_PRODUCTION : KANMON_CONNECT_SCRIPT_URL_SANDBOX;
    const [scriptLoading] = useScript__default.default({
        src: kanmonConnectScriptUrl
    });
    const [isInitializing, setIsInitializing] = React.useState(false);
    const refreshFinancedInvoices = (financedInvoice)=>{
        var _financedInvoice_repaymentSchedule_schedule_, _financedInvoice_repaymentSchedule_schedule, _financedInvoice_repaymentSchedule, _financedInvoice_repaymentSchedule_schedule_1, _financedInvoice_repaymentSchedule_schedule1, _financedInvoice_repaymentSchedule1, _financedInvoice_repaymentSchedule_schedule_2, _financedInvoice_repaymentSchedule_schedule2, _financedInvoice_repaymentSchedule2, _financedInvoice_repaymentSchedule_schedule_3, _financedInvoice_repaymentSchedule_schedule3, _financedInvoice_repaymentSchedule3;
        const newFinancedInvoice = {
            type: 'receivable',
            status: 'NEW',
            invoice_id: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.platformInvoiceId,
            document_id: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.platformInvoiceNumber,
            due_date: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoiceDueDate,
            issue_date: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoiceIssuedDate,
            total_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoiceAmountCents,
            currency: 'USD',
            payer_type: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.payorType,
            payer_business_name: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.payorBusinessName,
            payer_first_name: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.payorFirstName,
            payer_last_name: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.payorLastName,
            requested_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.amountRequestedForFinancingCents,
            principal_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.principalAmountCents,
            repayment_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.repaymentAmountCents,
            advance_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoiceAdvanceAmountCents,
            advance_rate_percentage: (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.advanceRatePercentage) * 100,
            fee_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.feeAmountCents,
            fee_percentage: (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.transactionFeePercentage) * 100,
            repayment_schedule: {
                repayment_date: financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repaymentSchedule = financedInvoice.repaymentSchedule) === null || _financedInvoice_repaymentSchedule === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule = _financedInvoice_repaymentSchedule.schedule) === null || _financedInvoice_repaymentSchedule_schedule === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule_ = _financedInvoice_repaymentSchedule_schedule[0]) === null || _financedInvoice_repaymentSchedule_schedule_ === void 0 ? void 0 : _financedInvoice_repaymentSchedule_schedule_.repaymentDate,
                repayment_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repaymentSchedule1 = financedInvoice.repaymentSchedule) === null || _financedInvoice_repaymentSchedule1 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule1 = _financedInvoice_repaymentSchedule1.schedule) === null || _financedInvoice_repaymentSchedule_schedule1 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule_1 = _financedInvoice_repaymentSchedule_schedule1[0]) === null || _financedInvoice_repaymentSchedule_schedule_1 === void 0 ? void 0 : _financedInvoice_repaymentSchedule_schedule_1.repaymentAmountCents,
                repayment_fee_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repaymentSchedule2 = financedInvoice.repaymentSchedule) === null || _financedInvoice_repaymentSchedule2 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule2 = _financedInvoice_repaymentSchedule2.schedule) === null || _financedInvoice_repaymentSchedule_schedule2 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule_2 = _financedInvoice_repaymentSchedule_schedule2[0]) === null || _financedInvoice_repaymentSchedule_schedule_2 === void 0 ? void 0 : _financedInvoice_repaymentSchedule_schedule_2.repaymentFeeAmountCents,
                repayment_principal_amount: financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repaymentSchedule3 = financedInvoice.repaymentSchedule) === null || _financedInvoice_repaymentSchedule3 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule3 = _financedInvoice_repaymentSchedule3.schedule) === null || _financedInvoice_repaymentSchedule_schedule3 === void 0 ? void 0 : (_financedInvoice_repaymentSchedule_schedule_3 = _financedInvoice_repaymentSchedule_schedule3[0]) === null || _financedInvoice_repaymentSchedule_schedule_3 === void 0 ? void 0 : _financedInvoice_repaymentSchedule_schedule_3.repaymentPrincipalAmountCents
            }
        };
        api.financingInvoices.getFinancingInvoices.setQueryData(api.financingInvoices.getFinancingInvoices.getQueryKey({
            query: {
                type: 'receivable',
                invoice_id: financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.platformInvoiceId
            }
        }), (data)=>{
            return _object_spread_props$1c(_object_spread$1I({}, data), {
                data: [
                    newFinancedInvoice
                ]
            });
        }, queryClient);
        api.financingInvoices.getFinancingInvoices.setQueryData(api.financingInvoices.getFinancingInvoices.getQueryKey({
            query: {}
        }), (data)=>{
            const currentData = (data === null || data === void 0 ? void 0 : data.data) ? data.data : [];
            return _object_spread_props$1c(_object_spread$1I({}, data), {
                data: [
                    newFinancedInvoice,
                    ...currentData
                ]
            });
        }, queryClient);
    };
    const initialiseFinanceSdk = ({ connectToken })=>{
        var _window_KANMON_CONNECT, _window;
        (_window = window) === null || _window === void 0 ? void 0 : (_window_KANMON_CONNECT = _window.KANMON_CONNECT) === null || _window_KANMON_CONNECT === void 0 ? void 0 : _window_KANMON_CONNECT.start({
            connectToken,
            onEvent: (event)=>{
                if (event.eventType !== 'USER_STATE_CHANGED' && event.eventType !== 'USER_CONFIRMED_INVOICE') return;
                if (event.eventType === 'USER_CONFIRMED_INVOICE') {
                    refreshFinancedInvoices(event.data.invoice);
                } else {
                    switch(event.data.userState){
                        case 'START_FLOW':
                            handleButtonText(i18n._({
                                id: "BeBv4C"
                            }));
                            break;
                        case 'USER_INPUT_REQUIRED':
                            if (event.data.section === 'OFFER') {
                                handleButtonText(i18n._({
                                    id: "NT7r0P"
                                }));
                            } else {
                                handleButtonText(i18n._({
                                    id: "5pa77O"
                                }));
                            }
                            break;
                        case 'WAITING_FOR_OFFERS':
                            handleButtonText('');
                            if ((finance === null || finance === void 0 ? void 0 : finance.business_status) === 'INPUT_REQUIRED' || (finance === null || finance === void 0 ? void 0 : finance.business_status) === 'NEW') {
                                var _onboardingCallbacks_onWorkingCapitalOnboardingComplete;
                                (_onboardingCallbacks_onWorkingCapitalOnboardingComplete = onboardingCallbacks.onWorkingCapitalOnboardingComplete) === null || _onboardingCallbacks_onWorkingCapitalOnboardingComplete === void 0 ? void 0 : _onboardingCallbacks_onWorkingCapitalOnboardingComplete.call(onboardingCallbacks, entityId);
                            }
                            break;
                        case 'OFFERS_EXPIRED':
                        case 'NO_OFFERS_EXTENDED':
                            handleButtonText('');
                            break;
                        case 'SERVICING':
                            var _finance_offers_, _finance_offers;
                            handleButtonText(i18n._({
                                id: "XRdp4f"
                            }));
                            if ((finance === null || finance === void 0 ? void 0 : finance.business_status) === 'ONBOARDED' && (finance === null || finance === void 0 ? void 0 : (_finance_offers = finance.offers) === null || _finance_offers === void 0 ? void 0 : (_finance_offers_ = _finance_offers[0]) === null || _finance_offers_ === void 0 ? void 0 : _finance_offers_.status) === 'NEW') {
                                window.localStorage.setItem('isFinanceTabNew', 'true');
                            }
                            break;
                        case 'VIEW_OFFERS':
                        case 'OFFER_ACCEPTED':
                            handleButtonText(i18n._({
                                id: "NT7r0P"
                            }));
                            break;
                    }
                    api.financingOffers.getFinancingOffers.invalidateQueries(queryClient);
                }
            }
        });
    };
    React.useEffect(()=>{
        const setupFinanceSdkConnection = ()=>_async_to_generator$O(function*() {
                setIsInitializing(true);
                try {
                    const response = yield getConnectToken.mutateAsync();
                    initialiseFinanceSdk({
                        connectToken: response.connect_token
                    });
                    toggleKanmon(true);
                } catch (e) {
                // Intentionally left empty
                } finally{
                    setIsInitializing(false);
                }
            })();
        if (!isKanmonInitialized && !scriptLoading && isUSEntity) {
            setupFinanceSdkConnection();
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        scriptLoading,
        isUSEntity
    ]);
    const isLoading = scriptLoading || isInitializing;
    const isEnabled = isUSEntity;
    const isServicing = (finance === null || finance === void 0 ? void 0 : finance.business_status) === 'ONBOARDED' && (finance === null || finance === void 0 ? void 0 : (_finance_offers = finance.offers) === null || _finance_offers === void 0 ? void 0 : (_finance_offers_ = _finance_offers[0]) === null || _finance_offers_ === void 0 ? void 0 : _finance_offers_.status) === 'CURRENT';
    const offer = finance === null || finance === void 0 ? void 0 : (_finance_offers1 = finance.offers) === null || _finance_offers1 === void 0 ? void 0 : _finance_offers1[0];
    return {
        buttonText,
        applicationState,
        offer,
        isLoading,
        isEnabled,
        isServicing
    };
};

const useFinanceAnInvoice = ()=>{
    const { api } = useMoniteContext();
    return api.financingInvoices.postFinancingInvoices.useMutation({}, {
        onError: ()=>{}
    });
};

const useGetFinancedInvoices = (query, enabled = true)=>{
    const { api } = useMoniteContext();
    return api.financingInvoices.getFinancingInvoices.useQuery({
        query
    }, {
        enabled
    });
};

function _define_property$1I(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1H(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1I(target, key, source[key]);
        });
    }
    return target;
}
const LOCAL_STORAGE_KEY = 'financing_banner_hidden';
const SEVEN_DAYS_TIME_MILLISECONDS = 7 * 24 * 60 * 60 + 1000;
const FinanceBanner = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(FinanceBannerBase, _object_spread$1H({}, props))
    });
const FinanceBannerBase = ({ enableServicingBanner = false, handleViewDetails })=>{
    var _offer_pricing_plans;
    const { i18n } = react.useLingui();
    const { startFinanceSession } = useKanmonContext();
    const theme = material.useTheme();
    const isLowerThanLargeScreen = material.useMediaQuery(theme.breakpoints.down('lg'));
    const { formatCurrencyToDisplay } = useCurrencies();
    const { buttonText, isLoading, isEnabled, applicationState, isServicing, offer } = useFinancing();
    var _offer_total_amount;
    const totalLimit = (_offer_total_amount = offer === null || offer === void 0 ? void 0 : offer.total_amount) !== null && _offer_total_amount !== void 0 ? _offer_total_amount : 0;
    var _ref;
    const remainingLimit = (_ref = (offer === null || offer === void 0 ? void 0 : offer.status) === 'LATE' ? 0 : offer === null || offer === void 0 ? void 0 : offer.available_amount) !== null && _ref !== void 0 ? _ref : 0;
    const progress = remainingLimit / totalLimit * 100;
    const isAvailable = (offer === null || offer === void 0 ? void 0 : offer.status) !== 'CLOSED' && (offer === null || offer === void 0 ? void 0 : offer.status) !== 'DEFAULTED';
    const [isHidden, setIsHidden] = React.useState(()=>{
        const sessionStorageBannerState = JSON.parse(JSON.parse(JSON.stringify(sessionStorage.getItem(LOCAL_STORAGE_KEY))));
        if (sessionStorageBannerState) {
            return sessionStorageBannerState.isHidden;
        }
        const localStorageBannerState = JSON.parse(JSON.parse(JSON.stringify(localStorage.getItem(LOCAL_STORAGE_KEY))));
        if (localStorageBannerState) {
            if (!localStorageBannerState.expires_at) {
                return localStorageBannerState.isHidden;
            }
            const date = new Date().getTime();
            if (date > localStorageBannerState.expires_at) {
                localStorage.removeItem(LOCAL_STORAGE_KEY);
                return false;
            }
            return localStorageBannerState.isHidden;
        }
        return false;
    });
    const shouldApplyFinanceStyles = enableServicingBanner && isServicing;
    const isCustomBanner = applicationState !== FinancialApplicationState.PENDING_APPROVAL && applicationState !== FinancialApplicationState.NO_OFFERS_AVAILABLE && applicationState !== FinancialApplicationState.OFFERS_EXPIRED;
    const handleHide = ()=>{
        setIsHidden(true);
        switch(applicationState){
            case FinancialApplicationState.IN_PROGRESS:
            case FinancialApplicationState.APPROVED:
            case FinancialApplicationState.PENDING_APPROVAL:
            case FinancialApplicationState.OFFER_ACCEPTED:
                sessionStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({
                    isHidden: true,
                    expires_at: null
                }));
                return;
            case FinancialApplicationState.INIT:
                localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({
                    isHidden: true,
                    expires_at: new Date().getTime() + SEVEN_DAYS_TIME_MILLISECONDS
                }));
                return;
            case FinancialApplicationState.NO_OFFERS_AVAILABLE:
            case FinancialApplicationState.OFFERS_EXPIRED:
            default:
                localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({
                    isHidden: true,
                    expires_at: null
                }));
                return;
        }
    };
    const handleBannerTextContent = ()=>{
        switch(applicationState){
            case FinancialApplicationState.INIT:
            case FinancialApplicationState.IN_PROGRESS:
            default:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            sx: {
                                fontSize: 20
                            },
                            children: i18n._({
                                id: "GAVtr2"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                            variant: "body1",
                            children: [
                                i18n._({
                                    id: "pY1DVj"
                                }),
                                ' ',
                                /*#__PURE__*/ jsxRuntime.jsx(FinanceFaqWrapper, {
                                    children: ({ openModal })=>/*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            onClick: openModal,
                                            variant: "body1",
                                            sx: {
                                                textDecoration: 'underline',
                                                cursor: 'pointer'
                                            },
                                            component: "span",
                                            children: i18n._({
                                                id: "AzO8Ac"
                                            })
                                        })
                                })
                            ]
                        })
                    ]
                });
            case FinancialApplicationState.PENDING_APPROVAL:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            sx: {
                                fontSize: 20
                            },
                            children: i18n._({
                                id: "IQkFfi"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "AKwjJV"
                            })
                        })
                    ]
                });
            case FinancialApplicationState.APPROVED:
            case FinancialApplicationState.OFFER_ACCEPTED:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            sx: {
                                fontSize: 20
                            },
                            children: i18n._({
                                id: "mdPcYL"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "vc2mpQ"
                            })
                        })
                    ]
                });
            case FinancialApplicationState.NO_OFFERS_AVAILABLE:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            sx: {
                                fontSize: 20
                            },
                            children: i18n._({
                                id: "G6boaK"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "vVFZDh"
                            })
                        })
                    ]
                });
            case FinancialApplicationState.OFFERS_EXPIRED:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            sx: {
                                fontSize: 20
                            },
                            children: i18n._({
                                id: "8aP9NY"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "KE5U+e"
                            })
                        })
                    ]
                });
            case FinancialApplicationState.SERVICING:
                return /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "subtitle2",
                    sx: {
                        fontSize: 20
                    },
                    children: i18n._({
                        id: "J9mZzB"
                    })
                });
        }
    };
    if (isHidden || applicationState === FinancialApplicationState.SERVICING && !enableServicingBanner) {
        return null;
    }
    if (!isEnabled) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(FinanceBannerWrapper, {
        shouldApplyFinanceStyles: shouldApplyFinanceStyles,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                display: "flex",
                alignItems: isLowerThanLargeScreen && !shouldApplyFinanceStyles ? 'flex-end' : 'center',
                flexDirection: isLowerThanLargeScreen && !shouldApplyFinanceStyles ? 'column' : 'row',
                justifyContent: "space-between",
                gap: 2,
                width: "100%",
                height: "100%",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        sx: {
                            width: '100%',
                            display: 'flex',
                            gap: 2,
                            flex: '1 1 0%',
                            alignItems: isLowerThanLargeScreen && !shouldApplyFinanceStyles ? 'flex-start' : 'center'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            sx: {
                                flex: '1 1 0%'
                            },
                            children: handleBannerTextContent()
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        width: isLowerThanLargeScreen && !shouldApplyFinanceStyles ? '100%' : 'auto',
                        direction: "row",
                        gap: 1,
                        alignItems: "center",
                        justifyContent: isLowerThanLargeScreen && !shouldApplyFinanceStyles ? 'flex-end' : 'flex-start',
                        children: [
                            shouldApplyFinanceStyles && handleViewDetails ? /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                onClick: handleViewDetails,
                                variant: "text",
                                children: i18n._({
                                    id: "2Eoi/a"
                                })
                            }) : /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                onClick: handleHide,
                                variant: "text",
                                children: isCustomBanner ? i18n._({
                                    id: "vLyv1R"
                                }) : i18n._({
                                    id: "yz7wBu"
                                })
                            }),
                            isCustomBanner && buttonText && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                onClick: ()=>{
                                    startFinanceSession();
                                },
                                disabled: isLoading,
                                variant: "contained",
                                color: "primary",
                                sx: {
                                    px: 2.5,
                                    py: 1.5,
                                    height: 40
                                },
                                children: isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    size: 20
                                }) : buttonText
                            })
                        ]
                    })
                ]
            }),
            shouldApplyFinanceStyles && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                children: [
                    isAvailable ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: i18n._({
                                    id: "49OhsH"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "space-between",
                                gap: 1,
                                mb: 1,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                        display: "flex",
                                        alignItems: "center",
                                        gap: 1,
                                        flexShrink: 0,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "h2",
                                                fontSize: 32,
                                                children: formatCurrencyToDisplay(remainingLimit, 'USD')
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                                component: "span",
                                                variant: "subtitle1",
                                                sx: {
                                                    color: theme.palette.grey[400]
                                                },
                                                children: [
                                                    "/ ",
                                                    formatCurrencyToDisplay(totalLimit, 'USD')
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        variant: "body1",
                                        sx: {
                                            textOverflow: 'ellipsis',
                                            overflow: 'hidden',
                                            whiteSpace: 'nowrap'
                                        },
                                        children: [
                                            offer === null || offer === void 0 ? void 0 : (_offer_pricing_plans = offer.pricing_plans) === null || _offer_pricing_plans === void 0 ? void 0 : _offer_pricing_plans.length,
                                            ' ',
                                            i18n._({
                                                id: "HeN0vw"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h2",
                        fontSize: 32,
                        mb: 1,
                        children: i18n._({
                            id: "OJx3wK"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(FinanceProgressBar, {
                        progress: progress
                    }),
                    (!isAvailable || (offer === null || offer === void 0 ? void 0 : offer.status) === 'LATE') && /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                        variant: "body1",
                        fontWeight: 400,
                        mt: 1,
                        children: [
                            (offer === null || offer === void 0 ? void 0 : offer.status) === 'CLOSED' && i18n._({
                                id: "VSANA+"
                            }),
                            (offer === null || offer === void 0 ? void 0 : offer.status) === 'DEFAULTED' && i18n._({
                                id: "846VYr"
                            }),
                            (offer === null || offer === void 0 ? void 0 : offer.status) === 'LATE' && i18n._({
                                id: "LN9k4z"
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

const getCommonStatusLabel$1 = (i18n, status)=>{
    switch(status){
        case 'draft':
            return i18n._({
                id: "eneWvv"
            });
        case 'issued':
            return i18n._({
                id: "9H1zVJ"
            });
        case 'accepted':
            return i18n._({
                id: "bzMKg7"
            });
        case 'expired':
            return i18n._({
                id: "M1RnFv"
            });
        case 'declined':
            return i18n._({
                id: "ztGxi6"
            });
        case 'recurring':
            return i18n._({
                id: "wuhHPE"
            });
        case 'partially_paid':
            return i18n._({
                id: "FG7vqH"
            });
        case 'paid':
            return i18n._({
                id: "v4nCHK"
            });
        case 'overdue':
            return i18n._({
                id: "ddrz1m"
            });
        case 'uncollectible':
            return i18n._({
                id: "oZBPYz"
            });
        case 'canceled':
            return i18n._({
                id: "GGWsTU"
            });
        case 'deleted':
            return i18n._({
                id: "vGjmyl"
            });
        default:
            throw new Error(`Unknown status ${JSON.stringify(status)}`);
    }
};
const getCommonRecurrenceStatusLabel = (i18n, status)=>{
    switch(status){
        case 'active':
            return i18n._({
                id: "F6pfE9"
            });
        case 'paused':
            return i18n._({
                id: "URAE3q"
            });
        case 'canceled':
            return i18n._({
                id: "GGWsTU"
            });
        case 'completed':
            return i18n._({
                id: "qqWcBV"
            });
        default:
            throw new Error(`Unknown status ${JSON.stringify(status)}`);
    }
};
const getCommonRecurrenceIterationStatusLabel = (i18n, status)=>{
    switch(status){
        case 'pending':
            return i18n._({
                id: "4ba0NE"
            });
        case 'skipped':
            return i18n._({
                id: "9NyAH9"
            });
        case 'canceled':
            return i18n._({
                id: "GGWsTU"
            });
        case 'issue_failed':
            return i18n._({
                id: "AFTjZU"
            });
        case 'send_failed':
            return i18n._({
                id: "mCk5iK"
            });
        case 'completed':
            return i18n._({
                id: "qqWcBV"
            });
        default:
            throw new Error(`Unknown status ${JSON.stringify(status)}`);
    }
};

const NO_SORT_CODE = 'noSort';
const NO_ROUTING_NUMBER = 'noRouting';
// eslint-disable-next-line lingui/no-unlocalized-strings
const INVOICE_DOCUMENT_AUTO_ID = 'INV-auto';

function _define_property$1H(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1G(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1H(target, key, source[key]);
        });
    }
    return target;
}
const prepareBankAccountCreatePayload = (reqPayload)=>{
    const generalPayload = {
        is_default_for_currency: reqPayload.is_default_for_currency,
        country: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.country,
        currency: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.currency,
        display_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.display_name,
        bank_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.bank_name
    };
    const defineCustomPayload = ()=>{
        switch(reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.currency){
            case 'USD':
                return {
                    account_holder_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_holder_name,
                    account_number: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_number,
                    routing_number: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.routing_number
                };
            case 'GBP':
                return {
                    account_holder_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_holder_name,
                    account_number: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_number,
                    sort_code: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.sort_code
                };
            case 'EUR':
                return {
                    bic: (reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.bic) || undefined,
                    iban: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.iban
                };
            default:
                return {
                    account_number: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_number,
                    routing_number: (reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.routing_number) === NO_ROUTING_NUMBER ? undefined : reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.routing_number,
                    sort_code: (reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.sort_code) === NO_SORT_CODE ? undefined : reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.sort_code
                };
        }
    };
    const payload = defineCustomPayload();
    return _object_spread$1G({}, generalPayload, payload);
};
const prepareBankAccountUpdatePayload = (reqPayload, currency)=>{
    const definePayload = ()=>{
        switch(currency){
            case 'USD':
            case 'GBP':
                return {
                    display_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.display_name,
                    account_holder_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.account_holder_name
                };
            default:
                return {
                    display_name: reqPayload === null || reqPayload === void 0 ? void 0 : reqPayload.display_name
                };
        }
    };
    const payload = definePayload();
    return payload;
};

function getVatTypeList(i18n) {
    return [
        {
            label: i18n._({
                id: "hT27T9"
            }),
            value: 'au_abn',
            countryCode: 'AU',
            placeholderText: '51824753556',
            vatName: 'ABN'
        },
        {
            label: i18n._({
                id: "21Z4/g"
            }),
            value: 'au_arn',
            countryCode: 'AU',
            placeholderText: '518247535567',
            vatName: 'ARN'
        },
        {
            label: i18n._({
                id: "MCYsTh"
            }),
            value: 'eu_vat',
            countryCode: 'AT',
            placeholderText: 'ATU12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "rX502K"
            }),
            value: 'eu_vat',
            countryCode: 'BE',
            placeholderText: 'BE0123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "wNlNKU"
            }),
            value: 'br_cnpj',
            countryCode: 'BR',
            placeholderText: '28.271.211/0001-88',
            vatName: 'CNPJ'
        },
        {
            label: i18n._({
                id: "Rzc+gp"
            }),
            value: 'br_cpf',
            countryCode: 'BR',
            placeholderText: '137.609.391-04',
            vatName: 'CPF'
        },
        {
            label: i18n._({
                id: "czWKuq"
            }),
            value: 'bg_uic',
            countryCode: 'BG',
            placeholderText: '123456789',
            vatName: 'UIC'
        },
        {
            label: i18n._({
                id: "UEQ0FI"
            }),
            value: 'eu_vat',
            countryCode: 'BG',
            placeholderText: 'BG0123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "ycQdQ5"
            }),
            value: 'ca_bn',
            countryCode: 'CA',
            placeholderText: '123456789',
            vatName: 'BN'
        },
        {
            label: i18n._({
                id: "qIPho4"
            }),
            value: 'ca_gst_hst',
            countryCode: 'CA',
            placeholderText: '123456789RT0002',
            vatName: 'GST HST'
        },
        {
            label: i18n._({
                id: "9WZk86"
            }),
            value: 'ca_pst_bc',
            countryCode: 'CA',
            placeholderText: 'PST-1234-5678',
            vatName: 'PST BC'
        },
        {
            label: i18n._({
                id: "nEaubQ"
            }),
            value: 'ca_pst_mb',
            countryCode: 'CA',
            placeholderText: '123456-7',
            vatName: 'PST MB'
        },
        {
            label: i18n._({
                id: "bNKBTv"
            }),
            value: 'ca_pst_sk',
            countryCode: 'CA',
            placeholderText: '1234567',
            vatName: 'PST SK'
        },
        {
            label: i18n._({
                id: "2RJuow"
            }),
            value: 'ca_qst',
            countryCode: 'CA',
            placeholderText: '1234567890TQ1234',
            vatName: 'QST'
        },
        {
            label: i18n._({
                id: "orbhbR"
            }),
            value: 'cl_tin',
            countryCode: 'CL',
            placeholderText: '12.345.678-K',
            vatName: 'TIN'
        },
        {
            label: i18n._({
                id: "Wmg+p5"
            }),
            value: 'eu_vat',
            countryCode: 'HR',
            placeholderText: 'HR12345678912',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "nXzZHa"
            }),
            value: 'eu_vat',
            countryCode: 'CY',
            placeholderText: 'CY12345678Z',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "8IFjQT"
            }),
            value: 'eu_vat',
            countryCode: 'CZ',
            placeholderText: 'CZ1234567890',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "+h0yfh"
            }),
            value: 'eu_vat',
            countryCode: 'DK',
            placeholderText: 'DK12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "Jfw6Qh"
            }),
            value: 'eu_vat',
            countryCode: 'EE',
            placeholderText: 'EE123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "jg4hUG"
            }),
            value: 'eu_oss_vat',
            countryCode: 'EU',
            placeholderText: 'EU123456789',
            vatName: 'OSS VAT'
        },
        {
            label: i18n._({
                id: "aPtihf"
            }),
            value: 'eu_vat',
            countryCode: 'FI',
            placeholderText: 'FI12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "jVjc3M"
            }),
            value: 'eu_vat',
            countryCode: 'FR',
            placeholderText: 'FRAB123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "hEtOBf"
            }),
            value: 'ge_vat',
            countryCode: 'GE',
            placeholderText: '123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "KTFebB"
            }),
            value: 'eu_vat',
            countryCode: 'DE',
            placeholderText: 'DE123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "E17MwY"
            }),
            value: 'eu_vat',
            countryCode: 'GR',
            placeholderText: 'EL123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "z/qFop"
            }),
            value: 'hk_br',
            countryCode: 'HK',
            placeholderText: '12345678',
            vatName: 'BR'
        },
        {
            label: i18n._({
                id: "0Agn4i"
            }),
            value: 'hu_tin',
            countryCode: 'HU',
            placeholderText: '12345678-1-23',
            vatName: 'TIN'
        },
        {
            label: i18n._({
                id: "yTL1cK"
            }),
            value: 'eu_vat',
            countryCode: 'HU',
            placeholderText: 'HU12345678912',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "Ew9ioA"
            }),
            value: 'is_vat',
            countryCode: 'IS',
            placeholderText: '123456',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "n5D6Fs"
            }),
            value: 'in_gst',
            countryCode: 'IN',
            placeholderText: '12ABCDE3456FGZH',
            vatName: 'GST'
        },
        {
            label: i18n._({
                id: "xsq1Zt"
            }),
            value: 'id_npwp',
            countryCode: 'ID',
            placeholderText: '12.345.678.9-012.345',
            vatName: 'NPWP'
        },
        {
            label: i18n._({
                id: "VN6bRX"
            }),
            value: 'eu_vat',
            countryCode: 'IE',
            placeholderText: 'IE1234567AB',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "ll0IU3"
            }),
            value: 'il_vat',
            countryCode: 'IL',
            placeholderText: '12345',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "SZyRXh"
            }),
            value: 'eu_vat',
            countryCode: 'IT',
            placeholderText: 'IT12345678912',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "9bUrgl"
            }),
            value: 'jp_cn',
            countryCode: 'JP',
            placeholderText: '1234567891234',
            vatName: 'CN'
        },
        {
            label: i18n._({
                id: "IQOOEz"
            }),
            value: 'jp_rn',
            countryCode: 'JP',
            placeholderText: '12345',
            vatName: 'RN'
        },
        {
            label: i18n._({
                id: "8I8aCu"
            }),
            value: 'unknown',
            countryCode: 'KE',
            placeholderText: 'P123456789X',
            vatName: 'PIN'
        },
        {
            label: i18n._({
                id: "2b+3Yt"
            }),
            value: 'eu_vat',
            countryCode: 'LV',
            placeholderText: 'LV12345678912',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "IPMF63"
            }),
            value: 'li_uid',
            countryCode: 'LI',
            placeholderText: 'CHE123456789',
            vatName: 'UID'
        },
        {
            label: i18n._({
                id: "yQEKYc"
            }),
            value: 'eu_vat',
            countryCode: 'LT',
            placeholderText: 'LT123456789123',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "k4U7kc"
            }),
            value: 'eu_vat',
            countryCode: 'LU',
            placeholderText: 'LU12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "MY/To5"
            }),
            value: 'my_frp',
            countryCode: 'MY',
            placeholderText: '12345678',
            vatName: 'FRP'
        },
        {
            label: i18n._({
                id: "sEuyOL"
            }),
            value: 'my_itn',
            countryCode: 'MY',
            placeholderText: 'C 1234567890',
            vatName: 'ITN'
        },
        {
            label: i18n._({
                id: "30tWAf"
            }),
            value: 'my_sst',
            countryCode: 'MY',
            placeholderText: 'A12-3456-78912345',
            vatName: 'SST'
        },
        {
            label: i18n._({
                id: "QTE5a2"
            }),
            value: 'eu_vat',
            countryCode: 'MT',
            placeholderText: 'MT12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "T95l6D"
            }),
            value: 'mx_rfc',
            countryCode: 'MX',
            placeholderText: 'ABC010203AB9',
            vatName: 'RFC'
        },
        {
            label: i18n._({
                id: "qa1AJc"
            }),
            value: 'eu_vat',
            countryCode: 'NL',
            placeholderText: 'NL123456789B12',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "3+UjnC"
            }),
            value: 'nz_gst',
            countryCode: 'NZ',
            placeholderText: '123456789',
            vatName: 'GST'
        },
        {
            label: i18n._({
                id: "z7NuSN"
            }),
            value: 'no_vat',
            countryCode: 'NO',
            placeholderText: '123456789MVA',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "lgUJg7"
            }),
            value: 'unknown',
            countryCode: 'PK',
            placeholderText: '4174941-3',
            vatName: 'NTN'
        },
        {
            label: i18n._({
                id: "cpRr4Z"
            }),
            value: 'unknown',
            countryCode: 'PH',
            placeholderText: '000123456001',
            vatName: 'TIN'
        },
        {
            label: i18n._({
                id: "/2scja"
            }),
            value: 'eu_vat',
            countryCode: 'PL',
            placeholderText: 'PL1234567890',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "ZBihIR"
            }),
            value: 'eu_vat',
            countryCode: 'PT',
            placeholderText: 'PT123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "5R6nOT"
            }),
            value: 'eu_vat',
            countryCode: 'RO',
            placeholderText: 'RO1234567891',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "1TfTXq"
            }),
            value: 'ru_inn',
            countryCode: 'RU',
            placeholderText: '1234567891',
            vatName: 'INN'
        },
        {
            label: i18n._({
                id: "1MXzXf"
            }),
            value: 'ru_kpp',
            countryCode: 'RU',
            placeholderText: '123456789',
            vatName: 'KPP'
        },
        {
            label: i18n._({
                id: "+owF9u"
            }),
            value: 'sa_vat',
            countryCode: 'SA',
            placeholderText: '123456789012345',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "8QmfyE"
            }),
            value: 'sg_gst',
            countryCode: 'SG',
            placeholderText: 'M12345678X',
            vatName: 'GST'
        },
        {
            label: i18n._({
                id: "0X7HX1"
            }),
            value: 'sg_uen',
            countryCode: 'SG',
            placeholderText: '123456789F',
            vatName: 'UEN'
        },
        {
            label: i18n._({
                id: "rKNNgt"
            }),
            value: 'eu_vat',
            countryCode: 'SK',
            placeholderText: 'SK1234567891',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "l2KTqf"
            }),
            value: 'si_tin',
            countryCode: 'SI',
            placeholderText: '12345678',
            vatName: 'TIN'
        },
        {
            label: i18n._({
                id: "sOxJ5w"
            }),
            value: 'eu_vat',
            countryCode: 'SI',
            placeholderText: 'SI12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "E5i9XO"
            }),
            value: 'za_vat',
            countryCode: 'ZA',
            placeholderText: '4123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "B0hhs1"
            }),
            value: 'kr_brn',
            countryCode: 'KR',
            placeholderText: '123-45-67890',
            vatName: 'BRN'
        },
        {
            label: i18n._({
                id: "DOKcDS"
            }),
            value: 'es_cif',
            countryCode: 'ES',
            placeholderText: 'A12345678',
            vatName: 'CIF'
        },
        {
            label: i18n._({
                id: "e8Smkt"
            }),
            value: 'eu_vat',
            countryCode: 'ES',
            placeholderText: 'ESA1234567Z',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "J4tDjP"
            }),
            value: 'eu_vat',
            countryCode: 'SE',
            placeholderText: 'SE123456789123',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "S4oJK/"
            }),
            value: 'ch_vat',
            countryCode: 'CH',
            placeholderText: 'CHE-123.456.789 MWST',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "SUQ3DW"
            }),
            value: 'tw_vat',
            countryCode: 'TW',
            placeholderText: '12345678',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "2CtMzK"
            }),
            value: 'th_vat',
            countryCode: 'TH',
            placeholderText: '1234567891234',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "3LpaID"
            }),
            value: 'ua_vat',
            countryCode: 'UA',
            placeholderText: '123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "qriZwv"
            }),
            value: 'ae_trn',
            countryCode: 'AE',
            placeholderText: '123456789012345',
            vatName: 'TRN'
        },
        {
            label: i18n._({
                id: "lseAbR"
            }),
            value: 'gb_vat',
            countryCode: 'GB',
            placeholderText: 'GB123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "a0Xfqe"
            }),
            value: 'eu_vat',
            countryCode: 'GB',
            placeholderText: 'XI123456789',
            vatName: 'VAT ID'
        },
        {
            label: i18n._({
                id: "VWEssG"
            }),
            value: 'us_ein',
            countryCode: 'US',
            placeholderText: '12-3456789',
            vatName: 'EIN'
        },
        {
            label: i18n._({
                id: "5Oi2Q0"
            }),
            value: 'unknown',
            vatName: 'VAT ID'
        }
    ];
}

const getTypeLabel = (i18n, type)=>{
    switch(type){
        case 'invoice':
            return i18n._({
                id: "IuMGvq"
            });
        case 'credit_note':
            return i18n._({
                id: "jblpWK"
            });
        case 'quote':
            return i18n._({
                id: "ZhhOwV"
            });
        default:
            return i18n._({
                id: "Y7Tsdm"
            });
    }
};

const getPaymentMethodName = (paymentMethod, i18n)=>{
    switch(paymentMethod){
        case 'sepa_credit':
            return i18n._({
                id: "OX9j2H"
            });
        case 'us_ach':
            return i18n._({
                id: "WY0vs6"
            });
        case 'blik':
            return i18n._({
                id: "dTafjT"
            });
        case 'card':
            return i18n._({
                id: "3IQoBG"
            });
        case 'bacs_direct_debit':
            return i18n._({
                id: "VopDnl"
            });
        case 'bancontact':
            return i18n._({
                id: "HcBBqj"
            });
        case 'eps':
            return i18n._({
                id: "g5GqS8"
            });
        case 'giropay':
            return i18n._({
                id: "cT/a0K"
            });
        case 'ideal':
            return i18n._({
                id: "Ilt4Fa"
            });
        case 'p24':
            return i18n._({
                id: "CgbtpU"
            });
        case 'sepa_debit':
            return i18n._({
                id: "eDJVHR"
            });
        case 'sofort':
            return i18n._({
                id: "2dMp7y"
            });
        case 'applepay':
            return i18n._({
                id: "6ws9A3"
            });
        case 'googlepay':
            return i18n._({
                id: "ybKOj4"
            });
        case 'affirm':
            return i18n._({
                id: "Q9fSvX"
            });
        case 'klarna':
            return i18n._({
                id: "m3SGom"
            });
        default:
            return i18n._({
                id: "SjJZHR"
            });
    }
};

const getDefaultContact = (contacts, counterpart)=>{
    var _counterpart_organization;
    if (contacts && contacts.length) {
        var _contacts_find;
        return (_contacts_find = contacts.find((c)=>c.is_default)) !== null && _contacts_find !== void 0 ? _contacts_find : contacts[0];
    }
    if (!counterpart || !isOrganizationCounterpart(counterpart)) {
        return undefined;
    }
    const organizationEmail = (_counterpart_organization = counterpart.organization) === null || _counterpart_organization === void 0 ? void 0 : _counterpart_organization.email;
    if (!organizationEmail) {
        return undefined;
    }
    return {
        id: 'organization',
        counterpart_id: counterpart.id,
        email: organizationEmail,
        is_default: true,
        first_name: getCounterpartName(counterpart),
        last_name: '',
        is_customer: counterpart.organization.is_customer,
        is_vendor: counterpart.organization.is_vendor
    };
};
const getContactList = (contacts, defaultContact)=>{
    if (contacts === null || contacts === void 0 ? void 0 : contacts.length) {
        return contacts;
    }
    return defaultContact ? [
        defaultContact
    ] : [];
};

const statusChipVariants$2 = classVarianceAuthority.cva('', {
    variants: {
        variant: {
            active: 'mtw:bg-blue-50 mtw:text-blue-600',
            paused: 'mtw:bg-amber-50 mtw:text-amber-600',
            canceled: 'mtw:bg-red-50 mtw:text-red-600',
            completed: 'mtw:bg-green-50 mtw:text-green-600'
        }
    }
});
const InvoiceRecurrenceStatusChip = /*#__PURE__*/ React.forwardRef(({ status, className }, ref)=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(Badge, {
        ref: ref,
        className: cn('mtw:inline-flex mtw:items-center mtw:gap-1', statusChipVariants$2({
            variant: status
        }), className),
        children: getCommonRecurrenceStatusLabel(i18n, status)
    });
});

const statusChipVariants$1 = classVarianceAuthority.cva('', {
    variants: {
        variant: {
            draft: 'mtw:bg-gray-100 mtw:text-gray-950',
            issuing: 'mtw:bg-blue-50 mtw:text-blue-600',
            issued: 'mtw:bg-blue-50 mtw:text-blue-600',
            failed: 'mtw:bg-red-50 mtw:text-red-600',
            accepted: 'mtw:bg-green-50 mtw:text-green-600',
            partially_paid: 'mtw:bg-purple-50 mtw:text-purple-600',
            paid: 'mtw:bg-green-50 mtw:text-green-600',
            expired: 'mtw:bg-red-50 mtw:text-red-600',
            uncollectible: 'mtw:bg-red-50 mtw:text-red-600',
            canceled: 'mtw:bg-red-50 mtw:text-red-600',
            recurring: 'mtw:bg-muted mtw:text-foreground',
            declined: 'mtw:bg-red-50 mtw:text-red-600',
            overdue: 'mtw:bg-amber-50 mtw:text-amber-600',
            deleted: 'mtw:bg-red-50 mtw:text-red-600'
        }
    }
});
const InvoiceStatusChip = /*#__PURE__*/ React.forwardRef(({ status, className }, ref)=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(Badge, {
        ref: ref,
        className: cn('mtw:inline-flex mtw:items-center mtw:gap-1', statusChipVariants$1({
            variant: status
        }), className),
        children: getCommonStatusLabel$1(i18n, status)
    });
});

const ReceivableFilters = ({ onChange, filters })=>{
    var _filters_find;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { api } = useMoniteContext();
    const { data: counterparts } = api.counterparts.getCounterparts.useQuery();
    const className = 'Monite-ReceivableFilters';
    const statusFilterOptions = (_filters_find = filters.find((filter)=>filter.field === 'status')) === null || _filters_find === void 0 ? void 0 : _filters_find.options;
    var _counterparts_data;
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "A1taO8"
            }),
            onChange: (search)=>{
                onChange('document_id__contains', search !== null && search !== void 0 ? search : undefined);
            }
        }),
        children: [
            statusFilterOptions && statusFilterOptions.length > 1 && filters.some((filter)=>filter.field === 'status') && /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                fullWidth: true,
                className: "Monite-ReceivableStatusFilter Monite-FilterControl",
                variant: "standard",
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Select, {
                    labelId: "status",
                    label: i18n._({
                        id: "uAQUqI"
                    }),
                    defaultValue: undefined,
                    MenuProps: {
                        container: root
                    },
                    displayEmpty: true,
                    onChange: (event)=>{
                        onChange('status', event.target.value || undefined);
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: undefined,
                            children: i18n._({
                                id: "jBtpMP"
                            })
                        }),
                        statusFilterOptions.map((status)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                value: status,
                                children: getCommonStatusLabel$1(i18n, status)
                            }, status))
                    ]
                })
            }),
            filters.some((filter)=>filter.field === 'counterpart_id') && /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                className: "Monite-ReceivableCounterpartFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Select, {
                    labelId: "counterpart_id",
                    label: i18n._({
                        id: "876pfE"
                    }),
                    defaultValue: undefined,
                    MenuProps: {
                        container: root
                    },
                    displayEmpty: true,
                    onChange: (event)=>{
                        onChange('counterpart_id', event.target.value || undefined);
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: undefined,
                            children: i18n._({
                                id: "AsvXfV"
                            })
                        }),
                        counterpartsToSelect((_counterparts_data = counterparts === null || counterparts === void 0 ? void 0 : counterparts.data) !== null && _counterparts_data !== void 0 ? _counterparts_data : []).sort((a, b)=>a.label.localeCompare(b.label)).map(({ value, label })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                value: value,
                                children: label
                            }, value))
                    ]
                })
            }),
            filters.some((filter)=>filter.field === 'due_date__lte') && /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, {
                className: "Monite-ReceivableDueDateFilter Monite-FilterControl Monite-DateFilterControl",
                views: [
                    'year',
                    'month',
                    'day'
                ],
                slots: {
                    openPickerIcon: iconsMaterial.CalendarToday
                },
                onChange: (value, error)=>{
                    if (error.validationError) return;
                    if (value === null || value === undefined) return void onChange('due_date__lte', undefined);
                    onChange('due_date__lte', dateFns.formatISO(new Date(value), {
                        representation: 'date'
                    }));
                },
                slotProps: {
                    textField: {
                        variant: 'standard',
                        placeholder: 'Due date',
                        InputProps: {
                            sx: {
                                '&::placeholder': {
                                    opacity: 1,
                                    color: 'text.primary'
                                },
                                '& input::placeholder': {
                                    opacity: 1,
                                    color: 'text.primary'
                                }
                            }
                        }
                    },
                    popper: {
                        container: root
                    },
                    dialog: {
                        container: root
                    },
                    actionBar: {
                        actions: [
                            'clear',
                            'today'
                        ]
                    },
                    openPickerIcon: {
                        fontSize: 'small'
                    }
                }
            })
        ]
    });
};

function asyncGeneratorStep$N(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$N(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$N(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$N(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useCreateEntityBankAccount = (onCreate)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.bankAccounts.postBankAccounts.useMutation(undefined, {
        onSuccess: (bank)=>_async_to_generator$N(function*() {
                yield api.bankAccounts.getBankAccounts.invalidateQueries(queryClient);
                onCreate && onCreate(bank === null || bank === void 0 ? void 0 : bank.id);
                reactHotToast.toast.success(i18n._({
                    id: "yaJRV9",
                    values: {
                        0: bank.display_name
                    }
                }));
            })(),
        onError: (error)=>{
            var _error_detail_, _error_detail;
            reactHotToast.toast.error((error === null || error === void 0 ? void 0 : (_error_detail = error.detail) === null || _error_detail === void 0 ? void 0 : (_error_detail_ = _error_detail[0]) === null || _error_detail_ === void 0 ? void 0 : _error_detail_.msg) || i18n._({
                id: "cxratx"
            }));
        }
    });
};

function asyncGeneratorStep$M(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$M(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$M(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$M(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useUpdateEntityBankAccount = (onUpdate)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.bankAccounts.patchBankAccountsId.useMutation(undefined, {
        onSuccess: (bank)=>_async_to_generator$M(function*() {
                reactHotToast.toast.success(i18n._({
                    id: "oqtRp4",
                    values: {
                        0: bank.display_name
                    }
                }));
                yield api.bankAccounts.getBankAccountsId.invalidateQueries(queryClient);
                yield api.bankAccounts.getBankAccounts.invalidateQueries(queryClient);
                onUpdate && onUpdate();
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "UVEEPq"
            }));
        }
    });
};

function asyncGeneratorStep$L(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$L(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$L(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$L(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useDeleteEntityBankAccount = (onDelete)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.bankAccounts.deleteBankAccountsId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$L(function*() {
                yield api.bankAccounts.getBankAccounts.invalidateQueries(queryClient);
                onDelete && onDelete();
                reactHotToast.toast.success(i18n._({
                    id: "5A2SuH"
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "wymfGb"
            }));
        }
    });
};

const useGetEntityBankAccounts = (query, enabled = true)=>{
    const { api } = useMoniteContext();
    return api.bankAccounts.getBankAccounts.useQuery({
        query
    }, {
        enabled
    });
};

const useGetEntityBankAccountById = (bankId)=>{
    const { api } = useMoniteContext();
    return api.bankAccounts.getBankAccountsId.useQuery({
        path: {
            bank_account_id: bankId
        }
    }, {
        enabled: !!bankId
    });
};

function asyncGeneratorStep$K(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$K(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$K(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$K(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useSetDefaultBankAccount = (shouldInvalidate = true, shouldDisplaySuccessToast = true)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.bankAccounts.postBankAccountsIdMakeDefault.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$K(function*() {
                if (shouldInvalidate) {
                    yield api.bankAccounts.getBankAccounts.invalidateQueries(queryClient);
                }
                if (shouldDisplaySuccessToast) {
                    reactHotToast.toast.success(i18n._({
                        id: "dhr+Bc"
                    }));
                }
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "eajIuJ"
            }));
        }
    });
};

function _define_property$1G(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1F(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1G(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1b(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1b(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1b(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useReceivablesFilters = (availableFilters, predefinedQuery)=>{
    const [filtersQuery, setFiltersQuery] = React.useState(predefinedQuery !== null && predefinedQuery !== void 0 ? predefinedQuery : {});
    const onChangeFilter = React.useCallback((field, value)=>{
        setFiltersQuery((prevFilters)=>_object_spread_props$1b(_object_spread$1F({}, prevFilters), {
                [field]: value
            }));
    }, []);
    return {
        filtersQuery,
        filters: React.useMemo(()=>availableFilters.map((field)=>{
                return field === 'status' ? {
                    field,
                    value: filtersQuery[field],
                    options: (predefinedQuery === null || predefinedQuery === void 0 ? void 0 : predefinedQuery.type) ? filterStatusesByReceivableType(predefinedQuery.type, predefinedQuery === null || predefinedQuery === void 0 ? void 0 : predefinedQuery.status__in) : []
                } : {
                    field,
                    value: filtersQuery[field]
                };
            }), [
            availableFilters,
            filtersQuery,
            predefinedQuery
        ]),
        onChangeFilter
    };
};
const filterStatusesByReceivableType = (receivableType, inStatuses)=>{
    const statusMap = {
        invoice: [
            'recurring',
            'draft',
            'issued',
            'partially_paid',
            'paid',
            'overdue',
            'canceled',
            'uncollectible'
        ],
        quote: [
            'draft',
            'issued',
            'accepted',
            'expired',
            'declined'
        ],
        credit_note: [
            'draft',
            'issued'
        ]
    };
    if (!inStatuses) return statusMap[receivableType];
    return statusMap[receivableType].filter((status)=>inStatuses.includes(status));
};

const useInvoiceRowActionMenuCell = (props)=>{
    const { data: receivableActionSchema, userIdFromAuthToken } = usePermissions('receivable');
    const { i18n } = react.useLingui();
    const { onRowActionClick, rowActions } = props;
    return React.useMemo(()=>{
        if (onRowActionClick) {
            return {
                field: 'action_menu',
                type: 'actions',
                headerName: i18n._({
                    id: "PpLva2"
                }),
                renderHeader: ()=>null,
                getActions: (params)=>{
                    const menuItems = getInvoiceActionMenuItems({
                        // casts, because it is not possible to resolve `type` based on multiple different enum
                        invoice: params.row,
                        actions: rowActions,
                        receivableActionSchema,
                        userIdFromAuthToken,
                        i18n
                    });
                    return menuItems.map(({ label, action })=>{
                        return /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.GridActionsCellItem, {
                            showInMenu: true,
                            label: label,
                            onClick: (event)=>{
                                event.preventDefault();
                                onRowActionClick({
                                    id: params.row.id,
                                    action
                                });
                            }
                        });
                    });
                }
            };
        } else {
            return undefined;
        }
    }, [
        i18n,
        onRowActionClick,
        rowActions,
        receivableActionSchema,
        userIdFromAuthToken
    ]);
};
const getInvoiceActionMenuItems = ({ invoice, actions: inActions, receivableActionSchema, userIdFromAuthToken, i18n })=>{
    var _inActions_invoice_status;
    const actions = (_inActions_invoice_status = inActions === null || inActions === void 0 ? void 0 : inActions[invoice.status]) !== null && _inActions_invoice_status !== void 0 ? _inActions_invoice_status : DEFAULT_ACTION_LIST[invoice.status];
    const allowedActions = filterInvoiceActionMenuAllowedItems(receivableActionSchema, actions, invoice, userIdFromAuthToken);
    const allMenuItems = getInvoiceActionMenuItemLabels(i18n);
    return Object.entries(allMenuItems).filter((menuItem)=>allowedActions.includes(menuItem[0])).map(([action, label])=>({
            action,
            label
        }));
};
const filterInvoiceActionMenuAllowedItems = (actionSchema, menuItemsToFilter, invoice, userIdFromAuthToken)=>{
    const isAllowedInvoiceAction = (action)=>isActionAllowed({
            action,
            actions: actionSchema,
            entityUserId: invoice.entity_user_id,
            entityUserIdFromAuthToken: userIdFromAuthToken
        });
    const menuItemsPermissionMap = {
        view: isAllowedInvoiceAction('read'),
        edit: isAllowedInvoiceAction('update'),
        issue: isAllowedInvoiceAction('update'),
        delete: isAllowedInvoiceAction('delete'),
        copyPaymentLink: isAllowedInvoiceAction('read'),
        cancel: isAllowedInvoiceAction('update'),
        markUncollectible: isAllowedInvoiceAction('update'),
        recurrent: isAllowedInvoiceAction('create'),
        partiallyPay: isAllowedInvoiceAction('update'),
        pay: isAllowedInvoiceAction('update'),
        overduePayment: isAllowedInvoiceAction('update'),
        send: isAllowedInvoiceAction('create'),
        financeInvoice: (invoice.status === 'partially_paid' || invoice.status === 'issued') && isAllowedInvoiceAction('update'),
        duplicate: isAllowedInvoiceAction('create')
    };
    return menuItemsToFilter.filter((itemValue)=>menuItemsPermissionMap[itemValue]);
};
const DEFAULT_ACTION_LIST = {
    ['draft']: [
        'view',
        'edit',
        'delete',
        'duplicate'
    ],
    ['issued']: [
        'view',
        'send',
        'cancel',
        'duplicate'
    ],
    ['canceled']: [
        'view',
        'duplicate'
    ],
    ['partially_paid']: [
        // 'copyPaymentLink', 'pay', 'overduePayment', 'financeInvoice' are not default
        'view',
        'send',
        'cancel',
        'duplicate'
    ],
    ['overdue']: [
        'view',
        'send',
        'cancel',
        'duplicate'
    ],
    ['paid']: [
        'view',
        'duplicate'
    ],
    ['uncollectible']: [
        'view',
        'duplicate'
    ],
    ['expired']: [
        'view',
        'duplicate'
    ],
    ['accepted']: [
        'view',
        'duplicate'
    ],
    ['declined']: [
        'view',
        'duplicate'
    ],
    ['recurring']: [
        'view',
        'duplicate'
    ],
    ['deleted']: [],
    issuing: [],
    failed: []
};
const getInvoiceActionMenuItemLabels = (i18n)=>({
        view: i18n._({
            id: "Pd629B"
        }),
        send: i18n._({
            id: "Jxe19b"
        }),
        copyPaymentLink: i18n._({
            id: "ObfjF0"
        }),
        cancel: i18n._({
            id: "yKnHs1"
        }),
        edit: i18n._({
            id: "Ucdj62"
        }),
        delete: i18n._({
            id: "QgPtNA"
        }),
        markUncollectible: i18n._({
            id: "W3asPp"
        }),
        issue: i18n._({
            id: "tCtpV4"
        }),
        recurrent: i18n._({
            id: "r1a0ie"
        }),
        partiallyPay: i18n._({
            id: "p4lH4w"
        }),
        pay: i18n._({
            id: "Dcxka7"
        }),
        overduePayment: i18n._({
            id: "2PSejx"
        }),
        financeInvoice: i18n._({
            id: "NlmmCk"
        }),
        duplicate: i18n._({
            id: "c4hxBA"
        })
    });

const useGetPaymentReminderById = (id)=>{
    const { api } = useMoniteContext();
    return api.paymentReminders.getPaymentRemindersId.useQuery({
        path: {
            payment_reminder_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};

const useGetPaymentReminders = ()=>{
    const { api } = useMoniteContext();
    return api.paymentReminders.getPaymentReminders.useQuery(undefined, {
        select: (data)=>data.data.map(({ id, name })=>({
                    value: id,
                    label: name
                }))
    });
};

const useGetOverdueReminderById = (id)=>{
    const { api } = useMoniteContext();
    return api.overdueReminders.getOverdueRemindersId.useQuery({
        path: {
            overdue_reminder_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};

const useGetOverdueReminders = ()=>{
    const { api } = useMoniteContext();
    return api.overdueReminders.getOverdueReminders.useQuery(undefined, {
        select: (data)=>data.data.map(({ id, name })=>({
                    value: id,
                    label: name
                }))
    });
};

function asyncGeneratorStep$J(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$J(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$J(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$J(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useDuplicateInvoice = (onDuplicate)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.postReceivablesIdClone.useMutation(undefined, {
        onSuccess: (data)=>_async_to_generator$J(function*() {
                yield api.receivables.getReceivables.invalidateQueries(queryClient);
                onDuplicate && onDuplicate(data === null || data === void 0 ? void 0 : data.id);
                reactHotToast.toast.success(i18n._({
                    id: "k0KIeE"
                }));
            })(),
        onError: (error)=>{
            var _error_detail_, _error_detail;
            reactHotToast.toast.error((error === null || error === void 0 ? void 0 : (_error_detail = error.detail) === null || _error_detail === void 0 ? void 0 : (_error_detail_ = _error_detail[0]) === null || _error_detail_ === void 0 ? void 0 : _error_detail_.msg) || i18n._({
                id: "3dGVaB"
            }));
        }
    });
};

const useGetEntityVatIds = (entityId)=>{
    const { api } = useMoniteContext();
    return api.entities.getEntitiesIdVatIds.useQuery({
        path: {
            entity_id: entityId
        }
    }, {
        enabled: !!entityId
    });
};

const usePatchEntityById = ()=>{
    const { api, queryClient } = useMoniteContext();
    return api.entityUsers.patchEntityUsersMyEntity.useMutation({}, {
        onSuccess: ()=>{
            api.entityUsers.getEntityUsersMyEntity.invalidateQueries(queryClient);
        }
    });
};

const usePatchEntityVatById = (vatIdId)=>{
    const { api, entityId, queryClient } = useMoniteContext();
    return api.entities.patchEntitiesIdVatIdsId.useMutation({
        path: {
            entity_id: entityId,
            id: vatIdId
        }
    }, {
        onSuccess: ()=>{
            api.entities.getEntitiesIdVatIds.invalidateQueries({
                parameters: {
                    path: {
                        entity_id: entityId
                    }
                }
            }, queryClient);
        }
    });
};

const useGetPaymentRecords = (id)=>{
    const { api } = useMoniteContext();
    return api.paymentRecords.getPaymentRecords.useQuery({
        query: {
            object_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};

/**
 * Marks receivable as deleted by provided id
 *
 * @see {@link https://docs.monite.com/reference/delete_receivables_id} Monite backend call API
 */ const useDeleteReceivableById = (receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.deleteReceivablesId.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: ()=>{
            const previousReceivable = api.receivables.getReceivablesId.getQueryData({
                path: {
                    receivable_id
                }
            }, queryClient);
            api.receivables.getReceivables.invalidateQueries(queryClient);
            var _previousReceivable_type;
            reactHotToast.toast.success(i18n._({
                id: "fDdnGg",
                values: {
                    0: (_previousReceivable_type = previousReceivable === null || previousReceivable === void 0 ? void 0 : previousReceivable.type) !== null && _previousReceivable_type !== void 0 ? _previousReceivable_type : ''
                }
            }));
        }
    });
};

const useGetReceivablePDFById = (receivable_id, enabled)=>{
    const { api } = useMoniteContext();
    return api.receivables.getReceivablesIdPdfLink.useQuery({
        path: {
            receivable_id
        }
    }, {
        enabled
    });
};

function asyncGeneratorStep$I(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$I(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$I(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$I(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
/**
 * Marks receivable as uncollectible by provided id
 *
 * @see {@link https://docs.monite.com/reference/post_receivables_id_mark_as_uncollectible} Monite backend call API
 */ const useMarkAsUncollectibleReceivableById = (receivable_id, onMarkAsUncollectible)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.receivables.postReceivablesIdMarkAsUncollectible.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: (receivable)=>_async_to_generator$I(function*() {
                onMarkAsUncollectible === null || onMarkAsUncollectible === void 0 ? void 0 : onMarkAsUncollectible(receivable_id);
                api.receivables.getReceivablesId.setQueryData({
                    path: {
                        receivable_id
                    }
                }, receivable, queryClient);
                yield api.receivables.getReceivables.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "4FIJf2"
                }));
            })()
    });
};

const useGetReceivables = (query, enabled = true)=>{
    const { api } = useMoniteContext();
    return api.receivables.getReceivables.useQuery({
        query
    }, {
        enabled
    });
};

function asyncGeneratorStep$H(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$H(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$H(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$H(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useCreateReceivable = ()=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    return api.receivables.postReceivables.useMutation({}, {
        onSuccess: (receivable)=>_async_to_generator$H(function*() {
                if (receivable.counterpart_name) {
                    return reactHotToast.toast.success(i18n._({
                        id: "qqRcBm",
                        values: {
                            0: receivable.counterpart_name
                        }
                    }));
                }
                reactHotToast.toast.success(i18n._({
                    id: "xJDYwn",
                    values: {
                        0: receivable.type
                    }
                }));
            })(),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            reactHotToast.toast.error(i18n._({
                id: "xz2uEk",
                values: {
                    errorMessage: errorMessage
                }
            }));
        }
    });
};

function asyncGeneratorStep$G(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$G(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$G(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$G(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
/**
 * Update receivable line items
 *
 * @param receivable_id - Receivable id
 */ const useUpdateReceivableLineItems = (receivable_id)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.receivables.putReceivablesIdLineItems.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: ()=>_async_to_generator$G(function*() {
                yield api.receivables.getReceivablesId.invalidateQueries({
                    parameters: {
                        path: {
                            receivable_id
                        }
                    }
                }, queryClient);
            })(),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            reactHotToast.toast.error(i18n._({
                id: "C6F4kN",
                values: {
                    errorMessage: errorMessage
                }
            }));
        }
    });
};

function asyncGeneratorStep$F(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$F(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$F(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$F(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
/**
 * Update receivable by provided `id`
 *
 * @param receivable_id - Receivable id
 */ const useUpdateReceivable = (receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.patchReceivablesId.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: (receivable)=>_async_to_generator$F(function*() {
                api.receivables.getReceivablesId.setQueryData({
                    path: {
                        receivable_id
                    }
                }, receivable, queryClient);
                yield Promise.all([
                    api.receivables.getReceivablesIdPdfLink.resetQueries({
                        parameters: {
                            path: {
                                receivable_id
                            }
                        }
                    }, queryClient),
                    api.receivables.getReceivables.invalidateQueries(queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "tlJeSP",
                    values: {
                        0: receivable.type
                    }
                }));
            })(),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            reactHotToast.toast.error(i18n._({
                id: "SeD1C8",
                values: {
                    errorMessage: errorMessage
                }
            }));
        }
    });
};

function _define_property$1F(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1E(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1F(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1a(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1a(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1a(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useInvoiceReminderDialogs = ({ getValues })=>{
    const [createReminderDialog, setCreateReminderDialog] = React.useState({
        open: false
    });
    const [editReminderDialog, setEditReminderDialog] = React.useState({
        open: false
    });
    const onCreateReminder = React.useCallback((type)=>{
        setCreateReminderDialog({
            open: true,
            reminderType: type
        });
    }, []);
    const onEditOverdueReminder = React.useCallback(()=>{
        const reminderId = getValues('overdue_reminder_id');
        setEditReminderDialog((prev)=>reminderId ? {
                reminderId,
                open: true,
                reminderType: 'overdue'
            } : _object_spread_props$1a(_object_spread$1E({}, prev), {
                open: false
            }));
    }, [
        getValues
    ]);
    const onEditPaymentReminder = React.useCallback(()=>{
        const reminderId = getValues('payment_reminder_id');
        setEditReminderDialog((prev)=>reminderId ? {
                reminderId,
                open: true,
                reminderType: 'payment'
            } : _object_spread_props$1a(_object_spread$1E({}, prev), {
                open: false
            }));
    }, [
        getValues
    ]);
    return {
        createReminderDialog,
        editReminderDialog,
        closeCreateReminderDialog: React.useCallback(()=>setCreateReminderDialog((prev)=>_object_spread_props$1a(_object_spread$1E({}, prev), {
                    open: false
                })), []),
        closeUpdateReminderDialog: React.useCallback(()=>setEditReminderDialog((prev)=>_object_spread_props$1a(_object_spread$1E({}, prev), {
                    open: false
                })), []),
        onCreateReminder,
        onEditOverdueReminder,
        onEditPaymentReminder
    };
};

function _define_property$1E(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1D(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1E(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$19(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$19(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$19(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * A hook that maps measure unit names to IDs when possible and preserves custom measure units
 */ const useMeasureUnitsMapping = (measureUnits, getValues, reset)=>{
    React.useEffect(()=>{
        var _measureUnits_data;
        if (!(measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : _measureUnits_data.length)) return;
        const currentValues = getValues();
        const unitsMap = new Map(measureUnits.data.map((unit)=>[
                unit.id,
                unit
            ]));
        const unitsNameMap = new Map(measureUnits.data.filter((unit)=>unit.name).map((unit)=>{
            var _unit_name;
            return [
                (_unit_name = unit.name) === null || _unit_name === void 0 ? void 0 : _unit_name.toLowerCase(),
                unit
            ];
        }));
        const lineItemsWithMappedUnits = currentValues.line_items.map((item)=>{
            var _item_measure_unit;
            const measureUnitId = item.product.measure_unit_id;
            const measureUnitName = item.product.measure_unit_name || ((_item_measure_unit = item.measure_unit) === null || _item_measure_unit === void 0 ? void 0 : _item_measure_unit.name);
            // Try to find a matching unit either by ID or name
            let matchedUnit;
            if (measureUnitId && unitsMap.has(measureUnitId)) {
                matchedUnit = unitsMap.get(measureUnitId);
            } else if (measureUnitName && unitsNameMap.has(measureUnitName.toLowerCase())) {
                matchedUnit = unitsNameMap.get(measureUnitName.toLowerCase());
            }
            // Case 1 & 2: We found a matching unit (either by ID or name)
            if (matchedUnit) {
                return _object_spread_props$19(_object_spread$1D({}, item), {
                    product: _object_spread_props$19(_object_spread$1D({}, item.product), {
                        measure_unit_id: matchedUnit.id,
                        measure_unit_name: undefined
                    }),
                    measure_unit: {
                        id: matchedUnit.id,
                        name: matchedUnit.name || ''
                    }
                });
            }
            // Case 3: Keep a custom measure unit name
            if (measureUnitName) {
                return _object_spread_props$19(_object_spread$1D({}, item), {
                    product: _object_spread_props$19(_object_spread$1D({}, item.product), {
                        measure_unit_id: undefined,
                        measure_unit_name: measureUnitName
                    }),
                    measure_unit: {
                        name: measureUnitName,
                        id: null
                    }
                });
            }
            // Case 4: Clear empty ID if no name exists
            if (measureUnitId === '' || measureUnitId === undefined) {
                return _object_spread_props$19(_object_spread$1D({}, item), {
                    product: _object_spread_props$19(_object_spread$1D({}, item.product), {
                        measure_unit_id: undefined
                    })
                });
            }
            // Default: Keep item as is
            return _object_spread$1D({}, item);
        });
        // Reset with mapped units
        reset(_object_spread_props$19(_object_spread$1D({}, currentValues), {
            line_items: lineItemsWithMappedUnits
        }));
    }, [
        measureUnits === null || measureUnits === void 0 ? void 0 : measureUnits.data,
        reset,
        getValues
    ]);
};

const useCreateInvoiceEmailPreview = (receivable_id)=>{
    const { api } = useMoniteContext();
    return api.receivables.postReceivablesIdPreview.useMutation({
        path: {
            receivable_id
        }
    });
};

function asyncGeneratorStep$E(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$E(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$E(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$E(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useCreateRecurrence = ()=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.recurrences.postRecurrences.useMutation(undefined, {
        onError (error) {
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        },
        onSuccess () {
            return _async_to_generator$E(function*() {
                yield api.receivables.getReceivables.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "qY2FQd"
                }));
            })();
        }
    });
};

const useGetRecurrenceById = (id)=>{
    const { api } = useMoniteContext();
    return api.recurrences.getRecurrencesId.useQuery({
        path: {
            recurrence_id: id !== null && id !== void 0 ? id : ''
        }
    }, {
        enabled: !!id
    });
};

function asyncGeneratorStep$D(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$D(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$D(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$D(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useCancelRecurrence = (recurrence_id, receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.recurrences.postRecurrencesIdCancel.useMutation({
        path: {
            recurrence_id
        }
    }, {
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        },
        onSuccess: ()=>_async_to_generator$D(function*() {
                yield Promise.all([
                    api.receivables.getReceivables.invalidateQueries(queryClient),
                    api.receivables.getReceivablesId.invalidateQueries({
                        parameters: {
                            path: {
                                receivable_id
                            }
                        }
                    }, queryClient),
                    api.recurrences.getRecurrencesId.invalidateQueries({
                        parameters: {
                            path: {
                                recurrence_id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "A0YeN7"
                }));
            })()
    });
};

function asyncGeneratorStep$C(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$C(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$C(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$C(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1D(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1C(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1D(target, key, source[key]);
        });
    }
    return target;
}
const useUpdateRecurrenceById = (recurrence_id, invoiceId)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.recurrences.patchRecurrencesId.useMutation({
        path: {
            recurrence_id
        }
    }, {
        onError (error) {
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        },
        onSuccess (updatedRecurrence) {
            return _async_to_generator$C(function*() {
                api.recurrences.getRecurrencesId.setQueryData({
                    path: {
                        recurrence_id: updatedRecurrence.id
                    }
                }, (previousRecurrence)=>_object_spread$1C({}, previousRecurrence, updatedRecurrence), queryClient);
                yield Promise.all([
                    api.receivables.getReceivablesId.invalidateQueries({
                        parameters: {
                            path: {
                                receivable_id: invoiceId
                            }
                        }
                    }, queryClient),
                    api.receivables.getReceivables.invalidateQueries(queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "zC1aVl"
                }));
            })();
        }
    });
};

const useGetInvoiceRequiredFields = ({ entity_vat_id_id, counterpart_billing_address_id, counterpart_country, counterpart_id, counterpart_type, counterpart_vat_id_id })=>{
    const { api } = useMoniteContext();
    return api.receivables.getReceivablesRequiredFields.useQuery({
        query: {
            entity_vat_id_id,
            counterpart_billing_address_id,
            counterpart_country,
            counterpart_id,
            counterpart_type,
            counterpart_vat_id_id
        }
    }, {
        enabled: Boolean(entity_vat_id_id) && Boolean(counterpart_billing_address_id) && Boolean(counterpart_id)
    });
};

const useCreateEntityVatId = ()=>{
    const { api, entityId, queryClient } = useMoniteContext();
    return api.entities.postEntitiesIdVatIds.useMutation({
        path: {
            entity_id: entityId
        }
    }, {
        onSuccess: ()=>{
            api.entities.getEntitiesIdVatIds.invalidateQueries({
                parameters: {
                    path: {
                        entity_id: entityId
                    }
                }
            }, queryClient);
        }
    });
};

const filters = {
    counterpart_name: 'counterpart_name',
    counterpart_id: 'counterpart_id',
    amount: 'amount',
    status: 'status',
    due_date: 'due_date',
    issue_date: 'issue_date',
    document_id: 'document_id',
    created_at: 'created_at',
    project_id: 'project_id',
    total_amount: 'total_amount',
    discounted_subtotal: 'discounted_subtotal'
};
const ReceivableCursorFields = Object.values(filters);

function asyncGeneratorStep$B(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$B(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$B(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$B(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1C(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1B(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1C(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$18(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$18(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$18(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$n(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$n(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$n(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const InvoicesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(InvoicesTableBase, _object_spread$1B({}, props))
    });
const InvoicesTableBase = (_param)=>{
    var { onRowClick, setIsCreateInvoiceDialogOpen, query, filters: filtersProp } = _param, restProps = _object_without_properties$n(_param, [
        "onRowClick",
        "setIsCreateInvoiceDialogOpen",
        "query",
        "filters"
    ]);
    var _financeData_offers_, _financeData_offers, _componentSettings_receivables_pageSizeOptions;
    const { locale, componentSettings } = useMoniteContext();
    const { startFinanceSession } = useKanmonContext();
    const { data: financeData } = useGetFinanceOffers();
    const { data: financedInvoices } = useGetFinancedInvoices({});
    const { isUSEntity } = useMyEntity();
    const { i18n } = react.useLingui();
    const isServicing = (financeData === null || financeData === void 0 ? void 0 : financeData.business_status) === 'ONBOARDED' && (financeData === null || financeData === void 0 ? void 0 : (_financeData_offers = financeData.offers) === null || _financeData_offers === void 0 ? void 0 : (_financeData_offers_ = _financeData_offers[0]) === null || _financeData_offers_ === void 0 ? void 0 : _financeData_offers_.status) === 'CURRENT';
    const [paginationToken, setPaginationToken] = React.useState(undefined);
    const [isFinancingAnInvoice, setIsFinancingAnInvoice] = React.useState(false);
    var _componentSettings_receivables_pageSizeOptions_;
    const [pageSize, setPageSize] = React.useState((_componentSettings_receivables_pageSizeOptions_ = (_componentSettings_receivables_pageSizeOptions = componentSettings.receivables.pageSizeOptions) === null || _componentSettings_receivables_pageSizeOptions === void 0 ? void 0 : _componentSettings_receivables_pageSizeOptions[0]) !== null && _componentSettings_receivables_pageSizeOptions_ !== void 0 ? _componentSettings_receivables_pageSizeOptions_ : 15);
    var _query_sort, _query_order;
    const [sortModel, setSortModel] = React.useState({
        field: (_query_sort = query === null || query === void 0 ? void 0 : query.sort) !== null && _query_sort !== void 0 ? _query_sort : 'created_at',
        sort: (_query_order = query === null || query === void 0 ? void 0 : query.order) !== null && _query_order !== void 0 ? _query_order : 'desc'
    });
    const financeInvoiceMutation = useFinanceAnInvoice();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { filtersQuery, filters, onChangeFilter } = useReceivablesFilters([
        'document_id__contains',
        'status',
        'counterpart_id',
        'due_date__lte'
    ].filter((filter)=>{
        var _filtersProp_includes;
        return (_filtersProp_includes = filtersProp === null || filtersProp === void 0 ? void 0 : filtersProp.includes(filter)) !== null && _filtersProp_includes !== void 0 ? _filtersProp_includes : true;
    }), query);
    const { data: invoices, isLoading, isError, refetch } = useGetReceivables(_object_spread_props$18(_object_spread$1B({}, filtersQuery), {
        sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
        order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
        limit: pageSize,
        pagination_token: paginationToken,
        type: 'invoice'
    }));
    const financeInvoice = React.useCallback((invoiceId)=>_async_to_generator$B(function*() {
            if (isFinancingAnInvoice) return;
            try {
                setIsFinancingAnInvoice(true);
                financeInvoiceMutation.mutate({
                    invoices: [
                        {
                            id: invoiceId,
                            type: 'receivable'
                        }
                    ]
                }, {
                    onError: ()=>{
                        setIsFinancingAnInvoice(false);
                    },
                    onSuccess: ({ session_token })=>{
                        startFinanceSession({
                            sessionToken: session_token,
                            component: 'SESSION_INVOICE_FLOW_WITH_INVOICE_FILE'
                        });
                        setIsFinancingAnInvoice(false);
                    }
                });
            } catch (e) {
                setIsFinancingAnInvoice(false);
            }
        })(), [
        financeInvoiceMutation,
        isFinancingAnInvoice,
        startFinanceSession
    ]);
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setPaginationToken(undefined);
    };
    const invoiceActionCell = useInvoiceRowActionMenuCell({
        rowActions: 'rowActions' in restProps ? restProps.rowActions : undefined,
        onRowActionClick: 'onRowActionClick' in restProps ? restProps.onRowActionClick : undefined
    });
    const areCounterpartsLoading = useAreCounterpartsLoading(invoices === null || invoices === void 0 ? void 0 : invoices.data);
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'document_id',
                headerName: i18n._({
                    id: "HptUxX"
                }),
                sortable: false,
                cellClassName: 'Monite-Cell-Highlight',
                width: 150,
                display: 'flex',
                renderCell: ({ value, row })=>/*#__PURE__*/ jsxRuntime.jsx("div", {
                        style: {
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'flex-start',
                            gap: 0.5,
                            maxWidth: '100%'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            style: {
                                display: 'flex',
                                maxWidth: '100%'
                            },
                            children: [
                                (()=>{
                                    if (row.status === 'recurring') {
                                        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                            sx: {
                                                alignItems: 'center',
                                                display: 'flex',
                                                verticalAlign: 'middle',
                                                fontSize: 'inherit',
                                                gap: 0.5
                                            },
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "body1",
                                                sx: {
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    fontSize: 'inherit',
                                                    fontWeight: 'inherit'
                                                },
                                                children: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Sync, {
                                                            sx: {
                                                                marginRight: 0.5,
                                                                fontSize: 'inherit'
                                                            },
                                                            color: "inherit"
                                                        }),
                                                        i18n._({
                                                            id: "wuhHPE"
                                                        })
                                                    ]
                                                })
                                            })
                                        });
                                    }
                                    if (!value) {
                                        return i18n._({
                                            id: "IounKn"
                                        });
                                    }
                                    return value;
                                })(),
                                row.type === 'invoice' && row.recurrence_id && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    sx: {
                                        alignItems: 'center',
                                        display: 'inline-flex',
                                        verticalAlign: 'middle',
                                        marginLeft: '4px'
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceRecurrenceStatusChipLoader, {
                                        recurrenceId: row.recurrence_id
                                    })
                                })
                            ]
                        })
                    })
            },
            {
                field: 'status',
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                sortable: false,
                display: 'flex',
                width: 100,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        sx: {
                            alignItems: 'center',
                            display: 'inline-flex',
                            verticalAlign: 'middle',
                            marginLeft: '4px'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                            status: params.value
                        })
                    })
            },
            {
                field: 'counterpart_name',
                headerName: i18n._({
                    id: "876pfE"
                }),
                sortable: ReceivableCursorFields.includes('counterpart_name'),
                display: 'flex',
                width: defaultCounterpartColumnWidth,
                renderCell: (params)=>{
                    const receivable = params.row;
                    if (receivable.counterpart_name) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: receivable.counterpart_name
                        });
                    } else if (params.row) {
                        return /*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCellById, {
                            counterpartId: params.row.counterpart_id
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        style: {
                            opacity: 0.4
                        },
                        children: "-"
                    });
                }
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "45O6zJ"
                }),
                sortable: false,
                width: 140,
                renderCell: (params)=>{
                    if (!params.value) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            style: {
                                opacity: 0.4
                            },
                            children: "-"
                        });
                    }
                    return i18n.date(params.value, locale.dateFormat);
                }
            },
            {
                field: 'issue_date',
                headerName: i18n._({
                    id: "X7pkpC"
                }),
                sortable: false,
                width: 120,
                renderCell: (params)=>{
                    if (!params.value) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            style: {
                                opacity: 0.4
                            },
                            children: "-"
                        });
                    }
                    return i18n.date(params.value, locale.dateFormat);
                }
            },
            {
                field: 'total_amount',
                headerName: i18n._({
                    id: "hehnjM"
                }),
                headerAlign: 'right',
                align: 'right',
                className: 'Monite-Cell-Highlight',
                sortable: ReceivableCursorFields.includes('amount'),
                width: 120,
                valueGetter: (_, row)=>{
                    const value = row.total_amount;
                    return value ? formatCurrencyToDisplay(value, row.currency) : '';
                }
            },
            {
                field: 'due_date',
                headerName: i18n._({
                    id: "XicmhT"
                }),
                sortable: false,
                width: 120,
                valueFormatter: (value)=>value ? i18n.date(value, locale.dateFormat) : '—',
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(DueDateCell, {
                        data: params.row
                    })
            },
            ...isUSEntity ? [
                {
                    field: '',
                    headerName: i18n._({
                        id: "RiFslz"
                    }),
                    sortable: false,
                    width: 120,
                    renderCell: (params)=>{
                        var _financedInvoices_data;
                        // This is a workaround until we have the invoice status being returned in the invoice endpoint
                        const isAlreadyFinanced = financedInvoices === null || financedInvoices === void 0 ? void 0 : (_financedInvoices_data = financedInvoices.data) === null || _financedInvoices_data === void 0 ? void 0 : _financedInvoices_data.find((invoice)=>invoice.invoice_id === params.row.id);
                        const shouldDisplayButton = (params.row.status === 'partially_paid' || params.row.status === 'issued') && isServicing && !isAlreadyFinanced;
                        return shouldDisplayButton ? /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "contained",
                            color: "primary",
                            onClick: (event)=>{
                                event.stopPropagation();
                                financeInvoice === null || financeInvoice === void 0 ? void 0 : financeInvoice(params.row.id);
                            },
                            sx: {
                                py: 1.25,
                                px: 1.5,
                                height: 32,
                                fontSize: 14
                            },
                            children: isFinancingAnInvoice ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                size: 14
                            }) : i18n._({
                                id: "Tjcddd"
                            })
                        }) : null;
                    }
                }
            ] : [],
            ...invoiceActionCell ? [
                invoiceActionCell
            ] : []
        ];
    }, [
        formatCurrencyToDisplay,
        i18n,
        invoiceActionCell,
        locale.dateFormat,
        isUSEntity,
        financeInvoice,
        isFinancingAnInvoice,
        isServicing,
        financedInvoices
    ]);
    const gridApiRef = useAutosizeGridColumns(invoices === null || invoices === void 0 ? void 0 : invoices.data, columns, areCounterpartsLoading, // eslint-disable-next-line lingui/no-unlocalized-strings
    'InvoicesTable');
    const isFiltering = Object.keys(filters).some((key)=>filters[key] !== null && filters[key] !== undefined);
    const isSearching = !!filters['document_id__contains'];
    const className = 'Monite-InvoicesTable';
    var _invoices_data;
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px',
            paddingTop: 2,
            gap: 2,
            px: 1.5
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(ReceivableFilters, {
                filters: filters,
                onChange: (field, value)=>{
                    setPaginationToken(undefined);
                    onChangeFilter(field, value);
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FinanceBanner, {}),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: sortModel && [
                            sortModel
                        ]
                    }
                },
                apiRef: gridApiRef,
                rowSelection: false,
                disableColumnFilter: true,
                loading: isLoading,
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id);
                    }
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.receivables.pageSizeOptions,
                            nextPage: invoices === null || invoices === void 0 ? void 0 : invoices.next_pagination_token,
                            prevPage: invoices === null || invoices === void 0 ? void 0 : invoices.prev_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: paginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setPaginationToken(page !== null && page !== void 0 ? page : undefined);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (invoices === null || invoices === void 0 ? void 0 : invoices.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            onCreate: ()=>setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true),
                            refetch: refetch,
                            entityName: i18n._({
                                id: "F7nA5/"
                            }),
                            actionButtonLabel: i18n._({
                                id: "ZC4IiQ"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "IuMGvq"
                                })
                            ],
                            type: "no-data"
                        })
                },
                columns: columns,
                rows: (_invoices_data = invoices === null || invoices === void 0 ? void 0 : invoices.data) !== null && _invoices_data !== void 0 ? _invoices_data : []
            })
        ]
    });
};
const InvoiceRecurrenceStatusChipLoader = ({ recurrenceId })=>{
    const { api } = useMoniteContext();
    const { data: recurrence, isLoading } = api.recurrences.getRecurrencesId.useQuery({
        path: {
            recurrence_id: recurrenceId
        }
    });
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "rounded",
            width: "100%",
            sx: {
                display: 'inline-block'
            }
        });
    }
    if (!(recurrence === null || recurrence === void 0 ? void 0 : recurrence.status)) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(InvoiceRecurrenceStatusChip, {
        status: recurrence.status
    });
};

function _define_property$1B(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1A(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1B(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$17(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$17(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$17(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const QuotesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(QuotesTableBase, _object_spread$1A({}, props))
    });
const QuotesTableBase = ({ onRowClick, onChangeSort: onChangeSortCallback, setIsCreateInvoiceDialogOpen, query, filters: filtersProp })=>{
    var _componentSettings_receivables_pageSizeOptions;
    const { i18n } = react.useLingui();
    const { locale, componentSettings } = useMoniteContext();
    const [paginationToken, setPaginationToken] = React.useState(undefined);
    var _componentSettings_receivables_pageSizeOptions_;
    const [pageSize, setPageSize] = React.useState((_componentSettings_receivables_pageSizeOptions_ = (_componentSettings_receivables_pageSizeOptions = componentSettings.receivables.pageSizeOptions) === null || _componentSettings_receivables_pageSizeOptions === void 0 ? void 0 : _componentSettings_receivables_pageSizeOptions[0]) !== null && _componentSettings_receivables_pageSizeOptions_ !== void 0 ? _componentSettings_receivables_pageSizeOptions_ : 15);
    var _query_sort, _query_order;
    const [sortModel, setSortModel] = React.useState({
        field: (_query_sort = query === null || query === void 0 ? void 0 : query.sort) !== null && _query_sort !== void 0 ? _query_sort : 'created_at',
        sort: (_query_order = query === null || query === void 0 ? void 0 : query.order) !== null && _query_order !== void 0 ? _query_order : 'desc'
    });
    const { formatCurrencyToDisplay } = useCurrencies();
    const { onChangeFilter, filters, filtersQuery } = useReceivablesFilters([
        'document_id__contains',
        'status',
        'counterpart_id'
    ].filter((filter)=>{
        var _filtersProp_includes;
        return (_filtersProp_includes = filtersProp === null || filtersProp === void 0 ? void 0 : filtersProp.includes(filter)) !== null && _filtersProp_includes !== void 0 ? _filtersProp_includes : true;
    }), query);
    const { data: quotes, isLoading, isError, refetch } = useGetReceivables(_object_spread_props$17(_object_spread$1A({}, filtersQuery), {
        sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
        order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
        limit: pageSize,
        pagination_token: paginationToken,
        type: 'quote'
    }));
    const onChangeSort = (models)=>{
        const model = models[0];
        setSortModel(model);
        setPaginationToken(undefined);
        onChangeSortCallback === null || onChangeSortCallback === void 0 ? void 0 : onChangeSortCallback(model);
    };
    const isFiltering = Object.keys(filters).some((key)=>filters[key] !== null && filters[key] !== undefined);
    const isSearching = !!filters['document_id__contains'];
    const areCounterpartsLoading = useAreCounterpartsLoading(quotes === null || quotes === void 0 ? void 0 : quotes.data);
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'document_id',
                headerName: i18n._({
                    id: "HptUxX"
                }),
                width: 100,
                display: 'flex',
                renderCell: ({ value })=>/*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        direction: "column",
                        alignItems: "flex-start",
                        gap: 0.5,
                        sx: {
                            maxWidth: '100%',
                            '& > *': {
                                maxWidth: '100%'
                            }
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            className: "Monite-TextOverflowContainer",
                            children: value || i18n._({
                                id: "IounKn"
                            })
                        })
                    })
            },
            {
                field: 'status',
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                width: 140,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                        status: params.value
                    })
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "45O6zJ"
                }),
                width: 140,
                valueFormatter: (value)=>value ? i18n.date(value, locale.dateFormat) : '—'
            },
            {
                field: 'issue_date',
                headerName: i18n._({
                    id: "M1cChr"
                }),
                width: 120,
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat)
            },
            {
                field: 'counterpart_name',
                sortable: ReceivableCursorFields.includes('counterpart_name'),
                headerName: i18n._({
                    id: "876pfE"
                }),
                width: defaultCounterpartColumnWidth,
                display: 'flex',
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCellById, {
                        counterpartId: params.row.counterpart_id
                    })
            },
            {
                field: 'expiry_date',
                sortable: false,
                headerName: i18n._({
                    id: "XicmhT"
                }),
                width: 120,
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat),
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(DueDateCell, {
                        data: params.row
                    })
            },
            {
                field: 'amount',
                headerName: i18n._({
                    id: "hehnjM"
                }),
                headerAlign: 'right',
                align: 'right',
                sortable: ReceivableCursorFields.includes('amount'),
                width: 120,
                valueGetter: (_, row)=>{
                    const value = row.total_amount;
                    return value ? formatCurrencyToDisplay(value, row.currency) : '';
                }
            }
        ];
    }, [
        locale.dateFormat,
        formatCurrencyToDisplay,
        i18n
    ]);
    const gridApiRef = useAutosizeGridColumns(quotes === null || quotes === void 0 ? void 0 : quotes.data, columns, areCounterpartsLoading, // eslint-disable-next-line lingui/no-unlocalized-strings
    'QuotesTable');
    if (!isLoading && (quotes === null || quotes === void 0 ? void 0 : quotes.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "GmhwUJ"
            }),
            descriptionLine1: i18n._({
                id: "3AlHxr"
            }),
            descriptionLine2: i18n._({
                id: "erOoDj"
            }),
            actionButtonLabel: i18n._({
                id: "YFGreB"
            }),
            actionOptions: [
                i18n._({
                    id: "IuMGvq"
                })
            ],
            onAction: (action)=>{
                if (action === i18n._({
                    id: "IuMGvq"
                })) {
                    setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true);
                }
            },
            type: "no-data"
        });
    }
    const className = 'Monite-QuotesTable';
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px',
            paddingTop: 2
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(ReceivableFilters, {
                onChange: onChangeFilter,
                filters: filters
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: [
                            sortModel
                        ]
                    }
                },
                apiRef: gridApiRef,
                rowSelection: false,
                disableColumnFilter: true,
                loading: isLoading,
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id);
                    }
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.receivables.pageSizeOptions,
                            nextPage: quotes === null || quotes === void 0 ? void 0 : quotes.next_pagination_token,
                            prevPage: quotes === null || quotes === void 0 ? void 0 : quotes.prev_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: paginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setPaginationToken(page !== null && page !== void 0 ? page : undefined);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (quotes === null || quotes === void 0 ? void 0 : quotes.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            refetch: refetch,
                            entityName: i18n._({
                                id: "eWLklq"
                            }),
                            actionButtonLabel: i18n._({
                                id: "YFGreB"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "IuMGvq"
                                })
                            ],
                            onCreate: (type)=>{
                                if (type === i18n._({
                                    id: "IuMGvq"
                                })) {
                                    setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true);
                                }
                            },
                            type: "no-data"
                        })
                },
                columns: columns,
                rows: (quotes === null || quotes === void 0 ? void 0 : quotes.data) || []
            })
        ]
    });
};

function _define_property$1A(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1A(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$16(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$16(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$16(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CreditNotesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(CreditNotesTableBase, _object_spread$1z({}, props))
    });
const CreditNotesTableBase = ({ onRowClick, setIsCreateInvoiceDialogOpen, query, filters: filtersProp })=>{
    var _componentSettings_receivables_pageSizeOptions;
    const { i18n } = react.useLingui();
    const { locale, componentSettings } = useMoniteContext();
    const [paginationToken, setPaginationToken] = React.useState(undefined);
    var _componentSettings_receivables_pageSizeOptions_;
    const [pageSize, setPageSize] = React.useState((_componentSettings_receivables_pageSizeOptions_ = (_componentSettings_receivables_pageSizeOptions = componentSettings.receivables.pageSizeOptions) === null || _componentSettings_receivables_pageSizeOptions === void 0 ? void 0 : _componentSettings_receivables_pageSizeOptions[0]) !== null && _componentSettings_receivables_pageSizeOptions_ !== void 0 ? _componentSettings_receivables_pageSizeOptions_ : 15);
    var _query_sort, _query_order;
    const [sortModel, setSortModel] = React.useState({
        field: (_query_sort = query === null || query === void 0 ? void 0 : query.sort) !== null && _query_sort !== void 0 ? _query_sort : 'created_at',
        sort: (_query_order = query === null || query === void 0 ? void 0 : query.order) !== null && _query_order !== void 0 ? _query_order : 'desc'
    });
    const { formatCurrencyToDisplay } = useCurrencies();
    const { onChangeFilter, filters, filtersQuery } = useReceivablesFilters([
        'document_id__contains',
        'status',
        'counterpart_id'
    ].filter((filter)=>{
        var _filtersProp_includes;
        return (_filtersProp_includes = filtersProp === null || filtersProp === void 0 ? void 0 : filtersProp.includes(filter)) !== null && _filtersProp_includes !== void 0 ? _filtersProp_includes : true;
    }), query);
    const { data: creditNotes, isLoading, isError, refetch } = useGetReceivables(_object_spread_props$16(_object_spread$1z({}, filtersQuery), {
        sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
        order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
        limit: pageSize,
        pagination_token: paginationToken,
        type: 'credit_note'
    }));
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setPaginationToken(undefined);
    };
    const areCounterpartsLoading = useAreCounterpartsLoading(creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.data);
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'document_id',
                headerName: i18n._({
                    id: "HptUxX"
                }),
                width: 100,
                display: 'flex',
                renderCell: ({ value, row })=>/*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        direction: "column",
                        alignItems: "flex-start",
                        gap: 0.5,
                        sx: {
                            maxWidth: '100%',
                            '& > *': {
                                maxWidth: '100%'
                            }
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                className: "Monite-TextOverflowContainer",
                                children: value || i18n._({
                                    id: "IounKn"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                                status: row.status
                            })
                        ]
                    })
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "45O6zJ"
                }),
                width: 140,
                valueFormatter: (value)=>value ? i18n.date(value, locale.dateFormat) : '—'
            },
            {
                field: 'issue_date',
                headerName: i18n._({
                    id: "X7pkpC"
                }),
                width: 120,
                valueFormatter: (value)=>value && i18n.date(value, locale.dateFormat)
            },
            {
                field: 'counterpart_name',
                headerName: i18n._({
                    id: "876pfE"
                }),
                sortable: ReceivableCursorFields.includes('counterpart_name'),
                width: defaultCounterpartColumnWidth,
                display: 'flex',
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(CounterpartNameCellById, {
                        counterpartId: params.row.counterpart_id
                    })
            },
            {
                field: 'amount',
                headerName: i18n._({
                    id: "hehnjM"
                }),
                headerAlign: 'right',
                align: 'right',
                sortable: ReceivableCursorFields.includes('amount'),
                width: 120,
                valueGetter: (_, row)=>{
                    const value = row.total_amount;
                    return value && formatCurrencyToDisplay(value, row.currency);
                }
            }
        ];
    }, [
        locale.dateFormat,
        formatCurrencyToDisplay,
        i18n
    ]);
    const gridApiRef = useAutosizeGridColumns(creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.data, columns, areCounterpartsLoading, // eslint-disable-next-line lingui/no-unlocalized-strings
    'CreditNotesTable');
    const isFiltering = Object.keys(filters).some((key)=>filters[key] !== null && filters[key] !== undefined);
    const isSearching = !!filters['document_id__contains'];
    if (!isLoading && (creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.data.length) === 0 && !isFiltering && !isSearching) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "SBqADG"
            }),
            descriptionLine1: i18n._({
                id: "Zy/UuU"
            }),
            descriptionLine2: i18n._({
                id: "ZTd+q5"
            }),
            actionButtonLabel: i18n._({
                id: "IFpQdv"
            }),
            actionOptions: [
                i18n._({
                    id: "IuMGvq"
                })
            ],
            onAction: (action)=>{
                if (action === i18n._({
                    id: "IuMGvq"
                })) {
                    setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true);
                }
            },
            type: "no-data"
        });
    }
    const className = 'Monite-CreditNotesTable';
    var _creditNotes_data;
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            className: classNames(ScopedCssBaselineContainerClassName, className),
            sx: {
                display: 'flex',
                flexDirection: 'column',
                overflow: 'hidden',
                height: 'inherit',
                minHeight: '500px',
                paddingTop: 2
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(ReceivableFilters, {
                    onChange: onChangeFilter,
                    filters: filters
                }),
                /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                    initialState: {
                        sorting: {
                            sortModel: [
                                sortModel
                            ]
                        }
                    },
                    apiRef: gridApiRef,
                    rowSelection: false,
                    disableColumnFilter: true,
                    loading: isLoading,
                    onSortModelChange: onChangeSort,
                    onRowClick: (params)=>{
                        if (!hasSelectedText()) {
                            onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row.id);
                        }
                    },
                    slots: {
                        pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                                pageSizeOptions: componentSettings.receivables.pageSizeOptions,
                                nextPage: creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.next_pagination_token,
                                prevPage: creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.prev_pagination_token,
                                paginationModel: {
                                    pageSize,
                                    page: paginationToken
                                },
                                onPaginationModelChange: ({ page, pageSize })=>{
                                    setPageSize(pageSize);
                                    setPaginationToken(page !== null && page !== void 0 ? page : undefined);
                                }
                            }),
                        noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                                isLoading: isLoading,
                                dataLength: (creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.data.length) || 0,
                                isFiltering: isFiltering,
                                isSearching: isSearching,
                                isError: isError,
                                onCreate: ()=>setIsCreateInvoiceDialogOpen === null || setIsCreateInvoiceDialogOpen === void 0 ? void 0 : setIsCreateInvoiceDialogOpen(true),
                                refetch: refetch,
                                entityName: i18n._({
                                    id: "A+xNU6"
                                }),
                                actionButtonLabel: i18n._({
                                    id: "IFpQdv"
                                }),
                                actionOptions: [
                                    i18n._({
                                        id: "IuMGvq"
                                    })
                                ],
                                type: "no-data"
                            })
                    },
                    columns: columns,
                    rows: (_creditNotes_data = creditNotes === null || creditNotes === void 0 ? void 0 : creditNotes.data) !== null && _creditNotes_data !== void 0 ? _creditNotes_data : []
                })
            ]
        })
    });
};

function _define_property$1z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1z(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$15(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$15(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$15(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$m(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$m(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$m(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Calendar(_param) {
    var { className, classNames, showOutsideDays = true, captionLayout = 'label', buttonVariant = 'ghost', formatters, components } = _param, props = _object_without_properties$m(_param, [
        "className",
        "classNames",
        "showOutsideDays",
        "captionLayout",
        "buttonVariant",
        "formatters",
        "components"
    ]);
    const defaultClassNames = reactDayPicker.getDefaultClassNames();
    return /*#__PURE__*/ jsxRuntime.jsx(reactDayPicker.DayPicker, _object_spread$1y({
        showOutsideDays: showOutsideDays,
        className: cn('mtw:bg-background mtw:group/calendar mtw:p-3 mtw:[--cell-size:--spacing(8)] mtw:[[data-slot=card-content]_&]:bg-transparent mtw:[[data-slot=popover-content]_&]:bg-transparent', String.raw`rtl:**:[.rdp-button\_next>svg]:rotate-180`, String.raw`rtl:**:[.rdp-button\_previous>svg]:rotate-180`, className),
        captionLayout: captionLayout,
        formatters: _object_spread$1y({
            formatMonthDropdown: (date)=>date.toLocaleString('default', {
                    month: 'short'
                })
        }, formatters),
        classNames: _object_spread$1y({
            root: cn('mtw:w-fit', defaultClassNames.root),
            months: cn('mtw:flex mtw:gap-4 mtw:flex-col mtw:md:flex-row mtw:relative', defaultClassNames.months),
            month: cn('mtw:flex mtw:flex-col mtw:w-full mtw:gap-4', defaultClassNames.month),
            nav: cn('mtw:flex mtw:items-center mtw:gap-1 mtw:w-full mtw:absolute mtw:top-0 mtw:inset-x-0 mtw:justify-between', defaultClassNames.nav),
            button_previous: cn(buttonVariants({
                variant: buttonVariant
            }), 'mtw:size-(--cell-size) mtw:aria-disabled:opacity-50 mtw:p-0 mtw:select-none', defaultClassNames.button_previous),
            button_next: cn(buttonVariants({
                variant: buttonVariant
            }), 'mtw:size-(--cell-size) mtw:aria-disabled:opacity-50 mtw:p-0 mtw:select-none', defaultClassNames.button_next),
            month_caption: cn('mtw:flex mtw:items-center mtw:justify-center mtw:h-(--cell-size) mtw:w-full mtw:px-(--cell-size)', defaultClassNames.month_caption),
            dropdowns: cn('mtw:w-full mtw:flex mtw:items-center mtw:text-sm mtw:font-medium mtw:justify-center mtw:h-(--cell-size) mtw:gap-1.5', defaultClassNames.dropdowns),
            dropdown_root: cn('mtw:relative mtw:has-focus:border-ring mtw:border mtw:border-input mtw:shadow-xs mtw:has-focus:ring-ring/50 mtw:has-focus:ring-[3px] mtw:rounded-md', defaultClassNames.dropdown_root),
            dropdown: cn('mtw:absolute mtw:bg-popover mtw:inset-0 mtw:opacity-0', defaultClassNames.dropdown),
            caption_label: cn('mtw:select-none mtw:font-medium', captionLayout === 'label' ? 'mtw:text-sm' : 'mtw:rounded-md mtw:pl-2 mtw:pr-1 mtw:flex mtw:items-center mtw:gap-1 mtw:text-sm mtw:h-8 mtw:[&>svg]:text-muted-foreground mtw:[&>svg]:size-3.5', defaultClassNames.caption_label),
            table: 'mtw:w-full mtw:border-collapse',
            weekdays: cn('mtw:flex', defaultClassNames.weekdays),
            weekday: cn('mtw:text-muted-foreground mtw:rounded-md mtw:flex-1 mtw:font-normal mtw:text-[0.8rem] mtw:select-none', defaultClassNames.weekday),
            week: cn('mtw:flex mtw:w-full mtw:mt-2', defaultClassNames.week),
            week_number_header: cn('mtw:select-none mtw:w-(--cell-size)', defaultClassNames.week_number_header),
            week_number: cn('mtw:text-[0.8rem] mtw:select-none mtw:text-muted-foreground', defaultClassNames.week_number),
            day: cn('mtw:relative mtw:w-full mtw:h-full mtw:p-0 mtw:text-center mtw:[&:first-child[data-selected=true]_button]:rounded-l-md mtw:[&:last-child[data-selected=true]_button]:rounded-r-md mtw:group/day mtw:aspect-square mtw:select-none', defaultClassNames.day),
            range_start: cn('mtw:rounded-l-md mtw:bg-accent', defaultClassNames.range_start),
            range_middle: cn('mtw:rounded-none', defaultClassNames.range_middle),
            range_end: cn('mtw:rounded-r-md mtw:bg-accent', defaultClassNames.range_end),
            today: cn('mtw:bg-accent mtw:text-accent-foreground mtw:rounded-md mtw:data-[selected=true]:rounded-none', defaultClassNames.today),
            outside: cn('mtw:text-muted-foreground mtw:aria-selected:text-muted-foreground', defaultClassNames.outside),
            disabled: cn('mtw:text-muted-foreground mtw:opacity-50', defaultClassNames.disabled),
            hidden: cn('mtw:invisible', defaultClassNames.hidden)
        }, classNames),
        components: _object_spread$1y({
            Root: (_param)=>{
                var { className, rootRef } = _param, props = _object_without_properties$m(_param, [
                    "className",
                    "rootRef"
                ]);
                return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$1y({
                    "data-slot": "calendar",
                    ref: rootRef,
                    className: cn(className)
                }, props));
            },
            Chevron: (_param)=>{
                var { className, orientation } = _param, props = _object_without_properties$m(_param, [
                    "className",
                    "orientation"
                ]);
                if (orientation === 'left') {
                    return /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronLeftIcon, _object_spread$1y({
                        className: cn('mtw:size-4', className)
                    }, props));
                }
                if (orientation === 'right') {
                    return /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronRightIcon, _object_spread$1y({
                        className: cn('mtw:size-4', className)
                    }, props));
                }
                return /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, _object_spread$1y({
                    className: cn('mtw:size-4', className)
                }, props));
            },
            DayButton: CalendarDayButton,
            WeekNumber: (_param)=>{
                var { children } = _param, props = _object_without_properties$m(_param, [
                    "children"
                ]);
                return /*#__PURE__*/ jsxRuntime.jsx("td", _object_spread_props$15(_object_spread$1y({}, props), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:flex mtw:size-(--cell-size) mtw:items-center mtw:justify-center mtw:text-center",
                        children: children
                    })
                }));
            }
        }, components)
    }, props));
}
function CalendarDayButton(_param) {
    var { className, day, modifiers } = _param, props = _object_without_properties$m(_param, [
        "className",
        "day",
        "modifiers"
    ]);
    const defaultClassNames = reactDayPicker.getDefaultClassNames();
    const ref = React__namespace.useRef(null);
    React__namespace.useEffect(()=>{
        var _ref_current;
        if (modifiers.focused) (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.focus();
    }, [
        modifiers.focused
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(Button, _object_spread$1y({
        ref: ref,
        variant: "ghost",
        size: "icon",
        "data-day": day.date.toLocaleDateString(),
        "data-selected-single": modifiers.selected && !modifiers.range_start && !modifiers.range_end && !modifiers.range_middle,
        "data-range-start": modifiers.range_start,
        "data-range-end": modifiers.range_end,
        "data-range-middle": modifiers.range_middle,
        className: cn('mtw:data-[selected-single=true]:bg-primary mtw:data-[selected-single=true]:text-primary-foreground mtw:data-[range-middle=true]:bg-accent mtw:data-[range-middle=true]:text-accent-foreground mtw:data-[range-start=true]:bg-primary mtw:data-[range-start=true]:text-primary-foreground mtw:data-[range-end=true]:bg-primary mtw:data-[range-end=true]:text-primary-foreground mtw:group-data-[focused=true]/day:border-ring mtw:group-data-[focused=true]/day:ring-ring/50 mtw:dark:hover:text-accent-foreground mtw:flex mtw:aspect-square mtw:size-auto mtw:w-full mtw:min-w-(--cell-size) mtw:flex-col mtw:gap-1 mtw:leading-none mtw:font-normal mtw:group-data-[focused=true]/day:relative mtw:group-data-[focused=true]/day:z-1300 mtw:group-data-[focused=true]/day:ring-[3px] mtw:data-[range-end=true]:rounded-md mtw:data-[range-end=true]:rounded-r-md mtw:data-[range-middle=true]:rounded-none mtw:data-[range-start=true]:rounded-md mtw:data-[range-start=true]:rounded-l-md mtw:[&>span]:text-xs mtw:[&>span]:opacity-70', defaultClassNames.day, className)
    }, props));
}

function _define_property$1y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1x(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1y(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$14(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$14(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$14(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function DatePicker(props) {
    const [open, setOpen] = React__namespace.useState(false);
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(Popover, {
        open: open,
        onOpenChange: setOpen,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PopoverTrigger, {
                asChild: true,
                children: /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                    variant: "outline",
                    id: "date",
                    disabled: Boolean(props.shouldDisableButton),
                    className: "mtw:w-full mtw:justify-between mtw:font-normal mtw:border-border",
                    children: [
                        props.selected ? props.selected.toLocaleDateString() : i18n._({
                            id: "XEb3iO"
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Calendar, {})
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(PopoverContent, {
                className: "mtw:w-auto mtw:overflow-hidden mtw:p-0",
                align: "start",
                children: /*#__PURE__*/ jsxRuntime.jsx(Calendar, _object_spread_props$14(_object_spread$1x({}, props), {
                    mode: "single",
                    captionLayout: "dropdown",
                    onSelect: (date)=>{
                        props.onSelect(date);
                        setOpen(false);
                    }
                }))
            })
        ]
    });
}

function _define_property$1x(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1w(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1x(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$13(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$13(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$13(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const RecurrenceFormContent = ({ isUpdate = false })=>{
    const { control, watch, setValue } = reactHookForm.useFormContext();
    const { i18n } = react.useLingui();
    const recurrenceStartDateValue = watch('recurrence_start_date');
    const recurrenceIssueMode = watch('recurrence_issue_mode');
    const recurrenceStartDate = recurrenceStartDateValue ? new Date(recurrenceStartDateValue) : undefined;
    const isDateDisabled = (date)=>{
        if (!recurrenceIssueMode) return false;
        const dayOfMonth = date.getDate();
        const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
        if (recurrenceIssueMode === 'first_day') {
            return dayOfMonth !== 1;
        } else if (recurrenceIssueMode === 'last_day') {
            return dayOfMonth !== lastDayOfMonth;
        }
        return false;
    };
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-6",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                control: control,
                name: "recurrence_issue_mode",
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        className: "mtw:flex-1",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "HSIt19"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(Select, {
                                disabled: isUpdate,
                                onValueChange: (value)=>{
                                    field.onChange(value);
                                    setValue('recurrence_start_date', undefined);
                                    setValue('recurrence_end_date', undefined);
                                },
                                value: field.value,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(SelectTrigger, {
                                            className: "mtw:w-full",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(SelectValue, {
                                                className: "mtw:max-w-4/5 mtw:text-ellipsis mtw:whitespace-nowrap"
                                            })
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(SelectContent, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(SelectItem, {
                                                value: "first_day",
                                                children: i18n._({
                                                    id: "5xxFrU"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(SelectItem, {
                                                value: "last_day",
                                                children: i18n._({
                                                    id: "2ySTC3"
                                                })
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-start mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                        control: control,
                        name: "recurrence_start_date",
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                className: "mtw:flex-1",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                        children: i18n._({
                                            id: "7EOx4l"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(DatePicker, _object_spread$1w(_object_spread_props$13(_object_spread$1w({}, field), {
                                            selected: field.value ? new Date(field.value) : undefined,
                                            onSelect: field.onChange,
                                            showOutsideDays: false,
                                            disabled: isDateDisabled,
                                            shouldDisableButton: isUpdate,
                                            startMonth: new Date(),
                                            endMonth: new Date(2050, 11)
                                        }), isUpdate && field.value ? {
                                            defaultMonth: new Date(field.value)
                                        } : {}))
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                ]
                            })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                        control: control,
                        name: "recurrence_end_date",
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                className: "mtw:flex-1",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                        children: i18n._({
                                            id: "t309pR"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(DatePicker, _object_spread$1w(_object_spread_props$13(_object_spread$1w({}, field), {
                                            selected: field.value ? new Date(field.value) : undefined,
                                            onSelect: field.onChange,
                                            showOutsideDays: false,
                                            disabled: isDateDisabled,
                                            startMonth: recurrenceStartDate ? new Date(recurrenceStartDate.getFullYear(), recurrenceStartDate.getMonth() + 2, 0) : new Date(),
                                            endMonth: new Date(2050, 11)
                                        }), isUpdate && field.value ? {
                                            defaultMonth: new Date(field.value)
                                        } : {}))
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                ]
                            })
                    })
                ]
            })
        ]
    });
};

const RecurrenceSection = ({ isRecurrenceEnabled, toggleRecurrence })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs("section", {
        className: "mtw:flex mtw:flex-col mtw:gap-6 mtw:pb-10",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center mtw:gap-3",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h3", {
                        className: "mtw:text-base mtw:font-medium ",
                        children: i18n._({
                            id: "7ISoDV"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                        checked: isRecurrenceEnabled,
                        onChange: ()=>{
                            toggleRecurrence();
                        },
                        color: "primary",
                        "aria-label": i18n._({
                            id: "B7zEcF"
                        })
                    })
                ]
            }),
            isRecurrenceEnabled && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-foreground",
                        children: i18n._({
                            id: "wXnGnw"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(RecurrenceFormContent, {}),
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-muted-foreground",
                        children: i18n._({
                            id: "YWbcjD"
                        })
                    })
                ]
            })
        ]
    });
};

/**
 * Custom hook to manage the registration and execution of a line item cleanup function,
 * used before submitting a form containing line items (e.g., in invoices).
 */ const useLineItemSubmitCleanup = ()=>{
    const lineItemCleanupFnRef = React.useRef(null);
    const registerLineItemCleanupFn = React.useCallback((fn)=>{
        lineItemCleanupFnRef.current = fn;
    }, []);
    const runLineItemCleanup = React.useCallback(()=>{
        var _lineItemCleanupFnRef_current;
        (_lineItemCleanupFnRef_current = lineItemCleanupFnRef.current) === null || _lineItemCleanupFnRef_current === void 0 ? void 0 : _lineItemCleanupFnRef_current.call(lineItemCleanupFnRef);
    }, []);
    return {
        registerLineItemCleanupFn,
        runLineItemCleanup
    };
};

function _define_property$1w(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1v(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1w(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$12(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$12(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$12(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const EntitySection = ({ disabled, visibleFields })=>{
    const { i18n } = react.useLingui();
    const { control } = reactHookForm.useFormContext();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "caption",
                color: "textSecondary",
                sx: {
                    lineHeight: 2
                },
                children: i18n._({
                    id: "Kbwvno"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                name: "memo",
                control: control,
                render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                        variant: "outlined",
                        fullWidth: true,
                        required: true,
                        disabled: disabled,
                        sx: {
                            mb: 2
                        },
                        error: Boolean(error),
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$12(_object_spread$1v({}, field), {
                            placeholder: i18n._({
                                id: "ag4gw/"
                            }),
                            multiline: true,
                            minRows: 2,
                            fullWidth: true,
                            sx: {
                                '& .MuiInputBase-root': {
                                    background: 'white'
                                }
                            },
                            error: Boolean(error)
                        }))
                    })
            }),
            (visibleFields === null || visibleFields === void 0 ? void 0 : visibleFields.isFooterShown) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "caption",
                        color: "textSecondary",
                        sx: {
                            lineHeight: 2
                        },
                        children: i18n._({
                            id: "OlnOso"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "footer",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                                variant: "outlined",
                                fullWidth: true,
                                disabled: disabled,
                                sx: {
                                    mb: 2
                                },
                                error: Boolean(error),
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$12(_object_spread$1v({}, field), {
                                    placeholder: i18n._({
                                        id: "whqkbS"
                                    }),
                                    multiline: true,
                                    minRows: 2,
                                    fullWidth: true,
                                    sx: {
                                        '& .MuiInputBase-root': {
                                            background: 'white'
                                        }
                                    },
                                    error: Boolean(error)
                                }))
                            })
                    })
                ]
            }),
            (visibleFields === null || visibleFields === void 0 ? void 0 : visibleFields.isPurchaseOrderShown) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "caption",
                        color: "textSecondary",
                        sx: {
                            lineHeight: 2
                        },
                        children: i18n._({
                            id: "cShSqt"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "purchase_order",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                                variant: "standard",
                                fullWidth: true,
                                required: true,
                                disabled: disabled,
                                sx: {
                                    mb: 2
                                },
                                error: Boolean(error),
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$12(_object_spread$1v({}, field), {
                                    placeholder: i18n._({
                                        id: "rSRyAh"
                                    }),
                                    fullWidth: true,
                                    error: Boolean(error)
                                }))
                            })
                    })
                ]
            }),
            (visibleFields === null || visibleFields === void 0 ? void 0 : visibleFields.isTermsAndConditionsShown) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "caption",
                        color: "textSecondary",
                        sx: {
                            lineHeight: 2
                        },
                        children: i18n._({
                            id: "PrLJUa"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "terms_and_conditions",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                                variant: "standard",
                                fullWidth: true,
                                required: true,
                                disabled: disabled,
                                error: Boolean(error),
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$12(_object_spread$1v({}, field), {
                                    placeholder: i18n._({
                                        id: "MwcOtB"
                                    }),
                                    multiline: true,
                                    minRows: 2,
                                    fullWidth: true,
                                    error: Boolean(error)
                                }))
                            })
                    })
                ]
            })
        ]
    });
};

const ConfirmDeleteMeasureUnitDialogue = ({ onClose, onDelete, name, isLoading, open, id })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: products, isLoading: isLoadingProducts } = api.products.getProducts.useQuery({
        query: {
            measure_unit_id: id
        }
    }, {
        enabled: !!id
    });
    const isEmpty = (products === null || products === void 0 ? void 0 : products.data.length) === 0;
    const renderContent = ()=>{
        if (isEmpty) {
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogContentText, {
                        children: i18n._({
                            id: "m8DPX1"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogContentText, {
                        sx: {
                            fontWeight: 400,
                            mb: 2
                        },
                        children: i18n._({
                            id: "DL/UVt"
                        })
                    })
                ]
            });
        }
        return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogContentText, {
                    children: i18n._({
                        id: "zpyHOK"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogContentText, {
                    sx: {
                        fontWeight: 400,
                        mb: 2
                    },
                    children: i18n._({
                        id: "tWlxkZ"
                    })
                }),
                isLoadingProducts && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                    sx: {
                        margin: 'auto'
                    }
                }),
                !isLoadingProducts && /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                        children: products === null || products === void 0 ? void 0 : products.data.map((p)=>{
                            var _p_price, _p_price1;
                            return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        sx: {
                                            p: 1,
                                            pl: 0
                                        },
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            children: p.name
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                        sx: {
                                            p: 1,
                                            pr: 0
                                        },
                                        align: "right",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            children: p.price && formatCurrencyToDisplay((_p_price = p.price) === null || _p_price === void 0 ? void 0 : _p_price.value, (_p_price1 = p.price) === null || _p_price1 === void 0 ? void 0 : _p_price1.currency)
                                        })
                                    })
                                ]
                            }, p.id);
                        })
                    })
                })
            ]
        });
    };
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open,
        title: isEmpty ? i18n._({
            id: "UkonCq",
            values: {
                name: name
            }
        }) : i18n._({
            id: "lKH9fP",
            values: {
                name: name
            }
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: onClose,
        onConfirm: onDelete,
        isLoading: isLoading || isLoadingProducts,
        children: renderContent()
    });
};

const TableActions = ({ onEdit, onDelete, permissions })=>{
    const { i18n } = react.useLingui();
    if (!(permissions.isUpdateAllowed || permissions.isDeleteAllowed)) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                asChild: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                    "aria-label": "actions-menu-button",
                    children: /*#__PURE__*/ jsxRuntime.jsx(MoreVertIcon__default.default, {
                        fontSize: "small"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                align: "end",
                children: [
                    permissions.isUpdateAllowed && /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuItem, {
                        onClick: onEdit,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(EditIcon__default.default, {
                                fontSize: "small"
                            }),
                            i18n._({
                                id: "ePK91l"
                            })
                        ]
                    }),
                    permissions.isDeleteAllowed && /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuItem, {
                        onClick: onDelete,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {
                                fontSize: "small"
                            }),
                            i18n._({
                                id: "cnGeoo"
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

const getValidationSchema$1 = (i18n)=>zod.z.object({
        name: zod.z.string().trim().min(1, i18n._({
            id: "5qUwEB"
        })),
        description: zod.z.string().trim().optional()
    });

function asyncGeneratorStep$A(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$A(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$A(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$A(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1v(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1u(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1v(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$11(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$11(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$11(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const defaultValues = {
    name: '',
    description: ''
};
const buttonStyle = {
    '&:hover': {
        borderRadius: '8px',
        background: '#F8F8FF'
    },
    background: '#EBEBFF',
    color: '#3737FF',
    borderRadius: '8px',
    height: '32px'
};
const MeasureUnitsFormRow = ({ id, isEditMode, initialValues = defaultValues, onCancel, onEdit })=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    const validationSchema = getValidationSchema$1(i18n);
    const { handleSubmit, control, reset, setError } = reactHookForm.useForm({
        defaultValues: initialValues,
        resolver: zod$1.zodResolver(validationSchema)
    });
    const createMutation = api.measureUnits.postMeasureUnits.useMutation({}, {
        onSuccess: (data)=>_async_to_generator$A(function*() {
                yield api.measureUnits.getMeasureUnits.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "ha5oW+",
                    values: {
                        0: data.name
                    }
                }));
                reset();
            })(),
        onError: (error)=>_async_to_generator$A(function*() {
                const errorMessage = getAPIErrorMessage(i18n, error);
                if (errorMessage.includes('already exists')) {
                    setError('name', {
                        type: 'custom',
                        message: errorMessage
                    });
                    return;
                } else {
                    reactHotToast.toast.error(errorMessage);
                }
            })()
    });
    const updateMutation = api.measureUnits.patchMeasureUnitsId.useMutation({
        path: {
            unit_id: id
        }
    }, {
        onSuccess: (data)=>_async_to_generator$A(function*() {
                yield Promise.all([
                    api.measureUnits.getMeasureUnits.invalidateQueries(queryClient),
                    api.measureUnits.getMeasureUnitsId.invalidateQueries({
                        parameters: {
                            path: {
                                unit_id: id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "lRF0rw",
                    values: {
                        0: data.name
                    }
                }));
                onEdit === null || onEdit === void 0 ? void 0 : onEdit();
            })(),
        onError: (error)=>{
            const errorMessage = getAPIErrorMessage(i18n, error);
            if (errorMessage.includes('already exists')) {
                setError('name', {
                    type: 'custom',
                    message: errorMessage
                });
                return;
            } else {
                reactHotToast.toast.error(errorMessage);
            }
        }
    });
    const handleEdit = (values)=>{
        if (!isEditMode || !id) {
            console.error('handleEdit called without valid id or edit mode');
            return;
        }
        updateMutation.mutate(values);
    };
    const handleCreate = (values)=>{
        createMutation.mutate(values);
    };
    const isSubmitting = createMutation.isPending || updateMutation.isPending;
    return /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
        children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
            colSpan: 3,
            sx: {
                width: '100%'
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                direction: "row",
                spacing: 1,
                sx: {
                    justifyContent: 'space-between',
                    alignItems: 'flex-start'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "name",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$11(_object_spread$1u({}, field), {
                                disabled: isSubmitting,
                                error: Boolean(error),
                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                sx: {
                                    width: '30%'
                                },
                                InputProps: {
                                    sx: {
                                        borderRadius: '8px',
                                        height: '32px',
                                        minHeight: '32px!important'
                                    }
                                },
                                FormHelperTextProps: {
                                    sx: {
                                        margin: '4px'
                                    }
                                }
                            }))
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "description",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$11(_object_spread$1u({}, field), {
                                id: field.name,
                                disabled: isSubmitting,
                                error: Boolean(error),
                                helperText: error === null || error === void 0 ? void 0 : error.message,
                                size: "small",
                                sx: {
                                    width: '60%'
                                },
                                InputProps: {
                                    sx: {
                                        borderRadius: '8px',
                                        height: '32px',
                                        minHeight: '32px!important'
                                    }
                                }
                            }))
                    }),
                    isEditMode ? /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        display: "flex",
                        flexDirection: "row",
                        justifyContent: "center",
                        gap: 0.5,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                color: "primary",
                                sx: buttonStyle,
                                disabled: updateMutation.isPending,
                                onClick: handleSubmit(handleEdit),
                                children: /*#__PURE__*/ jsxRuntime.jsx(CheckIcon__default.default, {
                                    sx: {
                                        fontSize: '16px'
                                    }
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                color: "primary",
                                sx: buttonStyle,
                                onClick: onCancel,
                                children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {
                                    sx: {
                                        fontSize: '16px'
                                    }
                                })
                            })
                        ]
                    }) : /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        color: "primary",
                        variant: "outlined",
                        size: "small",
                        sx: buttonStyle,
                        onClick: handleSubmit(handleCreate),
                        children: i18n._({
                            id: "m16xKo"
                        })
                    })
                ]
            })
        })
    });
};

function asyncGeneratorStep$z(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$z(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$z(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$z(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const ManageMeasureUnitsForm = ()=>{
    var _measureUnits_data;
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    const [editingUnit, setEditingUnit] = React.useState(null);
    const [deletingUnit, setDeletingUnit] = React.useState(null);
    const showDeleteDialog = !!deletingUnit;
    const [search, setSearch] = React.useState('');
    const { data: measureUnits, isLoading: measureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const filteredUnits = (measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : _measureUnits_data.filter((unit)=>unit.name.toLowerCase().includes(search.toLowerCase()) || unit.description && unit.description.toLowerCase().includes(search.toLowerCase()))) || [];
    const deleteUnitMutation = api.measureUnits.deleteMeasureUnitsId.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$z(function*() {
                if (deletingUnit) {
                    yield api.measureUnits.getMeasureUnits.invalidateQueries(queryClient);
                    reactHotToast.toast.success(i18n._({
                        id: "Ty2Tu/",
                        values: {
                            0: deletingUnit.name
                        }
                    }));
                }
            })(),
        onError: (error)=>{
            console.error(error);
            reactHotToast.toast.error(i18n._({
                id: "vaWO6R"
            }));
        }
    });
    const handleOpenDeleteDialog = React.useCallback((unit)=>{
        setDeletingUnit(unit);
    }, []);
    const handleCloseDeleteDialog = React.useCallback(()=>{
        setDeletingUnit(null);
    }, []);
    const deleteUnit = React.useCallback(()=>{
        if (!deletingUnit) {
            return;
        }
        deleteUnitMutation.mutate({
            path: {
                unit_id: deletingUnit.id
            }
        }, {
            onSuccess: ()=>handleCloseDeleteDialog()
        });
    }, [
        deleteUnitMutation,
        deletingUnit,
        handleCloseDeleteDialog
    ]);
    const isDeleteLoading = deleteUnitMutation.isPending;
    const handleCancelEdit = ()=>{
        setEditingUnit(null);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        spacing: 2,
        sx: {
            height: '100%'
        },
        children: [
            measureUnitsLoading || isDeleteLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    display: 'flex',
                    justifyContent: 'center',
                    alignItems: 'center',
                    height: '100%'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                    size: 40,
                    color: "secondary"
                })
            }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
                        variant: "outlined",
                        placeholder: i18n._({
                            id: "A1taO8"
                        }),
                        fullWidth: true,
                        onChange: (e)=>setSearch(e.target.value),
                        InputProps: {
                            startAdornment: /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                                position: "end",
                                children: /*#__PURE__*/ jsxRuntime.jsx(SearchIcon__default.default, {
                                    fontSize: "medium"
                                })
                            })
                        },
                        sx: {
                            '& .MuiOutlinedInput-root': {
                                borderRadius: '20px'
                            }
                        }
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Paper, {
                        variant: "outlined",
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    width: '30%'
                                                },
                                                children: i18n._({
                                                    id: "Gcj//v"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    width: '60%'
                                                },
                                                children: i18n._({
                                                    id: "Fxf4jq"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    width: '10%'
                                                }
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(MeasureUnitsFormRow, {
                                            isEditMode: false
                                        }),
                                        filteredUnits.map((unit)=>(editingUnit === null || editingUnit === void 0 ? void 0 : editingUnit.id) === unit.id ? /*#__PURE__*/ jsxRuntime.jsx(MeasureUnitsFormRow, {
                                                isEditMode: true,
                                                initialValues: unit,
                                                onCancel: handleCancelEdit,
                                                onEdit: ()=>setEditingUnit(null),
                                                id: unit.id
                                            }, unit.id) : /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                                hover: true,
                                                sx: {
                                                    '&.MuiTableRow-root': {
                                                        cursor: 'pointer'
                                                    }
                                                },
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        sx: {
                                                            width: '30%'
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                            variant: "body1",
                                                            fontWeight: 400,
                                                            children: unit.name
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        sx: {
                                                            width: '60%'
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                            variant: "body1",
                                                            color: "secondary",
                                                            fontWeight: 400,
                                                            children: unit.description || '—'
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                        sx: {
                                                            width: '10%'
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(TableActions, {
                                                            permissions: {
                                                                isUpdateAllowed: true,
                                                                isDeleteAllowed: true
                                                            },
                                                            onEdit: ()=>setEditingUnit(unit),
                                                            onDelete: ()=>handleOpenDeleteDialog(unit)
                                                        })
                                                    })
                                                ]
                                            }, unit.id))
                                    ]
                                })
                            ]
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(ConfirmDeleteMeasureUnitDialogue, {
                open: showDeleteDialog,
                id: deletingUnit === null || deletingUnit === void 0 ? void 0 : deletingUnit.id,
                name: (deletingUnit === null || deletingUnit === void 0 ? void 0 : deletingUnit.name) || '',
                isLoading: isDeleteLoading,
                onClose: handleCloseDeleteDialog,
                onDelete: deleteUnit
            })
        ]
    });
};

const ManageMeasureUnits = ({ handleClose })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                title: i18n._({
                    id: "FUyQsW"
                }),
                closeButtonTooltip: i18n._({
                    id: "ZaK8eI"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(ManageMeasureUnitsForm, {})
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "DPfwMq"
                    }),
                    onClick: handleClose
                },
                cancelButton: {
                    hideCancel: true
                }
            })
        ]
    });
};

/** View of the product details */ var ProductDetailsView = /*#__PURE__*/ function(ProductDetailsView) {
    /** Read mode - the user is only viewing the product details */ ProductDetailsView["Read"] = "read";
    /** Edit mode - the user is editing the product details */ ProductDetailsView["Edit"] = "edit";
    return ProductDetailsView;
}({});

const ProductDetailsTableCell = (props)=>{
    return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(StyledLabelTableCell, {
                component: "th",
                scope: "row",
                children: props.label
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                children: props.value ? props.value : '—'
            })
        ]
    }, "name");
};

const getTypeComponent = (type, i18n)=>{
    const icon = type === 'product' ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Box, {
        width: 16,
        height: 16
    }) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.BriefcaseBusiness, {
        width: 16,
        height: 16
    });
    const label = type === 'product' ? i18n._({
        id: "K47k8R"
    }) : i18n._({
        id: "T3bXxK"
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(Badge, {
        variant: "secondary",
        children: [
            icon,
            " ",
            label
        ]
    });
};
const ProductType = ({ type })=>{
    const { i18n } = react.useLingui();
    return getTypeComponent(type, i18n);
};

function asyncGeneratorStep$y(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$y(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$y(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$y(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const ProductDeleteModal = ({ id, open, onClose, onDeleted })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { data: product } = api.products.getProductsId.useQuery({
        path: {
            product_id: id
        }
    });
    const deleteProductMutation = api.products.deleteProductsId.useMutation({
        path: {
            product_id: id
        }
    }, {
        onSuccess: ()=>_async_to_generator$y(function*() {
                yield api.products.getProducts.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "J51kW5"
                }));
                onClose();
                onDeleted === null || onDeleted === void 0 ? void 0 : onDeleted(id);
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "D7DGyx"
            }));
        }
    });
    const handleDelete = ()=>{
        deleteProductMutation.mutate(undefined);
    };
    if (!product) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open && Boolean(id),
        title: i18n._({
            id: "DyYoTc",
            values: {
                0: product.name
            }
        }),
        message: i18n._({
            id: "Ui+ixx"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: onClose,
        onConfirm: handleDelete,
        isLoading: deleteProductMutation.isPending
    });
};

const ProductCancelEditModal = ({ open, onClose, onBack })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open,
        title: i18n._({
            id: "ICsA6P"
        }),
        message: i18n._({
            id: "w+vEG4"
        }),
        confirmLabel: i18n._({
            id: "UZJWKB"
        }),
        cancelLabel: i18n._({
            id: "iH8pgl"
        }),
        onClose: onClose,
        onConfirm: onBack
    });
};

const getValidationSchema = (i18n)=>zod.z.object({
        name: zod.z.string().trim().min(1, i18n._({
            id: "xPOgjC"
        })).meta({
            title: i18n._({
                id: "Q033BY"
            })
        }),
        type: zod.z.enum([
            'product',
            'service'
        ], i18n._({
            id: "V0nEPn"
        })).meta({
            title: i18n._({
                id: "+zy2Nq"
            })
        }),
        units: zod.z.string().trim().min(1, i18n._({
            id: "PECOrR"
        })).meta({
            title: i18n._({
                id: "QrhaVg"
            })
        }),
        smallestAmount: zod.z.coerce.number().min(0, i18n._({
            id: "kuJ9+O"
        })).meta({
            title: i18n._({
                id: "8m+tJ3"
            })
        }),
        pricePerUnit: zod.z.coerce.number().min(0, i18n._({
            id: "g/aH3e"
        })).meta({
            title: i18n._({
                id: "t9koU2"
            })
        }),
        currency: CurrencyEnumSchema.meta({
            title: i18n._({
                id: "Q2lUR2"
            })
        }),
        description: zod.z.string().trim().max(255, i18n._({
            id: "YFr/8K"
        })).optional().meta({
            title: i18n._({
                id: "Nu4oKW"
            })
        })
    });

function _define_property$1u(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1t(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1u(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$10(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$10(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$10(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$l(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$l(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$l(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFRadioGroup = (_param)=>{
    var { label, name, control, options } = _param, other = _object_without_properties$l(_param, [
        "label",
        "name",
        "control",
        "options"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "caption",
                sx: {
                    marginBottom: 1
                },
                component: "div",
                children: label
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                name: name,
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.RadioGroup, _object_spread_props$10(_object_spread$1t({
                        "aria-labelledby": `${name}-type-radio-buttons-group-label`
                    }, field, other), {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.List, {
                            sx: {
                                border: 1,
                                borderColor: 'divider',
                                borderRadius: 3,
                                overflow: 'hidden'
                            },
                            disablePadding: true,
                            children: options.map((option, index)=>/*#__PURE__*/ jsxRuntime.jsxs(React.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                            disablePadding: true,
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.ListItemButton, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                                    value: option.value,
                                                    control: /*#__PURE__*/ jsxRuntime.jsx(material.Radio, {}),
                                                    label: option.label,
                                                    sx: {
                                                        width: '100%'
                                                    },
                                                    checked: field.value === option.value,
                                                    onClick: ()=>field.onChange(option.value)
                                                })
                                            })
                                        }),
                                        index < options.length - 1 && /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {})
                                    ]
                                }, option.value))
                        })
                    }))
            })
        ]
    });
};

function _define_property$1t(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1s(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1t(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$$(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$$(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$$(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Common form for creating and editing products
 *
 * Renders a form, if `defaultValues` are provided,
 *  the form will be pre-filled with the values.
 */ const ProductForm = ({ defaultValues, formId, onChanged, onSubmit, onManageMeasureUnits })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { api } = useMoniteContext();
    const { data: measureUnits, isLoading: isLoadingUnits } = api.measureUnits.getMeasureUnits.useQuery();
    const { currencyGroups, isLoadingCurrencyGroups } = useProductCurrencyGroups();
    const methods = reactHookForm.useForm({
        resolver: safeZodResolver(getValidationSchema(i18n)),
        defaultValues
    });
    const { control, formState: { isDirty }, handleSubmit, reset } = methods;
    React.useEffect(()=>onChanged === null || onChanged === void 0 ? void 0 : onChanged(isDirty), [
        isDirty,
        onChanged
    ]);
    const MANAGE_MEASURE_UNITS_ID = '__manage_measure_units__';
    function isManageMeasureUnits(option) {
        return option === MANAGE_MEASURE_UNITS_ID;
    }
    React.useEffect(()=>{
        reset(defaultValues);
    }, [
        reset,
        defaultValues
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$$(_object_spread$1s({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsx("form", {
            noValidate: true,
            id: formId,
            onSubmit: (event)=>{
                event.preventDefault();
                event.stopPropagation();
                handleSubmit(onSubmit)(event);
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                container: true,
                direction: "column",
                rowSpacing: 3,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            label: i18n._({
                                id: "6YtxFj"
                            }),
                            name: "name",
                            control: control,
                            fullWidth: true,
                            required: true
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            label: i18n._({
                                id: "Nu4oKW"
                            }),
                            name: "description",
                            control: control,
                            multiline: true,
                            rows: 2,
                            fullWidth: true
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        children: /*#__PURE__*/ jsxRuntime.jsx(RHFRadioGroup, {
                            label: i18n._({
                                id: "+zy2Nq"
                            }),
                            name: "type",
                            control: control,
                            options: [
                                {
                                    value: 'product',
                                    label: i18n._({
                                        id: "K47k8R"
                                    })
                                },
                                {
                                    value: 'service',
                                    label: i18n._({
                                        id: "T3bXxK"
                                    })
                                }
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            spacing: 2,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 6,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                        name: "units",
                                        control: control,
                                        render: ({ field, fieldState: { error } })=>{
                                            var _measureUnits_data;
                                            return /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                                variant: "standard",
                                                fullWidth: true,
                                                error: Boolean(error),
                                                required: true,
                                                disabled: isLoadingUnits,
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                                        id: field.name,
                                                        children: i18n._({
                                                            id: "aSwfbR"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Select, _object_spread_props$$(_object_spread$1s({
                                                        labelId: field.name,
                                                        label: i18n._({
                                                            id: "aSwfbR"
                                                        }),
                                                        MenuProps: {
                                                            container: root
                                                        }
                                                    }, field), {
                                                        onChange: (event)=>{
                                                            const value = event.target.value;
                                                            if (isManageMeasureUnits(value)) {
                                                                field.onChange(null);
                                                                return;
                                                            }
                                                            field.onChange(value);
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                                value: MANAGE_MEASURE_UNITS_ID,
                                                                sx: {
                                                                    color: 'primary.main',
                                                                    fontWeight: 'bold'
                                                                },
                                                                onClick: onManageMeasureUnits,
                                                                children: i18n._({
                                                                    id: "YYBvaQ"
                                                                })
                                                            }, MANAGE_MEASURE_UNITS_ID),
                                                            measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : _measureUnits_data.map(({ id, name })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                                    value: id,
                                                                    children: name
                                                                }, id))
                                                        ]
                                                    })),
                                                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                                                        children: error.message
                                                    })
                                                ]
                                            });
                                        }
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 6,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                        label: i18n._({
                                            id: "ynPFZs"
                                        }),
                                        name: "smallestAmount",
                                        control: control,
                                        fullWidth: true,
                                        required: true
                                    })
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            spacing: 2,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 6,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                        label: i18n._({
                                            id: "PRRPn+"
                                        }),
                                        name: "pricePerUnit",
                                        control: control,
                                        fullWidth: true,
                                        required: true
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 6,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                        name: "currency",
                                        control: control,
                                        required: true,
                                        actualCurrency: defaultValues.currency,
                                        groups: currencyGroups,
                                        disabled: isLoadingCurrencyGroups
                                    })
                                })
                            ]
                        })
                    })
                ]
            })
        })
    }));
};

function asyncGeneratorStep$x(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$x(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$x(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$x(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1s(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1r(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1s(target, key, source[key]);
        });
    }
    return target;
}
const ProductEditForm = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ProductEditFormBase, _object_spread$1r({}, props))
    });
const ProductEditFormBase = (props)=>{
    var _product_price, _product_price1;
    const { i18n } = react.useLingui();
    const { formatToMinorUnits, formatFromMinorUnits } = useCurrencies();
    const { api, queryClient } = useMoniteContext();
    const [cancelEditModalOpened, setCancelEditModalOpened] = React.useState(false);
    const [manageMeasureUnits, setManageMeasureUnits] = React.useState(false);
    const [isFormDirty, setIsFormDirty] = React.useState(false);
    const { data: product, error: productQueryError, isLoading } = api.products.getProductsId.useQuery({
        path: {
            product_id: props.id
        }
    });
    const { isLoading: isMeasureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const productUpdateMutation = api.products.patchProductsId.useMutation({
        path: {
            product_id: props.id
        }
    }, {
        onSuccess: (product)=>_async_to_generator$x(function*() {
                yield api.products.getProducts.invalidateQueries(queryClient);
                yield api.products.getProductsId.invalidateQueries({
                    parameters: {
                        path: {
                            product_id: product.id
                        }
                    }
                }, queryClient);
                reactHotToast.toast.success(product.type === 'product' ? i18n._({
                    id: "KeiQNu",
                    values: {
                        0: product.name
                    }
                }) : i18n._({
                    id: "0H2P2L",
                    values: {
                        0: product.name
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "u2HXZY"
            }));
        }
    });
    const productFormId = `Monite-ProductForm-${React.useId()}`;
    const defaultValues = React.useMemo(()=>{
        var _product_price, _product_price1, _product_price2;
        var _formatFromMinorUnits, _product_description;
        return {
            name: product === null || product === void 0 ? void 0 : product.name,
            type: (product === null || product === void 0 ? void 0 : product.type) || 'product',
            units: product === null || product === void 0 ? void 0 : product.measure_unit_id,
            smallestAmount: product === null || product === void 0 ? void 0 : product.smallest_amount,
            pricePerUnit: (_formatFromMinorUnits = formatFromMinorUnits(product === null || product === void 0 ? void 0 : (_product_price = product.price) === null || _product_price === void 0 ? void 0 : _product_price.value, product === null || product === void 0 ? void 0 : (_product_price1 = product.price) === null || _product_price1 === void 0 ? void 0 : _product_price1.currency)) !== null && _formatFromMinorUnits !== void 0 ? _formatFromMinorUnits : undefined,
            currency: product === null || product === void 0 ? void 0 : (_product_price2 = product.price) === null || _product_price2 === void 0 ? void 0 : _product_price2.currency,
            description: (_product_description = product === null || product === void 0 ? void 0 : product.description) !== null && _product_description !== void 0 ? _product_description : ''
        };
    }, [
        product === null || product === void 0 ? void 0 : product.name,
        product === null || product === void 0 ? void 0 : product.type,
        product === null || product === void 0 ? void 0 : product.measure_unit_id,
        product === null || product === void 0 ? void 0 : product.smallest_amount,
        product === null || product === void 0 ? void 0 : (_product_price = product.price) === null || _product_price === void 0 ? void 0 : _product_price.value,
        product === null || product === void 0 ? void 0 : (_product_price1 = product.price) === null || _product_price1 === void 0 ? void 0 : _product_price1.currency,
        product === null || product === void 0 ? void 0 : product.description,
        formatFromMinorUnits
    ]);
    const handleSubmit = (values)=>_async_to_generator$x(function*() {
            var _formatToMinorUnits;
            const payload = {
                name: values.name,
                type: values.type,
                measure_unit_id: values.units,
                smallest_amount: values.smallestAmount,
                price: {
                    value: (_formatToMinorUnits = formatToMinorUnits(values.pricePerUnit, values.currency)) !== null && _formatToMinorUnits !== void 0 ? _formatToMinorUnits : values.pricePerUnit,
                    currency: values.currency
                },
                description: values.description
            };
            return productUpdateMutation.mutate(payload, {
                onSuccess: (product)=>{
                    var _props_onUpdated;
                    (_props_onUpdated = props.onUpdated) === null || _props_onUpdated === void 0 ? void 0 : _props_onUpdated.call(props, product);
                    // TODO: Restore `props.onCanceled()` in onSuccess to switch details dialog from edit to read mode,
                    // or introduce a new variable (e.g., `viewMode`, `isEdit`) to handle this transition.
                    // see: https://github.com/team-monite/monite-sdk/pull/101#discussion_r1630759805
                    props.onCanceled();
                }
            });
        })();
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (productQueryError || !product) {
        return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                    title: i18n._({
                        id: "N6j2JH",
                        values: {
                            0: product === null || product === void 0 ? void 0 : product.type
                        }
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        alignItems: "center",
                        spacing: 2,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(SearchOffIcon__default.default, {
                                    fontSize: "large",
                                    color: "error"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                                alignItems: "center",
                                spacing: 1,
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    children: i18n._({
                                        id: "c6YG3V"
                                    })
                                })
                            })
                        ]
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: true,
                title: manageMeasureUnits ? i18n._({
                    id: "FUyQsW"
                }) : i18n._({
                    id: "N6j2JH",
                    values: {
                        0: product === null || product === void 0 ? void 0 : product.type
                    }
                }),
                previousLevelTitle: manageMeasureUnits ? i18n._({
                    id: "N6j2JH",
                    values: {
                        0: product === null || product === void 0 ? void 0 : product.type
                    }
                }) : undefined,
                closeSecondaryLevelDialog: ()=>setManageMeasureUnits(false)
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(ProductCancelEditModal, {
                        open: cancelEditModalOpened,
                        onClose: ()=>setCancelEditModalOpened(false),
                        onBack: props.onCanceled
                    }),
                    manageMeasureUnits ? /*#__PURE__*/ jsxRuntime.jsx(ManageMeasureUnitsForm, {}) : /*#__PURE__*/ jsxRuntime.jsx(ProductForm, {
                        formId: productFormId,
                        onSubmit: handleSubmit,
                        defaultValues: defaultValues,
                        onChanged: setIsFormDirty,
                        onManageMeasureUnits: ()=>setManageMeasureUnits(true)
                    })
                ]
            }),
            manageMeasureUnits ? /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "DPfwMq"
                    }),
                    onClick: ()=>setManageMeasureUnits(false)
                },
                cancelButton: {
                    onClick: ()=>setManageMeasureUnits(false)
                }
            }) : /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "EkH9pt"
                    }),
                    formId: productFormId,
                    isLoading: productUpdateMutation.isPending || isMeasureUnitsLoading
                },
                cancelButton: {
                    onClick: ()=>isFormDirty ? setCancelEditModalOpened(true) : props.onCanceled()
                }
            })
        ]
    });
};

const MeasureUnit = /*#__PURE__*/ React.memo(({ unitId })=>{
    const { api } = useMoniteContext();
    const { data: unit, isLoading } = api.measureUnits.getMeasureUnitsId.useQuery({
        path: {
            unit_id: unitId
        }
    });
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "text",
            height: "1rem",
            width: 100,
            animation: "wave"
        });
    }
    if (!unit) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsx("span", {
        children: unit.name
    });
});

function _define_property$1r(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1r(target, key, source[key]);
        });
    }
    return target;
}
const ExistingProductDetails = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ExistingProductDetailsBase, _object_spread$1q({}, props))
    });
const ExistingProductDetailsBase = ({ id, onUpdated, onDeleted, initialView = ProductDetailsView.Read })=>{
    var _product_price, _product_price1;
    const { i18n } = react.useLingui();
    /**
   * In which mode the product details are displayed
   * It might be `read` - when the user is only viewing the product details
   *  or `edit` - when the user is editing the product details
   */ const [view, setView] = React.useState(initialView);
    /** Is the deleting modal opened? */ const [deleteModalOpened, setDeleteModalOpened] = React.useState(false);
    const dialogContext = useDialog();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { api, locale } = useMoniteContext();
    const { data: product, error: productQueryError, isLoading } = api.products.getProductsId.useQuery({
        path: {
            product_id: id
        }
    });
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'product',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isUpdateAllowed } = useIsActionAllowed({
        method: 'product',
        action: 'update',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isDeleteAllowed } = useIsActionAllowed({
        method: 'product',
        action: 'delete',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    if (isLoading || isReadAllowedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadAllowed) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    if (productQueryError || !product) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "+hWNEf"
            }),
            description: i18n._({
                id: "a2ymVw",
                values: {
                    id: id
                }
            })
        });
    }
    if (view === ProductDetailsView.Edit) {
        return /*#__PURE__*/ jsxRuntime.jsx(ProductEditForm, {
            id: id,
            onUpdated: onUpdated,
            onCanceled: ()=>{
                setView(ProductDetailsView.Read);
            }
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(MoniteScopedProviders, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                title: product.name,
                closeButtonTooltip: i18n._({
                    id: "G1qY3M"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(ProductDeleteModal, {
                        id: id,
                        open: deleteModalOpened,
                        onClose: ()=>{
                            setDeleteModalOpened(false);
                        },
                        onDeleted: (productId)=>{
                            var _dialogContext_onClose;
                            dialogContext === null || dialogContext === void 0 ? void 0 : (_dialogContext_onClose = dialogContext.onClose) === null || _dialogContext_onClose === void 0 ? void 0 : _dialogContext_onClose.call(dialogContext);
                            onDeleted === null || onDeleted === void 0 ? void 0 : onDeleted(productId);
                        }
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        mb: 3,
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
                            variant: "outlined",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "6YtxFj"
                                            }),
                                            value: product.name
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "Nu4oKW"
                                            }),
                                            value: product.description
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "+zy2Nq"
                                            }),
                                            value: product.type ? /*#__PURE__*/ jsxRuntime.jsx(ProductType, {
                                                type: product.type
                                            }) : null
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "aSwfbR"
                                            }),
                                            value: product.measure_unit_id ? /*#__PURE__*/ jsxRuntime.jsx(MeasureUnit, {
                                                unitId: product.measure_unit_id
                                            }) : '—'
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "ynPFZs"
                                            }),
                                            value: product.smallest_amount
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "PRRPn+"
                                            }),
                                            value: product.price ? formatCurrencyToDisplay((_product_price = product.price) === null || _product_price === void 0 ? void 0 : _product_price.value, (_product_price1 = product.price) === null || _product_price1 === void 0 ? void 0 : _product_price1.currency) : null
                                        })
                                    ]
                                })
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle1",
                        children: i18n._({
                            id: "0caMy7"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        mt: 2,
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
                            variant: "outlined",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Table, {
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableBody, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "45O6zJ"
                                            }),
                                            value: i18n.date(product.created_at, locale.dateTimeFormat)
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(ProductDetailsTableCell, {
                                            label: i18n._({
                                                id: "o1zvNS"
                                            }),
                                            value: i18n.date(product.updated_at, locale.dateTimeFormat)
                                        })
                                    ]
                                })
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "ePK91l"
                    }),
                    onClick: ()=>setView(ProductDetailsView.Edit),
                    isDisabled: !isUpdateAllowed
                },
                deleteButton: {
                    label: i18n._({
                        id: "cnGeoo"
                    }),
                    onClick: ()=>setDeleteModalOpened(true),
                    isDisabled: !isDeleteAllowed
                }
            })
        ]
    });
};

function asyncGeneratorStep$w(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$w(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$w(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$w(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1p(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1q(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$_(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$_(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$_(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const initialValues = {
    name: '',
    type: 'product',
    units: '',
    smallestAmount: 0,
    pricePerUnit: undefined,
    currency: undefined,
    description: undefined
};
const CreateProduct = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(CreateProductBase, _object_spread$1p({}, props))
    });
const CreateProductBase = (props)=>{
    var _entitySettings_currency;
    const { i18n } = react.useLingui();
    const { formatToMinorUnits } = useCurrencies();
    const [manageMeasureUnits, setManageMeasureUnits] = React.useState(false);
    const { api, queryClient, entityId } = useMoniteContext();
    const { data: measureUnits, isLoading: isLoadingUnits } = api.measureUnits.getMeasureUnits.useQuery();
    const { data: entitySettings, isLoading: isLoadingSettings } = api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    });
    const defaultValues = React.useMemo(()=>{
        var _measureUnits_data_, _measureUnits_data, _entitySettings_currency;
        if (isLoadingUnits || isLoadingSettings) {
            return initialValues;
        }
        return _object_spread$1p(_object_spread_props$_(_object_spread$1p({}, initialValues), {
            units: measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : (_measureUnits_data_ = _measureUnits_data[0]) === null || _measureUnits_data_ === void 0 ? void 0 : _measureUnits_data_.id,
            currency: entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_currency = entitySettings.currency) === null || _entitySettings_currency === void 0 ? void 0 : _entitySettings_currency.default
        }), props.defaultValues);
    }, [
        measureUnits === null || measureUnits === void 0 ? void 0 : measureUnits.data,
        entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_currency = entitySettings.currency) === null || _entitySettings_currency === void 0 ? void 0 : _entitySettings_currency.default,
        props.defaultValues,
        isLoadingUnits,
        isLoadingSettings
    ]);
    const { mutate: createProduct, isPending } = api.products.postProducts.useMutation(undefined, {
        onSuccess: (product)=>_async_to_generator$w(function*() {
                var _props_onCreated;
                (_props_onCreated = props.onCreated) === null || _props_onCreated === void 0 ? void 0 : _props_onCreated.call(props, product);
                yield api.products.getProducts.invalidateQueries(queryClient);
                reactHotToast.toast.success(product.type === 'product' ? i18n._({
                    id: "P2he1F",
                    values: {
                        0: product.name
                    }
                }) : i18n._({
                    id: "zq6ta3",
                    values: {
                        0: product.name
                    }
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "7In/FY"
            }));
        }
    });
    const handleSubmit = (values)=>_async_to_generator$w(function*() {
            var _formatToMinorUnits;
            const payload = {
                name: values.name,
                type: values.type,
                measure_unit_id: values.units,
                smallest_amount: values.smallestAmount,
                price: {
                    value: (_formatToMinorUnits = formatToMinorUnits(values.pricePerUnit, values.currency)) !== null && _formatToMinorUnits !== void 0 ? _formatToMinorUnits : values.pricePerUnit,
                    currency: values.currency
                },
                description: values.description
            };
            return createProduct({
                body: payload
            });
        })();
    const productFormId = `Monite-ProductForm-${React.useId()}`;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DialogHeader, {
                secondaryLevel: manageMeasureUnits,
                title: manageMeasureUnits ? i18n._({
                    id: "FUyQsW"
                }) : i18n._({
                    id: "WjBoh0"
                }),
                previousLevelTitle: manageMeasureUnits ? i18n._({
                    id: "WjBoh0"
                }) : undefined,
                closeSecondaryLevelDialog: ()=>setManageMeasureUnits(false)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: manageMeasureUnits ? /*#__PURE__*/ jsxRuntime.jsx(ManageMeasureUnitsForm, {}) : /*#__PURE__*/ jsxRuntime.jsx(ProductForm, {
                    formId: productFormId,
                    onSubmit: handleSubmit,
                    defaultValues: defaultValues,
                    onManageMeasureUnits: ()=>setManageMeasureUnits(true)
                })
            }),
            manageMeasureUnits ? /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "DPfwMq"
                    }),
                    onClick: ()=>setManageMeasureUnits(false)
                },
                cancelButton: {
                    onClick: ()=>setManageMeasureUnits(false)
                }
            }) : /*#__PURE__*/ jsxRuntime.jsx(DialogFooter, {
                primaryButton: {
                    label: i18n._({
                        id: "hYgDIe"
                    }),
                    formId: productFormId,
                    isLoading: isPending
                }
            })
        ]
    });
};

function _define_property$1p(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1o(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1p(target, key, source[key]);
        });
    }
    return target;
}
const ProductDetails = (props)=>{
    if (typeof props.id === 'string') {
        return /*#__PURE__*/ jsxRuntime.jsx(ExistingProductDetails, _object_spread$1o({}, props));
    }
    return /*#__PURE__*/ jsxRuntime.jsx(CreateProduct, _object_spread$1o({}, props));
};

const FILTER_TYPE_SEARCH = 'search';
const FILTER_TYPE_TYPE = 'type';
const FILTER_TYPE_UNITS = 'units';

const Filters = ({ onChangeFilter, sx })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { api } = useMoniteContext();
    const { data: measureUnits, isLoading: isMeasureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const className = 'Monite-ProductFilters';
    var _measureUnits_data;
    return /*#__PURE__*/ jsxRuntime.jsxs(FilterContainer, {
        className: className,
        sx: sx,
        searchField: /*#__PURE__*/ jsxRuntime.jsx(SearchField, {
            placeholder: i18n._({
                id: "Fs+py6"
            }),
            onChange: (search)=>{
                onChangeFilter(FILTER_TYPE_SEARCH, search);
            }
        }),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                className: "Monite-ProductTypeFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                    labelId: "type",
                    label: i18n._({
                        id: "+zy2Nq"
                    }),
                    defaultValue: "all",
                    MenuProps: {
                        container: root
                    },
                    onChange: (search)=>{
                        onChangeFilter(FILTER_TYPE_TYPE, search.target.value);
                    },
                    children: [
                        {
                            label: i18n._({
                                id: "h6zvpR"
                            }),
                            value: 'all'
                        },
                        {
                            label: i18n._({
                                id: "N0qXpE"
                            }),
                            value: 'product',
                            icons: /*#__PURE__*/ jsxRuntime.jsx(PersonIcon__default.default, {
                                color: "primary",
                                fontSize: "small"
                            })
                        },
                        {
                            label: i18n._({
                                id: "MILoeL"
                            }),
                            value: 'service',
                            icons: /*#__PURE__*/ jsxRuntime.jsx(BusinessIcon__default.default, {
                                color: "success",
                                fontSize: "small"
                            })
                        }
                    ].map(({ label, value })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: value,
                            children: label
                        }, value))
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                disabled: isMeasureUnitsLoading,
                className: "Monite-ProductUnitFilter Monite-FilterControl",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
                    labelId: "units",
                    label: i18n._({
                        id: "QrhaVg"
                    }),
                    defaultValue: "all",
                    MenuProps: {
                        container: root
                    },
                    onChange: (search)=>{
                        onChangeFilter(FILTER_TYPE_UNITS, search.target.value);
                    },
                    children: [
                        {
                            id: 'all',
                            name: i18n._({
                                id: "iJcU0G"
                            })
                        },
                        ...(_measureUnits_data = measureUnits === null || measureUnits === void 0 ? void 0 : measureUnits.data) !== null && _measureUnits_data !== void 0 ? _measureUnits_data : []
                    ].map(({ id, name })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: id,
                            children: name
                        }, id))
                })
            })
        ]
    });
};

function _define_property$1o(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1n(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1o(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$Z(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$Z(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$Z(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ProductsTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ProductsTableBase, _object_spread$1n({}, props))
    });
const ProductsTableBase = ({ onFilterChanged: onChangeFilterCallback, onSortChanged: onChangeSortCallback, onRowClick, onDeleted, openCreateModal })=>{
    const { i18n } = react.useLingui();
    const { api, componentSettings } = useMoniteContext();
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.products.pageSizeOptions[0]);
    const [currentFilter, setCurrentFilter] = React.useState({});
    const [sortModel, setSortModel] = React.useState();
    const { formatCurrencyToDisplay } = useCurrencies();
    /** Controls the visibility of the deleting dialog */ const [isDeleteDialogOpen, setIsDeleteDialogOpen] = React.useState({
        open: false,
        id: null
    });
    const { data: user } = useEntityUserByAuthToken();
    const { data: isReadSupported, isLoading: isReadSupportedLoading } = useIsActionAllowed({
        method: 'product',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: products, isLoading, isError, refetch } = api.products.getProducts.useQuery({
        query: {
            sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
            order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
            limit: pageSize,
            type: currentFilter[FILTER_TYPE_TYPE] || undefined,
            pagination_token: currentPaginationToken || undefined,
            name__icontains: currentFilter[FILTER_TYPE_SEARCH] || undefined,
            measure_unit_id: currentFilter[FILTER_TYPE_UNITS] || undefined
        }
    });
    const onChangeFilter = (field, value)=>{
        setCurrentPaginationToken(null);
        setCurrentFilter((prevFilter)=>_object_spread_props$Z(_object_spread$1n({}, prevFilter), {
                [field]: value === 'all' ? null : value
            }));
        onChangeFilterCallback === null || onChangeFilterCallback === void 0 ? void 0 : onChangeFilterCallback({
            field,
            value
        });
    };
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setCurrentPaginationToken(null);
        onChangeSortCallback === null || onChangeSortCallback === void 0 ? void 0 : onChangeSortCallback(model[0]);
    };
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'name',
                headerName: i18n._({
                    id: "BWMUJE"
                }),
                display: 'flex',
                flex: 3,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: params.row.name
                    })
            },
            {
                field: 'type',
                headerName: i18n._({
                    id: "+zy2Nq"
                }),
                display: 'flex',
                flex: 1,
                sortable: false,
                renderCell: (params)=>{
                    return params.row.type ? /*#__PURE__*/ jsxRuntime.jsx(ProductType, {
                        type: params.row.type
                    }) : null;
                }
            },
            {
                field: 'measure_unit_id',
                headerName: i18n._({
                    id: "aSwfbR"
                }),
                flex: 1,
                sortable: false,
                renderCell: (params)=>{
                    return /*#__PURE__*/ jsxRuntime.jsx(MeasureUnit, {
                        unitId: params.value
                    });
                }
            },
            {
                field: 'price',
                headerName: i18n._({
                    id: "PRRPn+"
                }),
                headerAlign: 'right',
                align: 'right',
                flex: 1,
                sortable: false,
                valueGetter: (value)=>{
                    const price = value;
                    return price ? formatCurrencyToDisplay(price.value, price.currency) : '';
                }
            }
        ];
    }, [
        formatCurrencyToDisplay,
        i18n
    ]);
    if (isReadSupportedLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!isReadSupported) {
        return /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {});
    }
    const isFiltering = Object.keys(currentFilter).some((key)=>currentFilter[key] !== null && currentFilter[key] !== undefined);
    const isSearching = !!currentFilter[FILTER_TYPE_SEARCH];
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: ScopedCssBaselineContainerClassName,
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(Filters, {
                onChangeFilter: onChangeFilter,
                sx: {
                    mb: 2
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: sortModel && [
                            sortModel
                        ]
                    }
                },
                rowSelection: false,
                disableColumnFilter: true,
                rows: (products === null || products === void 0 ? void 0 : products.data) || [],
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(params.row);
                    }
                },
                columns: columns,
                loading: isLoading,
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.products.pageSizeOptions,
                            prevPage: products === null || products === void 0 ? void 0 : products.prev_pagination_token,
                            nextPage: products === null || products === void 0 ? void 0 : products.next_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (products === null || products === void 0 ? void 0 : products.data.length) || 0,
                            isFiltering: isFiltering,
                            isSearching: isSearching,
                            isError: isError,
                            onCreate: openCreateModal,
                            refetch: refetch,
                            filterTitle: i18n._({
                                id: "Zd+wG4"
                            }),
                            filterDescription1: i18n._({
                                id: "mom71O"
                            }),
                            filterDescription2: null,
                            entityName: i18n._({
                                id: "oPdWeV"
                            }),
                            actionButtonLabel: i18n._({
                                id: "BOqY23"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "K47k8R"
                                })
                            ],
                            noDataTitle: i18n._({
                                id: "lTfWiC"
                            }),
                            noDataDescription1: i18n._({
                                id: "R9GvPf"
                            }),
                            noDataDescription2: i18n._({
                                id: "EEcsR2"
                            }),
                            type: "no-data"
                        })
                }
            }),
            isDeleteDialogOpen.id && /*#__PURE__*/ jsxRuntime.jsx(ProductDeleteModal, {
                id: isDeleteDialogOpen.id,
                open: isDeleteDialogOpen.open,
                onDeleted: onDeleted,
                onClose: ()=>setIsDeleteDialogOpen((prev)=>_object_spread_props$Z(_object_spread$1n({}, prev), {
                            open: false
                        }))
            })
        ]
    });
};

const Products = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ProductsBase, {})
    });
const ProductsBase = ()=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'product',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'product',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const [selectedProductId, setSelectedProductId] = React.useState(undefined);
    const [detailsModalOpened, setDetailsModalOpened] = React.useState(false);
    const [detailsViewMode, setDetailsViewMode] = React.useState(ProductDetailsView.Read);
    const [measureUnitsModalOpened, setMeasureUnitsModalOpened] = React.useState(false);
    const onRowClick = React.useCallback((product)=>{
        setSelectedProductId(product.id);
        setDetailsModalOpened(true);
        setDetailsViewMode(ProductDetailsView.Read);
    }, []);
    const closeModal = React.useCallback(()=>{
        setDetailsModalOpened(false);
    }, []);
    const closedModal = React.useCallback(()=>{
        setSelectedProductId(undefined);
    }, []);
    const openCreateModal = React.useCallback(()=>{
        setSelectedProductId(undefined);
        setDetailsModalOpened(true);
    }, []);
    const onEdit = React.useCallback((product)=>{
        setSelectedProductId(product.id);
        setDetailsModalOpened(true);
        setDetailsViewMode(ProductDetailsView.Edit);
    }, []);
    const onDelete = React.useCallback((productId)=>{
        setSelectedProductId(productId);
    }, []);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "bDqm4t"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            variant: "ghost",
                            size: "lg",
                            onClick: ()=>setMeasureUnitsModalOpened(true),
                            className: "mtw:mr-2",
                            children: i18n._({
                                id: "FUyQsW"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            size: "lg",
                            disabled: !isCreateAllowed,
                            onClick: openCreateModal,
                            children: i18n._({
                                id: "BOqY23"
                            })
                        })
                    ]
                })
            }),
            !isReadAllowedLoading && !isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(ProductsTable, {
                onRowClick: onRowClick,
                onEdit: onEdit,
                onDeleted: onDelete,
                openCreateModal: openCreateModal
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: detailsModalOpened && !selectedProductId,
                alignDialog: "right",
                container: root,
                onClose: closeModal,
                onClosed: closedModal,
                children: /*#__PURE__*/ jsxRuntime.jsx(ProductDetails, {
                    onCreated: closeModal
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: detailsModalOpened && Boolean(selectedProductId),
                alignDialog: "right",
                container: root,
                onClose: closeModal,
                onClosed: closedModal,
                children: /*#__PURE__*/ jsxRuntime.jsx(ProductDetails, {
                    id: selectedProductId,
                    initialView: detailsViewMode
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: measureUnitsModalOpened,
                alignDialog: "right",
                container: root,
                onClose: ()=>setMeasureUnitsModalOpened(false),
                children: /*#__PURE__*/ jsxRuntime.jsx(ManageMeasureUnits, {
                    handleClose: ()=>setMeasureUnitsModalOpened(false)
                })
            })
        ]
    });
};

var ProductsTableDataTestId = /*#__PURE__*/ function(ProductsTableDataTestId) {
    ProductsTableDataTestId["DialogTestId"] = "ProductsTableDialogTestId";
    return ProductsTableDataTestId;
}({});
var ActiveInvoiceTitleTestId = /*#__PURE__*/ function(ActiveInvoiceTitleTestId) {
    ActiveInvoiceTitleTestId["ActiveInvoiceTitleTestId"] = "ActiveInvoiceTitleTestId";
    return ActiveInvoiceTitleTestId;
}({});

const CreateProductDialog = ({ defaultCurrency, actualCurrency, open, handleClose })=>{
    const currency = actualCurrency || defaultCurrency;
    return /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
        open: open,
        alignDialog: "right",
        onClose: handleClose,
        "data-testid": ProductsTableDataTestId.DialogTestId,
        children: /*#__PURE__*/ jsxRuntime.jsx(ProductDetails, {
            onCreated: handleClose,
            defaultValues: {
                currency: currency
            }
        })
    });
};

/**
 * Generates a unique ID, using crypto.randomUUID() when available
 * or falling back to a combination of timestamp and random number
 *
 * @returns A string representing a unique identifier
 */ const generateUniqueId = ()=>{
    if (typeof crypto !== 'undefined' && typeof crypto.randomUUID === 'function') {
        return crypto.randomUUID();
    }
    return `${Date.now().toString(36)}-${Math.random().toString(36).substring(2, 9)}`;
};

function _define_property$1n(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1m(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1n(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$Y(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$Y(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$Y(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const extractFromObject = (obj, pathKeys)=>{
    let current = obj;
    for (const k of pathKeys){
        if (typeof current !== 'object' || current === null || !(k in current)) {
            return undefined;
        }
        current = current[k];
    }
    return typeof current === 'object' && current !== null && 'message' in current && typeof current.message === 'string' ? String(current.message) : undefined;
};
/**
 * Retrieves a specific error message from an error object or array based on a path.
 *
 * @param error The error object or array containing validation errors.
 * @param path A dot-separated string representing the path to the desired error message.
 * @returns The error message string if found, otherwise undefined.
 */ function getErrorMessage(error, path) {
    if (!error) {
        return undefined;
    }
    const isObject = typeof error === 'object';
    if (isObject && 'message' in error && typeof error.message === 'string') {
        return error.message;
    }
    const keys = path.split('.');
    const notArray = !Array.isArray(error);
    if (notArray && isObject) {
        return extractFromObject(error, keys);
    }
    if (notArray) return undefined;
    const specificError = error.find((item)=>{
        if (!item || typeof item !== 'object' || item === null) return false;
        let current = item;
        for (const k of keys){
            if (typeof current !== 'object' || current === null || !(k in current)) {
                return false;
            }
            current = current[k];
        }
        return typeof current === 'object' && current !== null && 'message' in current && typeof current.message === 'string';
    });
    if (!specificError) {
        return undefined;
    }
    return extractFromObject(specificError, keys);
}
/**
 * Retrieves a specific error message for a line item field.
 * This is a specialized version of getErrorMessage for line item paths.
 *
 * @param error The error object or array containing validation errors.
 * @param path The LineItemPath (type-safe path) to the line item's error message.
 * @returns The error message string if found, otherwise undefined.
 */ const getLineItemErrorMessage = (error, path)=>getErrorMessage(error, path);
/**
 * Handles tax/VAT rate input value
 *
 * @param inputValue The raw input string from the TextField
 * @returns A number between 0 and 100 suitable for tax/VAT rates
 */ const processTaxRateValue = (inputValue)=>{
    if (inputValue === '') {
        return 0;
    }
    const numValue = Number(inputValue);
    if (isNaN(numValue)) {
        return 0;
    }
    return Math.min(Math.max(numValue, 0), 100);
};
/**
 * Formats the value of an input element intended for tax/VAT rates.
 * Specifically, it removes leading zeros unless the value is a decimal like "0.5".
 *
 * @param inputElement The HTMLInputElement whose value needs to be formatted.
 */ const formatTaxRate = (inputElement)=>{
    if (inputElement.value.startsWith('0') && inputElement.value.length > 1 && !inputElement.value.startsWith('0.')) {
        const newValue = inputElement.value.replace(/^0+/, '');
        inputElement.value = newValue || '0';
    }
};
/**
 * Converts a minor unit value to a locale-formatted major unit string.
 * Example: 12345 (minor units) with 'en-US' locale -> "123.45"
 *
 * @param minorValue The numeric value in minor units (e.g., cents).
 * @param numberFormatter An Intl.NumberFormat instance configured for the desired locale and currency.
 * @returns A string representing the value in major units, formatted according to the locale, or an empty string if minorValue is undefined or NaN.
 */ const formatMinorToMajorCurrency = (minorValue, numberFormatter)=>{
    if (minorValue === undefined || isNaN(minorValue)) return '';
    const majorValue = rateMinorToMajor$1(minorValue);
    return numberFormatter.format(majorValue);
};
/**
 * Converts a locale-formatted major unit string to a minor unit number.
 * Example: "1,234.56" with English locale -> 123456
 *
 * @param majorValueString The string representing the value in major units, formatted according to a specific locale.
 * @param localeDecimalSeparator The decimal separator character used in majorValueString (e.g., "." or ",").
 * @param localeGroupSeparator Optional. The group separator character used in majorValueString (e.g., "," or ".").
 * @returns A number representing the value in minor units. Returns 0 for empty or invalid input strings.
 */ const parseMajorToMinorCurrency = (majorValueString, localeDecimalSeparator, localeGroupSeparator)=>{
    if (majorValueString.trim() === '') return 0;
    let normalizedValue = majorValueString;
    if (localeGroupSeparator) {
        const escapedGroupSeparator = localeGroupSeparator.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        normalizedValue = normalizedValue.replace(new RegExp(escapedGroupSeparator, 'g'), '');
    }
    normalizedValue = normalizedValue.replace(localeDecimalSeparator, '.');
    const numValue = parseFloat(normalizedValue);
    if (isNaN(numValue)) return 0;
    return rateMajorToMinor$1(numValue);
};
const COMMON_DECIMAL_SEPARATOR = '.';
const escapeRegexChars = (str)=>str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
const getLocaleSeparators = (locale)=>{
    if (typeof Intl === 'undefined' || typeof Intl.NumberFormat === 'undefined') {
        return {
            decimal: '.',
            group: ','
        };
    }
    try {
        var _parts_find, _parts_find1;
        const parts = Intl.NumberFormat(locale).formatToParts(12345.6);
        const decimal = ((_parts_find = parts.find((part)=>part.type === 'decimal')) === null || _parts_find === void 0 ? void 0 : _parts_find.value) || '.';
        const group = ((_parts_find1 = parts.find((part)=>part.type === 'group')) === null || _parts_find1 === void 0 ? void 0 : _parts_find1.value) || ',';
        return {
            decimal,
            group
        };
    } catch (error) {
        console.error('Error getting locale separators:', error);
        return {
            decimal: '.',
            group: ','
        };
    }
};
/**
 * Parses a string that might contain locale-specific formatting (e.g., commas for decimals)
 * into a standard number.
 *
 * @param inputValue The raw input string.
 * @param locale Optional: The BCP 47 language tag for the locale to use for parsing (e.g., "en-US", "de-DE"). Defaults to browser's locale.
 * @returns A number, or 0 if parsing fails.
 */ const parseLocaleNumericString = (inputValue, locale)=>{
    if (typeof inputValue !== 'string' || !inputValue.trim()) {
        return 0;
    }
    const { decimal: localeDecimalSeparator, group: localeGroupSeparator } = getLocaleSeparators(locale);
    const cleanedString = inputValue.replace(new RegExp(escapeRegexChars(localeGroupSeparator), 'g'), '');
    let resultString = '';
    let hasSeparator = false;
    for (const char of cleanedString){
        if (/\d/.test(char)) {
            resultString += char;
        } else if (char === localeDecimalSeparator && !hasSeparator) {
            resultString += COMMON_DECIMAL_SEPARATOR;
            hasSeparator = true;
        }
    }
    const numValue = parseFloat(resultString);
    return isNaN(numValue) ? 0 : numValue;
};
/**
 * Sanitizes line items for use in invoice creation
 * Formats the data consistently and handles type conversions
 */ const sanitizeLineItems = (items)=>{
    if (!items || !Array.isArray(items)) return [];
    return items.filter((item)=>{
        var _item_product;
        return Boolean(item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : _item_product.name);
    }).map((item)=>{
        var _item_product, _item_product1, _item_product_price, _item_product2, _item_product_price1, _item_product3, _item_product4, _item_measure_unit;
        var _item_quantity, _item_product_price_value;
        return _object_spread$1m(_object_spread_props$Y(_object_spread$1m({}, item), {
            id: item.product_id || generateUniqueId(),
            quantity: (_item_quantity = item.quantity) !== null && _item_quantity !== void 0 ? _item_quantity : 1,
            product: _object_spread_props$Y(_object_spread$1m({}, item.product), {
                type: (_item_product = item.product) === null || _item_product === void 0 ? void 0 : _item_product.type,
                price: _object_spread_props$Y(_object_spread$1m({}, ((_item_product1 = item.product) === null || _item_product1 === void 0 ? void 0 : _item_product1.price) || {}), {
                    value: (_item_product_price_value = (_item_product2 = item.product) === null || _item_product2 === void 0 ? void 0 : (_item_product_price = _item_product2.price) === null || _item_product_price === void 0 ? void 0 : _item_product_price.value) !== null && _item_product_price_value !== void 0 ? _item_product_price_value : 0,
                    currency: ((_item_product3 = item.product) === null || _item_product3 === void 0 ? void 0 : (_item_product_price1 = _item_product3.price) === null || _item_product_price1 === void 0 ? void 0 : _item_product_price1.currency) || 'USD'
                }),
                measure_unit_id: ((_item_product4 = item.product) === null || _item_product4 === void 0 ? void 0 : _item_product4.measure_unit_id) || ''
            })
        }), ((_item_measure_unit = item.measure_unit) === null || _item_measure_unit === void 0 ? void 0 : _item_measure_unit.name) ? {
            measure_unit: {
                name: item.measure_unit.name,
                id: null
            }
        } : {});
    });
};

const FormErrorDisplay = ({ generalError, fieldErrors })=>{
    const hasFieldErrors = React.useMemo(()=>{
        for (const error of Object.values(fieldErrors)){
            if (error) return true;
        }
        return false;
    }, [
        fieldErrors
    ]);
    const hasErrors = Boolean(generalError) || hasFieldErrors;
    if (!hasErrors) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(material.Collapse, {
        in: true,
        sx: {
            ':not(.MuiCollapse-hidden)': {
                marginBottom: 1
            }
        },
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Alert, {
            severity: "error",
            sx: {
                '& .MuiAlert-icon': {
                    alignItems: 'center'
                }
            },
            children: [
                generalError && /*#__PURE__*/ jsxRuntime.jsx("div", {
                    children: generalError
                }),
                hasFieldErrors && /*#__PURE__*/ jsxRuntime.jsx(material.List, {
                    dense: true,
                    disablePadding: true,
                    sx: {
                        mt: generalError ? 1 : 0
                    },
                    children: Object.entries(fieldErrors).map(([key, error])=>error ? /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                            disablePadding: true,
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.ListItemText, {
                                primary: error,
                                primaryTypographyProps: {
                                    sx: {
                                        color: 'inherit'
                                    }
                                }
                            })
                        }, key) : null)
                })
            ]
        })
    });
};
/**
 * Hook to extract and memoize form errors from React Hook Form error objects.
 */ const GENERAL_ERROR_MESSAGE = 'Please check the form for errors';
const useFormErrors = (error)=>{
    const { i18n } = react.useLingui();
    const errors = React.useMemo(()=>{
        return Array.isArray(error) ? error : error ? [
            error
        ] : [];
    }, [
        error
    ]);
    const getFirstErrorMessage = React.useCallback((path)=>{
        for(let i = 0; i < errors.length; i++){
            const errorObj = errors[i];
            if (typeof errorObj === 'object') {
                const errorMsg = getLineItemErrorMessage(errorObj, path);
                if (errorMsg) {
                    return errorMsg;
                }
            }
        }
        return null;
    }, [
        errors
    ]);
    const nameError = React.useMemo(()=>{
        var _getFirstErrorMessage;
        return (_getFirstErrorMessage = getFirstErrorMessage('product.name')) !== null && _getFirstErrorMessage !== void 0 ? _getFirstErrorMessage : getFirstErrorMessage('name');
    }, [
        getFirstErrorMessage
    ]);
    const quantityError = React.useMemo(()=>getFirstErrorMessage('quantity'), [
        getFirstErrorMessage
    ]);
    const priceError = React.useMemo(()=>{
        var _getFirstErrorMessage, _ref;
        return (_ref = (_getFirstErrorMessage = getFirstErrorMessage('price')) !== null && _getFirstErrorMessage !== void 0 ? _getFirstErrorMessage : getFirstErrorMessage('product.price.value')) !== null && _ref !== void 0 ? _ref : getFirstErrorMessage('product.price.currency');
    }, [
        getFirstErrorMessage
    ]);
    const taxError = React.useMemo(()=>{
        var _getFirstErrorMessage, _ref;
        return (_ref = (_getFirstErrorMessage = getFirstErrorMessage('vat_rate_id')) !== null && _getFirstErrorMessage !== void 0 ? _getFirstErrorMessage : getFirstErrorMessage('vat_rate_value')) !== null && _ref !== void 0 ? _ref : getFirstErrorMessage('tax_rate_value');
    }, [
        getFirstErrorMessage
    ]);
    const measureUnitError = React.useMemo(()=>{
        var _getFirstErrorMessage, _ref;
        return (_ref = (_getFirstErrorMessage = getFirstErrorMessage('product.measure_unit_id')) !== null && _getFirstErrorMessage !== void 0 ? _getFirstErrorMessage : getFirstErrorMessage('product.measure_unit_name')) !== null && _ref !== void 0 ? _ref : getFirstErrorMessage('measure_unit');
    }, [
        getFirstErrorMessage
    ]);
    const productTypeError = React.useMemo(()=>{
        return getFirstErrorMessage('product.type');
    }, [
        getFirstErrorMessage
    ]);
    const generalError = React.useMemo(()=>{
        if (errors.length === 0) {
            return undefined;
        }
        const hasSpecificErrors = Boolean(nameError || quantityError || priceError || taxError || measureUnitError || productTypeError);
        if (hasSpecificErrors) {
            return undefined;
        }
        const hasActualErrors = errors.some((errorObj)=>{
            if (!errorObj || typeof errorObj !== 'object') return false;
            const keys = Object.keys(errorObj);
            return keys.length > 0 && keys.some((key)=>errorObj[key] != null);
        });
        return hasActualErrors ? i18n._({
            id: "oRNrne",
            values: {
                GENERAL_ERROR_MESSAGE: GENERAL_ERROR_MESSAGE
            }
        }) : undefined;
    }, [
        errors,
        nameError,
        quantityError,
        priceError,
        taxError,
        measureUnitError,
        productTypeError,
        i18n
    ]);
    return {
        generalError,
        fieldErrors: {
            name: nameError,
            quantity: quantityError,
            price: priceError,
            tax: taxError,
            measureUnit: measureUnitError,
            productType: productTypeError
        },
        hasErrors: Boolean(generalError || nameError || quantityError || priceError || taxError || measureUnitError || productTypeError)
    };
};

function _define_property$1m(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1l(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1m(target, key, source[key]);
        });
    }
    return target;
}
const getCreateInvoiceProductsValidationSchema = (i18n)=>zod.z.object({
        currency: getCurrencyEnum(),
        items: zod.z.array(zod.z.any()).min(1, i18n._({
            id: "TmwJ8/"
        }))
    });
const getLineItemsSchema = (i18n, isNonVatSupported)=>{
    const baseLineItemSchema = zod.z.object({
        id: zod.z.string().optional(),
        quantity: zod.z.number().min(0.1, i18n._({
            id: "pEO/nB"
        })),
        product_id: zod.z.string().optional(),
        product: zod.z.object({
            name: zod.z.string().min(1, i18n._({
                id: "4sGAxA"
            })),
            description: zod.z.string().optional(),
            price: zod.z.object({
                currency: getCurrencyEnum(),
                value: zod.z.number()
            }),
            measure_unit_id: zod.z.string().min(1, i18n._({
                id: "HQrKT/"
            })),
            smallest_amount: zod.z.number().optional(),
            type: zod.z.enum([
                'product',
                'service'
            ])
        })
    }).refine((data)=>Boolean(data.product.smallest_amount && data.quantity >= data.product.smallest_amount), {
        error: i18n._({
            id: "cLySCP"
        }),
        path: [
            'quantity'
        ]
    });
    const nonVatLineItemSchema = baseLineItemSchema.extend({
        vat_rate_value: zod.z.number().optional(),
        vat_rate_id: zod.z.string().optional(),
        tax_rate_value: zod.z.number({
            message: i18n._({
                id: "D2fH8j"
            })
        }).min(0, i18n._({
            id: "aOcOxA"
        })).max(100, i18n._({
            id: "bxDACV"
        }))
    });
    const vatLineItemSchema = baseLineItemSchema.extend({
        tax_rate_value: zod.z.number().min(0).max(100).optional(),
        vat_rate_value: zod.z.number({
            error: i18n._({
                id: "dcI7QV"
            })
        }).min(0),
        vat_rate_id: zod.z.string({
            error: i18n._({
                id: "dcI7QV"
            })
        }).min(1, i18n._({
            id: "dcI7QV"
        }))
    });
    return zod.z.array(isNonVatSupported ? nonVatLineItemSchema : vatLineItemSchema).min(1, i18n._({
        id: "TmwJ8/"
    }));
};
const getBaseInvoiceSchema = (i18n, isNonVatSupported)=>zod.z.object({
        counterpart_id: zod.z.string().min(1, i18n._({
            id: "C3n/2R"
        })),
        entity_vat_id_id: zod.z.string().optional(),
        counterpart_vat_id_id: zod.z.string().optional(),
        fulfillment_date: zod.z.date().nullable().optional(),
        purchase_order: zod.z.string().optional(),
        terms_and_conditions: zod.z.string().optional(),
        default_billing_address_id: zod.z.string().min(1, i18n._({
            id: "ZQ3BJq"
        })),
        default_shipping_address_id: zod.z.string().optional(),
        vat_exemption_rationale: zod.z.string().optional(),
        memo: zod.z.string().optional(),
        payment_terms_id: zod.z.string().min(1, i18n._({
            id: "+wNgM8"
        })),
        footer: zod.z.string().optional(),
        line_items: getLineItemsSchema(i18n, isNonVatSupported),
        overdue_reminder_id: zod.z.string().nullable().optional(),
        payment_reminder_id: zod.z.string().nullable().optional(),
        vat_mode: zod.z.enum([
            'exclusive',
            'inclusive'
        ])
    });
const getCreateInvoiceValidationSchema = (i18n, isNonVatSupported, shouldEnableBankAccount, isRecurrenceEnabled)=>{
    const baseInvoiceSchema = getBaseInvoiceSchema(i18n, isNonVatSupported);
    return baseInvoiceSchema.extend(_object_spread$1l({
        type: zod.z.string(),
        entity_bank_account_id: shouldEnableBankAccount ? zod.z.string().min(1, i18n._({
            id: "hWf3BS"
        })) : zod.z.string().optional()
    }, getBaseRecurrenceSchema(i18n, isRecurrenceEnabled).shape)).refine((data)=>{
        if (isRecurrenceEnabled && data.recurrence_issue_mode === 'first_day') {
            return data.recurrence_start_date && data.recurrence_start_date >= new Date();
        }
        return true;
    }, {
        error: i18n._({
            id: "yxlSra"
        }),
        path: [
            'recurrence_issue_mode'
        ]
    });
};
const getUpdateInvoiceValidationSchema = (i18n, isNonVatSupported)=>{
    const baseInvoiceSchema = getBaseInvoiceSchema(i18n, isNonVatSupported);
    return baseInvoiceSchema.extend({
        entity_bank_account_id: zod.z.string().optional()
    });
};
const getBaseRecurrenceSchema = (i18n, isRecurrenceEnabled = true)=>{
    return zod.z.object({
        recurrence_start_date: isRecurrenceEnabled ? zod.z.date().min(1, i18n._({
            id: "1xOA+d"
        })) : zod.z.string().optional(),
        recurrence_end_date: isRecurrenceEnabled ? zod.z.date().min(1, i18n._({
            id: "/AR9bc"
        })) : zod.z.string().optional(),
        recurrence_issue_mode: isRecurrenceEnabled ? zod.z.enum([
            'first_day',
            'last_day'
        ]) : zod.z.string().optional()
    });
};
const getCreateRecurrenceValidationSchema = (i18n, isRecurrenceEnabled = true)=>{
    const baseRecurrenceSchema = getBaseRecurrenceSchema(i18n, isRecurrenceEnabled);
    return baseRecurrenceSchema.refine((data)=>{
        if (data.recurrence_issue_mode === 'first_day') {
            return data.recurrence_start_date && data.recurrence_start_date >= new Date();
        }
        return true;
    }, {
        error: i18n._({
            id: "yxlSra"
        }),
        path: [
            'recurrence_issue_mode'
        ]
    });
};

function _define_property$1l(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1k(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1l(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$X(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$X(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$X(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CREATE_NEW_ID = '__create-new__';
const DIVIDER = '__divider__';
const CUSTOM_ID = 'custom';
function isCreateNewItemOption(itemOption) {
    return (itemOption === null || itemOption === void 0 ? void 0 : itemOption.id) === CREATE_NEW_ID;
}
function isDividerOption$1(itemOption) {
    return (itemOption === null || itemOption === void 0 ? void 0 : itemOption.id) === DIVIDER;
}
function isCustomOption(itemOption) {
    return (itemOption === null || itemOption === void 0 ? void 0 : itemOption.id) === CUSTOM_ID;
}
const ItemSelector = ({ fieldName, error, disabled, index = 0, actualCurrency, defaultCurrency, measureUnits, marginLeft = '4px', onCreateItem, onChange })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const currency = actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : defaultCurrency;
    const [customName, setCustomName] = React.useState('');
    const [isTyping, setIsTyping] = React.useState(false);
    const { control } = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getCreateInvoiceProductsValidationSchema(i18n)),
        defaultValues: React.useMemo(()=>({
                items: [],
                currency
            }), [
            currency
        ])
    });
    const { api } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: productsInfinity, isLoading } = api.products.getProducts.useInfiniteQuery({
        query: {
            limit: 20,
            currency
        }
    }, {
        initialPageParam: {
            query: {
                pagination_token: undefined
            }
        },
        getNextPageParam: (lastPage)=>{
            if (!lastPage.next_pagination_token) return;
            return {
                query: {
                    pagination_token: lastPage.next_pagination_token
                }
            };
        },
        enabled: !!currency
    });
    const flattenProducts = React.useMemo(()=>productsInfinity ? productsInfinity.pages.flatMap((page)=>page.data) : [], [
        productsInfinity
    ]);
    const itemsAutocompleteData = React.useMemo(()=>{
        if (!flattenProducts || flattenProducts.length === 0) {
            return [];
        }
        return flattenProducts.map((item)=>{
            const unit = measureUnits ? measureUnits.data.find((u)=>u.id === item.measure_unit_id) : undefined;
            return {
                id: item.id,
                label: item.name,
                description: item.description,
                price: item.price,
                smallestAmount: item.smallest_amount,
                measureUnit: unit,
                fieldName: fieldName !== null && fieldName !== void 0 ? fieldName : ''
            };
        });
    }, [
        flattenProducts,
        measureUnits,
        fieldName
    ]);
    React.useEffect(()=>{
        if (!isTyping && fieldName && fieldName.length > 0 && !customName.length) {
            const searchMatch = flattenProducts === null || flattenProducts === void 0 ? void 0 : flattenProducts.find((item)=>(item === null || item === void 0 ? void 0 : item.name) === fieldName);
            if (!searchMatch) {
                setCustomName(fieldName);
            }
        }
    }, [
        fieldName,
        isTyping,
        flattenProducts,
        customName
    ]);
    const handleCustomNameChange = useDebounceCallback((event)=>{
        setCustomName(event.target.value);
    }, 300);
    const handleFocus = React.useCallback(()=>setIsTyping(true), []);
    const handleBlur = React.useCallback(()=>{
        setIsTyping(false);
        if (customName && customName.trim() !== '') {
            const isCustomName = !itemsAutocompleteData.some((item)=>item.label === customName);
            if (isCustomName) {
                onChange({
                    id: CUSTOM_ID,
                    label: customName
                }, false);
            }
        }
    }, [
        customName,
        itemsAutocompleteData,
        onChange
    ]);
    const handleInputChange = React.useCallback((_, value)=>{
        setCustomName(value);
        if (value.trim()) {
            onChange({
                id: CUSTOM_ID,
                label: value
            }, false);
        }
    }, [
        onChange
    ]);
    const handleItemChange = React.useCallback((_, value, reason)=>{
        if (reason === 'clear') {
            setIsTyping(false);
            setCustomName('');
            onChange({
                id: '',
                label: ''
            }, false);
            return;
        }
        if (!value || isCreateNewItemOption(value) || isDividerOption$1(value)) {
            return;
        }
        if (isCustomOption(value)) {
            setCustomName(value.label);
            onChange({
                id: CUSTOM_ID,
                label: value.label
            }, false);
        } else {
            setCustomName('');
            onChange(value, true);
        }
    }, [
        onChange
    ]);
    const isOptionEqualToValue = React.useCallback((option, value)=>{
        if (!value) return false;
        if (isCustomOption(value)) {
            return isCustomOption(option) && option.label === value.label;
        }
        if (isCustomOption(option)) {
            return false;
        }
        if (isCreateNewItemOption(value) || isDividerOption$1(value)) {
            return option.id === value.id;
        }
        return option.id === value.id;
    }, []);
    const renderOption = React.useCallback((props, itemOption)=>{
        var _itemOption_measureUnit, _itemOption_price, _itemOption_price1;
        if (isCreateNewItemOption(itemOption)) {
            return /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                component: "div",
                onClick: onCreateItem,
                variant: "text",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                fullWidth: true,
                sx: {
                    justifyContent: 'flex-start',
                    px: 2
                },
                children: itemOption.label
            }, `item-option-${itemOption.id}-${itemOption.label}`);
        }
        if (isDividerOption$1(itemOption)) {
            return /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {
                sx: {
                    width: '100%',
                    my: 1
                }
            }, `item-option-${itemOption.id}-${itemOption.label}`);
        }
        return /*#__PURE__*/ react$3.createElement(material.MenuItem, _object_spread_props$X(_object_spread$1k({}, props), {
            key: `item-option-${itemOption.id}-${itemOption.label}`,
            sx: {
                display: 'flex',
                width: '100%',
                py: 1,
                px: 2,
                '& .item-content': {
                    display: 'flex',
                    width: '100%',
                    justifyContent: 'space-between',
                    alignItems: 'center',
                    gap: 2
                },
                '& .item-label': {
                    minWidth: 0,
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap'
                },
                '& .item-details': {
                    flexShrink: 0,
                    textAlign: 'right'
                }
            }
        }), /*#__PURE__*/ jsxRuntime.jsxs("div", {
            className: "item-content",
            children: [
                /*#__PURE__*/ jsxRuntime.jsx("span", {
                    className: "item-label",
                    children: itemOption === null || itemOption === void 0 ? void 0 : itemOption.label
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                    className: "item-details",
                    children: [
                        itemOption === null || itemOption === void 0 ? void 0 : itemOption.smallestAmount,
                        ' ',
                        itemOption === null || itemOption === void 0 ? void 0 : (_itemOption_measureUnit = itemOption.measureUnit) === null || _itemOption_measureUnit === void 0 ? void 0 : _itemOption_measureUnit.description,
                        " /",
                        ' ',
                        (itemOption === null || itemOption === void 0 ? void 0 : itemOption.price) && formatCurrencyToDisplay(itemOption === null || itemOption === void 0 ? void 0 : (_itemOption_price = itemOption.price) === null || _itemOption_price === void 0 ? void 0 : _itemOption_price.value, itemOption === null || itemOption === void 0 ? void 0 : (_itemOption_price1 = itemOption.price) === null || _itemOption_price1 === void 0 ? void 0 : _itemOption_price1.currency)
                    ]
                })
            ]
        }));
    }, [
        formatCurrencyToDisplay,
        onCreateItem
    ]);
    const getOptionLabel = React.useCallback((itemOption)=>{
        if (typeof itemOption === 'string') {
            return itemOption;
        }
        if (isCreateNewItemOption(itemOption) || isDividerOption$1(itemOption)) {
            return '';
        }
        return itemOption.label;
    }, []);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        name: `items.${index}`,
        control: control,
        render: ({ field })=>{
            let selectedItem = flattenProducts === null || flattenProducts === void 0 ? void 0 : flattenProducts.find((item)=>(item === null || item === void 0 ? void 0 : item.id) === (field === null || field === void 0 ? void 0 : field.value));
            //fieldName will be inherited after value is saved. some possible scenarios:
            //(Create invoice: name typed followed by onblur . Edit invoice: name loaded.)
            if (!isTyping && fieldName && fieldName.length > 0 && !customName.length && !selectedItem) {
                const searchMatch = flattenProducts === null || flattenProducts === void 0 ? void 0 : flattenProducts.find((item)=>(item === null || item === void 0 ? void 0 : item.name) === fieldName // potentially item?.product.name, double check
                );
                if (searchMatch) {
                    // inherited value was found in catalogue
                    selectedItem = searchMatch;
                }
            }
            const selectedItemOption = selectedItem ? {
                id: selectedItem.id,
                label: selectedItem.name
            } : customName ? {
                id: CUSTOM_ID,
                label: customName
            } : null;
            return /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$X(_object_spread$1k({}, field), {
                id: `item-selector-${index}`,
                value: selectedItemOption,
                onChange: (e, value, reason)=>{
                    if (reason === 'clear') {
                        field.onChange(null);
                        handleItemChange(e, null, reason);
                        return;
                    }
                    if (typeof value === 'string') {
                        const stringValue = {
                            id: CUSTOM_ID,
                            label: value
                        };
                        handleItemChange(e, stringValue, reason);
                        field.onChange(stringValue.id);
                        return;
                    }
                    handleItemChange(e, value, reason);
                    if (value) {
                        field.onChange(value.id);
                    }
                },
                onInputChange: handleInputChange,
                freeSolo: true,
                blurOnSelect: false,
                openOnFocus: true,
                loading: isLoading || disabled,
                options: itemsAutocompleteData,
                getOptionLabel: getOptionLabel,
                selectOnFocus: true,
                clearOnBlur: false,
                handleHomeEndKeys: true,
                renderOption: renderOption,
                isOptionEqualToValue: isOptionEqualToValue,
                slotProps: {
                    popper: {
                        container: root,
                        sx: {
                            width: 'calc(50% - 80px) !important',
                            maxWidth: 'min(940px, 100%)',
                            left: '40px !important'
                        }
                    }
                },
                disableClearable: false,
                filterOptions: (options, params)=>{
                    if (options.length === 0) {
                        const result = [
                            {
                                id: CREATE_NEW_ID,
                                label: i18n._({
                                    id: "BEAJFS"
                                })
                            }
                        ];
                        if (params.inputValue.length) {
                            result.push({
                                id: CUSTOM_ID,
                                label: params.inputValue
                            });
                        }
                        return result;
                    }
                    const { filtered, reverseFiltered } = options.reduce((acc, option)=>{
                        if (option.label.toLowerCase().includes(params.inputValue.toLowerCase())) {
                            acc.filtered.push(option);
                        } else {
                            acc.reverseFiltered.push(option);
                        }
                        return acc;
                    }, {
                        filtered: [],
                        reverseFiltered: []
                    });
                    filtered.unshift({
                        id: CREATE_NEW_ID,
                        label: i18n._({
                            id: "BEAJFS"
                        })
                    });
                    if (params.inputValue.length) {
                        const hasExactMatch = filtered.some((item)=>item.label.toLowerCase() === params.inputValue.toLowerCase());
                        if (!hasExactMatch && params.inputValue.trim()) {
                            filtered.push({
                                id: CUSTOM_ID,
                                label: params.inputValue
                            });
                        }
                        filtered.push({
                            id: DIVIDER,
                            label: '-'
                        });
                    }
                    return [
                        ...filtered,
                        ...reverseFiltered
                    ];
                },
                renderInput: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$X(_object_spread$1k({}, params), {
                        label: ``,
                        placeholder: i18n._({
                            id: "XOxXXw"
                        }),
                        required: true,
                        error: error,
                        className: "Item-Selector",
                        sx: {
                            width: '100%',
                            marginLeft
                        },
                        InputProps: _object_spread_props$X(_object_spread$1k({}, params.InputProps), {
                            onFocus: handleFocus,
                            onBlur: handleBlur,
                            startAdornment: isLoading && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                size: 20
                            }),
                            endAdornment: /*#__PURE__*/ jsxRuntime.jsx("div", {
                                style: {
                                    display: 'flex',
                                    alignItems: 'center',
                                    gap: '4px'
                                },
                                children: params.InputProps.endAdornment
                            })
                        }),
                        onChange: handleCustomNameChange
                    }))
            }));
        }
    });
};

const PriceField = ({ value, error = false, currency, disabled = false, onChange, locale: propLocale })=>{
    const { getSymbolFromCurrency } = useCurrencies();
    const { i18n } = react.useLingui();
    const locale = propLocale !== null && propLocale !== void 0 ? propLocale : i18n.locale;
    const numberFormatter = React.useMemo(()=>{
        return new Intl.NumberFormat(locale, {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        });
    }, [
        locale
    ]);
    const { decimalSeparator, groupSeparator } = React.useMemo(()=>{
        var _parts_find, _parts_find1;
        const parts = new Intl.NumberFormat(locale).formatToParts(12345.67);
        return {
            decimalSeparator: ((_parts_find = parts.find((part)=>part.type === 'decimal')) === null || _parts_find === void 0 ? void 0 : _parts_find.value) || '.',
            groupSeparator: ((_parts_find1 = parts.find((part)=>part.type === 'group')) === null || _parts_find1 === void 0 ? void 0 : _parts_find1.value) || ''
        };
    }, [
        locale
    ]);
    const [inputValue, setInputValue] = React.useState(formatMinorToMajorCurrency(value, numberFormatter));
    const [isFocused, setIsFocused] = React.useState(false);
    React.useEffect(()=>{
        // Only update the input value from the value prop if the input is not focused
        // and the prop-derived value actually differs from the current input value.
        // This prevents resetting the input (and cursor position) while the user is actively typing.
        if (!isFocused) {
            const majorValue = formatMinorToMajorCurrency(value, numberFormatter);
            if (majorValue !== inputValue) {
                setInputValue(majorValue);
            }
        }
    }, [
        value,
        isFocused,
        locale,
        numberFormatter,
        inputValue
    ]);
    const handleChange = (e)=>{
        const val = e.target.value;
        setInputValue(val);
    // Immediate reformatting is avoided here to allow the user to type freely (e.g., decimals).
    // The final parsing, formatting, and calling onChange occur on blur.
    };
    const handleFocus = ()=>{
        setIsFocused(true);
    };
    const handleBlur = (e)=>{
        setIsFocused(false);
        const currentVal = e.target.value.trim();
        if (currentVal === '') {
            setInputValue(formatMinorToMajorCurrency(0, numberFormatter));
            onChange(0);
            return;
        }
        const minorValue = parseMajorToMinorCurrency(currentVal, decimalSeparator, groupSeparator);
        setInputValue(formatMinorToMajorCurrency(minorValue, numberFormatter));
        onChange(minorValue);
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
        value: inputValue,
        onChange: handleChange,
        onFocus: handleFocus,
        onBlur: handleBlur,
        // Using type="text" is intentional to allow more flexible input patterns (like leading/trailing decimals during typing)
        // and to maintain control over formatting, which might be lost with type="number".
        type: "text",
        InputProps: {
            startAdornment: /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                position: "start",
                children: getSymbolFromCurrency(currency) || currency
            })
        },
        inputProps: {
            inputMode: 'decimal',
            min: 0,
            step: '0.01'
        },
        fullWidth: true,
        size: "small",
        error: error,
        disabled: disabled
    });
};

const MeasureUnitField = ({ value, availableMeasureUnits, error, skipDefaultAssignment = false, disabled = false, onChange })=>{
    const { root } = useRootElements();
    const [hasSetDefault, setHasSetDefault] = React.useState(skipDefaultAssignment);
    React.useEffect(()=>{
        var _availableMeasureUnits_;
        if (skipDefaultAssignment || hasSetDefault) {
            return;
        }
        const firstAvailableMeasureUnitId = availableMeasureUnits === null || availableMeasureUnits === void 0 ? void 0 : (_availableMeasureUnits_ = availableMeasureUnits[0]) === null || _availableMeasureUnits_ === void 0 ? void 0 : _availableMeasureUnits_.id;
        if (!value && value !== '' && firstAvailableMeasureUnitId) {
            onChange(firstAvailableMeasureUnitId);
            setHasSetDefault(true);
        }
    }, [
        value,
        availableMeasureUnits,
        onChange,
        skipDefaultAssignment,
        hasSetDefault
    ]);
    const handleChange = (event)=>{
        const selectedUnitId = event.target.value;
        onChange(selectedUnitId);
    };
    const displayValue = value !== null && value !== void 0 ? value : '';
    return /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
        MenuProps: {
            container: root
        },
        value: displayValue,
        onChange: handleChange,
        error: error,
        disabled: disabled,
        displayEmpty: true,
        size: "small",
        sx: {
            background: 'transparent',
            minHeight: 'fit-content !important',
            '.MuiSelect-select.MuiSelect-outlined': {
                paddingLeft: 0
            },
            '&:hover': {
                boxShadow: 'none !important',
                borderColor: 'transparent !important',
                background: 'transparent'
            },
            '&.MuiInputBase-root .MuiInputBase-inputSizeSmall': {
                paddingLeft: 0
            },
            '&.Mui-focused.MuiInputBase-root': {
                boxShadow: 'none !important',
                background: 'transparent'
            },
            '& .MuiOutlinedInput-notchedOutline': {
                border: 'none !important',
                background: 'transparent'
            },
            '&:hover .MuiOutlinedInput-notchedOutline': {
                border: 'none !important',
                background: 'transparent'
            },
            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {
                background: 'transparent'
            }
        },
        children: availableMeasureUnits === null || availableMeasureUnits === void 0 ? void 0 : availableMeasureUnits.map((unit)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                value: unit.id,
                children: unit.name
            }, unit.id))
    });
};

function _define_property$1k(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1j(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1k(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$W(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$W(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$W(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const QuantityField = ({ index, control, quantityError: hasQuantityError, measureUnitsData, measureUnitFieldError, onRequestLineItemValue, onLineItemValueChange, onLineItemManuallyChanged })=>{
    const { i18n } = react.useLingui();
    const [editingQuantityIndex, setEditingQuantityIndex] = React.useState(null);
    const [quantityRawValue, setQuantityRawValue] = React.useState('');
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        name: `line_items.${index}.quantity`,
        control: control,
        render: ({ field: quantityControllerField })=>{
            var _measureUnitsData_data, _quantityControllerField_value;
            var _measureUnitsData_data_length;
            return /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                variant: "standard",
                fullWidth: true,
                required: true,
                error: hasQuantityError || Boolean(measureUnitFieldError),
                children: /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$W(_object_spread$1j({}, quantityControllerField), {
                    error: hasQuantityError || Boolean(measureUnitFieldError),
                    InputProps: {
                        endAdornment: ((_measureUnitsData_data_length = measureUnitsData === null || measureUnitsData === void 0 ? void 0 : (_measureUnitsData_data = measureUnitsData.data) === null || _measureUnitsData_data === void 0 ? void 0 : _measureUnitsData_data.length) !== null && _measureUnitsData_data_length !== void 0 ? _measureUnitsData_data_length : 0) > 0 && /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                            position: "end",
                            children: /*#__PURE__*/ jsxRuntime.jsx(MeasureUnitField, {
                                value: onRequestLineItemValue('product.measure_unit_id'),
                                onChange: (newId)=>{
                                    onLineItemValueChange('product.measure_unit_id', newId, {
                                        shouldValidate: true
                                    });
                                    onLineItemManuallyChanged();
                                },
                                availableMeasureUnits: (measureUnitsData === null || measureUnitsData === void 0 ? void 0 : measureUnitsData.data) || [],
                                fieldError: measureUnitFieldError,
                                skipDefaultAssignment: Boolean(onRequestLineItemValue('product.name')) || Boolean(onRequestLineItemValue('product.measure_unit_name') || onRequestLineItemValue('measure_unit.name'))
                            })
                        })
                    },
                    type: "text",
                    size: "small",
                    value: index === editingQuantityIndex ? quantityRawValue : ((_quantityControllerField_value = quantityControllerField.value) === null || _quantityControllerField_value === void 0 ? void 0 : _quantityControllerField_value.toString()) || '',
                    onFocus: ()=>{
                        var _quantityControllerField_value;
                        setEditingQuantityIndex(index);
                        setQuantityRawValue(((_quantityControllerField_value = quantityControllerField.value) === null || _quantityControllerField_value === void 0 ? void 0 : _quantityControllerField_value.toString()) || '');
                    },
                    onBlur: ()=>{
                        const numericValue = parseLocaleNumericString(quantityRawValue, i18n.locale);
                        onLineItemValueChange('quantity', numericValue, {
                            shouldValidate: true
                        });
                        setEditingQuantityIndex(null);
                        quantityControllerField.onBlur();
                    },
                    onChange: (e)=>{
                        const rawValue = e.target.value;
                        setQuantityRawValue(rawValue);
                        onLineItemManuallyChanged();
                        const numericValue = parseLocaleNumericString(rawValue, i18n.locale);
                        onLineItemValueChange('quantity', numericValue, {
                            shouldValidate: false
                        });
                    },
                    sx: {
                        '& .MuiInputBase-root': {
                            paddingRight: '0 !important',
                            '.MuiInputBase-input': {
                                paddingRight: 0
                            }
                        }
                    }
                }))
            });
        }
    });
};

const TaxRateField = ({ value, error, disabled = false, onModified, onChange, onBlur })=>{
    const handleChange = (e)=>{
        const inputValue = e.target.value;
        // If the field is empty, pass undefined to trigger required validation
        if (inputValue === '') {
            onChange(undefined);
            onModified === null || onModified === void 0 ? void 0 : onModified();
            return;
        }
        const processedValue = processTaxRateValue(inputValue);
        onChange(processedValue);
        onModified === null || onModified === void 0 ? void 0 : onModified();
    };
    const handleInput = (e)=>{
        formatTaxRate(e.target);
    };
    const handleBlur = ()=>{
        onBlur === null || onBlur === void 0 ? void 0 : onBlur();
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
        value: value !== null && value !== void 0 ? value : '',
        type: "number",
        inputProps: {
            min: 0,
            max: 100,
            step: 'any'
        },
        InputProps: {
            endAdornment: /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                position: "end",
                children: "%"
            })
        },
        size: "small",
        error: error,
        disabled: disabled,
        onChange: handleChange,
        onInput: handleInput,
        onBlur: handleBlur,
        sx: {
            width: '120px'
        }
    });
};

/**
 * Converts a rate from minor units (API format) to major units (UI display format)
 * Example: 2000 -> 20
 * @param rateMinor The rate value in minor units (as received from API)
 * @returns The rate value in major units (for UI display)
 */ const rateMinorToMajor = (rateMinor)=>{
    return fromMinorUnits(rateMinor);
};
/**
 * Converts a rate from major units (UI display format) to minor units (API format)
 * Example: 20 -> 2000
 * @param rateMajor The rate value in major units (from UI)
 * @returns The rate value in minor units (for API)
 */ const rateMajorToMinor = (rateMajor)=>{
    return toMinorUnits(rateMajor);
};
/**
 * Gets the appropriate rate value based on whether VAT is supported,
 * converting to major units for display
 * @param isNonVatSupported Whether VAT is not supported
 * @param vatRateMinor The VAT rate value in minor units (from API)
 * @param taxRateMajor The tax rate value in major units (from UI)
 * @returns The appropriate rate value in major units (for display)
 */ const getRateValueForDisplay = (isNonVatSupported, vatRateMinor, taxRateMajor)=>{
    if (isNonVatSupported) {
        return taxRateMajor;
    }
    return rateMinorToMajor(vatRateMinor);
};
/**
 * Format a VAT rate for display as a percentage string
 * Takes a rate in minor units (e.g., 700 for 7%) and returns a formatted string (e.g., "7.00%")
 * toLocaleString with style: 'percent' expects values in range 0-1, where 0.07 represents 7%
 */ const formatVatRateForDisplay = (rateValue)=>{
    return (rateMinorToMajor(rateValue) / 100).toLocaleString(undefined, {
        style: 'percent',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
    });
};

const VatRateField = ({ availableVatRates, value, isNonVatSupported, currentTaxRateValue, highestVatRate, error, disabled = false, onChange, onInitializeDefaults, onModified })=>{
    const { root } = useRootElements();
    const [hasInitialized, setHasInitialized] = React.useState(false);
    React.useEffect(()=>{
        if (hasInitialized || !onInitializeDefaults) {
            return;
        }
        let defaultVatId = null;
        let defaultVatValue = null;
        let defaultTaxRate = null;
        if (!isNonVatSupported && highestVatRate) {
            // For VAT-supported regions, always set the highest VAT rate as default
            defaultVatId = highestVatRate.id;
            defaultVatValue = highestVatRate.value;
            defaultTaxRate = null;
        } else if (isNonVatSupported) {
            // For non-VAT regions, set VAT rate to null and use tax_rate_value (default to 0%)
            defaultVatId = null;
            defaultVatValue = null;
            defaultTaxRate = currentTaxRateValue === undefined ? 0 : currentTaxRateValue;
        }
        if (defaultVatId !== value || isNonVatSupported && defaultTaxRate !== currentTaxRateValue) {
            onInitializeDefaults(defaultVatId, defaultVatValue, defaultTaxRate);
        }
        setHasInitialized(true);
    }, [
        hasInitialized,
        isNonVatSupported,
        highestVatRate,
        onInitializeDefaults,
        value,
        currentTaxRateValue
    ]);
    // If we're in a non-VAT region, we don't need to show the VAT rate selector
    if (isNonVatSupported) {
        return null;
    }
    const handleChange = (event)=>{
        const selectedVatRateId = event.target.value;
        const selectedVatRate = availableVatRates === null || availableVatRates === void 0 ? void 0 : availableVatRates.find((rate)=>rate.id === selectedVatRateId);
        onChange(selectedVatRateId, selectedVatRate === null || selectedVatRate === void 0 ? void 0 : selectedVatRate.value);
        onModified === null || onModified === void 0 ? void 0 : onModified();
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
        MenuProps: {
            container: root
        },
        value: value !== null && value !== void 0 ? value : '',
        onChange: handleChange,
        variant: "outlined",
        error: error,
        disabled: disabled,
        fullWidth: true,
        size: "small",
        children: availableVatRates === null || availableVatRates === void 0 ? void 0 : availableVatRates.map((rate)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                value: rate.id,
                children: formatVatRateForDisplay(rate.value)
            }, rate.id))
    });
};

const InvoiceItemRowComponent = ({ field, index, control, errors, actualCurrency, defaultCurrency = 'USD', measureUnitsData, isNonVatSupported, vatRates, highestVatRate, tableRowClassName, onRequestLineItemValue, onLineItemValueChange, onLineItemManuallyChanged, onRequestOpenCreateProductDialog, onUpdateItem, onRemoveItem, onRequestLineItemValidation })=>{
    var _errors_line_items_index_product, _errors_line_items_index, _errors_line_items, _errors_line_items_index1, _errors_line_items1, _errors_line_items_index_product_price, _errors_line_items_index_product1, _errors_line_items_index2, _errors_line_items2, _errors_line_items_index3, _errors_line_items3, _errors_line_items_index4, _errors_line_items4, _errors_line_items_index_product2, _errors_line_items_index5, _errors_line_items5, _errors_line_items_index6, _errors_line_items6, _errors_line_items_index7, _errors_line_items7, _errors_line_items_index8, _errors_line_items8;
    const itemNameError = Boolean((_errors_line_items = errors.line_items) === null || _errors_line_items === void 0 ? void 0 : (_errors_line_items_index = _errors_line_items[index]) === null || _errors_line_items_index === void 0 ? void 0 : (_errors_line_items_index_product = _errors_line_items_index.product) === null || _errors_line_items_index_product === void 0 ? void 0 : _errors_line_items_index_product.name);
    const quantityError = Boolean((_errors_line_items1 = errors.line_items) === null || _errors_line_items1 === void 0 ? void 0 : (_errors_line_items_index1 = _errors_line_items1[index]) === null || _errors_line_items_index1 === void 0 ? void 0 : _errors_line_items_index1.quantity);
    const priceError = Boolean((_errors_line_items2 = errors.line_items) === null || _errors_line_items2 === void 0 ? void 0 : (_errors_line_items_index2 = _errors_line_items2[index]) === null || _errors_line_items_index2 === void 0 ? void 0 : (_errors_line_items_index_product1 = _errors_line_items_index2.product) === null || _errors_line_items_index_product1 === void 0 ? void 0 : (_errors_line_items_index_product_price = _errors_line_items_index_product1.price) === null || _errors_line_items_index_product_price === void 0 ? void 0 : _errors_line_items_index_product_price.value);
    const taxOrVatError = isNonVatSupported ? Boolean((_errors_line_items3 = errors.line_items) === null || _errors_line_items3 === void 0 ? void 0 : (_errors_line_items_index3 = _errors_line_items3[index]) === null || _errors_line_items_index3 === void 0 ? void 0 : _errors_line_items_index3.tax_rate_value) : Boolean((_errors_line_items4 = errors.line_items) === null || _errors_line_items4 === void 0 ? void 0 : (_errors_line_items_index4 = _errors_line_items4[index]) === null || _errors_line_items_index4 === void 0 ? void 0 : _errors_line_items_index4.vat_rate_id);
    const measureUnitFieldError = (_errors_line_items5 = errors.line_items) === null || _errors_line_items5 === void 0 ? void 0 : (_errors_line_items_index5 = _errors_line_items5[index]) === null || _errors_line_items_index5 === void 0 ? void 0 : (_errors_line_items_index_product2 = _errors_line_items_index5.product) === null || _errors_line_items_index_product2 === void 0 ? void 0 : _errors_line_items_index_product2.measure_unit_id;
    const handleVatRateDefaults = (defaultVatId, defaultVatValue, defaultTaxRate)=>{
        if (onRequestLineItemValue('vat_rate_id') !== defaultVatId) {
            onLineItemValueChange('vat_rate_id', defaultVatId, {
                shouldValidate: false
            });
        }
        if (onRequestLineItemValue('vat_rate_value') !== defaultVatValue) {
            onLineItemValueChange('vat_rate_value', defaultVatValue, {
                shouldValidate: false
            });
        }
        if (isNonVatSupported && onRequestLineItemValue('tax_rate_value') !== defaultTaxRate) {
            onLineItemValueChange('tax_rate_value', defaultTaxRate, {
                shouldValidate: false
            });
        } else if (!isNonVatSupported && defaultTaxRate === null && onRequestLineItemValue('tax_rate_value') !== undefined) {
            onLineItemValueChange('tax_rate_value', undefined, {
                shouldValidate: false
            });
        }
    };
    const handleTaxRateBlur = ()=>{
        onRequestLineItemValidation === null || onRequestLineItemValidation === void 0 ? void 0 : onRequestLineItemValidation('tax_rate_value');
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
        className: tableRowClassName,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                sx: {
                    width: {
                        xs: '30%',
                        xl: '40%'
                    },
                    paddingLeft: 0,
                    paddingRight: 2
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(ItemSelector, {
                    onCreateItem: onRequestOpenCreateProductDialog,
                    onChange: (item, isCatalogItem)=>onUpdateItem(index, item, isCatalogItem),
                    fieldName: onRequestLineItemValue('product.name') || '',
                    index: index,
                    error: itemNameError,
                    actualCurrency: actualCurrency,
                    defaultCurrency: defaultCurrency,
                    measureUnits: measureUnitsData
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                sx: {
                    width: {
                        xs: '30%',
                        xl: '20%'
                    },
                    paddingLeft: 2,
                    paddingRight: 2
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(QuantityField, {
                    index: index,
                    control: control,
                    quantityError: quantityError,
                    measureUnitsData: measureUnitsData,
                    measureUnitFieldError: measureUnitFieldError,
                    onRequestLineItemValue: onRequestLineItemValue,
                    onLineItemValueChange: onLineItemValueChange,
                    onLineItemManuallyChanged: onLineItemManuallyChanged
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                sx: {
                    width: '20%',
                    paddingLeft: 2,
                    paddingRight: 2
                },
                align: "right",
                children: /*#__PURE__*/ jsxRuntime.jsx(PriceField, {
                    error: priceError,
                    currency: actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : defaultCurrency,
                    value: onRequestLineItemValue('product.price.value'),
                    onChange: (newPrice)=>{
                        onLineItemValueChange('product.price.value', newPrice, {
                            shouldValidate: true
                        });
                        onLineItemManuallyChanged();
                    }
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                sx: {
                    width: 'fit-content',
                    paddingLeft: 2,
                    paddingRight: 2
                },
                children: isNonVatSupported ? /*#__PURE__*/ jsxRuntime.jsx(TaxRateField, {
                    value: onRequestLineItemValue('tax_rate_value'),
                    onChange: (newRate)=>{
                        onLineItemValueChange('tax_rate_value', newRate, {
                            shouldValidate: true
                        });
                        onLineItemManuallyChanged();
                    },
                    error: Boolean((_errors_line_items6 = errors.line_items) === null || _errors_line_items6 === void 0 ? void 0 : (_errors_line_items_index6 = _errors_line_items6[index]) === null || _errors_line_items_index6 === void 0 ? void 0 : _errors_line_items_index6.tax_rate_value),
                    onModified: onLineItemManuallyChanged,
                    onBlur: handleTaxRateBlur
                }) : /*#__PURE__*/ jsxRuntime.jsx(material.FormControl, {
                    variant: "outlined",
                    fullWidth: true,
                    required: true,
                    error: taxOrVatError,
                    children: /*#__PURE__*/ jsxRuntime.jsx(VatRateField, {
                        value: onRequestLineItemValue('vat_rate_id'),
                        onChange: (newId, newValue)=>{
                            onLineItemValueChange('vat_rate_id', newId, {
                                shouldValidate: true
                            });
                            onLineItemValueChange('vat_rate_value', newValue, {
                                shouldValidate: true
                            });
                            onLineItemValueChange('tax_rate_value', undefined, {
                                shouldValidate: false
                            });
                            onLineItemManuallyChanged();
                        },
                        availableVatRates: vatRates !== null && vatRates !== void 0 ? vatRates : [],
                        error: Boolean((_errors_line_items7 = errors.line_items) === null || _errors_line_items7 === void 0 ? void 0 : (_errors_line_items_index7 = _errors_line_items7[index]) === null || _errors_line_items_index7 === void 0 ? void 0 : _errors_line_items_index7.vat_rate_id),
                        fieldError: (_errors_line_items8 = errors.line_items) === null || _errors_line_items8 === void 0 ? void 0 : (_errors_line_items_index8 = _errors_line_items8[index]) === null || _errors_line_items_index8 === void 0 ? void 0 : _errors_line_items_index8.vat_rate_id,
                        isNonVatSupported: isNonVatSupported,
                        highestVatRate: highestVatRate,
                        currentTaxRateValue: onRequestLineItemValue('tax_rate_value'),
                        onInitializeDefaults: handleVatRateDefaults,
                        onModified: onLineItemManuallyChanged
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                sx: {
                    padding: 0,
                    width: '48px'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                    onClick: ()=>onRemoveItem(index),
                    sx: {
                        padding: '4px'
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default.default, {})
                })
            })
        ]
    }, field.id);
};
const InvoiceItemRow = /*#__PURE__*/ React.memo(InvoiceItemRowComponent);

const TotalTableItem = ({ label, value, className })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
        className: tailwindMerge.twMerge('mtw:flex mtw:justify-between mtw:items-center', className),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                children: label
            }),
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                children: value === null || value === void 0 ? void 0 : value.toString()
            })
        ]
    });
};
const InvoiceTotals = ({ subtotalPrice, totalTaxes, totalPrice, taxesByVatRate = {}, actualCurrency, defaultCurrency })=>{
    var _Object_entries;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    return /*#__PURE__*/ jsxRuntime.jsxs("ul", {
        className: "mtw:w-full mtw:flex mtw:flex-col mtw:gap-2 mtw:list-none",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(TotalTableItem, {
                label: i18n._({
                    id: "X2rrlw"
                }),
                value: subtotalPrice,
                className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50"
            }),
            ((_Object_entries = Object.entries(taxesByVatRate)) === null || _Object_entries === void 0 ? void 0 : _Object_entries.length) > 0 ? Object.entries(taxesByVatRate).map(([taxRate, totalTax])=>{
                var _formatCurrencyToDisplay;
                return /*#__PURE__*/ jsxRuntime.jsx(TotalTableItem, {
                    label: i18n._({
                        id: "BnANLt",
                        values: {
                            taxRate: taxRate
                        }
                    }),
                    value: (_formatCurrencyToDisplay = formatCurrencyToDisplay(totalTax, actualCurrency || defaultCurrency || 'USD', true)) === null || _formatCurrencyToDisplay === void 0 ? void 0 : _formatCurrencyToDisplay.toString(),
                    className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50"
                }, taxRate);
            }) : /*#__PURE__*/ jsxRuntime.jsx(TotalTableItem, {
                label: i18n._({
                    id: "icB5BS"
                }),
                value: totalTaxes,
                className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50"
            }),
            /*#__PURE__*/ jsxRuntime.jsx(TotalTableItem, {
                label: i18n._({
                    id: "72c5Qo"
                }),
                value: totalPrice,
                className: "mtw:text-base mtw:font-medium mtw:text-neutral-10"
            })
        ]
    });
};

function _define_property$1j(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
class Price {
    add(addend) {
        if (this.currency !== addend.currency) {
            throw new Error('Currencies must match');
        }
        return new Price({
            value: Number(this.value) + Number(addend.value),
            currency: this.currency,
            formatter: this.formatter
        });
    }
    toString() {
        var _this_formatter;
        return (_this_formatter = this.formatter(this.value, this.currency)) !== null && _this_formatter !== void 0 ? _this_formatter : '';
    }
    constructor(params){
        _define_property$1j(this, "value", void 0);
        _define_property$1j(this, "currency", void 0);
        _define_property$1j(this, "formatter", void 0);
        this.value = params.value;
        this.currency = params.currency;
        this.formatter = params.formatter;
    }
}

/**
 * Hook to calculate the subtotal, total taxes and total price of the invoice
 *  (all math operations) before create invoice
 */ const useCreateInvoiceProductsTable = ({ lineItems, isNonVatSupported, isInclusivePricing, actualCurrency, formatCurrencyToDisplay })=>{
    const getPriceAndQuantity = (field)=>{
        var _field_product_price, _field_product, _field_price;
        var _field_product_price_value, _ref;
        const price = (_ref = (_field_product_price_value = (_field_product = field.product) === null || _field_product === void 0 ? void 0 : (_field_product_price = _field_product.price) === null || _field_product_price === void 0 ? void 0 : _field_product_price.value) !== null && _field_product_price_value !== void 0 ? _field_product_price_value : (_field_price = field.price) === null || _field_price === void 0 ? void 0 : _field_price.value) !== null && _ref !== void 0 ? _ref : 0;
        var _field_quantity;
        const quantity = (_field_quantity = field.quantity) !== null && _field_quantity !== void 0 ? _field_quantity : 1;
        return {
            price,
            quantity
        };
    };
    const subtotalPrice = React.useMemo(()=>{
        var _lineItems_find_product_price, _lineItems_find_product, _lineItems_find, _lineItems_find_price, _lineItems_find1;
        const price = lineItems.reduce((acc, field)=>{
            const { price, quantity } = getPriceAndQuantity(field);
            var _field_vat_rate_value, _field_tax_rate_value;
            const vatRate = getRateValueForDisplay(isNonVatSupported, (_field_vat_rate_value = field.vat_rate_value) !== null && _field_vat_rate_value !== void 0 ? _field_vat_rate_value : 0, (_field_tax_rate_value = field.tax_rate_value) !== null && _field_tax_rate_value !== void 0 ? _field_tax_rate_value : 0) / 100;
            if (isInclusivePricing && vatRate) {
                const base = price * quantity / (1 + vatRate);
                return acc + base;
            }
            return acc + price * quantity;
        }, 0);
        var _ref;
        const currency = (_ref = actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : (_lineItems_find = lineItems.find((field)=>{
            var _field_product_price, _field_product;
            return Boolean((_field_product = field.product) === null || _field_product === void 0 ? void 0 : (_field_product_price = _field_product.price) === null || _field_product_price === void 0 ? void 0 : _field_product_price.currency);
        })) === null || _lineItems_find === void 0 ? void 0 : (_lineItems_find_product = _lineItems_find.product) === null || _lineItems_find_product === void 0 ? void 0 : (_lineItems_find_product_price = _lineItems_find_product.price) === null || _lineItems_find_product_price === void 0 ? void 0 : _lineItems_find_product_price.currency) !== null && _ref !== void 0 ? _ref : (_lineItems_find1 = lineItems.find((field)=>{
            var _field_price;
            return Boolean((_field_price = field.price) === null || _field_price === void 0 ? void 0 : _field_price.currency);
        })) === null || _lineItems_find1 === void 0 ? void 0 : (_lineItems_find_price = _lineItems_find1.price) === null || _lineItems_find_price === void 0 ? void 0 : _lineItems_find_price.currency;
        if (!currency) {
            return undefined;
        }
        return new Price({
            value: price,
            currency: currency,
            formatter: formatCurrencyToDisplay
        });
    }, [
        lineItems,
        formatCurrencyToDisplay,
        actualCurrency,
        isInclusivePricing,
        isNonVatSupported
    ]);
    const taxesByVatRate = React.useMemo(()=>{
        return lineItems.reduce((acc, field)=>{
            const { price, quantity } = getPriceAndQuantity(field);
            var _field_vat_rate_value, _field_tax_rate_value;
            const vatRate = getRateValueForDisplay(isNonVatSupported, (_field_vat_rate_value = field.vat_rate_value) !== null && _field_vat_rate_value !== void 0 ? _field_vat_rate_value : 0, (_field_tax_rate_value = field.tax_rate_value) !== null && _field_tax_rate_value !== void 0 ? _field_tax_rate_value : 0);
            if (!vatRate) return acc;
            const amount = price * quantity;
            const tax = isInclusivePricing ? amount - amount / (1 + vatRate / 100) : amount * (vatRate / 100);
            if (acc[vatRate]) {
                acc[vatRate] += tax;
            } else {
                acc[vatRate] = tax;
            }
            return acc;
        }, {});
    }, [
        lineItems,
        isInclusivePricing,
        isNonVatSupported
    ]);
    const totalTaxes = React.useMemo(()=>{
        var _lineItems_find_product_price, _lineItems_find_product, _lineItems_find, _lineItems_find_price, _lineItems_find1;
        const taxes = Object.values(taxesByVatRate).reduce((acc, v)=>acc + v, 0);
        var _ref;
        const currency = (_ref = actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : (_lineItems_find = lineItems.find((field)=>{
            var _field_product_price, _field_product;
            return Boolean((_field_product = field.product) === null || _field_product === void 0 ? void 0 : (_field_product_price = _field_product.price) === null || _field_product_price === void 0 ? void 0 : _field_product_price.currency);
        })) === null || _lineItems_find === void 0 ? void 0 : (_lineItems_find_product = _lineItems_find.product) === null || _lineItems_find_product === void 0 ? void 0 : (_lineItems_find_product_price = _lineItems_find_product.price) === null || _lineItems_find_product_price === void 0 ? void 0 : _lineItems_find_product_price.currency) !== null && _ref !== void 0 ? _ref : (_lineItems_find1 = lineItems.find((field)=>{
            var _field_price;
            return Boolean((_field_price = field.price) === null || _field_price === void 0 ? void 0 : _field_price.currency);
        })) === null || _lineItems_find1 === void 0 ? void 0 : (_lineItems_find_price = _lineItems_find1.price) === null || _lineItems_find_price === void 0 ? void 0 : _lineItems_find_price.currency;
        if (!currency) {
            return undefined;
        }
        return new Price({
            value: taxes,
            currency: currency,
            formatter: formatCurrencyToDisplay
        });
    }, [
        lineItems,
        formatCurrencyToDisplay,
        actualCurrency,
        taxesByVatRate
    ]);
    const totalPrice = React.useMemo(()=>{
        if (!subtotalPrice || !totalTaxes) {
            return undefined;
        }
        return subtotalPrice.add(totalTaxes);
    }, [
        subtotalPrice,
        totalTaxes
    ]);
    const shouldShowVatExemptRationale = !isNonVatSupported && lineItems.some((lineItem)=>{
        var _lineItem_vat_rate_value, _lineItem_tax_rate_value;
        return getRateValueForDisplay(isNonVatSupported, (_lineItem_vat_rate_value = lineItem.vat_rate_value) !== null && _lineItem_vat_rate_value !== void 0 ? _lineItem_vat_rate_value : 0, (_lineItem_tax_rate_value = lineItem.tax_rate_value) !== null && _lineItem_tax_rate_value !== void 0 ? _lineItem_tax_rate_value : 0) / 100 === 0;
    });
    return {
        subtotalPrice,
        totalTaxes,
        totalPrice,
        shouldShowVatExemptRationale,
        taxesByVatRate
    };
};

function _define_property$1i(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1i(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1i(target, key, source[key]);
        });
    }
    return target;
}
const DEFAULT_MAX_ALLOWED_EMPTY_ROWS = 4;
const useLineItemManagement = ({ actualCurrency, defaultCurrency, isNonVatSupported, isInclusivePricing, maxAllowedEmptyRows = DEFAULT_MAX_ALLOWED_EMPTY_ROWS })=>{
    const { control, formState: { errors: formErrors }, setValue, getValues, watch, clearErrors, trigger } = reactHookForm.useFormContext();
    const { api } = useMoniteContext();
    const { data: measureUnitsData } = api.measureUnits.getMeasureUnits.useQuery();
    const { fields, append, remove } = reactHookForm.useFieldArray({
        control,
        name: 'line_items',
        shouldUnregister: false
    });
    const mounted = useIsMounted();
    const isAddingRow = React.useRef(false);
    const [initialRowAdded, setInitialRowAdded] = React.useState(false);
    const [autoAddedRows, setAutoAddedRows] = React.useState([]);
    const [tooManyEmptyRows, setTooManyEmptyRows] = React.useState(false);
    const watchedLineItems = watch('line_items');
    const currentLineItems = React.useMemo(()=>watchedLineItems !== null && watchedLineItems !== void 0 ? watchedLineItems : [], [
        watchedLineItems
    ]);
    const sanitizedLineItemsForTable = React.useMemo(()=>sanitizeLineItems(currentLineItems), [
        currentLineItems
    ]);
    const { formatCurrencyToDisplay } = useCurrencies();
    const { subtotalPrice, totalPrice, totalTaxes, shouldShowVatExemptRationale, taxesByVatRate } = useCreateInvoiceProductsTable({
        lineItems: sanitizedLineItemsForTable,
        isNonVatSupported,
        actualCurrency: actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : defaultCurrency,
        isInclusivePricing,
        formatCurrencyToDisplay
    });
    const createEmptyRow = React.useCallback((template)=>{
        var _template_product, _template_product_price, _template_product1, _template_product2, _template_product3;
        const product = {
            name: (template === null || template === void 0 ? void 0 : (_template_product = template.product) === null || _template_product === void 0 ? void 0 : _template_product.name) || '',
            price: {
                currency: actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : defaultCurrency,
                value: (template === null || template === void 0 ? void 0 : (_template_product1 = template.product) === null || _template_product1 === void 0 ? void 0 : (_template_product_price = _template_product1.price) === null || _template_product_price === void 0 ? void 0 : _template_product_price.value) || 0
            },
            measure_unit_id: (template === null || template === void 0 ? void 0 : (_template_product2 = template.product) === null || _template_product2 === void 0 ? void 0 : _template_product2.measure_unit_id) || '',
            type: (template === null || template === void 0 ? void 0 : (_template_product3 = template.product) === null || _template_product3 === void 0 ? void 0 : _template_product3.type) || 'product'
        };
        var _template_id, _template_quantity;
        // Preserve VAT rates correctly based on region
        // For non-VAT regions, use tax_rate_value, otherwise preserve vat_rate_id and vat_rate_value
        return _object_spread$1i({
            id: (_template_id = template === null || template === void 0 ? void 0 : template.id) !== null && _template_id !== void 0 ? _template_id : generateUniqueId(),
            product_id: (template === null || template === void 0 ? void 0 : template.product_id) || '',
            product,
            quantity: (_template_quantity = template === null || template === void 0 ? void 0 : template.quantity) !== null && _template_quantity !== void 0 ? _template_quantity : 1,
            // Preserve VAT values or set defaults based on region
            vat_rate_id: isNonVatSupported ? undefined : template === null || template === void 0 ? void 0 : template.vat_rate_id,
            vat_rate_value: isNonVatSupported ? undefined : template === null || template === void 0 ? void 0 : template.vat_rate_value,
            tax_rate_value: isNonVatSupported ? template === null || template === void 0 ? void 0 : template.tax_rate_value : undefined
        }, (template === null || template === void 0 ? void 0 : template.measure_unit) ? {
            measure_unit: template.measure_unit
        } : {});
    }, [
        actualCurrency,
        defaultCurrency,
        isNonVatSupported
    ]);
    const countEmptyRows = React.useCallback((items)=>{
        return items.reduce((count, field)=>{
            var _field_product;
            return ((_field_product = field.product) === null || _field_product === void 0 ? void 0 : _field_product.name) === '' ? count + 1 : count;
        }, 0);
    }, []);
    const performAutoAddRow = React.useCallback(()=>{
        if (isAddingRow.current || !mounted.current) return;
        const currentItems = getValues('line_items') || [];
        const emptyRowCount = countEmptyRows(currentItems);
        if (emptyRowCount <= maxAllowedEmptyRows) {
            setTooManyEmptyRows(false);
        }
        // Only add a new row if there are NO empty rows left
        // This prevents adding too many rows automatically
        if (emptyRowCount === 0 && currentItems.length > 0) {
            isAddingRow.current = true;
            const newRow = createEmptyRow();
            if ((measureUnitsData === null || measureUnitsData === void 0 ? void 0 : measureUnitsData.data) && measureUnitsData.data.length > 0 && newRow.product && !newRow.product.measure_unit_id) {
                newRow.product.measure_unit_id = measureUnitsData.data[0].id;
            }
            const newRowIndex = currentItems.length;
            append(newRow, {
                shouldFocus: false
            });
            setAutoAddedRows((prev)=>[
                    ...prev,
                    newRowIndex
                ]);
        }
    }, [
        mounted,
        getValues,
        countEmptyRows,
        maxAllowedEmptyRows,
        createEmptyRow,
        measureUnitsData === null || measureUnitsData === void 0 ? void 0 : measureUnitsData.data,
        append
    ]);
    const debouncedAutoAddRow = useDebounceCallback(performAutoAddRow);
    const handleAddRow = React.useCallback(()=>{
        const currentItems = getValues('line_items') || [];
        const emptyRowCount = countEmptyRows(currentItems);
        if (emptyRowCount > maxAllowedEmptyRows) {
            setTooManyEmptyRows(true);
            return;
        }
        if (isAddingRow.current) return;
        setTooManyEmptyRows(false);
        isAddingRow.current = true;
        append(createEmptyRow());
        const itemsAfterManualAdd = getValues('line_items');
        if (itemsAfterManualAdd && itemsAfterManualAdd.length > 0) {
            const newRowIndex = itemsAfterManualAdd.length - 1;
            clearErrors(`line_items.${newRowIndex}`);
        }
    }, [
        append,
        createEmptyRow,
        countEmptyRows,
        getValues,
        clearErrors,
        maxAllowedEmptyRows
    ]);
    const handleAutoAddRow = React.useCallback(()=>{
        debouncedAutoAddRow();
    }, [
        debouncedAutoAddRow
    ]);
    React.useEffect(()=>{
        if (!isAddingRow.current) return;
        Promise.resolve().then(()=>{
            if (!mounted.current) return;
            isAddingRow.current = false;
        });
    }, [
        fields.length,
        mounted
    ]);
    const cleanUpLineItemsForSubmission = React.useCallback(()=>{
        const currentItems = getValues('line_items');
        if (!(currentItems === null || currentItems === void 0 ? void 0 : currentItems.length)) return;
        const nonEmptyItems = currentItems.filter((item)=>{
            var _item_product_name, _item_product;
            return Boolean(item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : (_item_product_name = _item_product.name) === null || _item_product_name === void 0 ? void 0 : _item_product_name.trim());
        });
        const firstEmptyItem = currentItems.find((item)=>{
            var _item_product_name, _item_product;
            return !(item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : (_item_product_name = _item_product.name) === null || _item_product_name === void 0 ? void 0 : _item_product_name.trim());
        });
        let finalItems = [];
        if (nonEmptyItems.length > 0) {
            finalItems = nonEmptyItems;
        } else if (currentItems.length > 0) {
            finalItems = [
                createEmptyRow(firstEmptyItem || undefined)
            ];
        }
        const didItemsChange = finalItems.length !== currentItems.length || !finalItems.every((item, index)=>{
            var _currentItems_index;
            return item.id === ((_currentItems_index = currentItems[index]) === null || _currentItems_index === void 0 ? void 0 : _currentItems_index.id);
        });
        if (didItemsChange) {
            clearErrors('line_items');
            setValue('line_items', finalItems, {
                shouldValidate: false,
                shouldDirty: true
            });
            setAutoAddedRows([]);
        }
    }, [
        getValues,
        setValue,
        clearErrors,
        createEmptyRow
    ]);
    React.useEffect(()=>{
        if (!mounted.current || initialRowAdded) return;
        const existingItems = getValues('line_items');
        if (!(existingItems === null || existingItems === void 0 ? void 0 : existingItems.length) && !isAddingRow.current) {
            isAddingRow.current = true;
            append(createEmptyRow());
            setAutoAddedRows([
                0
            ]);
            setInitialRowAdded(true);
        }
    }, [
        mounted,
        initialRowAdded,
        getValues,
        append,
        createEmptyRow
    ]);
    const handleRemoveItem = React.useCallback((index)=>{
        remove(index);
        const currentItems = getValues('line_items') || [];
        const itemsAfterRemoval = currentItems.filter((_item, i)=>i !== index);
        const emptyRowCount = countEmptyRows(itemsAfterRemoval);
        if (emptyRowCount <= maxAllowedEmptyRows) {
            setTooManyEmptyRows(false);
        }
        setAutoAddedRows((prev)=>prev.filter((i)=>i !== index).map((i)=>i > index ? i - 1 : i));
    }, [
        remove,
        getValues,
        countEmptyRows,
        setAutoAddedRows,
        setTooManyEmptyRows,
        maxAllowedEmptyRows
    ]);
    const setValueWithValidationLocal = React.useCallback((name, value, options)=>{
        setValue(name, value, _object_spread$1i({
            shouldDirty: true
        }, options));
        if (options === null || options === void 0 ? void 0 : options.shouldValidate) {
            trigger(name);
        }
    }, [
        setValue,
        trigger
    ]);
    const handleRequestLineItemValue = React.useCallback((index, path)=>{
        const fieldPath = `line_items.${index}.${path}`;
        return getValues(fieldPath);
    }, [
        getValues
    ]);
    const lineItemErrorsContentHash = JSON.stringify(formErrors.line_items);
    const lineItemErrors = React.useMemo(()=>{
        if (Array.isArray(formErrors.line_items)) {
            return fields.map((_field, index)=>{
                var _formErrors_line_items;
                const error = (_formErrors_line_items = formErrors.line_items) === null || _formErrors_line_items === void 0 ? void 0 : _formErrors_line_items[index];
                return error !== null && error !== void 0 ? error : {};
            });
        }
        return fields.map(()=>({}));
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        formErrors.line_items,
        lineItemErrorsContentHash,
        fields
    ]);
    return {
        fields,
        autoAddedRows,
        tooManyEmptyRows,
        subtotalPrice,
        totalPrice,
        totalTaxes,
        taxesByVatRate,
        shouldShowVatExemptRationale,
        lineItemErrors,
        handleAddRow,
        handleRemoveItem,
        handleAutoAddRow,
        setAutoAddedRows,
        setValueWithValidationLocal,
        cleanUpLineItemsForSubmission,
        createEmptyRow,
        handleRequestLineItemValue
    };
};

function VatModeMenu({ disabled }) {
    const { i18n } = react.useLingui();
    const { setValue, watch } = reactHookForm.useFormContext();
    const isInclusivePricing = watch('vat_mode') === 'inclusive';
    return /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                asChild: true,
                disabled: disabled,
                children: /*#__PURE__*/ jsxRuntime.jsxs("button", {
                    type: "button",
                    className: "mtw:text-primary-50 mtw:font-medium mtw:text-sm mtw:flex mtw:items-center mtw:gap-1",
                    disabled: disabled,
                    children: [
                        i18n._({
                            id: "niu+rf",
                            values: {
                                0: isInclusivePricing ? 'Incl.' : 'Excl.'
                            }
                        }),
                        !disabled && /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {
                            className: "mtw:w-4 mtw:h-4"
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                        onClick: ()=>setValue('vat_mode', 'exclusive'),
                        children: i18n._({
                            id: "e8OK2D"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                        onClick: ()=>setValue('vat_mode', 'inclusive'),
                        children: i18n._({
                            id: "LOB4gr"
                        })
                    })
                ]
            })
        ]
    });
}

function asyncGeneratorStep$v(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$v(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$v(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$v(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1h(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1h(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1h(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$V(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$V(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$V(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ItemsSection = ({ defaultCurrency = 'USD', actualCurrency = defaultCurrency, isNonVatSupported, isVatSelectionDisabled, registerLineItemCleanupFn })=>{
    const { i18n } = react.useLingui();
    const { control, formState, getValues, trigger, watch } = reactHookForm.useFormContext();
    const isInclusivePricing = watch('vat_mode') === 'inclusive';
    const { api } = useMoniteContext();
    const { data: vatRates } = api.vatRates.getVatRates.useQuery();
    const { data: measureUnitsData, isLoading: isMeasureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const { fields, tooManyEmptyRows, subtotalPrice, totalPrice, totalTaxes, taxesByVatRate, shouldShowVatExemptRationale, lineItemErrors, handleAddRow, handleRemoveItem, handleAutoAddRow, setAutoAddedRows, setValueWithValidationLocal, cleanUpLineItemsForSubmission } = useLineItemManagement({
        actualCurrency,
        defaultCurrency,
        isNonVatSupported,
        isInclusivePricing
    });
    const setValueWithoutValidation = React.useCallback((name, value)=>{
        setValueWithValidationLocal(name, value, {
            shouldValidate: false
        });
    }, [
        setValueWithValidationLocal
    ]);
    React.useEffect(()=>{
        registerLineItemCleanupFn === null || registerLineItemCleanupFn === void 0 ? void 0 : registerLineItemCleanupFn(cleanUpLineItemsForSubmission);
        return ()=>registerLineItemCleanupFn === null || registerLineItemCleanupFn === void 0 ? void 0 : registerLineItemCleanupFn(null);
    }, [
        registerLineItemCleanupFn,
        cleanUpLineItemsForSubmission
    ]);
    const { generalError, fieldErrors } = useFormErrors(lineItemErrors);
    const [isCreateDialogOpen, setIsCreateDialogOpen] = React.useState(false);
    const className = 'Monite-CreateReceivable-ItemsSection';
    const tableRowClassName = 'Monite-CreateReceivable-ItemsSection-Table';
    const highestVatRate = React.useMemo(()=>{
        const rates = vatRates === null || vatRates === void 0 ? void 0 : vatRates.data;
        if (!(rates === null || rates === void 0 ? void 0 : rates.length)) {
            return undefined;
        }
        return rates.reduce((maxRate, currentRate)=>currentRate.value > maxRate.value ? currentRate : maxRate);
    }, [
        vatRates
    ]);
    const handleOpenCreateDialog = ()=>{
        setIsCreateDialogOpen(true);
    };
    const updateLineItemMeasureUnit = React.useCallback((index, item, currentMeasureUnitId)=>{
        var _item_measureUnit, _item_measureUnit1, _measureUnitsData_data;
        const itemMeasureUnitId = (_item_measureUnit = item.measureUnit) === null || _item_measureUnit === void 0 ? void 0 : _item_measureUnit.id;
        const itemMeasureUnitName = (_item_measureUnit1 = item.measureUnit) === null || _item_measureUnit1 === void 0 ? void 0 : _item_measureUnit1.name;
        // If the item has a measure unit with name but no ID, preserve it as a custom unit
        if (itemMeasureUnitName && !itemMeasureUnitId) {
            setValueWithoutValidation(`line_items.${index}.product.measure_unit_id`, '');
            setValueWithoutValidation(`line_items.${index}.product.measure_unit_name`, itemMeasureUnitName);
            setValueWithoutValidation(`line_items.${index}.measure_unit`, {
                name: itemMeasureUnitName,
                id: null
            });
        } else if (itemMeasureUnitId || currentMeasureUnitId) {
            // Otherwise, if there's a measure unit ID to use, set it
            setValueWithoutValidation(`line_items.${index}.product.measure_unit_id`, itemMeasureUnitId || currentMeasureUnitId);
            setValueWithoutValidation(`line_items.${index}.product.measure_unit_name`, undefined);
            setValueWithoutValidation(`line_items.${index}.measure_unit`, undefined);
            if (itemMeasureUnitId || currentMeasureUnitId) {
                const fieldPath = `line_items.${index}`;
                const currentValue = getValues(`line_items.${index}`) || {};
                setValueWithValidationLocal(fieldPath, currentValue, {
                    shouldValidate: true
                });
            }
        } else if (measureUnitsData === null || measureUnitsData === void 0 ? void 0 : (_measureUnitsData_data = measureUnitsData.data) === null || _measureUnitsData_data === void 0 ? void 0 : _measureUnitsData_data.length) {
            var _measureUnitsData_data_;
            const defaultUnitId = (_measureUnitsData_data_ = measureUnitsData.data[0]) === null || _measureUnitsData_data_ === void 0 ? void 0 : _measureUnitsData_data_.id;
            if (defaultUnitId) {
                setValueWithoutValidation(`line_items.${index}.product.measure_unit_id`, defaultUnitId);
                const fieldPath = `line_items.${index}`;
                const currentValue = getValues(`line_items.${index}`) || {};
                setValueWithValidationLocal(fieldPath, currentValue, {
                    shouldValidate: true
                });
            }
        }
    }, [
        measureUnitsData === null || measureUnitsData === void 0 ? void 0 : measureUnitsData.data,
        setValueWithoutValidation,
        getValues,
        setValueWithValidationLocal
    ]);
    const handleItemUpdate = React.useCallback((index, item, isCatalogItem)=>_async_to_generator$v(function*() {
            setAutoAddedRows((prev)=>prev.filter((i)=>i !== index));
            var _item_label;
            const itemName = (_item_label = item.label) !== null && _item_label !== void 0 ? _item_label : '';
            setValueWithoutValidation(`line_items.${index}.product.name`, itemName);
            const isActualCatalogItem = item.id !== '' && item.id !== CUSTOM_ID && isCatalogItem;
            // Only set VAT rates from catalog item when selecting from catalog, not for manual entries
            if (isActualCatalogItem) {
                const currentPrice = getValues(// if user manually typed a price it is unlikely they want the price of the catalogue to overwrite it
                `line_items.${index}.product.price.value`);
                if (!currentPrice) {
                    var _item_price;
                    var _item_price_value;
                    setValueWithoutValidation(`line_items.${index}.product.price.value`, (_item_price_value = (_item_price = item.price) === null || _item_price === void 0 ? void 0 : _item_price.value) !== null && _item_price_value !== void 0 ? _item_price_value : 0);
                }
                setValueWithoutValidation(`line_items.${index}.product.price.currency`, actualCurrency);
                const currentMeasureUnitId = getValues(`line_items.${index}.product.measure_unit_id`);
                updateLineItemMeasureUnit(index, item, currentMeasureUnitId);
                // VAT/Tax rates from catalog have priority over existing values
                if (item.vat_rate_id !== undefined) {
                    setValueWithoutValidation(`line_items.${index}.vat_rate_id`, item.vat_rate_id);
                }
                if (item.vat_rate_value !== undefined) {
                    setValueWithoutValidation(`line_items.${index}.vat_rate_value`, item.vat_rate_value);
                }
                const currentQuantity = getValues(`line_items.${index}.quantity`);
                var _item_smallestAmount;
                const quantityFromProductCatalog = (_item_smallestAmount = item.smallestAmount) !== null && _item_smallestAmount !== void 0 ? _item_smallestAmount : 1;
                if (currentQuantity === 1 || currentQuantity === undefined || currentQuantity === null) {
                    setValueWithoutValidation(`line_items.${index}.quantity`, quantityFromProductCatalog);
                }
                setValueWithoutValidation(`line_items.${index}.product.type`, 'product');
                yield Promise.resolve();
                handleAutoAddRow();
            }
        })(), [
        actualCurrency,
        getValues,
        setAutoAddedRows,
        setValueWithoutValidation,
        handleAutoAddRow,
        updateLineItemMeasureUnit
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        spacing: 0,
        className: className,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "h3",
                fontSize: '1.25em',
                fontWeight: 500,
                sx: {
                    marginBottom: 2
                },
                children: i18n._({
                    id: "BzfzPK"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FormErrorDisplay, {
                generalError: generalError,
                fieldErrors: fieldErrors
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.TableContainer, {
                        sx: {
                            overflow: 'visible',
                            overflowY: 'auto'
                        },
                        className: `${className}-TableContainer ${tableRowClassName}-TableContainer`,
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Table, {
                            stickyHeader: true,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableHead, {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.TableRow, {
                                        className: tableRowClassName,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    paddingLeft: 2,
                                                    paddingRight: 2
                                                },
                                                children: i18n._({
                                                    id: "omAUDO"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    paddingLeft: 2,
                                                    paddingRight: 2
                                                },
                                                children: i18n._({
                                                    id: "VbWX2u"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.TableCell, {
                                                sx: {
                                                    paddingLeft: 2,
                                                    paddingRight: 2,
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    gap: 2
                                                },
                                                children: [
                                                    i18n._({
                                                        id: "a7u1N9"
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(VatModeMenu, {
                                                        disabled: isVatSelectionDisabled
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    paddingLeft: 2,
                                                    paddingRight: 2
                                                },
                                                children: isNonVatSupported ? i18n._({
                                                    id: "JpohL9"
                                                }) : i18n._({
                                                    id: "khBZkl"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                                sx: {
                                                    padding: 0,
                                                    width: '48px'
                                                }
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.TableBody, {
                                    children: isMeasureUnitsLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.TableRow, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.TableCell, {
                                            colSpan: 5,
                                            align: "center",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                sx: {
                                                    display: 'flex',
                                                    alignItems: 'center',
                                                    justifyContent: 'center'
                                                },
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                    size: 20
                                                })
                                            })
                                        })
                                    }) : fields.map((field, index)=>{
                                        const getLineItemFieldValueForCurrentRow = (fieldPathSuffix)=>getValues(`line_items.${index}.${fieldPathSuffix}`);
                                        const setLineItemFieldValueForCurrentRow = (fieldPathSuffix, value, options)=>{
                                            const specificPath = `line_items.${index}.${fieldPathSuffix}`;
                                            setValueWithValidationLocal(specificPath, value, options);
                                        };
                                        const markLineItemAsModifiedForCurrentRow = ()=>{
                                            setAutoAddedRows((prev)=>prev.filter((i)=>i !== index));
                                        };
                                        const triggerLineItemValidationForCurrentRow = (fieldPathSuffix)=>{
                                            trigger(fieldPathSuffix ? `line_items.${index}.${fieldPathSuffix}` : `line_items.${index}`);
                                        };
                                        return /*#__PURE__*/ jsxRuntime.jsx(InvoiceItemRow, {
                                            field: field,
                                            index: index,
                                            control: control,
                                            errors: formState.errors,
                                            tableRowClassName: tableRowClassName,
                                            actualCurrency: actualCurrency,
                                            defaultCurrency: defaultCurrency,
                                            measureUnitsData: measureUnitsData,
                                            isNonVatSupported: isNonVatSupported,
                                            vatRates: vatRates === null || vatRates === void 0 ? void 0 : vatRates.data,
                                            highestVatRate: highestVatRate,
                                            onRequestLineItemValue: getLineItemFieldValueForCurrentRow,
                                            onLineItemValueChange: setLineItemFieldValueForCurrentRow,
                                            onLineItemManuallyChanged: markLineItemAsModifiedForCurrentRow,
                                            onRequestLineItemValidation: triggerLineItemValidationForCurrentRow,
                                            onRequestOpenCreateProductDialog: handleOpenCreateDialog,
                                            onUpdateItem: handleItemUpdate,
                                            onRemoveItem: handleRemoveItem
                                        }, field.id);
                                    })
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        mt: 2,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                                variant: "outlined",
                                onClick: handleAddRow,
                                disabled: tooManyEmptyRows,
                                children: i18n._({
                                    id: "IqKCNQ"
                                })
                            }),
                            tooManyEmptyRows && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                mt: 2,
                                variant: "body2",
                                color: "warning",
                                children: i18n._({
                                    id: "DbmdP8"
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Collapse, {
                in: shouldShowVatExemptRationale,
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    sx: {
                        m: 2
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "vat_exemption_rationale",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$V(_object_spread$1h({}, field), {
                                label: i18n._({
                                    id: "1fUjAq"
                                }),
                                multiline: true,
                                rows: 2,
                                fullWidth: true,
                                error: Boolean(error)
                            }))
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(InvoiceTotals, {
                subtotalPrice: subtotalPrice,
                totalTaxes: totalTaxes,
                totalPrice: totalPrice,
                taxesByVatRate: taxesByVatRate,
                actualCurrency: actualCurrency,
                defaultCurrency: defaultCurrency
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CreateProductDialog, {
                actualCurrency: actualCurrency,
                defaultCurrency: defaultCurrency,
                open: isCreateDialogOpen,
                handleClose: ()=>setIsCreateDialogOpen(false)
            })
        ]
    });
};

const PaymentTermSummaryItem = ({ renderIcon, leftLine, rightLine, sx })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        justifyContent: "space-between",
        direction: "row",
        sx: sx,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                direction: "row",
                alignItems: "center",
                children: [
                    renderIcon({
                        sx: {
                            mr: 1,
                            fontSize: 16
                        }
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: leftLine
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "body1",
                children: rightLine
            })
        ]
    });
};

function _define_property$1g(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1g(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1g(target, key, source[key]);
        });
    }
    return target;
}
const PaymentTermsSummary = ({ paymentTerm, openEditDialog })=>{
    const { i18n } = react.useLingui();
    const { term_final, term_1, term_2 } = paymentTerm;
    return /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
        sx: {
            backgroundColor: '#fafafa'
        },
        elevation: 0,
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.CardContent, {
            sx: {
                color: 'secondary.main'
            },
            children: [
                term_1 && /*#__PURE__*/ jsxRuntime.jsx(PaymentTermSummaryItem, {
                    renderIcon: (props)=>/*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Sell, _object_spread$1g({}, props)),
                    leftLine: i18n._({
                        id: "OjPw/f",
                        values: {
                            0: term_1.number_of_days
                        }
                    }),
                    rightLine: i18n._({
                        id: "oGkzfm",
                        values: {
                            0: rateMinorToMajor(term_1.discount)
                        }
                    }),
                    sx: {
                        mb: 2
                    }
                }),
                term_2 && /*#__PURE__*/ jsxRuntime.jsx(PaymentTermSummaryItem, {
                    renderIcon: (props)=>/*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Sell, _object_spread$1g({}, props)),
                    leftLine: i18n._({
                        id: "OjPw/f",
                        values: {
                            0: term_2.number_of_days
                        }
                    }),
                    rightLine: i18n._({
                        id: "oGkzfm",
                        values: {
                            0: rateMinorToMajor(term_2.discount)
                        }
                    }),
                    sx: {
                        mb: 2
                    }
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PaymentTermSummaryItem, {
                    renderIcon: (props)=>/*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CalendarToday, _object_spread$1g({}, props)),
                    leftLine: i18n._({
                        id: "Rdhz6Y"
                    }),
                    rightLine: i18n._({
                        id: "QpgBEp",
                        values: {
                            0: term_final === null || term_final === void 0 ? void 0 : term_final.number_of_days
                        }
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    sx: {
                        mt: 2
                    },
                    variant: "outlined",
                    onClick: openEditDialog,
                    children: i18n._({
                        id: "+8+wMl"
                    })
                })
            ]
        })
    });
};

function asyncGeneratorStep$u(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$u(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$u(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$u(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const usePaymentTermsApi = ({ onCreationError, onDelete, onSuccessfullChange } = {})=>{
    const { api, queryClient } = useMoniteContext();
    const createMutation = api.paymentTerms.postPaymentTerms.useMutation(undefined, {
        onSuccess: (paymentTerm)=>{
            api.paymentTerms.getPaymentTerms.invalidateQueries(queryClient);
            reactHotToast.toast.success(core.i18n._({
                id: "t2yvkg"
            }));
            onSuccessfullChange === null || onSuccessfullChange === void 0 ? void 0 : onSuccessfullChange(paymentTerm.id);
        },
        onError: ()=>{
            onCreationError === null || onCreationError === void 0 ? void 0 : onCreationError();
        }
    });
    const updateMutation = api.paymentTerms.patchPaymentTermsId.useMutation(undefined, {
        onSuccess: (paymentTerm)=>{
            api.paymentTerms.getPaymentTerms.invalidateQueries(queryClient);
            reactHotToast.toast.success(core.i18n._({
                id: "c8qQAm"
            }));
            onSuccessfullChange === null || onSuccessfullChange === void 0 ? void 0 : onSuccessfullChange(paymentTerm.id);
        },
        onError: ()=>{
            reactHotToast.toast.error(core.i18n._({
                id: "QNmwVc"
            }));
        }
    });
    const deleteMutation = api.paymentTerms.deletePaymentTermsId.useMutation(undefined, {
        onSuccess: ()=>{
            reactHotToast.toast.success(core.i18n._({
                id: "UGFmiA"
            }));
            onDelete === null || onDelete === void 0 ? void 0 : onDelete();
            onSuccessfullChange === null || onSuccessfullChange === void 0 ? void 0 : onSuccessfullChange();
        },
        onError: ()=>{
            reactHotToast.toast.error(core.i18n._({
                id: "utFpXp"
            }));
        }
    });
    const createPaymentTerm = (values)=>_async_to_generator$u(function*() {
            yield createMutation.mutateAsync({
                body: values
            });
        })();
    const updatePaymentTerm = (id, values)=>_async_to_generator$u(function*() {
            yield updateMutation.mutateAsync({
                path: {
                    payment_terms_id: id
                },
                body: values
            });
        })();
    const deletePaymentTerm = (id)=>_async_to_generator$u(function*() {
            yield deleteMutation.mutateAsync({
                path: {
                    payment_terms_id: id
                }
            });
        })();
    return {
        createPaymentTerm,
        updatePaymentTerm,
        deletePaymentTerm
    };
};

const DeletePaymentTerms = ({ show, closeDialog, paymentTermsId })=>{
    const { deletePaymentTerm } = usePaymentTermsApi({
        onSuccessfullChange: ()=>closeDialog(true)
    });
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: show,
        title: i18n._({
            id: "JFYrMR"
        }),
        message: i18n._({
            id: "WCfw96"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: ()=>closeDialog(false),
        onConfirm: ()=>deletePaymentTerm(paymentTermsId)
    });
};

function _define_property$1f(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1f(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1f(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$U(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$U(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$U(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DiscountForm = ({ field, index, isLast, remove })=>{
    var _errors_field;
    const [error, setError] = React.useState('');
    const { i18n } = react.useLingui();
    const { control, register, formState: { errors } } = reactHookForm.useFormContext();
    const daysFieldName = `${field}.number_of_days`;
    const discountFieldName = `${field}.discount`;
    React.useEffect(()=>{
        if (errors && errors[field]) {
            const fieldErrors = errors[field];
            const flatErrors = Object.values(fieldErrors !== null && fieldErrors !== void 0 ? fieldErrors : {}).map((error)=>error === null || error === void 0 ? void 0 : error.message).filter(Boolean);
            var _flatErrors_;
            setError((_flatErrors_ = flatErrors[0]) !== null && _flatErrors_ !== void 0 ? _flatErrors_ : '');
        } else {
            setError('');
        }
    }, [
        errors,
        field
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            !!error && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                sx: {
                    my: 1
                },
                children: error
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Card, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardHeader, {
                        title: i18n._({
                            id: "iqDRNR",
                            values: {
                                0: index + 1
                            }
                        }),
                        titleTypographyProps: {
                            variant: 'subtitle1'
                        },
                        action: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "text",
                            color: "error",
                            size: "small",
                            disabled: !isLast,
                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default$1.default, {}),
                            onClick: remove,
                            children: i18n._({
                                id: "cnGeoo"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardContent, {
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "row",
                            alignItems: "center",
                            gap: 1,
                            useFlexGap: true,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body2",
                                    sx: {
                                        whiteSpace: 'nowrap'
                                    },
                                    children: i18n._({
                                        id: "2SywUf"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$U(_object_spread$1f({}, register(daysFieldName)), {
                                    type: "number",
                                    error: !!(errors === null || errors === void 0 ? void 0 : (_errors_field = errors[field]) === null || _errors_field === void 0 ? void 0 : _errors_field.number_of_days),
                                    InputProps: {
                                        endAdornment: i18n._({
                                            id: "J/Upwb"
                                        })
                                    }
                                })),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body2",
                                    sx: {
                                        whiteSpace: 'nowrap'
                                    },
                                    children: i18n._({
                                        id: "XmWhVD"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: discountFieldName,
                                    control: control,
                                    render: ({ field: { onChange, onBlur, value, name }, fieldState: { error: fieldError } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, {
                                            name: name,
                                            type: "number",
                                            value: value !== null && value !== undefined ? rateMinorToMajor(value) : '',
                                            onBlur: onBlur,
                                            onChange: (e)=>{
                                                const majorValue = e.target.value;
                                                const minorValue = majorValue === '' ? null : rateMajorToMinor(parseFloat(majorValue));
                                                onChange(minorValue);
                                            },
                                            error: !!fieldError,
                                            InputProps: {
                                                endAdornment: '%'
                                            }
                                        })
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
};

const getValidation = (i18n)=>zod.z.object({
        name: zod.z.string().max(100, i18n._({
            id: "jspKxp"
        })).min(1, i18n._({
            id: "8/brI5"
        })),
        term_final: zod.z.object({
            number_of_days: zod.z.coerce.number().min(1, i18n._({
                id: "mrDYPq"
            }))
        }),
        description: zod.z.string().max(250, i18n._({
            id: "nEbQ3K"
        })).optional(),
        term_1: zod.z.object({
            number_of_days: zod.z.preprocess((v)=>v === '' || v === undefined ? null : v, zod.z.coerce.number().int().positive()).nullable(),
            discount: zod.z.preprocess((v)=>v === '' || v === undefined ? null : v, zod.z.coerce.number().min(0)).nullable()
        }).transform((v)=>v.number_of_days == null && v.discount == null ? null : v).nullable().optional(),
        term_2: zod.z.object({
            number_of_days: zod.z.preprocess((v)=>v === '' || v === undefined ? null : v, zod.z.coerce.number().int().positive()).nullable(),
            discount: zod.z.preprocess((v)=>v === '' || v === undefined ? null : v, zod.z.coerce.number().min(0)).nullable()
        }).transform((v)=>v.number_of_days == null && v.discount == null ? null : v).nullable().optional()
    }).refine((data)=>{
        var _data_term_1;
        // Check that term_1 days is less than term_final days
        if (((_data_term_1 = data.term_1) === null || _data_term_1 === void 0 ? void 0 : _data_term_1.number_of_days) && data.term_final.number_of_days) {
            return data.term_1.number_of_days < data.term_final.number_of_days;
        }
        return true;
    }, {
        message: i18n._({
            id: "irzD7v"
        }),
        path: [
            'term_1',
            'number_of_days'
        ]
    }).refine((data)=>{
        var _data_term_2;
        // Check that term_2 days is less than term_final days
        if (((_data_term_2 = data.term_2) === null || _data_term_2 === void 0 ? void 0 : _data_term_2.number_of_days) && data.term_final.number_of_days) {
            return data.term_2.number_of_days < data.term_final.number_of_days;
        }
        return true;
    }, {
        message: i18n._({
            id: "irzD7v"
        }),
        path: [
            'term_2',
            'number_of_days'
        ]
    }).refine((data)=>{
        var _data_term_2, _data_term_1;
        // Check that term_2 days is greater than term_1 days
        if (((_data_term_2 = data.term_2) === null || _data_term_2 === void 0 ? void 0 : _data_term_2.number_of_days) && ((_data_term_1 = data.term_1) === null || _data_term_1 === void 0 ? void 0 : _data_term_1.number_of_days)) {
            return data.term_2.number_of_days > data.term_1.number_of_days;
        }
        return true;
    }, {
        message: i18n._({
            id: "qBzGWY"
        }),
        path: [
            'term_2',
            'number_of_days'
        ]
    }).refine((data)=>{
        if (data.term_1) {
            const hasNumberOfDays = data.term_1.number_of_days !== null;
            const hasDiscount = data.term_1.discount !== null;
            return hasNumberOfDays === hasDiscount;
        }
        return true;
    }, {
        message: i18n._({
            id: "YLt1+6"
        }),
        path: [
            'term_1',
            'number_of_days'
        ]
    }).refine((data)=>{
        if (data.term_2) {
            const hasNumberOfDays = data.term_2.number_of_days !== null;
            const hasDiscount = data.term_2.discount !== null;
            return hasNumberOfDays === hasDiscount;
        }
        return true;
    }, {
        message: i18n._({
            id: "YLt1+6"
        }),
        path: [
            'term_2',
            'number_of_days'
        ]
    });

var TermField = /*#__PURE__*/ function(TermField) {
    TermField["Term1"] = "term_1";
    TermField["Term2"] = "term_2";
    return TermField;
}({});

function _define_property$1e(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1e(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1e(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$T(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$T(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$T(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$k(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$k(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$k(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const MAX_DISCOUNTS = 2;
const PaymentTermsForm = ({ formName, selectedTerm, onTermsChange })=>{
    var _errors_term_final;
    const _ref = selectedTerm || {}, { id: selectedTermId } = _ref, selectedTermsFields = _object_without_properties$k(_ref, [
        "id"
    ]);
    const [error, setError] = React.useState();
    const { i18n } = react.useLingui();
    const methods = reactHookForm.useForm({
        defaultValues: _object_spread$1e({}, selectedTermsFields),
        resolver: safeZodResolver(getValidation(i18n))
    });
    const { handleSubmit, formState: { errors }, register } = methods;
    const { createPaymentTerm, updatePaymentTerm } = usePaymentTermsApi({
        onCreationError: ()=>setError(/*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    i18n._({
                        id: "JI20V0"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                    i18n._({
                        id: "GCCr49"
                    })
                ]
            })),
        onSuccessfullChange: onTermsChange
    });
    const [discountForms, setDiscountForms] = React.useState(()=>{
        if (selectedTerm) {
            return [
                TermField.Term1,
                TermField.Term2
            ].filter((term)=>Boolean(selectedTerm[term]));
        }
        return [];
    });
    React.useEffect(()=>{
        const sectionErrors = Object.keys(errors).filter((errorKey)=>![
                ...Object.values(TermField)
            ].includes(errorKey));
        if (sectionErrors.length > 0) {
            setError(i18n._({
                id: "URkvuv"
            }));
        } else {
            setError(null);
        }
    }, [
        errors,
        i18n
    ]);
    const addDiscountForm = ()=>{
        if (discountForms.length === MAX_DISCOUNTS) return;
        const nextDiscount = discountForms.length ? TermField.Term2 : TermField.Term1;
        setDiscountForms((prev)=>[
                ...prev,
                nextDiscount
            ]);
        methods.setValue(nextDiscount, {
            number_of_days: null,
            discount: null
        });
    };
    const removeDiscountForm = ()=>{
        if (!discountForms.length) return;
        const discountToRemove = discountForms[discountForms.length - 1];
        setDiscountForms((prev)=>prev.slice(0, -1));
        methods.setValue(discountToRemove, null);
    };
    const onSubmit = (event)=>{
        event.preventDefault();
        event.stopPropagation();
        handleSubmit((values)=>{
            const { term_1, term_2 } = values, rest = _object_without_properties$k(values, [
                "term_1",
                "term_2"
            ]);
            const payload = _object_spread$1e({}, rest);
            if (term_1) {
                Object.assign(payload, {
                    term_1
                });
            }
            if (term_2) {
                Object.assign(payload, {
                    term_2
                });
            }
            if (selectedTermId) {
                updatePaymentTerm(selectedTermId, payload);
            } else {
                createPaymentTerm(payload);
            }
        })(event);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(reactHookForm.FormProvider, _object_spread_props$T(_object_spread$1e({}, methods), {
        children: [
            !!error && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                sx: {
                    my: 2
                },
                children: error
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("form", {
                id: formName,
                noValidate: true,
                onSubmit: onSubmit,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle1",
                        children: i18n._({
                            id: "Tz0i8g"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
                        elevation: 0,
                        variant: "outlined",
                        sx: {
                            mt: 1
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.CardContent, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    direction: "row",
                                    gap: 1,
                                    useFlexGap: true,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$T(_object_spread$1e({
                                            label: i18n._({
                                                id: "6YtxFj"
                                            })
                                        }, register('name')), {
                                            required: true,
                                            error: !!errors.name,
                                            helperText: i18n._({
                                                id: "Mlias8"
                                            }),
                                            sx: {
                                                flex: 1
                                            }
                                        })),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$T(_object_spread$1e({
                                            label: i18n._({
                                                id: "Rdhz6Y"
                                            })
                                        }, register('term_final.number_of_days')), {
                                            required: true,
                                            type: "number",
                                            error: !!((_errors_term_final = errors.term_final) === null || _errors_term_final === void 0 ? void 0 : _errors_term_final.number_of_days),
                                            sx: {
                                                width: 180
                                            },
                                            InputProps: {
                                                endAdornment: i18n._({
                                                    id: "J/Upwb"
                                                })
                                            }
                                        }))
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$T(_object_spread$1e({
                                    label: i18n._({
                                        id: "Nu4oKW"
                                    })
                                }, register('description')), {
                                    fullWidth: true,
                                    multiline: true,
                                    rows: 4,
                                    sx: {
                                        mt: 2
                                    }
                                }))
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            mt: 2
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle1",
                                children: i18n._({
                                    id: "76l9pC"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body1",
                                sx: {
                                    mt: 1
                                },
                                children: [
                                    i18n._({
                                        id: "vpNs0s"
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                    i18n._({
                                        id: "06UY4J"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Stack, {
                        gap: 3,
                        useFlexGap: true,
                        sx: {
                            mt: 3
                        },
                        children: discountForms.map((field, index)=>/*#__PURE__*/ jsxRuntime.jsx(DiscountForm, {
                                index: index,
                                field: field,
                                isLast: index === discountForms.length - 1,
                                remove: removeDiscountForm
                            }, field))
                    }),
                    discountForms.length < MAX_DISCOUNTS && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        sx: {
                            mt: 2
                        },
                        variant: "outlined",
                        startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                        onClick: addDiscountForm,
                        children: i18n._({
                            id: "hnjiDa"
                        })
                    })
                ]
            })
        ]
    }));
};

/**
 * Hook to manage blurring focus within a dialog before closing.
 *
 * Ensures that if the currently focused element is inside the dialog
 * when the close handler is called, it gets blurred to prevent focus
 * trapping in a hidden element (accessibility fix for aria-hidden warnings).
 *
 * @template T - The type of the HTML element the ref will be attached to (e.g., HTMLDivElement).
 * @template Args - Tuple type representing the arguments expected by the onClose function. Defaults to `[]`.
 * @param onClose The original function to call when the dialog should close.
 * @param onClose Optional callback function to be called after potential focus blurring.
 * @returns An object containing the `dialogRef` to attach to the dialog element and the memoized `handleClose` function.
 */ function useHandleDialogCloseFocus(onClose) {
    const dialogRef = React.useRef(null);
    const handleClose = React.useCallback((...args)=>{
        const elementToBlur = document.activeElement;
        if (dialogRef.current && elementToBlur instanceof HTMLElement && dialogRef.current.contains(elementToBlur)) {
            elementToBlur.blur();
        }
        onClose === null || onClose === void 0 ? void 0 : onClose(...args);
    }, [
        onClose
    ]);
    return {
        dialogRef,
        handleClose
    };
}

const PaymentTermsDialog = ({ show, closeDialog, selectedTerm })=>{
    const formName = `Monite-Form-paymentTerms-${React.useId()}`;
    const { i18n } = react.useLingui();
    const { dialogRef, handleClose } = useHandleDialogCloseFocus(closeDialog);
    const submitButtonText = selectedTerm ? i18n._({
        id: "tfDRzk"
    }) : i18n._({
        id: "hYgDIe"
    });
    const titleText = selectedTerm ? i18n._({
        id: "FCD+Yb"
    }) : i18n._({
        id: "GY9Kwl"
    });
    const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);
    const closeDeleteDialog = (isDeleted)=>{
        setShowDeleteDialog(false);
        closeDialog(undefined, isDeleted);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
                ref: dialogRef,
                open: show,
                alignDialog: "right",
                onClose: handleClose,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                        children: titleText
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(PaymentTermsForm, {
                            formName: formName,
                            selectedTerm: selectedTerm,
                            onTermsChange: handleClose
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogActions, {
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            direction: "row",
                            sx: {
                                flex: 1,
                                justifyContent: selectedTerm ? 'space-between' : 'flex-end',
                                px: 2
                            },
                            children: [
                                selectedTerm && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    variant: "text",
                                    color: "error",
                                    onClick: ()=>setShowDeleteDialog(true),
                                    children: i18n._({
                                        id: "cnGeoo"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    direction: "row",
                                    gap: 1,
                                    useFlexGap: true,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "text",
                                            onClick: handleClose,
                                            children: i18n._({
                                                id: "dEgA5A"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            type: "submit",
                                            variant: "contained",
                                            form: formName,
                                            children: submitButtonText
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                ]
            }),
            selectedTerm && /*#__PURE__*/ jsxRuntime.jsx(DeletePaymentTerms, {
                show: showDeleteDialog,
                paymentTermsId: selectedTerm.id,
                closeDialog: closeDeleteDialog
            })
        ]
    });
};

const PaymentSection = ({ disabled, paymentTerms, isLoading, selectedPaymentTerm, onPaymentTermsChange })=>{
    var _paymentTerms_data;
    const { i18n } = react.useLingui();
    const { control } = reactHookForm.useFormContext();
    const [termsDialogState, setTermsDialogState] = React.useState(0);
    const openEditDialog = ()=>{
        setTermsDialogState(2);
    };
    const onTermsDialogClosed = (id, deleted)=>{
        setTermsDialogState(0);
        if (id || deleted) {
            onPaymentTermsChange(id);
        }
    };
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        children: isLoading ? /*#__PURE__*/ jsxRuntime.jsx(SelectSkeleton, {}) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(RHFTextField, {
                    fullWidth: true,
                    select: true,
                    name: "payment_terms_id",
                    control: control,
                    label: i18n._({
                        id: "4WK0VU"
                    }),
                    disabled: disabled,
                    required: true,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "text",
                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                            fullWidth: true,
                            sx: {
                                justifyContent: 'flex-start',
                                px: 2
                            },
                            onClick: ()=>setTermsDialogState(1),
                            children: i18n._({
                                id: "GY9Kwl"
                            })
                        }),
                        paymentTerms === null || paymentTerms === void 0 ? void 0 : (_paymentTerms_data = paymentTerms.data) === null || _paymentTerms_data === void 0 ? void 0 : _paymentTerms_data.map(({ id, name, description })=>/*#__PURE__*/ jsxRuntime.jsxs(material.MenuItem, {
                                value: id,
                                children: [
                                    name,
                                    description && ` (${description})`
                                ]
                            }, id))
                    ]
                }),
                selectedPaymentTerm && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    sx: {
                        mt: 1
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(PaymentTermsSummary, {
                        paymentTerm: selectedPaymentTerm,
                        openEditDialog: openEditDialog
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PaymentTermsDialog, {
                    show: termsDialogState !== 0,
                    closeDialog: onTermsDialogClosed,
                    selectedTerm: termsDialogState === 2 ? selectedPaymentTerm : undefined
                })
            ]
        })
    });
};
const SelectSkeleton = ()=>{
    const theme = material.useTheme();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
        variant: "rounded",
        width: "100%",
        height: "100%",
        sx: {
            minHeight: `calc(${theme.spacing(5)} + ${theme.typography.body1.fontSize})`
        }
    });
};

function asyncGeneratorStep$t(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$t(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$t(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$t(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$1d(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1d(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1d(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$S(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$S(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$S(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const FullfillmentSummary = ({ disabled, paymentTerms, isPaymentTermsLoading, isFieldShown, refetch })=>{
    var _paymentTerms_data;
    const { i18n } = react.useLingui();
    const { control, resetField, watch, setValue } = reactHookForm.useFormContext();
    const { locale } = useMoniteContext();
    const { root } = useRootElements();
    const dateTime = i18n.date(new Date(), locale.dateTimeFormat);
    const paymentTermsId = watch('payment_terms_id');
    const selectedPaymentTerm = paymentTerms === null || paymentTerms === void 0 ? void 0 : (_paymentTerms_data = paymentTerms.data) === null || _paymentTerms_data === void 0 ? void 0 : _paymentTerms_data.find((term)=>term.id === paymentTermsId);
    const dueDate = selectedPaymentTerm && calculateDueDate(selectedPaymentTerm);
    const handlePaymentTermsChange = (newId = '')=>_async_to_generator$t(function*() {
            try {
                yield refetch();
                yield Promise.resolve();
                setValue('payment_terms_id', newId);
            } catch (error) {
                console.error('Error changing payment terms:', error);
            }
        })();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    display: 'flex',
                    flexDirection: 'row'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'flex',
                            flexDirection: 'column',
                            flexBasis: '50%'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                color: "textSecondary",
                                mb: 0.5,
                                fontWeight: 500,
                                children: i18n._({
                                    id: "X7pkpC"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body2",
                                        color: "textSecondary",
                                        children: dateTime
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        variant: "body2",
                                        color: "textSecondary",
                                        sx: {
                                            display: 'flex',
                                            alignItems: 'center',
                                            gap: '5px'
                                        },
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.LockOutlined, {
                                                sx: {
                                                    color: 'divider',
                                                    width: '16px'
                                                }
                                            }),
                                            i18n._({
                                                id: "fa1V8w"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'flex',
                            flexDirection: 'column',
                            flexBasis: '50%'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                color: "textSecondary",
                                mb: 0.5,
                                fontWeight: 500,
                                children: i18n._({
                                    id: "XicmhT"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        variant: "body2",
                                        color: "textSecondary",
                                        children: [
                                            i18n._({
                                                id: "J/hVSQ",
                                                values: {
                                                    0: (selectedPaymentTerm === null || selectedPaymentTerm === void 0 ? void 0 : selectedPaymentTerm.name) ? '' : 'Not selected'
                                                }
                                            }),
                                            dueDate ? i18n.date(dueDate, locale.dateTimeFormat) : ''
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        variant: "body2",
                                        color: "textSecondary",
                                        sx: {
                                            display: 'flex',
                                            alignItems: 'center',
                                            gap: '5px'
                                        },
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.LockOutlined, {
                                                sx: {
                                                    color: 'divider',
                                                    width: '16px'
                                                }
                                            }),
                                            i18n._({
                                                id: "wdobN7"
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                mt: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        sx: {
                            mt: 1,
                            mb: 2
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(PaymentSection, {
                            disabled: disabled,
                            paymentTerms: paymentTerms,
                            isLoading: isPaymentTermsLoading,
                            selectedPaymentTerm: selectedPaymentTerm,
                            onPaymentTermsChange: handlePaymentTermsChange
                        })
                    }),
                    isFieldShown && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "fulfillment_date",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, _object_spread_props$S(_object_spread$1d({}, field), {
                                    minDate: new Date(),
                                    disabled: disabled,
                                    onChange: (date)=>{
                                        field.onChange(date);
                                    },
                                    label: i18n._({
                                        id: "6hlq+R"
                                    }),
                                    slotProps: {
                                        popper: {
                                            container: root
                                        },
                                        dialog: {
                                            container: root
                                        },
                                        actionBar: {
                                            actions: [
                                                'today'
                                            ]
                                        },
                                        textField: {
                                            fullWidth: true,
                                            helperText: error === null || error === void 0 ? void 0 : error.message
                                        },
                                        field: {
                                            clearable: true,
                                            onClear: ()=>{
                                                resetField(field.name);
                                            }
                                        }
                                    },
                                    views: [
                                        'year',
                                        'month',
                                        'day'
                                    ]
                                }))
                            })
                    })
                ]
            })
        ]
    });
};

/**
 * Get measure unit name from ID by looking it up in the provided measure units array
 */ const getMeasureUnitName = (measureUnitId, measureUnits)=>{
    const unit = measureUnits.find((u)=>u.id === measureUnitId);
    var _unit_name;
    return (_unit_name = unit === null || unit === void 0 ? void 0 : unit.name) !== null && _unit_name !== void 0 ? _unit_name : null;
};
/**
 * Generic function to get rate value for any item type
 * Uses the proper VAT utility function to handle unit conversions and logic
 */ const getRateValueForItem = (item, isNonVatSupported)=>{
    var _item_vat_rate_value, _item_tax_rate_value;
    return getRateValueForDisplay(isNonVatSupported, (_item_vat_rate_value = item.vat_rate_value) !== null && _item_vat_rate_value !== void 0 ? _item_vat_rate_value : 0, (_item_tax_rate_value = item.tax_rate_value) !== null && _item_tax_rate_value !== void 0 ? _item_tax_rate_value : 0);
};
/**
 * Get the appropriate tax terminology based on isNonVatSupported
 * Simple logic: VAT for VAT-supported regions, Tax for non-VAT regions
 */ const getTaxTerminology = (i18n, isNonVatSupported)=>{
    if (isNonVatSupported) {
        return {
            taxLabel: i18n._({
                id: "JpohL9"
            }),
            taxIdLabel: i18n._({
                id: "m+elvG"
            })
        };
    }
    return {
        taxLabel: i18n._({
            id: "khBZkl"
        }),
        taxIdLabel: i18n._({
            id: "Ttw+e+"
        })
    };
};
/**
 * Get phone number from counterpart (organization or individual)
 */ const getCounterpartPhone = (counterpart)=>{
    if (!counterpart) return undefined;
    if ('organization' in counterpart) {
        return counterpart.organization.phone;
    }
    if ('individual' in counterpart) {
        return counterpart.individual.phone;
    }
    return undefined;
};
const getCountryName = (i18n, countryCode)=>{
    if (!countryCode) return '';
    var _getCountries_countryCode;
    return (_getCountries_countryCode = getCountries(i18n)[countryCode]) !== null && _getCountries_countryCode !== void 0 ? _getCountries_countryCode : countryCode;
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$2 = "@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 {\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  margin: 25px;\n  height: auto;\n  min-height: auto;\n  aspect-ratio: 0.7071;\n  padding: 1.5em 5em;\n  --table-cell-padding-x: 10.1pt;\n  --table-cell-padding-y: 12.2pt;\n  --totals-table-cell-padding-y: 5.6pt;\n  --footer-height: 50mm;\n  --page-counter-height: 12mm;\n  --totals-table-font-size: 10pt;\n  --totals-table-accent-font-size: 12pt;\n\n  font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  color: #111111;\n  font-size: 10px;\n  line-height: 12px;\n  font-weight: 400;\n  isolation: isolate;\n}\n\n@media screen and (max-height: 720px) {\n  .InvoicePreviewLegacy-module_invoicePreview__sbk34 {\n    margin-top: 0;\n  }\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 img,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 picture,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 video,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 canvas,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 svg {\n  display: block;\n  max-width: 100%;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 input,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 button,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 textarea,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 select {\n  font: inherit;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 p,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h1,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h2,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h3,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h4,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h5,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h6 {\n  overflow-wrap: break-word;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 h3 {\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n  font-size: 25px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 article {\n  flex-grow: 1;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 ul {\n  list-style: none;\n  padding: 0;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh {\n  width: 100%;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh tr.InvoicePreviewLegacy-module_spacer__BaCPw {\n  display: none;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh th {\n  color: rgba(112, 112, 112, 1);\n  padding-bottom: 8pt;\n  font-size: 8px;\n  font-weight: 400;\n  white-space: nowrap;\n  text-align: left;\n  line-height: normal;\n  text-transform: uppercase;\n}\n\n/* 2 rules below improve the balance of the table while discount row isn't present */\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh th:last-of-type,\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh td:last-of-type {\n  text-align: right;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh th:nth-of-type(3),\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh td:nth-of-type(3) {\n  text-align: center;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh td {\n  padding: 12px;\n  vertical-align: top;\n  padding-left: 0;\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh th:last-of-type,\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh td:last-of-type {\n  padding-right: var(--table-cell-outer-padding-x, var(--table-cell-padding-x));\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh tbody td {\n  font-size: 10px;\n  line-height: 1.3;\n  font-weight: 400;\n  color: var(--theme-neutrals-30-dark-grey, #3b3b3b);\n  border: 1px rgb(223, 223, 223);\n  border-top-style: solid;\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh thead {\n  display: table-header-group;\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh tfoot {\n  display: table-footer-group;\n}\n\nth.InvoicePreviewLegacy-module_lineItemsTableFixedItem__xJC2m {\n  width: 46pt;\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna {\n  margin-top: 8pt;\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna tr,\n.InvoicePreviewLegacy-module_totalsTable__WDyna td,\n.InvoicePreviewLegacy-module_totalsTable__WDyna th {\n  break-inside: avoid;\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna td {\n  padding: var(--totals-table-cell-padding-y, 5.6pt) var(--table-cell-padding-x);\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna td:last-child {\n  padding-right: var(--table-cell-outer-padding-x, var(--table-cell-padding-x));\n  text-align: right;\n  white-space: nowrap;\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh .InvoicePreviewLegacy-module_noItems__j3Due td {\n  padding: 0;\n  border-bottom-style: solid;\n  padding-left: 0;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_lineItemsTable__LvLuh .InvoicePreviewLegacy-module_noItems__j3Due td {\n  text-align: left;\n}\n\n.InvoicePreviewLegacy-module_lineItemsTable__LvLuh tr:last-child td {\n  border-bottom-style: solid;\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna .InvoicePreviewLegacy-module_total__tIsTw td {\n  font-size: 12px;\n  font-weight: 600;\n  background: var(--totals-table-total-cell-background, transparent);\n  color: var(--totals-table-total-cell-color, inherit);\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna:has(.InvoicePreviewLegacy-module_amountDue__QHP5f) .InvoicePreviewLegacy-module_total__tIsTw td {\n  font-weight: 400;\n  background: transparent;\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n}\n\n.InvoicePreviewLegacy-module_totalsTable__WDyna .InvoicePreviewLegacy-module_amountDue__QHP5f td {\n  font-weight: 600;\n  background: var(--totals-table-total-cell-background, transparent);\n  color: var(--totals-table-total-cell-color, inherit);\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer {\n  display: flex;\n  flex-direction: column;\n  break-inside: avoid;\n  margin-top: auto;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer .InvoicePreviewLegacy-module_preFooterRow__J6gSl {\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding-bottom: 5mm;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer aside h3 {\n  margin-bottom: 4pt;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer {\n  border-top: 0.26px solid #a6abb7;\n  font-size: 8px;\n  line-height: 1.41;\n  font-weight: 400;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer > section {\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row;\n  justify-content: space-between;\n  gap: 20mm;\n  --margin-top: 5mm;\n  --margin-bottom: 0mm;\n  margin-top: var(--margin-top);\n  margin-bottom: var(--margin-bottom);\n  height: calc(\n    var(--footer-height) - var(--margin-top) - var(--margin-bottom) -\n      var(--page-counter-height)\n  );\n  text-align: left;\n  font-style: normal;\n  font-weight: 400;\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer > section h3 {\n  margin-bottom: 2.5pt;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_footerAside__dhGRK {\n  display: flex;\n  font-size: 8px;\n  line-height: 1.5;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_footerAsideStart__DSUTL {\n  flex-flow: column;\n  width: 250px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_footerAsideEnd__pQVp- {\n  flex-flow: row;\n  justify-content: flex-end;\n  flex-grow: 1;\n  gap: 5mm;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_footerAside__dhGRK > aside {\n  display: flex;\n  flex-flow: column;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_footerAsideEnd__pQVp- > aside:first-of-type {\n  flex-grow: 1;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 footer .InvoicePreviewLegacy-module_qrCodeData__6m2Dw {\n  display: inline-flex;\n  flex-flow: column;\n  height: 85px;\n  width: 85px;\n  background-image: url('data:image/svg+xml,<svg width=\"85\" height=\"85\" viewBox=\"0 0 85 85\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g filter=\"url(%23filter0_f_23098_280990)\"><path d=\"M3.8291 3.87793V6.48663V9.09532V11.704V14.3127V16.9214V19.5301V22.1388H6.4378H9.04649H11.6552H14.2639H16.8726H19.4813H22.09V19.5301V16.9214V14.3127V11.704V9.09532V6.48663V3.87793H19.4813H16.8726H14.2639H11.6552H9.04649H6.4378H3.8291ZM24.6987 3.87793V6.48663V9.09532H27.3074V6.48663H29.9161V3.87793H27.3074H24.6987ZM29.9161 6.48663V9.09532H32.5248V6.48663H29.9161ZM32.5248 9.09532V11.704H35.1334H37.7421V9.09532V6.48663V3.87793H35.1334V6.48663V9.09532H32.5248ZM32.5248 11.704H29.9161H27.3074H24.6987V14.3127H27.3074H29.9161V16.9214H27.3074V19.5301H29.9161V22.1388H32.5248V19.5301H35.1334V22.1388H32.5248V24.7475H29.9161V27.3562H32.5248H35.1334V29.9649H37.7421V27.3562V24.7475V22.1388V19.5301V16.9214H35.1334V14.3127H32.5248V11.704ZM35.1334 29.9649H32.5248V32.5736H29.9161V35.1823V37.791H32.5248V40.3997V43.0084H29.9161H27.3074V40.3997H29.9161V37.791H27.3074V35.1823V32.5736H24.6987V29.9649H27.3074V32.5736H29.9161V29.9649V27.3562H27.3074H24.6987V24.7475H22.09H19.4813H16.8726V27.3562H14.2639V29.9649H11.6552V27.3562H14.2639V24.7475H11.6552H9.04649V27.3562H6.4378V29.9649V32.5736V35.1823H9.04649V32.5736H11.6552H14.2639H16.8726V29.9649H19.4813V27.3562H22.09V29.9649H19.4813V32.5736H22.09V35.1823H19.4813V37.791H22.09H24.6987V40.3997V43.0084V45.6171H27.3074V48.2258H29.9161H32.5248H35.1334V50.8344H32.5248H29.9161H27.3074V48.2258H24.6987V50.8344V53.4431H27.3074V56.0518H24.6987V58.6605H27.3074H29.9161V56.0518H32.5248V58.6605H35.1334H37.7421H40.3508H42.9595V56.0518H45.5682V58.6605H48.1769H50.7856H53.3943V56.0518H50.7856H48.1769V53.4431H45.5682V50.8344H42.9595V53.4431H40.3508H37.7421V56.0518H35.1334V53.4431H37.7421V50.8344V48.2258V45.6171H40.3508V43.0084H37.7421H35.1334V40.3997H37.7421V37.791V35.1823V32.5736H35.1334V29.9649ZM42.9595 50.8344V48.2258H40.3508V50.8344H42.9595ZM48.1769 53.4431H50.7856H53.3943V50.8344H50.7856H48.1769V53.4431ZM53.3943 50.8344H56.003V48.2258V45.6171V43.0084V40.3997H53.3943H50.7856H48.1769V37.791H45.5682V40.3997H42.9595V43.0084V45.6171H45.5682V43.0084H48.1769V45.6171V48.2258H50.7856H53.3943V50.8344ZM45.5682 37.791V35.1823H42.9595H40.3508V37.791H42.9595H45.5682ZM48.1769 37.791H50.7856V35.1823V32.5736V29.9649H53.3943V32.5736H56.003V35.1823H58.6117V32.5736V29.9649H56.003V27.3562H58.6117V24.7475H56.003H53.3943V27.3562H50.7856V24.7475H48.1769V27.3562H45.5682V29.9649H48.1769V32.5736V35.1823V37.791ZM45.5682 29.9649H42.9595V32.5736H45.5682V29.9649ZM56.003 35.1823H53.3943V37.791H56.003V35.1823ZM19.4813 35.1823V32.5736H16.8726V35.1823H19.4813ZM16.8726 35.1823H14.2639H11.6552H9.04649V37.791H11.6552H14.2639H16.8726V35.1823ZM6.4378 35.1823H3.8291V37.791H6.4378V35.1823ZM6.4378 27.3562V24.7475H3.8291V27.3562H6.4378ZM24.6987 24.7475H27.3074V22.1388V19.5301H24.6987V22.1388V24.7475ZM40.3508 3.87793V6.48663V9.09532V11.704V14.3127V16.9214V19.5301V22.1388H42.9595H45.5682H48.1769H50.7856H53.3943H56.003H58.6117V19.5301V16.9214V14.3127V11.704V9.09532V6.48663V3.87793H56.003H53.3943H50.7856H48.1769H45.5682H42.9595H40.3508ZM6.4378 6.48663H9.04649H11.6552H14.2639H16.8726H19.4813V9.09532V11.704V14.3127V16.9214V19.5301H16.8726H14.2639H11.6552H9.04649H6.4378V16.9214V14.3127V11.704V9.09532V6.48663ZM42.9595 6.48663H45.5682H48.1769H50.7856H53.3943H56.003V9.09532V11.704V14.3127V16.9214V19.5301H53.3943H50.7856H48.1769H45.5682H42.9595V16.9214V14.3127V11.704V9.09532V6.48663ZM9.04649 9.09532V11.704V14.3127V16.9214H11.6552H14.2639H16.8726V14.3127V11.704V9.09532H14.2639H11.6552H9.04649ZM45.5682 9.09532V11.704V14.3127V16.9214H48.1769H50.7856H53.3943V14.3127V11.704V9.09532H50.7856H48.1769H45.5682ZM40.3508 24.7475V27.3562H42.9595V24.7475H40.3508ZM3.8291 40.3997V43.0084V45.6171V48.2258V50.8344V53.4431V56.0518V58.6605H6.4378H9.04649H11.6552H14.2639H16.8726H19.4813H22.09V56.0518V53.4431V50.8344V48.2258V45.6171V43.0084V40.3997H19.4813H16.8726H14.2639H11.6552H9.04649H6.4378H3.8291ZM6.4378 43.0084H9.04649H11.6552H14.2639H16.8726H19.4813V45.6171V48.2258V50.8344V53.4431V56.0518H16.8726H14.2639H11.6552H9.04649H6.4378V53.4431V50.8344V48.2258V45.6171V43.0084ZM9.04649 45.6171V48.2258V50.8344V53.4431H11.6552H14.2639H16.8726V50.8344V48.2258V45.6171H14.2639H11.6552H9.04649ZM56.003 53.4431V56.0518H58.6117V53.4431H56.003Z\" fill=\"black\"/></g><defs><filter id=\"filter0_f_23098_280990\" x=\"-2.04017\" y=\"-1.99134\" width=\"66.5217\" height=\"66.5217\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"/><feGaussianBlur stdDeviation=\"1.63043\" result=\"effect1_foregroundBlur_23098_280990\"/></filter></defs></svg>');\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_divider__9kM6F {\n  border-bottom: 0.5px solid var(--mollie-ui-color-palette-gray-300, #d2d3dd);\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_header__q6BPH {\n  display: grid;\n  grid-auto-columns: 1fr minmax(min-content, 50%);\n  grid-auto-rows: min-content;\n  gap: 5mm 10mm;\n  grid-template-areas:\n    '. .'\n    '. .';\n\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n  font-size: 10pt;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  padding-top: 15px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_headerFlexEndAside__31PRs {\n  display: flex;\n  flex-flow: column;\n  gap: inherit;\n  margin-left: auto;\n  text-align: right;\n}\n\n.InvoicePreviewLegacy-module_blockEntityLogo__2GSJq {\n  background: rgba(222, 222, 222, 1);\n  font-size: 13px;\n  color: white;\n  width: 85px;\n  height: 85px;\n  border-radius: 50%;\n  max-width: 21mm;\n  max-height: 21mm;\n  object-fit: contain;\n  place-content: center;\n  text-align: center;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockCounterpartInfo__oWrDK {\n  font-size: 10px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_paymentDetails__2q-f3 h3 {\n  margin-bottom: 3pt;\n  padding-bottom: 0.35em;\n  font-style: normal;\n  text-transform: uppercase;\n  font-size: 12pt;\n  font-weight: 300;\n  line-height: normal;\n  color: var(--theme-neutrals-bold-50-grey-bd, #707070);\n  border-bottom: solid 0.46px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockHeader__mYljl {\n  text-align: left;\n  font-size: 28px;\n  line-height: normal;\n  margin-bottom: 17pt;\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n  font-style: normal;\n  font-weight: 700;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockReceivableDate__IC1qq li {\n  display: flex;\n  font-size: 10px;\n  min-width: 160px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockMemo__2O5PH {\n  font-size: 10px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockReceivableDate__IC1qq li span:first-of-type {\n  margin-right: auto;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_blockReceivableDate__IC1qq .InvoicePreviewLegacy-module_paymentTerms__5wQj4 li {\n  display: block;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_paymentDescription__AxhqN {\n  margin-bottom: 10mm;\n  font-size: 12pt;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  color: var(--theme-neutrals-bold-10-light-black-bd, #292929);\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_totalsTable__WDyna {\n  width: 70%;\n  margin-left: auto;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_header__q6BPH {\n  margin-bottom: 39pt;\n  line-height: 20px;\n}\n\n.InvoicePreviewLegacy-module_invoicePreview__sbk34 .InvoicePreviewLegacy-module_notSet__L7bkQ {\n  color: rgba(184, 184, 184, 1);\n}\n";
var styles$1 = {"invoicePreview":"InvoicePreviewLegacy-module_invoicePreview__sbk34","lineItemsTable":"InvoicePreviewLegacy-module_lineItemsTable__LvLuh","spacer":"InvoicePreviewLegacy-module_spacer__BaCPw","lineItemsTableFixedItem":"InvoicePreviewLegacy-module_lineItemsTableFixedItem__xJC2m","totalsTable":"InvoicePreviewLegacy-module_totalsTable__WDyna","noItems":"InvoicePreviewLegacy-module_noItems__j3Due","total":"InvoicePreviewLegacy-module_total__tIsTw","amountDue":"InvoicePreviewLegacy-module_amountDue__QHP5f","preFooterRow":"InvoicePreviewLegacy-module_preFooterRow__J6gSl","footerAside":"InvoicePreviewLegacy-module_footerAside__dhGRK","footerAsideStart":"InvoicePreviewLegacy-module_footerAsideStart__DSUTL","footerAsideEnd":"InvoicePreviewLegacy-module_footerAsideEnd__pQVp-","qrCodeData":"InvoicePreviewLegacy-module_qrCodeData__6m2Dw","divider":"InvoicePreviewLegacy-module_divider__9kM6F","header":"InvoicePreviewLegacy-module_header__q6BPH","headerFlexEndAside":"InvoicePreviewLegacy-module_headerFlexEndAside__31PRs","blockEntityLogo":"InvoicePreviewLegacy-module_blockEntityLogo__2GSJq","blockCounterpartInfo":"InvoicePreviewLegacy-module_blockCounterpartInfo__oWrDK","paymentDetails":"InvoicePreviewLegacy-module_paymentDetails__2q-f3","blockHeader":"InvoicePreviewLegacy-module_blockHeader__mYljl","blockReceivableDate":"InvoicePreviewLegacy-module_blockReceivableDate__IC1qq","blockMemo":"InvoicePreviewLegacy-module_blockMemo__2O5PH","paymentTerms":"InvoicePreviewLegacy-module_paymentTerms__5wQj4","paymentDescription":"InvoicePreviewLegacy-module_paymentDescription__AxhqN","notSet":"InvoicePreviewLegacy-module_notSet__L7bkQ"};
styleInject(css_248z$2);

const InvoicePreviewLegacy = ({ address, counterpart, counterpartVats, currency, invoiceData, entityData, entityVatIds, isNonVatSupported, paymentTerms, measureUnits = [] })=>{
    var _paymentTerms_data, _entityData_logo, _counterpartVats_data_, _selectedPaymentTerm_term_final, _entityData_organization, _entityData_address, _entityData_address1, _entityData_address2, _entityData_address3, _entityVatIds_data_;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay, getSymbolFromCurrency } = useCurrencies();
    const currencySymbol = currency ? getSymbolFromCurrency(currency) : '';
    const { fulfillment_date: fulfillmentDate, line_items: items, memo, footer, entity_bank_account_id: entityBankAccountId = '', vat_mode: vatMode, payment_terms_id: paymentTermsId } = invoiceData;
    const isInclusivePricing = vatMode === 'inclusive';
    const counterpartName = counterpart ? getCounterpartName(counterpart) : '';
    const { data: bankAccount } = useGetEntityBankAccountById(entityBankAccountId);
    const dateTime = i18n.date(new Date(), locale.dateFormat);
    const selectedPaymentTerm = paymentTerms === null || paymentTerms === void 0 ? void 0 : (_paymentTerms_data = paymentTerms.data) === null || _paymentTerms_data === void 0 ? void 0 : _paymentTerms_data.find((term)=>term.id === paymentTermsId);
    const dueDate = selectedPaymentTerm && calculateDueDate(selectedPaymentTerm);
    const sanitizedItems = sanitizeLineItems(items);
    const { subtotalPrice, totalPrice, taxesByVatRate } = useCreateInvoiceProductsTable({
        lineItems: sanitizedItems,
        formatCurrencyToDisplay,
        isNonVatSupported,
        actualCurrency: currency,
        isInclusivePricing
    });
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: styles$1.invoicePreview,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("header", {
                className: styles$1.header,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("aside", {
                        children: /*#__PURE__*/ jsxRuntime.jsx("h1", {
                            className: styles$1.blockHeader,
                            children: i18n._({
                                id: "IuMGvq"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("aside", {
                        className: styles$1['header--flex-end-aside'],
                        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                            className: styles$1.blockEntityLogo,
                            children: (entityData === null || entityData === void 0 ? void 0 : (_entityData_logo = entityData.logo) === null || _entityData_logo === void 0 ? void 0 : _entityData_logo.url) ? /*#__PURE__*/ jsxRuntime.jsx("img", {
                                src: entityData.logo.url,
                                alt: i18n._({
                                    id: "bhYVxz"
                                })
                            }) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                                children: i18n._({
                                    id: "wSwaLS"
                                })
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("aside", {
                        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: styles$1.blockCounterpartInfo,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs("b", {
                                        children: [
                                            " ",
                                            i18n._({
                                                id: "876pfE"
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    children: !counterpartName && /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        className: styles$1.notSet,
                                        children: i18n._({
                                            id: "MTqQMG"
                                        })
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    children: counterpartName
                                }),
                                address && /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            address.line1,
                                            " ",
                                            address.line2,
                                            address.postal_code,
                                            " ",
                                            address.city,
                                            " ",
                                            address.country
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("hr", {
                                    style: {
                                        height: '5pt',
                                        visibility: 'hidden'
                                    }
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    children: counterpart && isOrganizationCounterpart(counterpart) ? counterpart.organization.email : counterpart && isIndividualCounterpart(counterpart) ? counterpart.individual.email : ''
                                }),
                                (counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id) && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    children: [
                                        i18n._({
                                            id: "4m4EuK"
                                        }),
                                        " ",
                                        counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id
                                    ]
                                }),
                                (counterpartVats === null || counterpartVats === void 0 ? void 0 : (_counterpartVats_data_ = counterpartVats.data[0]) === null || _counterpartVats_data_ === void 0 ? void 0 : _counterpartVats_data_.id) && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    children: [
                                        i18n._({
                                            id: "Ttw+e+"
                                        }),
                                        " ",
                                        counterpartVats.data[0].value
                                    ]
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("aside", {
                        className: styles$1['header--flex-end-aside'],
                        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: styles$1.blockReceivableDate,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("ul", {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsxs("li", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                    children: [
                                                        i18n._({
                                                            id: "X7pkpC"
                                                        }),
                                                        ": "
                                                    ]
                                                }),
                                                " ",
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: dateTime
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs("li", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                    children: [
                                                        i18n._({
                                                            id: "XicmhT"
                                                        }),
                                                        ": "
                                                    ]
                                                }),
                                                ' ',
                                                dueDate ? /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n.date(dueDate, locale.dateFormat)
                                                }) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: styles$1.notSet,
                                                    children: i18n._({
                                                        id: "MTqQMG"
                                                    })
                                                })
                                            ]
                                        }),
                                        fulfillmentDate && dateFns.isValid(fulfillmentDate) && /*#__PURE__*/ jsxRuntime.jsxs("li", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                    children: [
                                                        i18n._({
                                                            id: "6hlq+R"
                                                        }),
                                                        ": "
                                                    ]
                                                }),
                                                ' ',
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n.date(fulfillmentDate, locale.dateFormat)
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs("ul", {
                                    className: styles$1.paymentTerms,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("li", {
                                            children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                children: /*#__PURE__*/ jsxRuntime.jsx("b", {
                                                    children: i18n._({
                                                        id: "4WK0VU"
                                                    })
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("li", {
                                            children: !selectedPaymentTerm && /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                className: styles$1.notSet,
                                                children: i18n._({
                                                    id: "MTqQMG"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs("li", {
                                            children: [
                                                (selectedPaymentTerm === null || selectedPaymentTerm === void 0 ? void 0 : selectedPaymentTerm.term_1) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    children: [
                                                        i18n._({
                                                            id: "OjPw/f",
                                                            values: {
                                                                0: selectedPaymentTerm.term_1.number_of_days
                                                            }
                                                        }),
                                                        ' ',
                                                        selectedPaymentTerm.term_1.discount && /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                                                i18n._({
                                                                    id: "oGkzfm",
                                                                    values: {
                                                                        0: rateMinorToMajor(selectedPaymentTerm.term_1.discount)
                                                                    }
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                (selectedPaymentTerm === null || selectedPaymentTerm === void 0 ? void 0 : selectedPaymentTerm.term_2) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    children: [
                                                        i18n._({
                                                            id: "OjPw/f",
                                                            values: {
                                                                0: selectedPaymentTerm.term_2.number_of_days
                                                            }
                                                        }),
                                                        ' ',
                                                        selectedPaymentTerm.term_2.discount && /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                                                i18n._({
                                                                    id: "oGkzfm",
                                                                    values: {
                                                                        0: rateMinorToMajor(selectedPaymentTerm.term_2.discount)
                                                                    }
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                (selectedPaymentTerm === null || selectedPaymentTerm === void 0 ? void 0 : selectedPaymentTerm.term_final) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    children: [
                                                        i18n._({
                                                            id: "Rdhz6Y"
                                                        }),
                                                        ' ',
                                                        i18n._({
                                                            id: "QpgBEp",
                                                            values: {
                                                                0: (_selectedPaymentTerm_term_final = selectedPaymentTerm.term_final) === null || _selectedPaymentTerm_term_final === void 0 ? void 0 : _selectedPaymentTerm_term_final.number_of_days
                                                            }
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("section", {
                className: styles$1.paymentDescription,
                children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                    className: styles$1.blockMemo,
                    children: memo
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("article", {
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: styles$1.blockLineItems,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("table", {
                            className: styles$1.lineItemsTable,
                            cellSpacing: "0",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("thead", {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    children: i18n._({
                                                        id: "K47k8R"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    children: i18n._({
                                                        id: "oWXNE5"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    children: i18n._({
                                                        id: "QrhaVg"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsxs("th", {
                                                    children: [
                                                        i18n._({
                                                            id: "a7u1N9"
                                                        }),
                                                        " (",
                                                        currencySymbol,
                                                        ")"
                                                    ]
                                                }),
                                                isInclusivePricing && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        /*#__PURE__*/ jsxRuntime.jsxs("th", {
                                                            children: [
                                                                i18n._({
                                                                    id: "JpohL9"
                                                                }),
                                                                " (%)"
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsxs("th", {
                                                            children: [
                                                                i18n._({
                                                                    id: "IAVxV9"
                                                                }),
                                                                " (",
                                                                currencySymbol,
                                                                ")"
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsxs("th", {
                                                    children: [
                                                        i18n._({
                                                            id: "hehnjM"
                                                        }),
                                                        " (",
                                                        currencySymbol,
                                                        ")"
                                                    ]
                                                }),
                                                !isInclusivePricing && /*#__PURE__*/ jsxRuntime.jsxs("th", {
                                                    children: [
                                                        i18n._({
                                                            id: "JpohL9"
                                                        }),
                                                        " (%)"
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("tr", {
                                            className: styles$1.spacer,
                                            children: /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                colSpan: isInclusivePricing ? 7 : 6
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("tbody", {
                                    className: styles$1.products,
                                    children: sanitizedItems.length > 0 ? sanitizedItems.map((item)=>{
                                        var _item_product_price, _item_product, _item_product1, _item_product2, _item_measure_unit, _item_product3, _item_product4, _item_product5;
                                        const taxRate = getRateValueForItem(item, isNonVatSupported);
                                        var _item_quantity;
                                        const quantity = (_item_quantity = item === null || item === void 0 ? void 0 : item.quantity) !== null && _item_quantity !== void 0 ? _item_quantity : 1;
                                        var _item_product_price_value;
                                        const price = (_item_product_price_value = item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : (_item_product_price = _item_product.price) === null || _item_product_price === void 0 ? void 0 : _item_product_price.value) !== null && _item_product_price_value !== void 0 ? _item_product_price_value : 0;
                                        const totalAmount = price * quantity;
                                        return /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    style: {
                                                        maxWidth: '120px'
                                                    },
                                                    children: item === null || item === void 0 ? void 0 : (_item_product1 = item.product) === null || _item_product1 === void 0 ? void 0 : _item_product1.name
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    children: item === null || item === void 0 ? void 0 : item.quantity
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    children: (item === null || item === void 0 ? void 0 : (_item_product2 = item.product) === null || _item_product2 === void 0 ? void 0 : _item_product2.measure_unit_id) ? getMeasureUnitName(item.product.measure_unit_id, measureUnits) : (item === null || item === void 0 ? void 0 : (_item_measure_unit = item.measure_unit) === null || _item_measure_unit === void 0 ? void 0 : _item_measure_unit.name) ? item.measure_unit.name : null
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    children: ((_item_product3 = item.product) === null || _item_product3 === void 0 ? void 0 : _item_product3.price) && formatCurrencyToDisplay(isInclusivePricing ? price / (1 + taxRate / 100) : price, item.product.price.currency, false)
                                                }),
                                                isInclusivePricing && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        /*#__PURE__*/ jsxRuntime.jsxs("td", {
                                                            children: [
                                                                taxRate,
                                                                "%"
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                            children: ((_item_product4 = item.product) === null || _item_product4 === void 0 ? void 0 : _item_product4.price) && formatCurrencyToDisplay(price, item.product.price.currency, false)
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    children: ((_item_product5 = item.product) === null || _item_product5 === void 0 ? void 0 : _item_product5.price) && formatCurrencyToDisplay(totalAmount, item.product.price.currency, false)
                                                }),
                                                !isInclusivePricing && /*#__PURE__*/ jsxRuntime.jsxs("td", {
                                                    children: [
                                                        taxRate,
                                                        "%"
                                                    ]
                                                })
                                            ]
                                        }, item.id);
                                    }) : /*#__PURE__*/ jsxRuntime.jsx("tr", {
                                        className: styles$1.noItems,
                                        children: /*#__PURE__*/ jsxRuntime.jsx("td", {
                                            colSpan: isInclusivePricing ? 7 : 6,
                                            children: /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                className: styles$1.notSet,
                                                children: [
                                                    " ",
                                                    i18n._({
                                                        id: "dejGov"
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                })
                            ]
                        }),
                        (sanitizedItems === null || sanitizedItems === void 0 ? void 0 : sanitizedItems.length) > 0 && /*#__PURE__*/ jsxRuntime.jsx("table", {
                            cellPadding: 0,
                            cellSpacing: 0,
                            className: styles$1.totalsTable,
                            children: /*#__PURE__*/ jsxRuntime.jsxs("tbody", {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                        className: styles$1.subtotal,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                colSpan: 4,
                                                children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: isInclusivePricing ? i18n._({
                                                        id: "kkxdDJ"
                                                    }) : i18n._({
                                                        id: "X2rrlw"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                children: subtotalPrice === null || subtotalPrice === void 0 ? void 0 : subtotalPrice.toString()
                                            })
                                        ]
                                    }),
                                    Object.entries(taxesByVatRate).map(([rate, totalTax], index)=>/*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    colSpan: 4,
                                                    children: /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                        children: [
                                                            i18n._({
                                                                id: "/SgoNA"
                                                            }),
                                                            " (",
                                                            rate,
                                                            "%)"
                                                        ]
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                    children: currency && formatCurrencyToDisplay(totalTax, currency, true)
                                                })
                                            ]
                                        }, index)),
                                    /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                        className: styles$1.total,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                colSpan: 4,
                                                children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "72c5Qo"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: totalPrice === null || totalPrice === void 0 ? void 0 : totalPrice.toString()
                                                })
                                            })
                                        ]
                                    })
                                ]
                            })
                        }),
                        footer && /*#__PURE__*/ jsxRuntime.jsx("div", {
                            className: "block-memo",
                            style: {
                                marginTop: '20px'
                            },
                            children: footer
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("footer", {
                children: /*#__PURE__*/ jsxRuntime.jsxs("section", {
                    style: {
                        gap: '15mm'
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("aside", {
                            className: `${styles$1.footerAside} ${styles$1.footerAsideStart}`,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    className: styles$1.blockEntityInfo,
                                    children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx("div", {}),
                                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                children: /*#__PURE__*/ jsxRuntime.jsx("b", {
                                                    children: entityData && 'organization' in entityData ? (_entityData_organization = entityData.organization) === null || _entityData_organization === void 0 ? void 0 : _entityData_organization.legal_name : ''
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                                    children: [
                                                        entityData === null || entityData === void 0 ? void 0 : (_entityData_address = entityData.address) === null || _entityData_address === void 0 ? void 0 : _entityData_address.line1,
                                                        " ",
                                                        entityData === null || entityData === void 0 ? void 0 : (_entityData_address1 = entityData.address) === null || _entityData_address1 === void 0 ? void 0 : _entityData_address1.line2,
                                                        entityData === null || entityData === void 0 ? void 0 : (_entityData_address2 = entityData.address) === null || _entityData_address2 === void 0 ? void 0 : _entityData_address2.city,
                                                        " ",
                                                        entityData === null || entityData === void 0 ? void 0 : (_entityData_address3 = entityData.address) === null || _entityData_address3 === void 0 ? void 0 : _entityData_address3.country
                                                    ]
                                                })
                                            })
                                        ]
                                    })
                                }),
                                ' ',
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("hr", {
                                            style: {
                                                height: '5pt',
                                                visibility: 'hidden'
                                            }
                                        }),
                                        (entityData === null || entityData === void 0 ? void 0 : entityData.tax_id) && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                            children: [
                                                i18n._({
                                                    id: "4m4EuK"
                                                }),
                                                " ",
                                                entityData === null || entityData === void 0 ? void 0 : entityData.tax_id
                                            ]
                                        }),
                                        (entityVatIds === null || entityVatIds === void 0 ? void 0 : (_entityVatIds_data_ = entityVatIds.data[0]) === null || _entityVatIds_data_ === void 0 ? void 0 : _entityVatIds_data_.id) && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                            children: [
                                                i18n._({
                                                    id: "Ttw+e+"
                                                }),
                                                " ",
                                                entityVatIds.data[0].value
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                                            children: entityData === null || entityData === void 0 ? void 0 : entityData.phone
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                                            children: entityData === null || entityData === void 0 ? void 0 : entityData.email
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("aside", {
                            className: `${styles$1.footerAside} ${styles$1.footerAsideEnd}`,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("aside", {
                                    children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "68ETRW"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                children: !bankAccount ? /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: styles$1.notSet,
                                                    children: i18n._({
                                                        id: "xjGjLI"
                                                    })
                                                }) : /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                                    children: [
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bank_name) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "ROPK7D"
                                                                }),
                                                                ": ",
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bank_name
                                                            ]
                                                        }),
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.iban) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "sfIOlH"
                                                                }),
                                                                ": ",
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.iban
                                                            ]
                                                        }),
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bic) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "PuG6ji"
                                                                }),
                                                                ": ",
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bic
                                                            ]
                                                        }),
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.account_number) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "5ad2f4"
                                                                }),
                                                                ":",
                                                                ' ',
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.account_number
                                                            ]
                                                        }),
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.routing_number) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "dVQ/BC"
                                                                }),
                                                                ":",
                                                                ' ',
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.routing_number
                                                            ]
                                                        }),
                                                        (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.sort_code) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                            children: [
                                                                i18n._({
                                                                    id: "XHVMHc"
                                                                }),
                                                                ": ",
                                                                bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.sort_code
                                                            ]
                                                        })
                                                    ]
                                                })
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("aside", {
                                    children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: styles$1.qrCodeData
                                    })
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};

var css_248z$1 = "@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n\n:root,\n:host {\n  --font-size-invoice-title: 3rem; /* 48px */\n  --font-size-invoice-number: 1.248rem; /* 19.9667px */\n  --font-size-header: 0.624rem; /* 9.9834px */\n  --font-size-total-label: 0.83195rem; /* 13.3112px */\n  --font-size-total-value: 1.125rem; /* 18px */\n  --line-height-header: 1.333; /* 13.3112px / 9.9834px */\n  --font-weight-header: 700;\n  --font-size-body: 0.6239625rem; /* 9.9834px */\n  --font-size-small: 0.554rem; /* 8.8741px */\n  --line-height-body: 0.83195rem; /* 13.3112px */\n  \n  --spacing-xxs: 0.139rem; /* 2.219px */\n  --spacing-xs: 0.25rem; /* 4px */\n  --spacing-xs-sm: 0.41625rem; /* 6.66px */\n  --spacing-sm: 0.5rem; /* 8px */\n  --spacing-md: 0.75rem; /* 12px */\n  --spacing-lg: 1rem; /* 16px */\n  --spacing-xl: 1.5rem; /* 24px */\n  --spacing-xxl: 2rem; /* 32px */\n\n  --padding-xs: 0.208125rem; /* 3.33px */\n  --padding-sm: 0.2775rem; /* 4.44px */\n  --padding-md: 0.554rem; /* 8.874px */\n  \n  --logo-width: 8.875rem; /* ~142px */\n  --logo-height: 4.4375rem; /* ~71px */\n  --totals-table-width: 18.75rem; /* 300px */\n  --payment-section-gap: 1.875rem; /* 30px */\n  --payment-details-width: 12.5rem; /* 200px */\n  --qr-code-size: 5rem; /* 80px */\n  \n  --col-number-width: 1.25rem;\n  --col-product-min-width: 15rem;\n  --col-qty-width: 3rem;\n  --col-price-width: 4.5rem;\n  --col-discount-width: 3rem;\n  --col-amount-width: 5rem;\n  --col-tax-width: 3rem;\n  \n  --text-primary: #101011;\n  --text-secondary: #666666;\n  --text-muted: #999999;\n  --border-color: #F2F2F2;\n  --bg-header: #FAFAFA;\n  --accent-color: #3737FF;\n\n  --border-radius: var(--spacing-xs);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g {\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-height: 29.7cm;\n  padding: 2.5rem;\n  font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  color: var(--text-primary);\n  font-size: var(--font-size-body);\n  line-height: var(--line-height-body);\n  isolation: isolate;\n  box-sizing: border-box;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g *,\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g *::before,\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g *::after {\n  box-sizing: border-box;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_header__L-JtV {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: var(--spacing-xxl);\n  padding-bottom: var(--spacing-lg);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_invoiceTitle__9DMPi {\n  font-size: var(--font-size-invoice-title);\n  font-weight: 300;\n  margin: 0;\n  line-height: 1;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_invoiceNumber__f1VLA {\n  font-weight: 300;\n  font-size: var(--font-size-invoice-number);\n  line-height: 1;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_logoWrapper__EggNl {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: var(--logo-width);\n  min-height: var(--logo-height);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_logoWrapper__EggNl .InvoicePreviewMonite-module_no-logo__NWTdp {\n  background-color: var(--bg-header);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_logoImage__bhEl0 {\n  max-width: var(--logo-width);\n  max-height: var(--logo-height);\n  object-fit: contain;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_mainInfoSection__Z59Sd {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: var(--spacing-xl);\n  margin-bottom: var(--spacing-xxl);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_infoColumn__lIDlw {\n  display: flex;\n  flex-direction: column;\n  padding: var(--padding-xs) var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_columnHeaderTitle__Sl8z0 {\n  font-size: var(--font-size-header);\n  font-weight: var(--font-weight-header);\n  line-height: var(--line-height-header);\n  background-color: var(--bg-header);\n  text-transform: none;\n  border-radius: var(--border-radius);\n  padding: var(--padding-xs) var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_columnContent__SLKtk {\n  display: flex;\n  flex-direction: column;\n  padding: 0 var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_columnText__T1mCL {\n  margin: 0;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_memoSection__AO7bu {\n  margin-bottom: var(--spacing-xxl);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_sectionHeaderTitle__HwvgI {\n  font-size: var(--font-size-header);\n  font-weight: var(--font-weight-header);\n  line-height: var(--line-height-header);\n  background-color: var(--bg-header);\n  margin-bottom: var(--spacing-sm);\n  text-transform: none;\n  border-radius: var(--border-radius);\n  padding: var(--padding-xs) var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_sectionText__2VG0E {\n  margin: 0;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsSection__W67KQ {\n  margin-bottom: var(--spacing-xxl);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV thead tr {\n  background-color: var(--bg-header);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV th {\n  font-weight: var(--font-weight-header);\n  line-height: var(--line-height-header);\n  text-align: left;\n  padding: var(--padding-xs) var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV td {\n  padding: var(--padding-md) var(--padding-sm);\n  border-bottom: 1px solid var(--border-color);\n  vertical-align: top;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV tbody tr:last-child td {\n  border-bottom: none;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colProduct__ISxEi {\n  min-width: var(--col-product-min-width);\n  max-width: 20rem;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colQty__MhDPd {\n  width: var(--col-qty-width);\n  text-align: left;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colPrice__N7pqY {\n  width: var(--col-price-width);\n  text-align: left;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colDiscount__wiXZe {\n  width: var(--col-discount-width);\n  text-align: left;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colAmount__NIh86 {\n  width: var(--col-amount-width);\n  text-align: left;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_lineItemsTable__NrArV .InvoicePreviewMonite-module_colTax__h9b9p {\n  width: var(--col-tax-width);\n  text-align: right;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_productName__VwP8I {\n  margin-bottom: var(--spacing-xxs);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_productDescription__-nA-k {\n  font-size: var(--font-size-small);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_noItemsRow__4Bs4n .InvoicePreviewMonite-module_noItemsCell__6-9Iw {\n  text-align: center;\n  color: var(--text-muted);\n  font-style: italic;\n  padding: var(--spacing-xl);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_itemRow__v41Cn td {\n  vertical-align: top;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_totalsSection__175nt {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: var(--spacing-xxl);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_totalsTable__E5M0U {\n  width: var(--totals-table-width);\n  max-width: 100%;\n  border-spacing: 0;\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_totalRow__Xx8BU {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_totalValue__VMekM {\n  text-align: right;\n  min-width: 6rem;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_finalTotal__8qSjK {\n  margin-top: var(--spacing-xxs);\n  padding: var(--padding-sm);\n  background-color: var(--bg-header);\n  border-radius: var(--border-radius);\n  font-size: var(--font-size-total-label);\n  font-weight: 700;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_footerSection__KhPlf {\n  margin-top: auto;\n  border-top: 1px solid var(--text-primary);\n  padding-top: var(--spacing-lg);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_footerContent__CsSU9 {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: var(--payment-section-gap);\n  flex-wrap: wrap;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_companyInfo__WeqKR {\n  flex: 1;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_companyText__8wjwX {\n  margin: var(--spacing-xxs) 0;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_paymentSection__X8AaD {\n  display: flex;\n  gap: var(--payment-section-gap);\n  align-items: flex-start;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_paymentDetails__8E5dN {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-xs);\n  min-width: var(--payment-details-width);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_qrCodeSection__JpVM7 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_qrCodeData__wqpxp {\n  display: inline-flex;\n  flex-flow: column;\n  height: 85px;\n  width: 85px;\n  background-image: url('data:image/svg+xml,<svg width=\"85\" height=\"85\" viewBox=\"0 0 85 85\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g filter=\"url(%23filter0_f_23098_280990)\"><path d=\"M3.8291 3.87793V6.48663V9.09532V11.704V14.3127V16.9214V19.5301V22.1388H6.4378H9.04649H11.6552H14.2639H16.8726H19.4813H22.09V19.5301V16.9214V14.3127V11.704V9.09532V6.48663V3.87793H19.4813H16.8726H14.2639H11.6552H9.04649H6.4378H3.8291ZM24.6987 3.87793V6.48663V9.09532H27.3074V6.48663H29.9161V3.87793H27.3074H24.6987ZM29.9161 6.48663V9.09532H32.5248V6.48663H29.9161ZM32.5248 9.09532V11.704H35.1334H37.7421V9.09532V6.48663V3.87793H35.1334V6.48663V9.09532H32.5248ZM32.5248 11.704H29.9161H27.3074H24.6987V14.3127H27.3074H29.9161V16.9214H27.3074V19.5301H29.9161V22.1388H32.5248V19.5301H35.1334V22.1388H32.5248V24.7475H29.9161V27.3562H32.5248H35.1334V29.9649H37.7421V27.3562V24.7475V22.1388V19.5301V16.9214H35.1334V14.3127H32.5248V11.704ZM35.1334 29.9649H32.5248V32.5736H29.9161V35.1823V37.791H32.5248V40.3997V43.0084H29.9161H27.3074V40.3997H29.9161V37.791H27.3074V35.1823V32.5736H24.6987V29.9649H27.3074V32.5736H29.9161V29.9649V27.3562H27.3074H24.6987V24.7475H22.09H19.4813H16.8726V27.3562H14.2639V29.9649H11.6552V27.3562H14.2639V24.7475H11.6552H9.04649V27.3562H6.4378V29.9649V32.5736V35.1823H9.04649V32.5736H11.6552H14.2639H16.8726V29.9649H19.4813V27.3562H22.09V29.9649H19.4813V32.5736H22.09V35.1823H19.4813V37.791H22.09H24.6987V40.3997V43.0084V45.6171H27.3074V48.2258H29.9161H32.5248H35.1334V50.8344H32.5248H29.9161H27.3074V48.2258H24.6987V50.8344V53.4431H27.3074V56.0518H24.6987V58.6605H27.3074H29.9161V56.0518H32.5248V58.6605H35.1334H37.7421H40.3508H42.9595V56.0518H45.5682V58.6605H48.1769H50.7856H53.3943V56.0518H50.7856H48.1769V53.4431H45.5682V50.8344H42.9595V53.4431H40.3508H37.7421V56.0518H35.1334V53.4431H37.7421V50.8344V48.2258V45.6171H40.3508V43.0084H37.7421H35.1334V40.3997H37.7421V37.791V35.1823V32.5736H35.1334V29.9649ZM42.9595 50.8344V48.2258H40.3508V50.8344H42.9595ZM48.1769 53.4431H50.7856H53.3943V50.8344H50.7856H48.1769V53.4431ZM53.3943 50.8344H56.003V48.2258V45.6171V43.0084V40.3997H53.3943H50.7856H48.1769V37.791H45.5682V40.3997H42.9595V43.0084V45.6171H45.5682V43.0084H48.1769V45.6171V48.2258H50.7856H53.3943V50.8344ZM45.5682 37.791V35.1823H42.9595H40.3508V37.791H42.9595H45.5682ZM48.1769 37.791H50.7856V35.1823V32.5736V29.9649H53.3943V32.5736H56.003V35.1823H58.6117V32.5736V29.9649H56.003V27.3562H58.6117V24.7475H56.003H53.3943V27.3562H50.7856V24.7475H48.1769V27.3562H45.5682V29.9649H48.1769V32.5736V35.1823V37.791ZM45.5682 29.9649H42.9595V32.5736H45.5682V29.9649ZM56.003 35.1823H53.3943V37.791H56.003V35.1823ZM19.4813 35.1823V32.5736H16.8726V35.1823H19.4813ZM16.8726 35.1823H14.2639H11.6552H9.04649V37.791H11.6552H14.2639H16.8726V35.1823ZM6.4378 35.1823H3.8291V37.791H6.4378V35.1823ZM6.4378 27.3562V24.7475H3.8291V27.3562H6.4378ZM24.6987 24.7475H27.3074V22.1388V19.5301H24.6987V22.1388V24.7475ZM40.3508 3.87793V6.48663V9.09532V11.704V14.3127V16.9214V19.5301V22.1388H42.9595H45.5682H48.1769H50.7856H53.3943H56.003H58.6117V19.5301V16.9214V14.3127V11.704V9.09532V6.48663V3.87793H56.003H53.3943H50.7856H48.1769H45.5682H42.9595H40.3508ZM6.4378 6.48663H9.04649H11.6552H14.2639H16.8726H19.4813V9.09532V11.704V14.3127V16.9214V19.5301H16.8726H14.2639H11.6552H9.04649H6.4378V16.9214V14.3127V11.704V9.09532V6.48663ZM42.9595 6.48663H45.5682H48.1769H50.7856H53.3943H56.003V9.09532V11.704V14.3127V16.9214V19.5301H53.3943H50.7856H48.1769H45.5682H42.9595V16.9214V14.3127V11.704V9.09532V6.48663ZM9.04649 9.09532V11.704V14.3127V16.9214H11.6552H14.2639H16.8726V14.3127V11.704V9.09532H14.2639H11.6552H9.04649ZM45.5682 9.09532V11.704V14.3127V16.9214H48.1769H50.7856H53.3943V14.3127V11.704V9.09532H50.7856H48.1769H45.5682ZM40.3508 24.7475V27.3562H42.9595V24.7475H40.3508ZM3.8291 40.3997V43.0084V45.6171V48.2258V50.8344V53.4431V56.0518V58.6605H6.4378H9.04649H11.6552H14.2639H16.8726H19.4813H22.09V56.0518V53.4431V50.8344V48.2258V45.6171V43.0084V40.3997H19.4813H16.8726H14.2639H11.6552H9.04649H6.4378H3.8291ZM6.4378 43.0084H9.04649H11.6552H14.2639H16.8726H19.4813V45.6171V48.2258V50.8344V53.4431V56.0518H16.8726H14.2639H11.6552H9.04649H6.4378V53.4431V50.8344V48.2258V45.6171V43.0084ZM9.04649 45.6171V48.2258V50.8344V53.4431H11.6552H14.2639H16.8726V50.8344V48.2258V45.6171H14.2639H11.6552H9.04649ZM56.003 53.4431V56.0518H58.6117V53.4431H56.003Z\" fill=\"black\"/></g><defs><filter id=\"filter0_f_23098_280990\" x=\"-2.04017\" y=\"-1.99134\" width=\"66.5217\" height=\"66.5217\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"/><feGaussianBlur stdDeviation=\"1.63043\" result=\"effect1_foregroundBlur_23098_280990\"/></filter></defs></svg>');\n  border-radius: var(--border-radius);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_pageInfo__qL5HB {\n  text-align: center;\n  margin-top: var(--spacing-lg);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_pageText__qd8-E {\n  font-size: var(--font-size-small);\n  color: var(--text-muted);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_notSet__H-uSq {\n  color: var(--text-muted);\n  font-style: italic;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_documentTitle__EEUZ- {\n  flex: 1;\n  padding: var(--spacing-md) 0;\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_columnHeader__n2kVO {\n  margin-bottom: var(--spacing-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_sectionHeader__hLHlX {\n  margin-bottom: var(--spacing-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_sectionContent__gmiVT {\n  padding: var(--padding-xs) var(--padding-sm);\n}\n\n.InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g .InvoicePreviewMonite-module_paymentLink__9iGUH {\n  font-weight: 700;\n  color: var(--accent-color);\n  text-decoration: underline;\n}\n";
var styles = {"invoicePreviewMonite":"InvoicePreviewMonite-module_invoicePreviewMonite__QyS-g","header":"InvoicePreviewMonite-module_header__L-JtV","invoiceTitle":"InvoicePreviewMonite-module_invoiceTitle__9DMPi","invoiceNumber":"InvoicePreviewMonite-module_invoiceNumber__f1VLA","logoWrapper":"InvoicePreviewMonite-module_logoWrapper__EggNl","no-logo":"InvoicePreviewMonite-module_no-logo__NWTdp","logoImage":"InvoicePreviewMonite-module_logoImage__bhEl0","mainInfoSection":"InvoicePreviewMonite-module_mainInfoSection__Z59Sd","infoColumn":"InvoicePreviewMonite-module_infoColumn__lIDlw","columnHeaderTitle":"InvoicePreviewMonite-module_columnHeaderTitle__Sl8z0","columnContent":"InvoicePreviewMonite-module_columnContent__SLKtk","columnText":"InvoicePreviewMonite-module_columnText__T1mCL","memoSection":"InvoicePreviewMonite-module_memoSection__AO7bu","sectionHeaderTitle":"InvoicePreviewMonite-module_sectionHeaderTitle__HwvgI","sectionText":"InvoicePreviewMonite-module_sectionText__2VG0E","lineItemsSection":"InvoicePreviewMonite-module_lineItemsSection__W67KQ","lineItemsTable":"InvoicePreviewMonite-module_lineItemsTable__NrArV","colProduct":"InvoicePreviewMonite-module_colProduct__ISxEi","colQty":"InvoicePreviewMonite-module_colQty__MhDPd","colPrice":"InvoicePreviewMonite-module_colPrice__N7pqY","colDiscount":"InvoicePreviewMonite-module_colDiscount__wiXZe","colAmount":"InvoicePreviewMonite-module_colAmount__NIh86","colTax":"InvoicePreviewMonite-module_colTax__h9b9p","productName":"InvoicePreviewMonite-module_productName__VwP8I","productDescription":"InvoicePreviewMonite-module_productDescription__-nA-k","noItemsRow":"InvoicePreviewMonite-module_noItemsRow__4Bs4n","noItemsCell":"InvoicePreviewMonite-module_noItemsCell__6-9Iw","itemRow":"InvoicePreviewMonite-module_itemRow__v41Cn","totalsSection":"InvoicePreviewMonite-module_totalsSection__175nt","totalsTable":"InvoicePreviewMonite-module_totalsTable__E5M0U","totalRow":"InvoicePreviewMonite-module_totalRow__Xx8BU","totalValue":"InvoicePreviewMonite-module_totalValue__VMekM","finalTotal":"InvoicePreviewMonite-module_finalTotal__8qSjK","footerSection":"InvoicePreviewMonite-module_footerSection__KhPlf","footerContent":"InvoicePreviewMonite-module_footerContent__CsSU9","companyInfo":"InvoicePreviewMonite-module_companyInfo__WeqKR","companyText":"InvoicePreviewMonite-module_companyText__8wjwX","paymentSection":"InvoicePreviewMonite-module_paymentSection__X8AaD","paymentDetails":"InvoicePreviewMonite-module_paymentDetails__8E5dN","qrCodeSection":"InvoicePreviewMonite-module_qrCodeSection__JpVM7","qrCodeData":"InvoicePreviewMonite-module_qrCodeData__wqpxp","pageInfo":"InvoicePreviewMonite-module_pageInfo__qL5HB","pageText":"InvoicePreviewMonite-module_pageText__qd8-E","notSet":"InvoicePreviewMonite-module_notSet__H-uSq","documentTitle":"InvoicePreviewMonite-module_documentTitle__EEUZ-","columnHeader":"InvoicePreviewMonite-module_columnHeader__n2kVO","sectionHeader":"InvoicePreviewMonite-module_sectionHeader__hLHlX","sectionContent":"InvoicePreviewMonite-module_sectionContent__gmiVT","paymentLink":"InvoicePreviewMonite-module_paymentLink__9iGUH"};
styleInject(css_248z$1);

function _define_property$1c(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1c(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1c(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$R(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$R(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$R(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const InvoicePreviewMonite = ({ address, counterpart, counterpartVats, currency, invoiceData, entityData, entityVatIds, isNonVatSupported, paymentTerms, measureUnits = [] })=>{
    var _paymentTerms_data, _entityData_logo, _entityData_logo1, _counterpartVats_data_, _entityData_organization, _entityVatIds_data_;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { taxLabel } = getTaxTerminology(i18n, isNonVatSupported);
    const { document_id: documentId, payment_terms_id: paymentTermsId, line_items: items, fulfillment_date: fulfillmentDate, memo, footer, entity_bank_account_id: entityBankAccountId = '', vat_mode: vatMode } = invoiceData;
    const selectedPaymentTerm = paymentTerms === null || paymentTerms === void 0 ? void 0 : (_paymentTerms_data = paymentTerms.data) === null || _paymentTerms_data === void 0 ? void 0 : _paymentTerms_data.find((term)=>term.id === paymentTermsId);
    const dueDate = selectedPaymentTerm && calculateDueDate(selectedPaymentTerm);
    const sanitizedItems = sanitizeLineItems(items).map((item, index)=>_object_spread_props$R(_object_spread$1c({}, item), {
            id: item.id || `item-${index + 1}`
        }));
    const isInclusivePricing = vatMode === 'inclusive';
    const counterpartName = counterpart ? getCounterpartName(counterpart) : '';
    const { data: bankAccount } = useGetEntityBankAccountById(entityBankAccountId);
    const dateTime = i18n.date(new Date(), locale.dateFormat);
    const { subtotalPrice, totalPrice, taxesByVatRate } = useCreateInvoiceProductsTable({
        lineItems: sanitizedItems,
        formatCurrencyToDisplay,
        isNonVatSupported,
        actualCurrency: currency,
        isInclusivePricing
    });
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: styles.invoicePreviewMonite,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("header", {
                className: styles.header,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: styles.documentTitle,
                        children: /*#__PURE__*/ jsxRuntime.jsxs("h1", {
                            className: styles.invoiceTitle,
                            children: [
                                i18n._({
                                    id: "IuMGvq"
                                }),
                                ' ',
                                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                    className: styles.invoiceNumber,
                                    children: [
                                        "(#",
                                        documentId || i18n._({
                                            id: "rdsyU3",
                                            values: {
                                                INVOICE_DOCUMENT_AUTO_ID: INVOICE_DOCUMENT_AUTO_ID
                                            }
                                        }),
                                        ")"
                                    ]
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: cn(styles.logoWrapper, !(entityData === null || entityData === void 0 ? void 0 : (_entityData_logo = entityData.logo) === null || _entityData_logo === void 0 ? void 0 : _entityData_logo.url) && styles.noLogo),
                        children: (entityData === null || entityData === void 0 ? void 0 : (_entityData_logo1 = entityData.logo) === null || _entityData_logo1 === void 0 ? void 0 : _entityData_logo1.url) ? /*#__PURE__*/ jsxRuntime.jsx("img", {
                            className: styles.logoImage,
                            src: entityData.logo.url,
                            alt: i18n._({
                                id: "iG7KNr"
                            })
                        }) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: styles.logoText,
                            children: i18n._({
                                id: "wSwaLS"
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: styles.mainInfoSection,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: styles.infoColumn,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: styles.columnHeader,
                                children: /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                    className: styles.columnHeaderTitle,
                                    children: i18n._({
                                        id: "/jQctM"
                                    })
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: styles.columnContent,
                                children: !counterpartName ? /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: cn(styles.columnText, styles.notSet),
                                    children: i18n._({
                                        id: "MTqQMG"
                                    })
                                }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: cn(styles.columnText, styles.companyName),
                                            children: counterpartName
                                        }),
                                        address && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                            className: cn(styles.columnText, styles.address),
                                            children: [
                                                address.line1,
                                                address.line2 && ` ${address.line2}`,
                                                address.postal_code && `, ${address.postal_code}`,
                                                address.city && ` ${address.city}`,
                                                address.country && `, ${getCountryName(i18n, address.country)}`
                                            ]
                                        }),
                                        (counterpartVats === null || counterpartVats === void 0 ? void 0 : (_counterpartVats_data_ = counterpartVats.data[0]) === null || _counterpartVats_data_ === void 0 ? void 0 : _counterpartVats_data_.value) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                            className: cn(styles.columnText, styles.vatId),
                                            children: [
                                                taxLabel,
                                                ": ",
                                                counterpartVats.data[0].value
                                            ]
                                        }),
                                        getCounterpartPhone(counterpart) && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: cn(styles.columnText, styles.phone),
                                            children: getCounterpartPhone(counterpart)
                                        }),
                                        counterpart && isOrganizationCounterpart(counterpart) && counterpart.organization.email && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: cn(styles.columnText, styles.email),
                                            children: counterpart.organization.email
                                        }),
                                        counterpart && isIndividualCounterpart(counterpart) && counterpart.individual.email && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: cn(styles.columnText, styles.email),
                                            children: counterpart.individual.email
                                        })
                                    ]
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: styles.infoColumn,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: styles.columnHeader,
                                children: /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                    className: styles.columnHeaderTitle,
                                    children: i18n._({
                                        id: "URmyfc"
                                    })
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: styles.columnContent,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        className: styles.detailRow,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                className: styles.detailLabel,
                                                children: [
                                                    i18n._({
                                                        id: "X7pkpC"
                                                    }),
                                                    ": "
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                className: styles.detailValue,
                                                children: dateTime
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        className: styles.detailRow,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                className: styles.detailLabel,
                                                children: [
                                                    i18n._({
                                                        id: "XicmhT"
                                                    }),
                                                    ": "
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                className: styles.detailValue,
                                                children: dueDate ? i18n.date(dueDate, locale.dateFormat) : /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: styles.notSet,
                                                    children: i18n._({
                                                        id: "MTqQMG"
                                                    })
                                                })
                                            })
                                        ]
                                    }),
                                    fulfillmentDate && dateFns.isValid(fulfillmentDate) && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                        className: styles.detailRow,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                className: styles.detailLabel,
                                                children: [
                                                    i18n._({
                                                        id: "6hlq+R"
                                                    }),
                                                    ": "
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                className: styles.detailValue,
                                                children: i18n.date(fulfillmentDate, locale.dateFormat)
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: styles.infoColumn,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: styles.columnHeader,
                                children: /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                    className: styles.columnHeaderTitle,
                                    children: i18n._({
                                        id: "4WK0VU"
                                    })
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: styles.columnContent,
                                children: selectedPaymentTerm ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        selectedPaymentTerm.term_1 && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                            className: cn(styles.columnText, styles.paymentTerm),
                                            children: [
                                                i18n._({
                                                    id: "OjPw/f",
                                                    values: {
                                                        0: selectedPaymentTerm.term_1.number_of_days
                                                    }
                                                }),
                                                selectedPaymentTerm.term_1.discount && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        ",",
                                                        ' ',
                                                        rateMinorToMajor(selectedPaymentTerm.term_1.discount),
                                                        "%",
                                                        ' ',
                                                        i18n._({
                                                            id: "HmpVeZ"
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        selectedPaymentTerm.term_2 && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                            className: cn(styles.columnText, styles.paymentTerm),
                                            children: [
                                                i18n._({
                                                    id: "OjPw/f",
                                                    values: {
                                                        0: selectedPaymentTerm.term_2.number_of_days
                                                    }
                                                }),
                                                selectedPaymentTerm.term_2.discount && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                                    children: [
                                                        ",",
                                                        ' ',
                                                        rateMinorToMajor(selectedPaymentTerm.term_2.discount),
                                                        "%",
                                                        ' ',
                                                        i18n._({
                                                            id: "HmpVeZ"
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        selectedPaymentTerm.term_final && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                            className: cn(styles.columnText, styles.paymentTerm),
                                            children: [
                                                i18n._({
                                                    id: "OYCMq7"
                                                }),
                                                ' ',
                                                selectedPaymentTerm.term_final.number_of_days,
                                                ' ',
                                                i18n._({
                                                    id: "J/Upwb"
                                                })
                                            ]
                                        })
                                    ]
                                }) : /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: cn(styles.columnText, styles.notSet),
                                    children: i18n._({
                                        id: "MTqQMG"
                                    })
                                })
                            })
                        ]
                    })
                ]
            }),
            memo && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: styles.memoSection,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: styles.sectionHeader,
                        children: /*#__PURE__*/ jsxRuntime.jsx("h2", {
                            className: styles.sectionHeaderTitle,
                            children: i18n._({
                                id: "Kbwvno"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: styles.sectionContent,
                        children: /*#__PURE__*/ jsxRuntime.jsx("p", {
                            className: styles.sectionText,
                            children: memo
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: styles.lineItemsSection,
                children: /*#__PURE__*/ jsxRuntime.jsxs("table", {
                    className: styles.lineItemsTable,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("thead", {
                            children: /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colNumber,
                                        children: "#"
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colProduct,
                                        children: i18n._({
                                            id: "K47k8R"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colQty,
                                        children: i18n._({
                                            id: "oWXNE5"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colPrice,
                                        children: i18n._({
                                            id: "a7u1N9"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colAmount,
                                        children: i18n._({
                                            id: "hehnjM"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("th", {
                                        className: styles.colTax,
                                        children: taxLabel
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("tbody", {
                            children: sanitizedItems.length > 0 ? sanitizedItems.map((item, index)=>{
                                var _item_product_price, _item_product, _item_product1, _item_product2, _item_product3, _item_measure_unit, _item_product4, _item_product5;
                                const taxRate = getRateValueForItem(item, isNonVatSupported);
                                var _item_quantity;
                                const quantity = (_item_quantity = item === null || item === void 0 ? void 0 : item.quantity) !== null && _item_quantity !== void 0 ? _item_quantity : 1;
                                var _item_product_price_value;
                                const price = (_item_product_price_value = item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : (_item_product_price = _item_product.price) === null || _item_product_price === void 0 ? void 0 : _item_product_price.value) !== null && _item_product_price_value !== void 0 ? _item_product_price_value : 0;
                                const totalAmount = price * quantity;
                                return /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                    className: styles.itemRow,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("td", {
                                            className: styles.colNumber,
                                            children: index + 1
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs("td", {
                                            className: styles.colProduct,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                    className: styles.productName,
                                                    children: item === null || item === void 0 ? void 0 : (_item_product1 = item.product) === null || _item_product1 === void 0 ? void 0 : _item_product1.name
                                                }),
                                                (item === null || item === void 0 ? void 0 : (_item_product2 = item.product) === null || _item_product2 === void 0 ? void 0 : _item_product2.description) && /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                    className: styles.productDescription,
                                                    children: item.product.description
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs("td", {
                                            className: styles.colQty,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: styles.quantityValue,
                                                    children: quantity
                                                }),
                                                ' ',
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: styles.quantityUnit,
                                                    children: (item === null || item === void 0 ? void 0 : (_item_product3 = item.product) === null || _item_product3 === void 0 ? void 0 : _item_product3.measure_unit_id) ? getMeasureUnitName(item.product.measure_unit_id, measureUnits) : (item === null || item === void 0 ? void 0 : (_item_measure_unit = item.measure_unit) === null || _item_measure_unit === void 0 ? void 0 : _item_measure_unit.name) ? item.measure_unit.name : null
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("td", {
                                            className: styles.colPrice,
                                            children: ((_item_product4 = item.product) === null || _item_product4 === void 0 ? void 0 : _item_product4.price) ? formatCurrencyToDisplay(price, item.product.price.currency, true) : ''
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("td", {
                                            className: styles.colAmount,
                                            children: ((_item_product5 = item.product) === null || _item_product5 === void 0 ? void 0 : _item_product5.price) ? formatCurrencyToDisplay(totalAmount, item.product.price.currency, true) : ''
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("td", {
                                            className: styles.colTax,
                                            children: taxRate > 0 ? `${taxRate}%` : ''
                                        })
                                    ]
                                }, item.id);
                            }) : /*#__PURE__*/ jsxRuntime.jsx("tr", {
                                className: styles.noItemsRow,
                                children: /*#__PURE__*/ jsxRuntime.jsx("td", {
                                    colSpan: 6,
                                    className: styles.noItemsCell,
                                    children: /*#__PURE__*/ jsxRuntime.jsx("p", {
                                        className: styles.notSet,
                                        children: i18n._({
                                            id: "dejGov"
                                        })
                                    })
                                })
                            })
                        })
                    ]
                })
            }),
            (sanitizedItems === null || sanitizedItems === void 0 ? void 0 : sanitizedItems.length) > 0 && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: styles.totalsSection,
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: styles.totalsTable,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: styles.totalRow,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: styles.totalLabel,
                                    children: i18n._({
                                        id: "X2rrlw"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: styles.totalValue,
                                    children: subtotalPrice === null || subtotalPrice === void 0 ? void 0 : subtotalPrice.toString()
                                })
                            ]
                        }),
                        Object.entries(taxesByVatRate).map(([rate, totalTax], index)=>/*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: styles.totalRow,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                        className: styles.totalLabel,
                                        children: [
                                            i18n._({
                                                id: "72c5Qo"
                                            }),
                                            " ",
                                            taxLabel,
                                            " (",
                                            rate,
                                            "%)"
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        className: styles.totalValue,
                                        children: currency && formatCurrencyToDisplay(totalTax, currency, true)
                                    })
                                ]
                            }, index)),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: cn(styles.totalRow, styles.finalTotal),
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                    className: styles.totalLabel,
                                    children: [
                                        i18n._({
                                            id: "9X/uxB"
                                        }),
                                        " (",
                                        currency,
                                        ")"
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: styles.totalValue,
                                    children: totalPrice === null || totalPrice === void 0 ? void 0 : totalPrice.toString()
                                })
                            ]
                        })
                    ]
                })
            }),
            footer && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: styles.sectionContent,
                children: /*#__PURE__*/ jsxRuntime.jsx("p", {
                    className: styles.sectionText,
                    children: footer
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("footer", {
                className: styles.footerSection,
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: styles.footerContent,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: styles.companyInfo,
                            children: [
                                entityData && 'organization' in entityData && ((_entityData_organization = entityData.organization) === null || _entityData_organization === void 0 ? void 0 : _entityData_organization.legal_name) && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: cn(styles.companyText, styles.companyName),
                                    children: entityData.organization.legal_name
                                }),
                                (entityData === null || entityData === void 0 ? void 0 : entityData.address) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                    className: cn(styles.companyText, styles.companyAddress),
                                    children: [
                                        entityData.address.line1,
                                        entityData.address.line2 && ` ${entityData.address.line2}`,
                                        entityData.address.city && `, ${entityData.address.city}`,
                                        entityData.address.country && `, ${getCountryName(i18n, entityData.address.country)}`
                                    ]
                                }),
                                (entityVatIds === null || entityVatIds === void 0 ? void 0 : (_entityVatIds_data_ = entityVatIds.data[0]) === null || _entityVatIds_data_ === void 0 ? void 0 : _entityVatIds_data_.value) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                    className: cn(styles.companyText, styles.companyVat),
                                    children: [
                                        taxLabel,
                                        ": ",
                                        entityVatIds.data[0].value
                                    ]
                                }),
                                (entityData === null || entityData === void 0 ? void 0 : entityData.phone) && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: cn(styles.companyText, styles.companyPhone),
                                    children: entityData.phone
                                }),
                                (entityData === null || entityData === void 0 ? void 0 : entityData.email) && /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: cn(styles.companyText, styles.companyEmail),
                                    children: entityData.email
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: styles.paymentSection,
                            children: [
                                bankAccount && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    className: styles.paymentDetails,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: styles.paymentLink,
                                            children: /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                                children: [
                                                    i18n._({
                                                        id: "4fL/V7"
                                                    }),
                                                    " ",
                                                    totalPrice === null || totalPrice === void 0 ? void 0 : totalPrice.toString(),
                                                    " ",
                                                    i18n._({
                                                        id: "Z1UHHp"
                                                    })
                                                ]
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                            className: styles.paymentInfo,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("p", {
                                                    className: styles.paymentText,
                                                    children: i18n._({
                                                        id: "RhQWz/"
                                                    })
                                                }),
                                                (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.iban) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "sfIOlH"
                                                        }),
                                                        ": ",
                                                        bankAccount.iban
                                                    ]
                                                }),
                                                (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bic) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "PuG6ji"
                                                        }),
                                                        ": ",
                                                        bankAccount.bic
                                                    ]
                                                }),
                                                (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bank_name) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "ROPK7D"
                                                        }),
                                                        ": ",
                                                        bankAccount.bank_name
                                                    ]
                                                }),
                                                !(bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.iban) && (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.account_number) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "5ad2f4"
                                                        }),
                                                        ": ",
                                                        bankAccount.account_number
                                                    ]
                                                }),
                                                !(bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bic) && (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.routing_number) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "dVQ/BC"
                                                        }),
                                                        ": ",
                                                        bankAccount.routing_number
                                                    ]
                                                }),
                                                (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.sort_code) && /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                                    className: styles.paymentText,
                                                    children: [
                                                        i18n._({
                                                            id: "XHVMHc"
                                                        }),
                                                        ": ",
                                                        bankAccount.sort_code
                                                    ]
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("div", {
                                    className: styles.qrCodeSection,
                                    children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: styles.qrCodeData
                                    })
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
};

function asyncGeneratorStep$s(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$s(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$s(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$s(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useDocumentTemplatesApi = ()=>{
    var _componentSettings_templateSettings, _componentSettings_templateSettings1;
    const { api, queryClient, componentSettings } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { data: documentTemplates, isLoading } = api.documentTemplates.getDocumentTemplates.useQuery({}, {
        enabled: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.showTemplateSection
    });
    const [invoiceTemplates, defaultInvoiceTemplate] = React.useMemo(()=>{
        var _documentTemplates_data, _componentSettings_templateSettings, _componentSettings_templateSettings_availableTemplateIds, _componentSettings_templateSettings1;
        let filtered = [];
        filtered = (documentTemplates === null || documentTemplates === void 0 ? void 0 : (_documentTemplates_data = documentTemplates.data) === null || _documentTemplates_data === void 0 ? void 0 : _documentTemplates_data.filter((template)=>[
                'invoice',
                'receivable'
            ].includes(template.document_type))) || [];
        if ((componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.availableTemplateIds) && (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : (_componentSettings_templateSettings_availableTemplateIds = _componentSettings_templateSettings1.availableTemplateIds) === null || _componentSettings_templateSettings_availableTemplateIds === void 0 ? void 0 : _componentSettings_templateSettings_availableTemplateIds.length) > 0) {
            filtered = filtered.filter((template)=>{
                var _componentSettings_templateSettings_availableTemplateIds, _componentSettings_templateSettings;
                return (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : (_componentSettings_templateSettings_availableTemplateIds = _componentSettings_templateSettings.availableTemplateIds) === null || _componentSettings_templateSettings_availableTemplateIds === void 0 ? void 0 : _componentSettings_templateSettings_availableTemplateIds.includes(template === null || template === void 0 ? void 0 : template.id)) || template.is_default;
            });
        }
        return [
            filtered,
            filtered.find((template)=>template.is_default)
        ];
    }, [
        documentTemplates,
        componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : _componentSettings_templateSettings1.availableTemplateIds
    ]);
    const updateMutation = api.documentTemplates.postDocumentTemplatesIdMakeDefault.useMutation(undefined, {
        onSuccess: ()=>{
            api.documentTemplates.getDocumentTemplates.invalidateQueries(queryClient);
        }
    });
    const setDefaultTemplate = (id, name)=>_async_to_generator$s(function*() {
            yield updateMutation.mutateAsync({
                path: {
                    document_template_id: id
                }
            }, {
                onSuccess: ()=>{
                    reactHotToast.toast.success(i18n._({
                        id: "mgKw3w",
                        values: {
                            name: name
                        }
                    }));
                },
                onError: (error)=>{
                    reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
                }
            });
        })();
    return {
        invoiceTemplates,
        defaultInvoiceTemplate,
        isLoading,
        setDefaultTemplate
    };
};

/**
 * Custom hook for observing element resize events
 * NextJS-safe with proper cleanup and SSR handling
 */ const useResizeObserver = (callback, debounceMs = 50)=>{
    const callbackRef = React.useRef(callback);
    const timeoutRef = React.useRef();
    const observerRef = React.useRef();
    const isMountedRef = useIsMounted();
    // Keep callback ref updated
    callbackRef.current = callback;
    const observe = (element)=>{
        if (!element || typeof window === 'undefined') return;
        // Clean up existing observer
        if (observerRef.current) {
            observerRef.current.disconnect();
        }
        // Create new observer
        observerRef.current = new ResizeObserver(()=>{
            // Clear previous timeout
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
            // Debounce the callback
            timeoutRef.current = setTimeout(()=>{
                if (isMountedRef.current) {
                    callbackRef.current();
                }
            }, debounceMs);
        });
        // Start observing
        observerRef.current.observe(element);
    };
    const disconnect = ()=>{
        if (observerRef.current) {
            observerRef.current.disconnect();
        }
        if (timeoutRef.current) {
            clearTimeout(timeoutRef.current);
        }
    };
    // Cleanup on unmount
    React.useEffect(()=>{
        return ()=>{
            disconnect();
        };
    }, []);
    return {
        observe,
        disconnect
    };
};

/**
 * Custom hook for window resize events
 * NextJS-safe with proper cleanup and SSR handling
 */ const useWindowResize = (callback, debounceMs = 100)=>{
    const callbackRef = React.useRef(callback);
    const timeoutRef = React.useRef();
    const isMountedRef = useIsMounted();
    callbackRef.current = callback;
    React.useEffect(()=>{
        if (typeof window === 'undefined') return;
        const handleResize = ()=>{
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
            timeoutRef.current = setTimeout(()=>{
                if (isMountedRef.current) {
                    callbackRef.current();
                }
            }, debounceMs);
        };
        window.addEventListener('resize', handleResize);
        return ()=>{
            window.removeEventListener('resize', handleResize);
            if (timeoutRef.current) {
                clearTimeout(timeoutRef.current);
            }
        };
    }, [
        debounceMs,
        isMountedRef
    ]);
};

/**
 * A4 paper dimensions in different units
 */ const A4_DIMENSIONS = {
    mm: {
        width: 210,
        height: 297
    },
    cm: {
        width: 21,
        height: 29.7
    },
    inches: {
        width: 8.27,
        height: 11.69
    }
};
/**
 * Custom hook to calculate A4 dimensions in pixels based on screen DPI
 * Handles different screen densities and provides adaptive sizing
 */ const useA4Dimensions = ()=>{
    const [dimensions, setDimensions] = React.useState({
        width: 794,
        height: 1123,
        dpi: 96
    });
    React.useEffect(()=>{
        if (typeof window === 'undefined') return;
        const calculateDimensions = ()=>{
            // Method 1: Try to get actual DPI using matchMedia
            // This checks common DPI values
            const dpiValues = [
                72,
                96,
                120,
                144,
                192,
                240,
                288,
                384
            ];
            let detectedDpi = 96; // Default fallback
            for (const dpi of dpiValues){
                if (window.matchMedia(`(resolution: ${dpi}dpi)`).matches) {
                    detectedDpi = dpi;
                    break;
                }
            }
            // Method 2: Alternative approach using devicePixelRatio
            // This is more reliable but gives us the CSS pixel ratio, not true DPI
            const pixelRatio = window.devicePixelRatio || 1;
            // For high-DPI displays (Retina, etc.), we need to account for pixel ratio
            // Standard displays: ratio = 1, Retina: ratio = 2, etc.
            const effectiveDpi = detectedDpi * pixelRatio;
            // Method 3: Use CSS inches to pixels conversion
            // Create a temporary element to measure 1 inch in pixels
            const testElement = document.createElement('div');
            testElement.style.width = '1in';
            testElement.style.height = '1in';
            testElement.style.position = 'absolute';
            testElement.style.left = '-9999px';
            document.body.appendChild(testElement);
            const rect = testElement.getBoundingClientRect();
            const measuredDpi = Math.round(rect.width);
            document.body.removeChild(testElement);
            const finalDpi = measuredDpi > 0 ? measuredDpi : effectiveDpi;
            const pixelWidth = Math.round(A4_DIMENSIONS.inches.width * finalDpi);
            const pixelHeight = Math.round(A4_DIMENSIONS.inches.height * finalDpi);
            setDimensions({
                width: pixelWidth,
                height: pixelHeight,
                dpi: finalDpi
            });
        };
        calculateDimensions();
        // Recalculate on window resize (DPI might change on external monitors)
        window.addEventListener('resize', calculateDimensions);
        return ()=>{
            window.removeEventListener('resize', calculateDimensions);
        };
    }, []);
    return dimensions;
};

/**
 * Custom hook for adaptive scaling of preview components
 * Combines ResizeObserver and window resize handling
 */ const useAdaptiveScale = (containerRef, previewRef, options = {})=>{
    const { minWidth: overrideWidth, minHeight: overrideHeight, containerPadding = 96, minScale = 1, initialDelay = 100, useAdaptiveDimensions = true } = options;
    const [scale, setScale] = React.useState(1);
    const initialCalculationDone = React.useRef(false);
    const isMountedRef = useIsMounted();
    const a4Dimensions = useA4Dimensions();
    const minWidth = overrideWidth !== null && overrideWidth !== void 0 ? overrideWidth : useAdaptiveDimensions ? a4Dimensions.width : 794;
    const minHeight = overrideHeight !== null && overrideHeight !== void 0 ? overrideHeight : useAdaptiveDimensions ? a4Dimensions.height : 1123;
    const calculateScale = React.useCallback(()=>{
        if (!containerRef.current || !previewRef.current || typeof window === 'undefined' || !isMountedRef.current) {
            return;
        }
        const container = containerRef.current;
        const containerWidth = container.clientWidth - containerPadding;
        const containerHeight = container.clientHeight - containerPadding;
        if (containerWidth <= 0 || containerHeight <= 0 || minWidth <= 0 || minHeight <= 0) {
            setScale(minScale);
            return;
        }
        const scaleX = containerWidth / minWidth;
        const scaleY = containerHeight / minHeight;
        // Scale logic:
        // - Minimum scale is defined by minScale (default 100%)
        // - Can grow larger if container allows
        // - If container is smaller, use scrollbars instead of scaling down
        const newScale = Math.max(Math.min(scaleX, scaleY), minScale);
        setScale(newScale);
    }, [
        containerRef,
        previewRef,
        isMountedRef,
        containerPadding,
        minWidth,
        minHeight,
        minScale
    ]);
    useWindowResize(calculateScale, 100);
    const { observe, disconnect } = useResizeObserver(calculateScale, 50);
    React.useEffect(()=>{
        if (typeof window === 'undefined') return;
        const timeoutId = setTimeout(()=>{
            calculateScale();
            initialCalculationDone.current = true;
        }, initialDelay);
        if (containerRef.current) {
            observe(containerRef.current);
        }
        return ()=>{
            clearTimeout(timeoutId);
            disconnect();
        };
    }, [
        observe,
        disconnect,
        initialDelay,
        calculateScale,
        containerRef
    ]);
    // Re-observe if container ref changes
    React.useEffect(()=>{
        if (containerRef.current && initialCalculationDone.current) {
            observe(containerRef.current);
        }
    }, [
        containerRef,
        observe
    ]);
    return scale;
};

function _define_property$1b(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1b(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1b(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$Q(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$Q(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$Q(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$j(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$j(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$j(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
/**
 * AspectRatio component that maintains a specific aspect ratio
 * Uses native CSS aspect-ratio for better performance and compatibility
 * with scaled and transformed content
 */ const AspectRatio = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { ratio, children, className, style } = _param, props = _object_without_properties$j(_param, [
        "ratio",
        "children",
        "className",
        "style"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread_props$Q(_object_spread$1b({
        ref: ref,
        className: cn('mtw:w-full', className),
        style: _object_spread_props$Q(_object_spread$1b({}, style), {
            aspectRatio: ratio.toString()
        })
    }, props), {
        children: children
    }));
});
AspectRatio.displayName = 'AspectRatio';

function _define_property$1a(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1a(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1a(target, key, source[key]);
        });
    }
    return target;
}
const InvoicePreview = ({ address, counterpart, counterpartVats, currency, invoiceData, entityData, entityVatIds, isNonVatSupported, paymentTerms, templateName = 'default_monite' })=>{
    const { defaultInvoiceTemplate } = useDocumentTemplatesApi();
    const containerRef = React.useRef(null);
    const previewRef = React.useRef(null);
    const { api } = useMoniteContext();
    const { data: measureUnitsData } = api.measureUnits.getMeasureUnits.useQuery();
    const currentTemplate = templateName !== null && templateName !== void 0 ? templateName : defaultInvoiceTemplate === null || defaultInvoiceTemplate === void 0 ? void 0 : defaultInvoiceTemplate.name;
    const isMoniteTemplate = currentTemplate === 'default_monite';
    const scale = useAdaptiveScale(containerRef, previewRef, {
        containerPadding: 96,
        minScale: 1,
        initialDelay: 100,
        useAdaptiveDimensions: true
    });
    const templateProps = {
        address,
        counterpart,
        counterpartVats,
        currency,
        invoiceData,
        entityData,
        entityVatIds,
        isNonVatSupported,
        paymentTerms,
        measureUnits: (measureUnitsData === null || measureUnitsData === void 0 ? void 0 : measureUnitsData.data) || []
    };
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        ref: containerRef,
        className: cn(// Container layout
        'mtw:flex mtw:overflow-auto mtw:relative', 'mtw:w-full mtw:h-full mtw:min-h-0', 'mtw:p-12', 'mtw:bg-gradient-to-br mtw:from-slate-50 mtw:to-slate-200', // Force pixel-snapping for zoom stability
        'mtw:[transform:translateZ(0)]'),
        style: {
            justifyContent: 'safe center',
            alignItems: 'safe center'
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(AspectRatio, {
            ratio: 21 / 29.7,
            className: cn(// Maximum width constraints for A4
            'mtw:max-w-[21cm]', // Minimum dimensions for proper scaling (A4: 794×1123px = 21cm × 29.7cm)
            'mtw:min-w-[794px] mtw:min-h-[1123px]', // Responsive scaling with our adaptive scale hook
            'mtw:transition-transform mtw:duration-200 mtw:ease-in-out', // Respect reduced motion preferences
            'motion-reduce:mtw:transition-none', 'mtw:origin-center', // Prevent unwanted shrinking and layout shifts
            'mtw:flex-shrink-0', // CSS containment for layout stability
            'mtw:[contain:"layout style"]'),
            style: {
                // Dynamic transform must stay as inline style due to variable
                transform: `scale(${scale})`
            },
            children: /*#__PURE__*/ jsxRuntime.jsx("div", {
                ref: previewRef,
                className: cn(// Full size within aspect ratio container
                'mtw:w-full mtw:h-full', 'mtw:bg-white mtw:flex-shrink-0', 'mtw:shadow-md', 'mtw:overflow-hidden'),
                children: isMoniteTemplate ? /*#__PURE__*/ jsxRuntime.jsx(InvoicePreviewMonite, _object_spread$1a({}, templateProps)) : /*#__PURE__*/ jsxRuntime.jsx(InvoicePreviewLegacy, _object_spread$1a({}, templateProps))
            })
        })
    });
};

// TODO add default locale
const regionNames = new Intl.DisplayNames([
    'en'
], {
    type: 'region'
});
const getRegionName = (regionCode)=>{
    var _regionNames_of;
    return (_regionNames_of = regionNames.of(regionCode)) !== null && _regionNames_of !== void 0 ? _regionNames_of : regionCode;
};
/**
 * This function generates a comma-separated string containing labels for the provided `OnboardingRelationship` object.
 *
 * @param relationship - The `OnboardingRelationship` object containing relationship flags.
 * @param i18n LinguiJS I18n instance
 * @returns A comma-separated string with labels corresponding to the specified relationships.
 *
 * @remarks
 * The generated string contains labels for each `true` property in the `OnboardingRelationship` object.
 *
 * @example
 * ```
 * const relationshipLabels = relationshipToLabel({ representative: true, owner: true, director: false, executive: false });
 * // Output: "Account representative, Owner"
 * ```
 */ const relationshipToLabel = (relationship, i18n)=>{
    const list = [];
    if (relationship.representative) {
        list.push(i18n._({
            id: "8Gr3Ou"
        }));
    }
    if (relationship.owner) {
        list.push(i18n._({
            id: "LtI9AS"
        }));
    }
    if (relationship.director) {
        list.push(i18n._({
            id: "NICUmW"
        }));
    }
    if (relationship.executive) {
        list.push(i18n._({
            id: "/ORSXS"
        }));
    }
    return list.join(', ');
};

/**
 * Shows an error toast message.
 * We don't want to show the error message if the error object has error.details.
 * This is because error.details are handled in form validation and highlights errors in the form.
 * (See: useOnboardingForm.ts handleSubmit function)
 *
 * We only want to show toast message if the error object has error.message.
 */ const showErrorToast = (error)=>{
    if (error instanceof Error) {
        reactHotToast.toast.error(error.message);
    }
    if ('error' in error && 'message' in error.error) {
        reactHotToast.toast.error(error.error.message);
    }
};

const BankAccountDeleteModal = ({ open, isDeleting, onClose, handleDelete })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open,
        title: i18n._({
            id: "9IeWGI"
        }),
        message: i18n._({
            id: "oby0ZC"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: onClose,
        onConfirm: handleDelete,
        isLoading: isDeleting
    });
};

function _define_property$19(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$19(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$19(target, key, source[key]);
        });
    }
    return target;
}
const BankAccountCustomFields = ({ currency, control, disabled, setValue, defaultTypeOfCode })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const [typeOfCode, setTypeOfCode] = React.useState(defaultTypeOfCode);
    // TODO: This is a workaround to the validation issue we have right now
    // The issue is that when currency is not EUR, USD and GBP, sort_code and routing_number are required,
    // however, once one has a value, the other should be optional
    // It sounds easy but it gets very tricky with the validation schema
    // One way to approach is inside when, but the issue is that both values are not present at the same time
    // So the validation schema breaks and throws a "cyclic" error that happens when you try to read a field that doesn't exist.
    // I will do some research and once I find something good, I will update it
    React.useEffect(()=>{
        const isConventionalCurrency = currency === 'USD' || currency === 'EUR' || currency === 'GBP';
        if (typeOfCode === 'routing_number') {
            if (isConventionalCurrency) {
                setValue('sort_code', '');
            } else {
                setValue('sort_code', NO_SORT_CODE);
            }
        } else {
            if (isConventionalCurrency) {
                setValue('routing_number', '');
            } else {
                setValue('routing_number', NO_ROUTING_NUMBER);
            }
        }
    }, [
        typeOfCode,
        setValue,
        currency
    ]);
    function renderCustomFields() {
        switch(currency){
            case 'USD':
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "account_number",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "5ad2f4"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: i18n._({
                                        id: "i3sdQC"
                                    })
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "routing_number",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "dVQ/BC"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "account_holder_name",
                            control: control,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "6K88PJ"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: i18n._({
                                        id: "uvhshm"
                                    })
                                }, field))
                        })
                    ]
                });
            case 'GBP':
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "account_number",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "5ad2f4"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: i18n._({
                                        id: "i3sdQC"
                                    })
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "sort_code",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "XHVMHc"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "account_holder_name",
                            control: control,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "6K88PJ"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: i18n._({
                                        id: "uvhshm"
                                    })
                                }, field))
                        })
                    ]
                });
            case 'EUR':
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "iban",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "sfIOlH"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "bic",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "nszRAC"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        })
                    ]
                });
            default:
                return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "account_number",
                            control: control,
                            disabled: disabled,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                    id: field.name,
                                    label: i18n._({
                                        id: "5ad2f4"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    error: Boolean(error),
                                    helperText: i18n._({
                                        id: "i3sdQC"
                                    })
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            display: "flex",
                            gap: 2,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                    variant: "standard",
                                    fullWidth: true,
                                    required: true,
                                    disabled: disabled,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                            id: "type_of_code",
                                            children: i18n._({
                                                id: "4EtxOh"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(material.Select, {
                                            labelId: "type_of_code",
                                            fullWidth: true,
                                            label: i18n._({
                                                id: "4EtxOh"
                                            }),
                                            MenuProps: {
                                                container: root
                                            },
                                            onChange: (e)=>{
                                                if (e.target.value === 'routing_number') {
                                                    setValue('routing_number', '');
                                                } else {
                                                    setValue('sort_code', '');
                                                }
                                                setTypeOfCode(e.target.value);
                                            },
                                            value: typeOfCode,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                    value: "routing_number",
                                                    children: i18n._({
                                                        id: "dVQ/BC"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                    value: "sort_code",
                                                    children: i18n._({
                                                        id: "XHVMHc"
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                typeOfCode === 'routing_number' ? /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: "routing_number",
                                    control: control,
                                    disabled: disabled,
                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                            id: field.name,
                                            label: i18n._({
                                                id: "dVQ/BC"
                                            }),
                                            variant: "standard",
                                            fullWidth: true,
                                            required: true,
                                            error: Boolean(error),
                                            helperText: error === null || error === void 0 ? void 0 : error.message
                                        }, field))
                                }) : /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: "sort_code",
                                    control: control,
                                    disabled: disabled,
                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$19({
                                            id: field.name,
                                            label: i18n._({
                                                id: "XHVMHc"
                                            }),
                                            variant: "standard",
                                            fullWidth: true,
                                            required: true,
                                            error: Boolean(error),
                                            helperText: error === null || error === void 0 ? void 0 : error.message
                                        }, field))
                                })
                            ]
                        })
                    ]
                });
        }
    }
    return renderCustomFields();
};

function _define_property$18(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$18(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$18(target, key, source[key]);
        });
    }
    return target;
}
const FormSelect = ({ children, sx })=>{
    return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
        sx: _object_spread$18({
            flex: 1,
            '& .MuiInputBase-root': {
                height: '56px'
            },
            '& .MuiOutlinedInput-root': {
                paddingRight: '14px'
            },
            '& .MuiInputAdornment-positionEnd': {
                marginLeft: 0
            }
        }, sx),
        children: children
    });
};

function _define_property$17(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$17(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$17(target, key, source[key]);
        });
    }
    return target;
}
const BankAccountFormContent = ({ bankAccounts, bankAccount, formId, createBankAccount, updateBankAccount })=>{
    var _componentSettings_receivables;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { data: entity } = useMyEntity();
    const currentEntityCurrency = countryCurrencyList === null || countryCurrencyList === void 0 ? void 0 : countryCurrencyList.find((item)=>{
        var _entity_address;
        return item.country === (entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    });
    const { mutate: setAsDefault } = useSetDefaultBankAccount(false, false);
    const countryOptions = React.useMemo(()=>getCountriesArray(i18n).filter((countryItem)=>{
            var _componentSettings_receivables_bankAccountCountries, _componentSettings_receivables;
            return componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : (_componentSettings_receivables_bankAccountCountries = _componentSettings_receivables.bankAccountCountries) === null || _componentSettings_receivables_bankAccountCountries === void 0 ? void 0 : _componentSettings_receivables_bankAccountCountries.includes(countryItem === null || countryItem === void 0 ? void 0 : countryItem.code);
        }), [
        componentSettings,
        i18n
    ]);
    var _bankAccount_country, _bankAccount_currency, _bankAccount_display_name, _bankAccount_bank_name, _bankAccount_account_holder_name, _bankAccount_account_number, _bankAccount_routing_number, _bankAccount_sort_code, _bankAccount_bic, _bankAccount_iban;
    const defaultValues = {
        is_default_for_currency: false,
        country: (_bankAccount_country = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.country) !== null && _bankAccount_country !== void 0 ? _bankAccount_country : currentEntityCurrency === null || currentEntityCurrency === void 0 ? void 0 : currentEntityCurrency.country,
        currency: (_bankAccount_currency = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.currency) !== null && _bankAccount_currency !== void 0 ? _bankAccount_currency : currentEntityCurrency === null || currentEntityCurrency === void 0 ? void 0 : currentEntityCurrency.currency,
        display_name: (_bankAccount_display_name = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.display_name) !== null && _bankAccount_display_name !== void 0 ? _bankAccount_display_name : i18n._({
            id: "YJkB/N",
            values: {
                0: (bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.length) + 1
            }
        }),
        bank_name: (_bankAccount_bank_name = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bank_name) !== null && _bankAccount_bank_name !== void 0 ? _bankAccount_bank_name : '',
        account_holder_name: (_bankAccount_account_holder_name = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.account_holder_name) !== null && _bankAccount_account_holder_name !== void 0 ? _bankAccount_account_holder_name : '',
        account_number: (_bankAccount_account_number = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.account_number) !== null && _bankAccount_account_number !== void 0 ? _bankAccount_account_number : '',
        routing_number: (_bankAccount_routing_number = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.routing_number) !== null && _bankAccount_routing_number !== void 0 ? _bankAccount_routing_number : '',
        sort_code: (_bankAccount_sort_code = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.sort_code) !== null && _bankAccount_sort_code !== void 0 ? _bankAccount_sort_code : '',
        bic: (_bankAccount_bic = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.bic) !== null && _bankAccount_bic !== void 0 ? _bankAccount_bic : '',
        iban: (_bankAccount_iban = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.iban) !== null && _bankAccount_iban !== void 0 ? _bankAccount_iban : ''
    };
    const { watch, control, handleSubmit, setValue, clearErrors } = reactHookForm.useForm({
        resolver: safeZodResolver(getEntityBankAccountValidationSchema(i18n, Boolean(bankAccount))),
        defaultValues
    });
    const currency = watch('currency');
    const isDefaultForCurrency = watch('is_default_for_currency');
    const filteredBanksByCurrency = bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.filter((bank)=>(bank === null || bank === void 0 ? void 0 : bank.currency) === ((bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.currency) || currency));
    const handleCountryChange = (_event, value)=>{
        if (Array.isArray(value) || !value) return;
        let countryCode;
        if (typeof value === 'string') {
            countryCode = value;
        } else if (typeof value === 'object' && value !== null && 'code' in value) {
            countryCode = value.code;
        }
        if (countryCode) {
            const currentCountry = countryCurrencyList === null || countryCurrencyList === void 0 ? void 0 : countryCurrencyList.find((item)=>item.country === countryCode);
            if (currentCountry === null || currentCountry === void 0 ? void 0 : currentCountry.currency) {
                setValue('currency', currentCountry.currency);
                clearErrors('currency');
            }
        }
    };
    const submitForm = (values)=>{
        if (bankAccount) {
            if (!(bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.is_default_for_currency) && isDefaultForCurrency) {
                setAsDefault({
                    path: {
                        bank_account_id: bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.id
                    }
                });
            }
            updateBankAccount(prepareBankAccountUpdatePayload({
                display_name: values === null || values === void 0 ? void 0 : values.display_name,
                account_holder_name: values === null || values === void 0 ? void 0 : values.account_holder_name
            }, currency));
        } else {
            createBankAccount(prepareBankAccountCreatePayload({
                is_default_for_currency: (filteredBanksByCurrency === null || filteredBanksByCurrency === void 0 ? void 0 : filteredBanksByCurrency.length) === 0 ? true : Boolean(values === null || values === void 0 ? void 0 : values.is_default_for_currency),
                bic: values === null || values === void 0 ? void 0 : values.bic,
                iban: values === null || values === void 0 ? void 0 : values.iban,
                account_holder_name: values === null || values === void 0 ? void 0 : values.account_holder_name,
                account_number: values === null || values === void 0 ? void 0 : values.account_number,
                routing_number: values === null || values === void 0 ? void 0 : values.routing_number,
                sort_code: values === null || values === void 0 ? void 0 : values.sort_code,
                bank_name: values === null || values === void 0 ? void 0 : values.bank_name,
                display_name: values === null || values === void 0 ? void 0 : values.display_name,
                country: values === null || values === void 0 ? void 0 : values.country,
                currency: values === null || values === void 0 ? void 0 : values.currency
            }));
        }
    };
    var _bankAccount_currency1;
    return /*#__PURE__*/ jsxRuntime.jsx("form", {
        id: formId,
        onSubmit: handleSubmit(submitForm),
        noValidate: true,
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
            spacing: 2,
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    fontWeight: 400,
                    variant: "body1",
                    children: i18n._({
                        id: "qLNHmF"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        display: 'flex',
                        gap: 2,
                        width: '100%'
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(FormSelect, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                                name: "country",
                                control: control,
                                disabled: (countryOptions === null || countryOptions === void 0 ? void 0 : countryOptions.length) === 1 || !!bankAccount,
                                required: true,
                                fullWidth: true,
                                allowedCountries: componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.bankAccountCountries,
                                onChange: handleCountryChange
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(FormSelect, {
                            children: /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                name: "currency",
                                control: control,
                                required: true,
                                disabled: !!bankAccount,
                                fullWidth: true,
                                shouldDisplayCustomList: true
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    gap: 2,
                    width: "100%",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "display_name",
                            control: control,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$17({
                                    id: field.name,
                                    label: i18n._({
                                        id: "pfa8F0"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "bank_name",
                            control: control,
                            disabled: !!bankAccount,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$17({
                                    id: field.name,
                                    label: i18n._({
                                        id: "ROPK7D"
                                    }),
                                    variant: "standard",
                                    fullWidth: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message
                                }, field))
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(BankAccountCustomFields, {
                    currency: (_bankAccount_currency1 = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.currency) !== null && _bankAccount_currency1 !== void 0 ? _bankAccount_currency1 : currency,
                    defaultTypeOfCode: (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.routing_number) ? 'routing_number' : 'sort_code',
                    control: control,
                    disabled: !!bankAccount,
                    setValue: setValue
                }),
                !(bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.is_default_for_currency) && filteredBanksByCurrency && (filteredBanksByCurrency === null || filteredBanksByCurrency === void 0 ? void 0 : filteredBanksByCurrency.length) >= 1 && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    alignItems: "center",
                    gap: 2,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                            name: "is_default_for_currency",
                            checked: isDefaultForCurrency,
                            onChange: (e)=>setValue('is_default_for_currency', e.target.checked),
                            color: "primary",
                            "aria-label": i18n._({
                                id: "TMOcTz"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body1",
                            children: i18n._({
                                id: "EwQ+7V"
                            })
                        })
                    ]
                })
            ]
        })
    });
};

function _define_property$16(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$16(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$16(target, key, source[key]);
        });
    }
    return target;
}
const BankAccountFormDialog = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(BankAccountFormDialogBase, _object_spread$16({}, props))
    });
const BankAccountFormDialogBase = ({ entityBankAccountId, bankAccounts, isOpen, onCancel, onCreate, onUpdate, onDelete, handleClose, handleSelectBankAfterDeletion })=>{
    var _componentSettings_receivables;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const [isDeleteModalOpen, setIsDeleteModalOpen] = React.useState(false);
    const [shouldDisplayWarning, setShouldDisplayWarning] = React.useState(false);
    const formId = `Monite-EntityBankForm-${React.useId()}`;
    const { data: bankAccount, isLoading: isBankLoading } = useGetEntityBankAccountById(entityBankAccountId);
    const { mutate: createBankAccountMutation, isPending: isCreatingBankAccount } = useCreateEntityBankAccount(onCreate);
    const { mutate: updateBankAccountMutation, isPending: isUpdatingBankAccount } = useUpdateEntityBankAccount(onUpdate);
    const { mutate: deleteBankAccount, isPending: isDeletingBankAccount } = useDeleteEntityBankAccount(onDelete);
    const isMutating = isCreatingBankAccount || isUpdatingBankAccount || isDeletingBankAccount;
    const shouldEnableDelete = !!bankAccount;
    const createBankAccount = (payload)=>{
        createBankAccountMutation({
            body: payload
        });
    };
    const updateBankAccount = (payload)=>{
        var _bankAccount_id;
        updateBankAccountMutation({
            path: {
                bank_account_id: (_bankAccount_id = bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.id) !== null && _bankAccount_id !== void 0 ? _bankAccount_id : ''
            },
            body: payload
        });
    };
    if (isBankLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (!(componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.enableEntityBankAccount)) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
                open: isOpen,
                onClose: handleClose,
                alignDialog: "right",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        sx: {
                            px: 4,
                            py: 2
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h3",
                            children: bankAccount ? i18n._({
                                id: "H+y9X2"
                            }) : i18n._({
                                id: "3N06ae"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                        children: [
                            (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.is_default_for_currency) && shouldDisplayWarning && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                                icon: /*#__PURE__*/ jsxRuntime.jsx(WarningAmberRoundedIcon__default.default, {}),
                                severity: "error",
                                onClose: ()=>setShouldDisplayWarning(false),
                                sx: {
                                    mb: 2
                                },
                                children: i18n._({
                                    id: "3ePf9m"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(BankAccountFormContent, {
                                createBankAccount: createBankAccount,
                                updateBankAccount: updateBankAccount,
                                formId: formId,
                                bankAccounts: bankAccounts,
                                bankAccount: bankAccount
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                        sx: {
                            display: 'flex',
                            justifyContent: shouldEnableDelete ? 'space-between' : 'flex-end'
                        },
                        children: [
                            shouldEnableDelete && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                type: "button",
                                variant: "text",
                                color: "error",
                                onClick: ()=>{
                                    if (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.is_default_for_currency) {
                                        setShouldDisplayWarning(true);
                                    } else {
                                        setIsDeleteModalOpen(true);
                                    }
                                },
                                disabled: isMutating,
                                children: i18n._({
                                    id: "cnGeoo"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                display: "flex",
                                gap: 2,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        type: "button",
                                        variant: "text",
                                        color: "primary",
                                        onClick: onCancel,
                                        disabled: isMutating,
                                        children: i18n._({
                                            id: "dEgA5A"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        type: "submit",
                                        form: formId,
                                        variant: "contained",
                                        color: "primary",
                                        disabled: isMutating,
                                        children: bankAccount ? i18n._({
                                            id: "tfDRzk"
                                        }) : i18n._({
                                            id: "m16xKo"
                                        })
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            isDeleteModalOpen && shouldEnableDelete && /*#__PURE__*/ jsxRuntime.jsx(BankAccountDeleteModal, {
                open: isDeleteModalOpen,
                onClose: ()=>setIsDeleteModalOpen(false),
                isDeleting: isMutating,
                handleDelete: ()=>{
                    deleteBankAccount({
                        path: {
                            bank_account_id: bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.id
                        }
                    });
                    const foundDefaultBank = bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.find((bank)=>{
                        (bank === null || bank === void 0 ? void 0 : bank.currency) === (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.currency) && (bank === null || bank === void 0 ? void 0 : bank.is_default_for_currency);
                    });
                    handleSelectBankAfterDeletion === null || handleSelectBankAfterDeletion === void 0 ? void 0 : handleSelectBankAfterDeletion(foundDefaultBank ? foundDefaultBank === null || foundDefaultBank === void 0 ? void 0 : foundDefaultBank.id : '');
                }
            })
        ]
    });
};

const BankAccountSection = ({ disabled, handleOpenBankModal, entityCurrency })=>{
    var _bankAccounts_data, _bankAccounts_data1;
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    const { control } = reactHookForm.useFormContext();
    const { data: bankAccounts } = useGetEntityBankAccounts();
    return /*#__PURE__*/ jsxRuntime.jsxs(RHFTextField, {
        fullWidth: true,
        select: true,
        name: "entity_bank_account_id",
        control: control,
        label: i18n._({
            id: "6+usB6"
        }),
        disabled: disabled,
        required: true,
        sx: {
            display: 'flex',
            '& .MuiTypography-root': {
                width: 'auto',
                textOverflow: 'unset',
                whiteSpace: 'normal'
            },
            '& .MuiBox-root': {
                maxWidth: '100%'
            }
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "text",
                startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                fullWidth: true,
                sx: {
                    justifyContent: 'flex-start',
                    px: 2
                },
                onClick: ()=>handleOpenBankModal(),
                children: i18n._({
                    id: "3N06ae"
                })
            }),
            bankAccounts && (bankAccounts === null || bankAccounts === void 0 ? void 0 : (_bankAccounts_data = bankAccounts.data) === null || _bankAccounts_data === void 0 ? void 0 : _bankAccounts_data.length) > 0 && (bankAccounts === null || bankAccounts === void 0 ? void 0 : (_bankAccounts_data1 = bankAccounts.data) === null || _bankAccounts_data1 === void 0 ? void 0 : _bankAccounts_data1.map(({ id, display_name, bank_name, currency, account_number, is_default_for_currency, iban })=>{
                var _split_slice, _split, _this;
                return /*#__PURE__*/ jsxRuntime.jsxs(material.MenuItem, {
                    value: id,
                    sx: {
                        display: 'flex',
                        justifyContent: 'space-between',
                        alignItems: 'center',
                        gap: 2
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            sx: {
                                height: '100%',
                                maxWidth: '60%',
                                display: 'flex',
                                alignItems: 'center'
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body1",
                                display: "inline-block",
                                fontWeight: 400,
                                sx: {
                                    overflow: 'hidden',
                                    whiteSpace: 'nowrap',
                                    textOverflow: 'ellipsis',
                                    width: '100%'
                                },
                                children: [
                                    display_name && `${display_name} `,
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        component: "span",
                                        color: theme.palette.grey[400],
                                        children: `${display_name && '|'} ${bank_name ? bank_name : ''} ****${(_this = account_number || iban) === null || _this === void 0 ? void 0 : (_split = _this.split('')) === null || _split === void 0 ? void 0 : (_split_slice = _split.slice(-4, undefined)) === null || _split_slice === void 0 ? void 0 : _split_slice.join('')}, ${currency}`
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            display: "flex",
                            alignItems: "center",
                            gap: 2,
                            children: [
                                entityCurrency === currency && is_default_for_currency && /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                                    label: i18n._({
                                        id: "ovBPCi"
                                    }),
                                    sx: {
                                        background: theme.palette.background.paper,
                                        color: 'black',
                                        border: `1px solid ${theme.palette.divider}`
                                    }
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    variant: "text",
                                    color: "primary",
                                    onClick: (event)=>{
                                        event.stopPropagation();
                                        handleOpenBankModal(id);
                                    },
                                    children: i18n._({
                                        id: "ePK91l"
                                    })
                                })
                            ]
                        })
                    ]
                }, id);
            }))
        ]
    });
};

const ReminderFormLayout = ({ title, subTitle, daysBefore, subject, body, onDelete })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
        variant: "outlined",
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
            useFlexGap: true,
            spacing: 3,
            p: 3,
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h6",
                            children: title
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            "aria-label": "delete",
                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default$1.default, {}),
                            color: "error",
                            onClick: onDelete,
                            children: i18n._({
                                id: "cnGeoo"
                            })
                        })
                    ]
                }),
                subTitle && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "subtitle1",
                    color: "text.secondary",
                    children: subTitle
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    display: "flex",
                    alignItems: "center",
                    gap: 1,
                    children: daysBefore
                }),
                subject,
                body
            ]
        })
    });
};

const getRecipientsSchema = ()=>{
    return zod.z.object({
        bcc: zod.z.array(zod.z.string()).optional(),
        cc: zod.z.array(zod.z.string()).optional(),
        to: zod.z.array(zod.z.string()).optional()
    }).optional();
};
const getReminderValidationSchema = (i18n)=>{
    return zod.z.object({
        days_before: zod.z.int().min(1, i18n._({
            id: "W+pwCq"
        })).max(10000, i18n._({
            id: "kfYy7y"
        })),
        subject: zod.z.string().min(1, i18n._({
            id: "ii0qn/"
        })),
        body: zod.z.string().min(1, i18n._({
            id: "UabgBd"
        }))
    }).optional();
};
const getOverdueReminderValidationSchema = (i18n)=>{
    return zod.z.object({
        days_after: zod.z.int().min(1, i18n._({
            id: "u415js"
        })).max(10000, i18n._({
            id: "QG8+pV"
        })),
        subject: zod.z.string().min(1, i18n._({
            id: "ii0qn/"
        })),
        body: zod.z.string().min(1, i18n._({
            id: "UabgBd"
        }))
    });
};
const getBeforeDueDateValidationSchema = (i18n)=>{
    return zod.z.object({
        name: zod.z.string().min(1, i18n._({
            id: "i+JLHQ"
        })).max(255, i18n._({
            id: "NO/Z5d"
        })),
        recipients: getRecipientsSchema(),
        term_1_reminder: getReminderValidationSchema(i18n),
        term_2_reminder: getReminderValidationSchema(i18n),
        term_final_reminder: getReminderValidationSchema(i18n)
    });
};
const getOverdueValidationSchema = (i18n)=>{
    return zod.z.object({
        name: zod.z.string().min(1, i18n._({
            id: "i+JLHQ"
        })).max(255, i18n._({
            id: "NO/Z5d"
        })),
        recipients: getRecipientsSchema(),
        terms: zod.z.array(getOverdueReminderValidationSchema(i18n)).min(1, i18n._({
            id: "7d/si/"
        })).max(3, i18n._({
            id: "x1qyce"
        }))
    });
};

function asyncGeneratorStep$r(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$r(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$r(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$r(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$15(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$15(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$15(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$i(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$i(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$i(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const BeforeDueDateReminderForm = (_param)=>{
    var { reminderId } = _param, restProps = _object_without_properties$i(_param, [
        "reminderId"
    ]);
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { data: reminder, error, isError, isLoading } = api.paymentReminders.getPaymentRemindersId.useQuery({
        path: {
            payment_reminder_id: reminderId || ''
        }
    }, {
        enabled: Boolean(reminderId)
    });
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (isError) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "Fre5xK"
            }),
            description: getAPIErrorMessage(i18n, error)
        });
    }
    if (reminderId && !reminder) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "vuwCUY"
            }),
            description: i18n._({
                id: "Txbj2m",
                values: {
                    reminderId: reminderId
                }
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(CreateBeforeDueDateReminderComponent, _object_spread$15({
        reminder: reminder
    }, restProps));
};
const CreateBeforeDueDateReminderComponent = (_param)=>{
    var { reminder } = _param, props = _object_without_properties$i(_param, [
        "reminder"
    ]);
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const defaultTerm = {
        days_before: 1,
        body: '',
        subject: ''
    };
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getBeforeDueDateValidationSchema(i18n)),
        defaultValues: (()=>{
            var _reminder_name, _reminder_term_1_reminder, _reminder_term_2_reminder, _reminder_term_final_reminder;
            return {
                name: (_reminder_name = reminder === null || reminder === void 0 ? void 0 : reminder.name) !== null && _reminder_name !== void 0 ? _reminder_name : '',
                // @ts-expect-error - back-end does not support `null` values
                term_1_reminder: (_reminder_term_1_reminder = reminder === null || reminder === void 0 ? void 0 : reminder.term_1_reminder) !== null && _reminder_term_1_reminder !== void 0 ? _reminder_term_1_reminder : null,
                // @ts-expect-error - back-end does not support `null` values
                term_2_reminder: (_reminder_term_2_reminder = reminder === null || reminder === void 0 ? void 0 : reminder.term_2_reminder) !== null && _reminder_term_2_reminder !== void 0 ? _reminder_term_2_reminder : null,
                // @ts-expect-error - back-end does not support `null` values
                term_final_reminder: (_reminder_term_final_reminder = reminder === null || reminder === void 0 ? void 0 : reminder.term_final_reminder) !== null && _reminder_term_final_reminder !== void 0 ? _reminder_term_final_reminder : null
            };
        })()
    });
    const { control, handleSubmit, setValue, watch } = methods;
    const [term1ReminderFieldValue, term2ReminderFieldValue, termFinalReminderFieldValue] = watch([
        'term_1_reminder',
        'term_2_reminder',
        'term_final_reminder'
    ]);
    const formName = `Monite-Form-createBeforeDueDateReminder-${React.useId()}`;
    const createBeforeDueDateReminderMutation = api.paymentReminders.postPaymentReminders.useMutation(undefined, {
        onSuccess: (newReminder)=>_async_to_generator$r(function*() {
                var _props_onCreate;
                yield api.paymentReminders.getPaymentReminders.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "2TpJxV"
                }));
                if ('onCreate' in props) (_props_onCreate = props.onCreate) === null || _props_onCreate === void 0 ? void 0 : _props_onCreate.call(props, newReminder.id);
            })(),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    var _reminder_id;
    const updateBeforeDueDateReminderMutation = api.paymentReminders.patchPaymentRemindersId.useMutation({
        path: {
            payment_reminder_id: (_reminder_id = reminder === null || reminder === void 0 ? void 0 : reminder.id) !== null && _reminder_id !== void 0 ? _reminder_id : ''
        }
    }, {
        onSuccess: (updatedReminder)=>_async_to_generator$r(function*() {
                var _props_onUpdate;
                api.paymentReminders.getPaymentRemindersId.setQueryData({
                    path: {
                        payment_reminder_id: updatedReminder.id
                    }
                }, updatedReminder, queryClient);
                yield api.paymentReminders.getPaymentReminders.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "WLdLX2"
                }));
                if ('onUpdate' in props) (_props_onUpdate = props.onUpdate) === null || _props_onUpdate === void 0 ? void 0 : _props_onUpdate.call(props, updatedReminder.id);
            })(),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h5",
                            children: reminder ? i18n._({
                                id: "ZJY8kF"
                            }) : i18n._({
                                id: "9QjoSU"
                            })
                        }),
                        props.onClose && /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            edge: "start",
                            color: "inherit",
                            onClick: (event)=>{
                                var _props_onClose;
                                event.preventDefault();
                                (_props_onClose = props.onClose) === null || _props_onClose === void 0 ? void 0 : _props_onClose.call(props);
                            },
                            "aria-label": i18n._({
                                id: "yz7wBu"
                            }),
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                    id: formName,
                    noValidate: true,
                    onSubmit: handleSubmit((body)=>{
                        if (reminder) return updateBeforeDueDateReminderMutation.mutate(body);
                        return createBeforeDueDateReminderMutation.mutate({
                            body
                        });
                    }),
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        spacing: 3,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                // todo::add position sticky(top:0) on the input field
                                label: i18n._({
                                    id: "V3MCts"
                                }),
                                name: "name",
                                control: control,
                                fullWidth: true,
                                required: true
                            }),
                            Boolean(termFinalReminderFieldValue) && /*#__PURE__*/ jsxRuntime.jsx(ReminderFormLayout, {
                                title: i18n._({
                                    id: "XicmhT"
                                }),
                                subTitle: i18n._({
                                    id: "52sXLa"
                                }),
                                daysBefore: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                            htmlFor: "term_final_reminder.days_before",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                children: i18n._({
                                                    id: "1qFa5a"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            name: "term_final_reminder.days_before",
                                            type: "number",
                                            InputProps: {
                                                inputProps: {
                                                    min: 1,
                                                    inputMode: 'numeric'
                                                }
                                            },
                                            control: control,
                                            size: "small",
                                            sx: {
                                                width: 60
                                            }
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            color: "text.secondary",
                                            children: i18n._({
                                                id: "2C7H4P"
                                            })
                                        })
                                    ]
                                }),
                                subject: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "UJmAAK"
                                    }),
                                    name: "term_final_reminder.subject",
                                    control: control,
                                    fullWidth: true,
                                    required: true
                                }),
                                body: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "bGQplw"
                                    }),
                                    name: "term_final_reminder.body",
                                    control: control,
                                    fullWidth: true,
                                    required: true,
                                    multiline: true,
                                    rows: 5
                                }),
                                onDelete: ()=>setValue('term_final_reminder', // @ts-expect-error - back-end does not support `null` values
                                    null)
                            }),
                            Boolean(term1ReminderFieldValue) && /*#__PURE__*/ jsxRuntime.jsx(ReminderFormLayout, {
                                title: i18n._({
                                    id: "RW8Abh"
                                }),
                                subTitle: i18n._({
                                    id: "52sXLa"
                                }),
                                daysBefore: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                            htmlFor: "term_1_reminder.days_before",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                children: i18n._({
                                                    id: "1qFa5a"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            name: "term_1_reminder.days_before",
                                            type: "number",
                                            InputProps: {
                                                inputProps: {
                                                    min: 1,
                                                    inputMode: 'numeric'
                                                }
                                            },
                                            control: control,
                                            size: "small",
                                            sx: {
                                                width: 60
                                            }
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            color: "text.secondary",
                                            children: i18n._({
                                                id: "bcTsWa"
                                            })
                                        })
                                    ]
                                }),
                                subject: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "UJmAAK"
                                    }),
                                    name: "term_1_reminder.subject",
                                    control: control,
                                    fullWidth: true,
                                    required: true
                                }),
                                body: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "bGQplw"
                                    }),
                                    name: "term_1_reminder.body",
                                    control: control,
                                    fullWidth: true,
                                    required: true,
                                    multiline: true,
                                    rows: 5
                                }),
                                onDelete: ()=>setValue('term_1_reminder', // @ts-expect-error - back-end does not support `null` values
                                    null)
                            }),
                            Boolean(term2ReminderFieldValue) && /*#__PURE__*/ jsxRuntime.jsx(ReminderFormLayout, {
                                title: i18n._({
                                    id: "Ca3sej"
                                }),
                                subTitle: i18n._({
                                    id: "52sXLa"
                                }),
                                daysBefore: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                            htmlFor: "term_2_reminder.days_before",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                children: i18n._({
                                                    id: "1qFa5a"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            name: "term_2_reminder.days_before",
                                            type: "number",
                                            InputProps: {
                                                inputProps: {
                                                    min: 1,
                                                    inputMode: 'numeric'
                                                }
                                            },
                                            control: control,
                                            size: "small",
                                            sx: {
                                                width: 60
                                            }
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            color: "text.secondary",
                                            children: i18n._({
                                                id: "VCKI5a"
                                            })
                                        })
                                    ]
                                }),
                                subject: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "UJmAAK"
                                    }),
                                    name: "term_2_reminder.subject",
                                    control: control,
                                    fullWidth: true,
                                    required: true
                                }),
                                body: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "bGQplw"
                                    }),
                                    name: "term_2_reminder.body",
                                    control: control,
                                    fullWidth: true,
                                    required: true,
                                    multiline: true,
                                    rows: 5
                                }),
                                onDelete: ()=>setValue('term_2_reminder', // @ts-expect-error - back-end does not support `null` values
                                    null)
                            }),
                            !(termFinalReminderFieldValue && term1ReminderFieldValue && term2ReminderFieldValue) && /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                                        asChild: true,
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            sx: {
                                                alignSelf: 'start'
                                            },
                                            variant: "contained",
                                            endIcon: /*#__PURE__*/ jsxRuntime.jsx(KeyboardArrowDownIcon__default.default, {}),
                                            children: i18n._({
                                                id: "v8gXQ8"
                                            })
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                                        align: "end",
                                        children: [
                                            !termFinalReminderFieldValue && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                onClick: ()=>setValue('term_final_reminder', defaultTerm),
                                                children: i18n._({
                                                    id: "XicmhT"
                                                })
                                            }),
                                            !term1ReminderFieldValue && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                onClick: ()=>setValue('term_1_reminder', defaultTerm),
                                                children: i18n._({
                                                    id: "RW8Abh"
                                                })
                                            }),
                                            !term2ReminderFieldValue && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                onClick: ()=>setValue('term_2_reminder', defaultTerm),
                                                children: i18n._({
                                                    id: "Ca3sej"
                                                })
                                            })
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                children: [
                    (props === null || props === void 0 ? void 0 : props.onClose) && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "outlined",
                        onClick: (event)=>{
                            var _props_onClose;
                            event.preventDefault();
                            props === null || props === void 0 ? void 0 : (_props_onClose = props.onClose) === null || _props_onClose === void 0 ? void 0 : _props_onClose.call(props);
                        },
                        children: i18n._({
                            id: "dEgA5A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        color: "primary",
                        type: "submit",
                        form: formName,
                        disabled: createBeforeDueDateReminderMutation.isPending,
                        children: reminder ? i18n._({
                            id: "EkH9pt"
                        }) : i18n._({
                            id: "hYgDIe"
                        })
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$q(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$q(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$q(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$q(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$14(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$14(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$14(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$P(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$P(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$P(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$h(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$h(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$h(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const OverdueReminderForm = (_param)=>{
    var { reminderId } = _param, restProps = _object_without_properties$h(_param, [
        "reminderId"
    ]);
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { data: reminder, error, isError, isLoading } = api.overdueReminders.getOverdueRemindersId.useQuery({
        path: {
            overdue_reminder_id: reminderId || ''
        }
    }, {
        enabled: Boolean(reminderId)
    });
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (isError) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "wa/FyP"
            }),
            description: getAPIErrorMessage(i18n, error)
        });
    }
    if (reminderId && !reminder) {
        return /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
            title: i18n._({
                id: "vuwCUY"
            }),
            description: i18n._({
                id: "Txbj2m",
                values: {
                    reminderId: reminderId
                }
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(CreateOverdueReminderComponent, _object_spread_props$P(_object_spread$14({}, restProps), {
        reminder: reminder
    }));
};
const CreateOverdueReminderComponent = (_param)=>{
    var { reminder } = _param, props = _object_without_properties$h(_param, [
        "reminder"
    ]);
    var _formState_errors_terms;
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { control, handleSubmit, formState } = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getOverdueValidationSchema(i18n)),
        defaultValues: (()=>{
            var _reminder_name, _reminder_terms;
            return {
                name: (_reminder_name = reminder === null || reminder === void 0 ? void 0 : reminder.name) !== null && _reminder_name !== void 0 ? _reminder_name : '',
                terms: (_reminder_terms = reminder === null || reminder === void 0 ? void 0 : reminder.terms) !== null && _reminder_terms !== void 0 ? _reminder_terms : []
            };
        })()
    });
    const { fields, append, remove } = reactHookForm.useFieldArray({
        control,
        name: 'terms',
        rules: {
            maxLength: 3
        }
    });
    const formName = `Monite-Form-createOverdueReminder-${React.useId()}`;
    const createOverdueReminderMutation = api.overdueReminders.postOverdueReminders.useMutation(undefined, {
        onSuccess: (newReminder)=>_async_to_generator$q(function*() {
                var _props_onCreate;
                yield api.overdueReminders.getOverdueReminders.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "2TpJxV"
                }));
                if ('onCreate' in props) (_props_onCreate = props.onCreate) === null || _props_onCreate === void 0 ? void 0 : _props_onCreate.call(props, newReminder.id);
            })(),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    var _reminder_id;
    const updateOverdueReminderMutation = api.overdueReminders.patchOverdueRemindersId.useMutation({
        path: {
            overdue_reminder_id: (_reminder_id = reminder === null || reminder === void 0 ? void 0 : reminder.id) !== null && _reminder_id !== void 0 ? _reminder_id : ''
        }
    }, {
        onSuccess: (updatedReminder)=>_async_to_generator$q(function*() {
                var _props_onUpdate;
                api.overdueReminders.getOverdueRemindersId.setQueryData({
                    path: {
                        overdue_reminder_id: updatedReminder.id
                    }
                }, updatedReminder, queryClient);
                yield api.overdueReminders.getOverdueReminders.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "WLdLX2"
                }));
                if ('onUpdate' in props) (_props_onUpdate = props.onUpdate) === null || _props_onUpdate === void 0 ? void 0 : _props_onUpdate.call(props, updatedReminder.id);
            })(),
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "h5",
                            children: reminder ? i18n._({
                                id: "o9IeN0"
                            }) : i18n._({
                                id: "XJuIPd"
                            })
                        }),
                        props.onClose && /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                            edge: "start",
                            color: "inherit",
                            onClick: (event)=>{
                                var _props_onClose;
                                event.preventDefault();
                                (_props_onClose = props.onClose) === null || _props_onClose === void 0 ? void 0 : _props_onClose.call(props);
                            },
                            "aria-label": i18n._({
                                id: "rx89EM"
                            }),
                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                children: /*#__PURE__*/ jsxRuntime.jsxs("form", {
                    id: formName,
                    noValidate: true,
                    onSubmit: handleSubmit((body)=>{
                        if (reminder) return updateOverdueReminderMutation.mutate(body);
                        return createOverdueReminderMutation.mutate({
                            body
                        });
                    }),
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            spacing: 3,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                    label: i18n._({
                                        id: "V3MCts"
                                    }),
                                    name: "name",
                                    control: control,
                                    fullWidth: true,
                                    required: true
                                }),
                                fields.map((field, index)=>/*#__PURE__*/ jsxRuntime.jsx(ReminderFormLayout, {
                                        title: i18n._({
                                            id: "C97zmi",
                                            values: {
                                                0: index + 1
                                            }
                                        }),
                                        daysBefore: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                                    htmlFor: `terms.${index}.days_after`,
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        children: i18n._({
                                                            id: "1qFa5a"
                                                        })
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                                    name: `terms.${index}.days_after`,
                                                    type: "number",
                                                    InputProps: {
                                                        inputProps: {
                                                            min: 1,
                                                            inputMode: 'numeric'
                                                        }
                                                    },
                                                    control: control,
                                                    size: "small",
                                                    sx: {
                                                        width: 60
                                                    }
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body1",
                                                    color: "text.secondary",
                                                    children: i18n._({
                                                        id: "7pchF2"
                                                    })
                                                })
                                            ]
                                        }),
                                        subject: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            label: i18n._({
                                                id: "UJmAAK"
                                            }),
                                            name: `terms.${index}.subject`,
                                            control: control,
                                            fullWidth: true,
                                            required: true
                                        }),
                                        body: /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                            label: i18n._({
                                                id: "bGQplw"
                                            }),
                                            name: `terms.${index}.body`,
                                            control: control,
                                            fullWidth: true,
                                            required: true,
                                            multiline: true,
                                            rows: 5
                                        }),
                                        onDelete: ()=>remove(index)
                                    }, field.id)),
                                fields.length < 3 && /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        sx: {
                                            alignSelf: 'start'
                                        },
                                        variant: "contained",
                                        onClick: ()=>append({
                                                days_after: 1,
                                                subject: '',
                                                body: ''
                                            }),
                                        children: i18n._({
                                            id: "EdFIzQ"
                                        })
                                    })
                                })
                            ]
                        }),
                        ((_formState_errors_terms = formState.errors.terms) === null || _formState_errors_terms === void 0 ? void 0 : _formState_errors_terms.message) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                            severity: "error",
                            sx: {
                                mt: 2
                            },
                            children: formState.errors.terms.message
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                children: [
                    (props === null || props === void 0 ? void 0 : props.onClose) && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "outlined",
                        onClick: (event)=>{
                            var _props_onClose;
                            event.preventDefault();
                            props === null || props === void 0 ? void 0 : (_props_onClose = props.onClose) === null || _props_onClose === void 0 ? void 0 : _props_onClose.call(props);
                        },
                        children: i18n._({
                            id: "dEgA5A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        color: "primary",
                        type: "submit",
                        form: formName,
                        disabled: createOverdueReminderMutation.isPending || updateOverdueReminderMutation.isPending,
                        children: reminder ? i18n._({
                            id: "EkH9pt"
                        }) : i18n._({
                            id: "hYgDIe"
                        })
                    })
                ]
            })
        ]
    });
};

function _define_property$13(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$13(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$13(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$O(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$O(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$O(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$g(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$g(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$g(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const CreateInvoiceReminderDialog = (_param)=>{
    var { reminderType, open, onCreate, onClose } = _param, restProps = _object_without_properties$g(_param, [
        "reminderType",
        "open",
        "onCreate",
        "onClose"
    ]);
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, _object_spread_props$O(_object_spread$13({
        alignDialog: "right",
        open: open
    }, restProps), {
        children: [
            open && !reminderType && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                children: i18n._({
                    id: "LzmZxM"
                })
            }),
            reminderType === 'payment' && /*#__PURE__*/ jsxRuntime.jsx(BeforeDueDateReminderForm, {
                onClose: onClose,
                onCreate: (reminderId)=>{
                    if (!reminderType) throw new Error('Reminder type is not provided');
                    onClose();
                    onCreate === null || onCreate === void 0 ? void 0 : onCreate({
                        reminderId,
                        reminderType
                    });
                }
            }),
            reminderType === 'overdue' && /*#__PURE__*/ jsxRuntime.jsx(OverdueReminderForm, {
                onClose: onClose,
                onCreate: (reminderId)=>{
                    if (!reminderType) throw new Error('Reminder type is not provided');
                    onClose();
                    onCreate === null || onCreate === void 0 ? void 0 : onCreate({
                        reminderId,
                        reminderType
                    });
                }
            })
        ]
    }));
};

function _define_property$12(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$12(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$12(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$N(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$N(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$N(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const filter = material.createFilterOptions();
const COUNTERPART_CREATE_NEW_ID = '__create-new__';
const COUNTERPART_DIVIDER = '__divider__';
function isCreateNewCounterpartOption(counterpartOption) {
    return (counterpartOption === null || counterpartOption === void 0 ? void 0 : counterpartOption.id) === COUNTERPART_CREATE_NEW_ID;
}
function isDividerOption(counterpartOption) {
    return (counterpartOption === null || counterpartOption === void 0 ? void 0 : counterpartOption.id) === COUNTERPART_DIVIDER;
}
const CounterpartSelector = ({ setIsCreateCounterpartOpened, setIsEditCounterpartOpened, isSimplified = false, shouldDisableFormUpdate = false, disabled, counterpartAddresses, currentCounterpartId, handleUpdateCounterpartId })=>{
    var _counterpartAddresses_data;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const { control, watch } = reactHookForm.useFormContext();
    const { data: counterparts, isLoading: isCounterpartsLoading } = useCounterpartList({
        query: {
            is_customer: true
        }
    });
    const handleCreateNewCounterpart = React.useCallback(()=>{
        if (!isSimplified && setIsCreateCounterpartOpened) {
            setIsCreateCounterpartOpened(true);
        }
    }, [
        isSimplified,
        setIsCreateCounterpartOpened
    ]);
    const handleEditCounterpart = React.useCallback(()=>{
        if (!isSimplified && setIsEditCounterpartOpened) {
            setIsEditCounterpartOpened(true);
        }
    }, [
        isSimplified,
        setIsEditCounterpartOpened
    ]);
    const [isFocused, setIsFocused] = React.useState(false);
    const counterpartId = watch('counterpart_id');
    const counterpartsAutocompleteData = React.useMemo(()=>counterparts ? counterparts === null || counterparts === void 0 ? void 0 : counterparts.data.map((counterpart)=>({
                id: counterpart.id,
                label: getCounterpartName(counterpart)
            })) : [], [
        counterparts
    ]);
    const selectedCounterpart = counterparts === null || counterparts === void 0 ? void 0 : counterparts.data.find((counterpart)=>counterpart.id === (shouldDisableFormUpdate ? currentCounterpartId : counterpartId));
    const selectedCounterpartOption = selectedCounterpart ? {
        id: selectedCounterpart.id,
        label: getCounterpartName(selectedCounterpart)
    } : null;
    const address = (counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data[0]) ? prepareAddressView({
        address: counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data[0]
    }) : '';
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        name: "counterpart_id",
        control: control,
        render: ({ field, fieldState: { error } })=>{
            return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Autocomplete, _object_spread_props$N(_object_spread$12({}, field), {
                    value: selectedCounterpartOption,
                    onChange: (_, value)=>{
                        if (isCreateNewCounterpartOption(value) || isDividerOption(value)) {
                            if (shouldDisableFormUpdate && handleUpdateCounterpartId) {
                                handleUpdateCounterpartId('');
                            } else {
                                field.onChange('');
                            }
                            return;
                        }
                        if (shouldDisableFormUpdate && handleUpdateCounterpartId) {
                            var _value_id;
                            handleUpdateCounterpartId((_value_id = value === null || value === void 0 ? void 0 : value.id) !== null && _value_id !== void 0 ? _value_id : '');
                        } else {
                            var _value_id1;
                            field.onChange((_value_id1 = value === null || value === void 0 ? void 0 : value.id) !== null && _value_id1 !== void 0 ? _value_id1 : '');
                        }
                    },
                    slotProps: {
                        popper: {
                            container: root
                        }
                    },
                    filterOptions: (options, params)=>{
                        const filtered = filter(options, params);
                        const reverseFiltered = options.filter((option)=>!filtered.some((filteredOption)=>filteredOption.id === option.id));
                        !isSimplified && filtered.unshift({
                            id: COUNTERPART_CREATE_NEW_ID,
                            label: i18n._({
                                id: "SteimB"
                            })
                        });
                        if (!isSimplified && params.inputValue.length) {
                            filtered.push({
                                id: COUNTERPART_DIVIDER,
                                label: '-'
                            });
                        }
                        return [
                            ...filtered,
                            ...reverseFiltered
                        ];
                    },
                    renderInput: (params)=>{
                        return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$N(_object_spread$12({}, params), {
                            label: i18n._({
                                id: "876pfE"
                            }),
                            placeholder: i18n._({
                                id: "C0uyNO"
                            }),
                            required: true,
                            error: Boolean(error),
                            helperText: error === null || error === void 0 ? void 0 : error.message,
                            className: `Monite-Selector ${isSimplified ? 'isSimplified' : ''}`,
                            InputProps: _object_spread_props$N(_object_spread$12({}, params.InputProps), {
                                value: params.inputProps.value,
                                onFocus: ()=>setIsFocused(true),
                                onBlur: ()=>setIsFocused(false),
                                startAdornment: isCounterpartsLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                    size: 20
                                }) : !isSimplified && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
                                            sx: {
                                                width: '44px',
                                                height: '44px',
                                                maxHeight: '44px',
                                                justifyContent: 'center',
                                                backgroundColor: selectedCounterpartOption ? 'rgba(203, 203, 254, 1)' : 'rgba(235, 235, 255, 1)',
                                                borderRadius: '50%'
                                            },
                                            position: "start",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "caption",
                                                children: selectedCounterpartOption ? Array.from(selectedCounterpartOption.label)[0].toUpperCase() : '+'
                                            })
                                        }),
                                        !isFocused && /*#__PURE__*/ jsxRuntime.jsxs(material.InputAdornment, {
                                            position: "end",
                                            sx: {
                                                flexDirection: 'column',
                                                alignItems: 'baseline',
                                                height: 'auto'
                                            },
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body2",
                                                    sx: {
                                                        color: 'rgba(41, 41, 41, 1)'
                                                    },
                                                    fontWeight: "bold",
                                                    children: params.inputProps.value
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body2",
                                                    children: address
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                endAdornment: (()=>{
                                    if (!isSimplified && selectedCounterpartOption && !params.inputProps['aria-expanded']) {
                                        return /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            onClick: handleEditCounterpart,
                                            children: i18n._({
                                                id: "2Eoi/a"
                                            })
                                        });
                                    }
                                    if (isSimplified && !params.inputProps['aria-expanded']) {
                                        return /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.KeyboardArrowDown, {
                                            fontSize: "small"
                                        });
                                    }
                                    if (selectedCounterpartOption && params.inputProps['aria-expanded']) {
                                        return /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                            onClick: ()=>field.onChange(''),
                                            children: /*#__PURE__*/ jsxRuntime.jsx(ClearIcon__default.default, {
                                                sx: {
                                                    width: '1rem',
                                                    height: '1rem'
                                                }
                                            })
                                        });
                                    }
                                    return null;
                                })()
                            })
                        }));
                    },
                    loading: isCounterpartsLoading || disabled,
                    options: counterpartsAutocompleteData,
                    getOptionLabel: (counterpartOption)=>isCreateNewCounterpartOption(counterpartOption) || isDividerOption(counterpartOption) ? '' : counterpartOption.label,
                    isOptionEqualToValue: (option, value)=>{
                        return option.id === value.id;
                    },
                    selectOnFocus: true,
                    clearOnBlur: true,
                    handleHomeEndKeys: true,
                    renderOption: (props, counterpartOption)=>isCreateNewCounterpartOption(counterpartOption) ? /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "text",
                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {}),
                            fullWidth: true,
                            sx: {
                                justifyContent: 'flex-start',
                                px: 2
                            },
                            onClick: handleCreateNewCounterpart,
                            children: counterpartOption.label
                        }, counterpartOption.id) : counterpartOption.id === COUNTERPART_DIVIDER ? /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {
                            sx: {
                                padding: '.5rem',
                                marginBottom: '1rem'
                            }
                        }, counterpartOption.id) : /*#__PURE__*/ react$3.createElement("li", _object_spread_props$N(_object_spread$12({}, props), {
                            key: counterpartOption.id
                        }), counterpartOption.label)
                }))
            });
        }
    });
};

function _define_property$11(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$11(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$11(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$M(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$M(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$M(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const EditCounterpartModal = ({ initialCounterpartId, initialBillingAddressId, initialShippingAddressId, disabled, open, onClose, isEditProfileOpen = false })=>{
    var _counterpartVats_data_;
    const { i18n } = react.useLingui();
    const { control, setValue } = reactHookForm.useFormContext();
    const { root } = useRootElements();
    const [isEditMode, setIsEditMode] = React.useState(isEditProfileOpen);
    const [currentCounterpartId, setCurrentCounterpartId] = React.useState(initialCounterpartId);
    const [formValues, setFormValues] = React.useState({
        billingAddressId: '',
        shippingAddressId: ''
    });
    const [isDirty, setIsDirty] = React.useState(false);
    const { data: counterpart } = useCounterpartById(currentCounterpartId);
    const { data: contacts } = useCounterpartContactList(currentCounterpartId);
    const { data: counterpartAddresses, isLoading: isAddressesLoading } = useCounterpartAddresses(currentCounterpartId);
    const { data: counterpartVats } = useCounterpartVatList(currentCounterpartId);
    const currentBillingAddress = counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data.find((address)=>(address === null || address === void 0 ? void 0 : address.id) === formValues.billingAddressId);
    const defaultContact = contacts === null || contacts === void 0 ? void 0 : contacts.find((c)=>c.is_default);
    const isAddressFormDisabled = isAddressesLoading || !currentCounterpartId;
    const handleUpdate = ()=>{
        onClose();
        setIsEditMode(false);
    };
    const handleSaveChanges = ()=>{
        setValue('counterpart_id', currentCounterpartId);
        setValue('default_billing_address_id', formValues.billingAddressId);
        setValue('default_shipping_address_id', formValues.shippingAddressId);
        setIsDirty(false);
        onClose();
    };
    const isOrganization = counterpart && isOrganizationCounterpart(counterpart);
    React.useEffect(()=>{
        var _counterpartAddresses_data;
        if (!(counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data.length)) return;
        setFormValues(()=>{
            const isInitialBillingAddressValid = counterpartAddresses.data.find((address)=>address.id === initialBillingAddressId);
            const isInitialShippingAddressValid = counterpartAddresses.data.find((address)=>address.id === initialShippingAddressId);
            const billingAddressId = isInitialBillingAddressValid && initialBillingAddressId || (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_billing_address_id) || (counterpartAddresses.data.length === 1 ? counterpartAddresses.data[0].id : '');
            const shippingAddressId = isInitialShippingAddressValid && initialShippingAddressId || (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_shipping_address_id) || '';
            return {
                billingAddressId,
                shippingAddressId
            };
        });
    }, [
        counterpartAddresses,
        counterpart,
        initialShippingAddressId,
        initialBillingAddressId
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Modal, {
        open: open,
        container: root,
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            sx: {
                position: 'relative',
                top: '50%',
                left: '50%',
                transform: 'translate(-50%, -50%)',
                maxWidth: 600,
                bgcolor: 'background.paper',
                boxShadow: 24,
                borderRadius: 8
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                    container: true,
                    alignItems: "center",
                    p: 4,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                            item: true,
                            xs: 11,
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h3",
                                children: isEditMode ? i18n._({
                                    id: "r6+y3S"
                                }) : i18n._({
                                    id: "mrW6ZN"
                                })
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                            item: true,
                            xs: 1,
                            children: /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                                "aria-label": i18n._({
                                    id: "YrZkBL"
                                }),
                                onClick: onClose,
                                color: "inherit",
                                children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                            })
                        })
                    ]
                }),
                isEditMode ? counterpart && isOrganizationCounterpart(counterpart) ? /*#__PURE__*/ jsxRuntime.jsx(CounterpartOrganizationForm, {
                    id: currentCounterpartId,
                    onCancel: ()=>setIsEditMode(false),
                    onUpdate: handleUpdate,
                    isInvoiceCreation: true,
                    showCategories: false
                }) : /*#__PURE__*/ jsxRuntime.jsx(CounterpartIndividualForm, {
                    id: currentCounterpartId,
                    onCancel: ()=>setIsEditMode(false),
                    onUpdate: handleUpdate,
                    isInvoiceCreation: true,
                    showCategories: false
                }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            sx: {
                                padding: '2rem'
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(CounterpartSelector, {
                                    isSimplified: true,
                                    counterpartAddresses: counterpartAddresses,
                                    shouldDisableFormUpdate: true,
                                    currentCounterpartId: currentCounterpartId,
                                    handleUpdateCounterpartId: (value)=>{
                                        setIsDirty(true);
                                        setCurrentCounterpartId(value !== null && value !== void 0 ? value : '');
                                    }
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.List, {
                                    sx: {
                                        marginBottom: '2rem',
                                        '& .MuiListItem-root': {
                                            padding: '.25rem .5rem .25rem 0',
                                            fontWeight: '400',
                                            '& span': {
                                                color: 'rgba(112, 112, 112, 1)',
                                                minWidth: '144px',
                                                paddingRight: '1rem'
                                            }
                                        }
                                    },
                                    children: [
                                        isOrganization && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.organization.email) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "O3oNi5"
                                                    })
                                                }),
                                                ' ',
                                                counterpart.organization.email
                                            ]
                                        }),
                                        ' ',
                                        !isOrganization && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.individual.email) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "O3oNi5"
                                                    })
                                                }),
                                                " ",
                                                counterpart.individual.email
                                            ]
                                        }),
                                        isOrganization && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.organization.phone) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "HF6C2L"
                                                    })
                                                }),
                                                ' ',
                                                counterpart.organization.phone
                                            ]
                                        }),
                                        ' ',
                                        !isOrganization && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.individual.phone) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "HF6C2L"
                                                    })
                                                }),
                                                ' ',
                                                counterpart.individual.phone
                                            ]
                                        }),
                                        defaultContact && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "OSRvgd"
                                                    })
                                                }),
                                                ' ',
                                                defaultContact === null || defaultContact === void 0 ? void 0 : defaultContact.first_name,
                                                " ",
                                                defaultContact === null || defaultContact === void 0 ? void 0 : defaultContact.last_name
                                            ]
                                        }),
                                        (counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "4m4EuK"
                                                    })
                                                }),
                                                " ",
                                                counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id
                                            ]
                                        }),
                                        (counterpartVats === null || counterpartVats === void 0 ? void 0 : (_counterpartVats_data_ = counterpartVats.data[0]) === null || _counterpartVats_data_ === void 0 ? void 0 : _counterpartVats_data_.value) && /*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    children: i18n._({
                                                        id: "Ttw+e+"
                                                    })
                                                }),
                                                ' ',
                                                counterpartVats.data[0].value
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: "default_billing_address_id",
                                    control: control,
                                    render: ({ field, fieldState: { error } })=>{
                                        var _counterpartAddresses_data;
                                        return counterpartAddresses && (counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data.length) > 1 || isAddressesLoading ? /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                            variant: "standard",
                                            sx: {
                                                marginBottom: '1rem'
                                            },
                                            fullWidth: true,
                                            required: true,
                                            error: Boolean(error),
                                            disabled: isAddressFormDisabled,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                                    id: field.name,
                                                    children: i18n._({
                                                        id: "gzEjAL"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Select, _object_spread_props$M(_object_spread$11({}, field), {
                                                    value: formValues.billingAddressId,
                                                    onChange: (event)=>{
                                                        setIsDirty(true);
                                                        setFormValues((prevState)=>_object_spread_props$M(_object_spread$11({}, prevState), {
                                                                billingAddressId: event.target.value ? event.target.value : ''
                                                            }));
                                                    },
                                                    labelId: field.name,
                                                    label: i18n._({
                                                        id: "gzEjAL"
                                                    }),
                                                    IconComponent: ()=>/*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.KeyboardArrowDown, {
                                                            fontSize: "small"
                                                        }),
                                                    MenuProps: {
                                                        container: root
                                                    },
                                                    startAdornment: isAddressesLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                        size: 20
                                                    }) : null,
                                                    children: counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data.map((address)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                            value: address.id,
                                                            children: prepareAddressView({
                                                                address
                                                            })
                                                        }, address.id))
                                                })),
                                                error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                                                    children: error.message
                                                })
                                            ]
                                        }) : /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$M(_object_spread$11({}, field), {
                                            value: prepareAddressView({
                                                address: currentBillingAddress
                                            }),
                                            id: field.name,
                                            label: i18n._({
                                                id: "gzEjAL"
                                            }),
                                            required: true,
                                            variant: "standard",
                                            fullWidth: true,
                                            disabled: true,
                                            error: Boolean(error),
                                            helperText: error === null || error === void 0 ? void 0 : error.message
                                        }));
                                    }
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: "default_shipping_address_id",
                                    control: control,
                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                            variant: "standard",
                                            sx: {
                                                marginTop: '1rem'
                                            },
                                            fullWidth: true,
                                            error: Boolean(error),
                                            disabled: isAddressFormDisabled,
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                                    htmlFor: field.name,
                                                    children: i18n._({
                                                        id: "dvQFn0"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Select, _object_spread_props$M(_object_spread$11({}, field), {
                                                    id: field.name,
                                                    value: formValues.shippingAddressId,
                                                    onChange: (event)=>{
                                                        setIsDirty(true);
                                                        setFormValues((prevState)=>_object_spread_props$M(_object_spread$11({}, prevState), {
                                                                shippingAddressId: event.target.value ? event.target.value : ''
                                                            }));
                                                    },
                                                    labelId: field.name,
                                                    MenuProps: {
                                                        container: root
                                                    },
                                                    label: i18n._({
                                                        id: "dvQFn0"
                                                    }),
                                                    IconComponent: ()=>/*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.KeyboardArrowDown, {
                                                            fontSize: "small"
                                                        }),
                                                    startAdornment: isAddressesLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                                        size: 20
                                                    }) : null,
                                                    endAdornment: counterpartAddresses && (counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data.length) > 1 && /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                                        sx: {
                                                            visibility: field.value ? 'visible' : 'hidden ',
                                                            mr: 2
                                                        },
                                                        size: "small",
                                                        onClick: (event)=>{
                                                            event.preventDefault();
                                                            setIsDirty(true);
                                                            setFormValues((prevState)=>_object_spread_props$M(_object_spread$11({}, prevState), {
                                                                    shippingAddressId: ''
                                                                }));
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(ClearIcon__default.default, {
                                                            fontSize: "small"
                                                        })
                                                    }),
                                                    children: counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data.map((address)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                            value: address.id,
                                                            children: prepareAddressView({
                                                                address
                                                            })
                                                        }, address.id))
                                                }))
                                            ]
                                        })
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                            container: true,
                            alignItems: "center",
                            p: 4,
                            sx: {
                                borderTop: 'solid 1px rgba(0, 0, 0, 0.13)'
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                    item: true,
                                    xs: 6,
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                        variant: "outlined",
                                        onClick: ()=>setIsEditMode(true),
                                        children: i18n._({
                                            id: "9OpVZg"
                                        })
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                    item: true,
                                    sx: {
                                        display: 'flex',
                                        justifyContent: 'flex-end',
                                        gap: '1rem'
                                    },
                                    xs: 6,
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "text",
                                            onClick: ()=>{
                                                setIsDirty(false);
                                                onClose();
                                            },
                                            children: i18n._({
                                                id: "J/hVSQ",
                                                values: {
                                                    0: isDirty ? 'Cancel' : 'Close'
                                                }
                                            })
                                        }),
                                        isDirty && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "contained",
                                            disabled: disabled,
                                            onClick: handleSaveChanges,
                                            children: i18n._({
                                                id: "tfDRzk"
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};

const CustomerSection = ({ disabled, customerTypes, isEditModalOpen, isEditProfileOpen, handleEditModal, handleEditProfileState, counterpart })=>{
    const { watch, setValue } = reactHookForm.useFormContext();
    const counterpartIdRef = React.useRef('');
    const selectedBillingAddressId = watch('default_billing_address_id');
    const selectedShippingAddressId = watch('default_shipping_address_id');
    const { data: counterpartAddresses } = useCounterpartAddresses(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const { data: counterpartVats } = useCounterpartVatList(counterpart === null || counterpart === void 0 ? void 0 : counterpart.id);
    const [isCreateCounterpartOpened, setIsCreateCounterpartOpened] = React.useState(false);
    const [isEditCounterpartOpened, setIsEditCounterpartOpened] = React.useState(false);
    React.useEffect(()=>{
        var _counterpartAddresses_data;
        if (!(counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data.length)) return;
        if (!selectedBillingAddressId) {
            counterpartIdRef.current = counterpart === null || counterpart === void 0 ? void 0 : counterpart.id;
            const billingAddressId = (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_billing_address_id) || (counterpartAddresses.data.length === 1 ? counterpartAddresses.data[0].id : '');
            setValue('default_billing_address_id', billingAddressId);
        }
        if (!selectedShippingAddressId) {
            const shippingAddressId = (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_shipping_address_id) || '';
            setValue('default_shipping_address_id', shippingAddressId);
        }
        if (selectedBillingAddressId && counterpartIdRef.current !== (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id)) {
            counterpartIdRef.current = counterpart === null || counterpart === void 0 ? void 0 : counterpart.id;
            const billingAddressId = (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_billing_address_id) || (counterpartAddresses.data.length === 1 ? counterpartAddresses.data[0].id : '');
            setValue('default_billing_address_id', billingAddressId);
        }
        if (selectedShippingAddressId && counterpartIdRef.current !== (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id)) {
            counterpartIdRef.current = counterpart === null || counterpart === void 0 ? void 0 : counterpart.id;
            const shippingAddressId = (counterpart === null || counterpart === void 0 ? void 0 : counterpart.default_shipping_address_id) || '';
            setValue('default_shipping_address_id', shippingAddressId);
        }
    }, [
        counterpartAddresses,
        setValue,
        counterpart,
        selectedBillingAddressId,
        selectedShippingAddressId
    ]);
    React.useEffect(()=>{
        var _counterpartVats_data;
        if (counterpartVats && (counterpartVats === null || counterpartVats === void 0 ? void 0 : (_counterpartVats_data = counterpartVats.data) === null || _counterpartVats_data === void 0 ? void 0 : _counterpartVats_data.length) >= 1) {
            setValue('counterpart_vat_id_id', counterpartVats.data[0].id);
        } else {
            setValue('counterpart_vat_id_id', '');
        }
    }, [
        counterpartVats,
        setValue
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:w-full",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(CounterpartSelector, {
                setIsCreateCounterpartOpened: setIsCreateCounterpartOpened,
                setIsEditCounterpartOpened: setIsEditCounterpartOpened,
                disabled: disabled,
                counterpartAddresses: counterpartAddresses
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CreateCounterpartModal, {
                open: isCreateCounterpartOpened,
                onClose: ()=>{
                    setIsCreateCounterpartOpened(false);
                },
                onCreate: (newCounterpartId)=>{
                    setValue('counterpart_id', newCounterpartId);
                },
                customerTypes: customerTypes,
                isInvoiceCreation: true
            }),
            (isEditModalOpen || isEditCounterpartOpened) && /*#__PURE__*/ jsxRuntime.jsx(EditCounterpartModal, {
                initialCounterpartId: (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) || '',
                initialBillingAddressId: selectedBillingAddressId,
                initialShippingAddressId: selectedShippingAddressId,
                disabled: disabled,
                isEditProfileOpen: isEditProfileOpen,
                open: isEditModalOpen || isEditCounterpartOpened,
                onClose: ()=>{
                    if (handleEditModal) {
                        handleEditModal(false);
                    }
                    if (handleEditProfileState) {
                        handleEditProfileState(false);
                    }
                    setIsEditCounterpartOpened(false);
                }
            })
        ]
    });
};

function _define_property$10(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$10(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$10(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$L(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$L(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$L(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$f(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$f(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$f(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const EditInvoiceReminderDialog = (_param)=>{
    var { reminderType, open, reminderId, onUpdate, onClose } = _param, restProps = _object_without_properties$f(_param, [
        "reminderType",
        "open",
        "reminderId",
        "onUpdate",
        "onClose"
    ]);
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, _object_spread_props$L(_object_spread$10({
        alignDialog: "right",
        open: open,
        onClose: onClose
    }, restProps), {
        children: [
            open && !reminderType && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                children: i18n._({
                    id: "LzmZxM"
                })
            }),
            reminderType === 'payment' && /*#__PURE__*/ jsxRuntime.jsx(BeforeDueDateReminderForm, {
                reminderId: reminderId,
                onUpdate: (id)=>{
                    onClose();
                    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({
                        reminderId: id,
                        reminderType
                    });
                },
                onClose: onClose
            }),
            reminderType === 'overdue' && /*#__PURE__*/ jsxRuntime.jsx(OverdueReminderForm, {
                reminderId: reminderId,
                onUpdate: (id)=>{
                    onClose();
                    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({
                        reminderId: id,
                        reminderType
                    });
                },
                onClose: onClose
            })
        ]
    }));
};

function _define_property$$(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$$(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$$(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$K(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$K(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$K(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const EntityProfileFormContent = ({ entityType })=>{
    const { i18n } = react.useLingui();
    const { control, watch, setValue } = reactHookForm.useFormContext();
    const vatTypeList = getVatTypeList(i18n);
    const countries = getCountries(i18n);
    const vatType = watch('vat_type');
    const vatCountry = watch('vat_country');
    const currentDisplayedVatTypes = React.useMemo(()=>vatTypeList.filter((vatType)=>vatCountry === (vatType === null || vatType === void 0 ? void 0 : vatType.countryCode)), [
        vatTypeList,
        vatCountry
    ]);
    const selectedVatType = currentDisplayedVatTypes.find((type)=>type.value === vatType);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            entityType === 'individual' ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                        name: "title",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                        children: i18n._({
                                            id: "MHrjPM"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                ]
                            })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:justify-between mtw:gap-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "name",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        className: "mtw:flex mtw:flex-col mtw:flex-1",
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "6YtxFj"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "surname",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        className: "mtw:flex mtw:flex-col mtw:flex-1",
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "bnwuKo"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            })
                        ]
                    })
                ]
            }) : /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                name: "name",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "KUeXcx"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:justify-between mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:items-end mtw:flex-1/2 mtw:flex-shrink-0",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "vat_country",
                                control: control,
                                render: ({ field })=>{
                                    var _selectedVatType_vatName;
                                    return /*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        className: "mtw:flex mtw:flex-col",
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: (_selectedVatType_vatName = selectedVatType === null || selectedVatType === void 0 ? void 0 : selectedVatType.vatName) !== null && _selectedVatType_vatName !== void 0 ? _selectedVatType_vatName : i18n._({
                                                    id: "Ttw+e+"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(Select, {
                                                onValueChange: (value)=>{
                                                    var _newAvailableVatTypes_;
                                                    const newAvailableVatTypes = vatTypeList.filter((vatType)=>value === (vatType === null || vatType === void 0 ? void 0 : vatType.countryCode));
                                                    field.onChange(value);
                                                    setValue('vat_id', '');
                                                    setValue('vat_type', newAvailableVatTypes === null || newAvailableVatTypes === void 0 ? void 0 : (_newAvailableVatTypes_ = newAvailableVatTypes[0]) === null || _newAvailableVatTypes_ === void 0 ? void 0 : _newAvailableVatTypes_.value);
                                                },
                                                defaultValue: field.value,
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(SelectTrigger, {
                                                            className: "mtw:w-18 mtw:rounded-br-none mtw:rounded-tr-none",
                                                            children: /*#__PURE__*/ jsxRuntime.jsx(SelectValue, {})
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(SelectContent, {
                                                        children: Object.entries(countries).map(([country, label])=>/*#__PURE__*/ jsxRuntime.jsxs(SelectItem, {
                                                                value: country,
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(CountryFlag, {
                                                                        code: country,
                                                                        label: label
                                                                    }),
                                                                    i18n._({
                                                                        id: "w9dLMW",
                                                                        values: {
                                                                            label: label
                                                                        }
                                                                    })
                                                                ]
                                                            }, country))
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    });
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "vat_id",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        className: "mtw:flex mtw:flex-col mtw:flex-1",
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread_props$K(_object_spread$$({}, field), {
                                                    className: "mtw:rounded-bl-none mtw:rounded-tl-none",
                                                    placeholder: selectedVatType === null || selectedVatType === void 0 ? void 0 : selectedVatType.placeholderText
                                                }))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            })
                        ]
                    }),
                    currentDisplayedVatTypes.length > 1 && /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                        name: "vat_type",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                className: "mtw:flex mtw:flex-col mtw:flex-1/2 mtw:w-[45%]",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                        children: i18n._({
                                            id: "+zy2Nq"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(Select, {
                                        onValueChange: field.onChange,
                                        defaultValue: field.value,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(SelectTrigger, {
                                                    className: "mtw:w-full",
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(SelectValue, {
                                                        className: "mtw:max-w-4/5 mtw:text-ellipsis mtw:whitespace-nowrap"
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(SelectContent, {
                                                children: currentDisplayedVatTypes.map((vatType)=>/*#__PURE__*/ jsxRuntime.jsx(SelectItem, {
                                                        value: vatType.value,
                                                        children: vatType.label
                                                    }, vatType.value))
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                ]
                            })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                name: "tax_id",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "m+elvG"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                name: "email",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "O3oNi5"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread_props$K(_object_spread$$({}, field), {
                                    type: "email"
                                }))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                name: "phone",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "sANGlx"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread_props$K(_object_spread$$({}, field), {
                                    type: "tel"
                                }))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                name: "website",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                children: i18n._({
                                    id: "On0aF2"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread_props$K(_object_spread$$({}, field), {
                                    type: "url"
                                }))
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                        ]
                    })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("section", {
                className: "mtw:flex mtw:flex-col mtw:gap-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h3", {
                        className: "mtw:text-lg mtw:font-semibold",
                        children: i18n._({
                            id: "Du6bPw"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-4 mtw:p-6 mtw:border mtw:border-border mtw:rounded-xl",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "address_line_1",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "NY/x1b"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "address_line_2",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "cormHa"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:justify-between mtw:gap-4",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                        name: "city",
                                        control: control,
                                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                                className: "mtw:flex mtw:flex-col mtw:flex-1",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                        children: i18n._({
                                                            id: "3wV73y"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                                ]
                                            })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                        name: "postal_code",
                                        control: control,
                                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                                className: "mtw:flex mtw:flex-col mtw:flex-1",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                        children: i18n._({
                                                            id: "U4aiMW"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                                ]
                                            })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "state",
                                control: control,
                                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "uE0HSq"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread$$({}, field))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(FormField, {
                                name: "country",
                                control: control,
                                render: ({ field })=>{
                                    var _field_value;
                                    return /*#__PURE__*/ jsxRuntime.jsxs(FormItem, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(FormLabel, {
                                                children: i18n._({
                                                    id: "JNCzPW"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormControl, {
                                                children: /*#__PURE__*/ jsxRuntime.jsx(Input, _object_spread_props$K(_object_spread$$({}, field), {
                                                    disabled: true,
                                                    value: countries[(_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : '']
                                                }))
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormDescription, {
                                                children: i18n._({
                                                    id: "OyWSU1"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(FormMessage, {})
                                        ]
                                    });
                                }
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$p(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$p(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$p(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$p(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$_(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$_(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$_(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$J(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$J(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$J(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const getDefaultValues = (entity, vatId)=>{
    const commonValues = {
        email: entity.email || undefined,
        tax_id: entity.tax_id || undefined,
        vat_id: (vatId === null || vatId === void 0 ? void 0 : vatId.value) || undefined,
        vat_type: (vatId === null || vatId === void 0 ? void 0 : vatId.type) || undefined,
        vat_country: (vatId === null || vatId === void 0 ? void 0 : vatId.country) || entity.address.country || undefined,
        address_line_1: entity.address.line1 || undefined,
        address_line_2: entity.address.line2 || undefined,
        city: entity.address.city || undefined,
        postal_code: entity.address.postal_code || undefined,
        state: entity.address.state || undefined,
        country: entity.address.country || undefined,
        phone: entity.phone || undefined,
        website: entity.website || undefined
    };
    if ('organization' in entity) {
        return _object_spread$_({
            name: entity.organization.legal_name || undefined
        }, commonValues);
    }
    return _object_spread$_({
        title: entity.individual.title || undefined,
        name: entity.individual.first_name || undefined,
        surname: entity.individual.last_name || undefined
    }, commonValues);
};
const EntityProfileForm = ({ open, onClose, entity, vatIds })=>{
    const { i18n } = react.useLingui();
    const vatId = vatIds === null || vatIds === void 0 ? void 0 : vatIds[0];
    const { mutate: patchEntity } = usePatchEntityById();
    var _vatId_id;
    const { mutate: patchEntityVat } = usePatchEntityVatById((_vatId_id = vatId === null || vatId === void 0 ? void 0 : vatId.id) !== null && _vatId_id !== void 0 ? _vatId_id : '');
    const { mutate: createEntityVatId } = useCreateEntityVatId();
    const defaultValues = React.useMemo(()=>getDefaultValues(entity, vatId), [
        entity,
        vatId
    ]);
    const formName = 'entity-profile-form';
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getEntityProfileValidationSchema(i18n)),
        defaultValues
    });
    const { handleSubmit, formState } = methods;
    return /*#__PURE__*/ jsxRuntime.jsx(Dialog, {
        open: open,
        onOpenChange: onClose,
        children: /*#__PURE__*/ jsxRuntime.jsx(Form$1, _object_spread_props$J(_object_spread$_({}, methods), {
            children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                id: formName,
                name: formName,
                onSubmit: handleSubmit((values)=>_async_to_generator$p(function*() {
                        var _values_vat_id;
                        patchEntity(_object_spread$_({
                            email: values.email || null,
                            website: values.website || null,
                            phone: values.phone || null,
                            tax_id: values.tax_id || null,
                            address: {
                                line1: values.address_line_1 || null,
                                line2: values.address_line_2 || null,
                                city: values.city || null,
                                postal_code: values.postal_code || null,
                                state: values.state || null
                            }
                        }, entity.type === 'individual' ? {
                            title: values.title || null,
                            first_name: values.name || null,
                            last_name: values.surname || null
                        } : {
                            organization: {
                                legal_name: values.name || null
                            }
                        }));
                        if (!vatId && values.vat_id && ((_values_vat_id = values.vat_id) === null || _values_vat_id === void 0 ? void 0 : _values_vat_id.trim()) !== '') {
                            createEntityVatId({
                                value: values.vat_id,
                                type: values.vat_type,
                                country: values.vat_country
                            }, {
                                onSuccess: ()=>{
                                    onClose();
                                }
                            });
                        } else {
                            patchEntityVat({
                                value: values.vat_id,
                                type: values.vat_type,
                                country: values.vat_country
                            }, {
                                onSuccess: ()=>{
                                    onClose();
                                }
                            });
                        }
                    })()),
                children: /*#__PURE__*/ jsxRuntime.jsxs(DialogContent, {
                    className: "mtw:max-h-4/5 mtw:overflow-y-auto",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs(DialogHeader$1, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                                    className: "mtw:text-2xl mtw:font-semibold mtw:leading-8",
                                    children: i18n._({
                                        id: "CFKq+l"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(DialogDescription, {
                                    hidden: true,
                                    children: i18n._({
                                        id: "GAQ1Os"
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                            className: "mtw:flex mtw:flex-col mtw:gap-6",
                            children: /*#__PURE__*/ jsxRuntime.jsx(EntityProfileFormContent, {
                                entityType: entity.type
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(DialogFooter$1, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                    variant: "ghost",
                                    onClick: onClose,
                                    children: i18n._({
                                        id: "dEgA5A"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                    type: "submit",
                                    form: formName,
                                    disabled: !formState.isDirty,
                                    children: i18n._({
                                        id: "tfDRzk"
                                    })
                                })
                            ]
                        })
                    ]
                })
            })
        }))
    });
};
const EntityProfileModal = (props)=>{
    const { data: entity, isLoading } = useMyEntity();
    var _entity_id;
    const { data: vatIds, isLoading: isVatIdsLoading } = useGetEntityVatIds((_entity_id = entity === null || entity === void 0 ? void 0 : entity.id) !== null && _entity_id !== void 0 ? _entity_id : '');
    const { data: user } = useEntityUserByAuthToken();
    var _user_id;
    const { data: isUpdateAllowed } = useIsActionAllowed({
        method: 'entity',
        action: 'update',
        entityUserId: (_user_id = user === null || user === void 0 ? void 0 : user.id) !== null && _user_id !== void 0 ? _user_id : ''
    });
    if (!isUpdateAllowed) return /*#__PURE__*/ jsxRuntime.jsx(AccessRestrictionModal, {
        open: props.open,
        onClose: props.onClose
    });
    if (isLoading || isVatIdsLoading || !entity) return null;
    var _vatIds_data;
    return /*#__PURE__*/ jsxRuntime.jsx(EntityProfileForm, _object_spread_props$J(_object_spread$_({}, props), {
        entity: entity,
        vatIds: (_vatIds_data = vatIds === null || vatIds === void 0 ? void 0 : vatIds.data) !== null && _vatIds_data !== void 0 ? _vatIds_data : []
    }));
};

const isPaymentReminder = (details)=>{
    return 'term_1_reminder' in details || 'term_2_reminder' in details || 'term_final_reminder' in details;
};
const ReminderDetails = ({ reminder, updateDisabled, onUpdate })=>{
    var _reminder_term_1_reminder, _reminder_term_2_reminder, _reminder_term_final_reminder, _reminder_terms;
    const { i18n } = react.useLingui();
    var _reminder_terms_map;
    const cardTerms = isPaymentReminder(reminder) ? [
        {
            reminderTerm: (reminder === null || reminder === void 0 ? void 0 : reminder.term_1_reminder) ? i18n._({
                id: "TzHRlj",
                values: {
                    0: reminder === null || reminder === void 0 ? void 0 : reminder.term_1_reminder.days_before,
                    1: (reminder === null || reminder === void 0 ? void 0 : (_reminder_term_1_reminder = reminder.term_1_reminder) === null || _reminder_term_1_reminder === void 0 ? void 0 : _reminder_term_1_reminder.days_before) === 1 ? 'day' : 'days'
                }
            }) : i18n._({
                id: "/lx8uf"
            }),
            termPeriodName: i18n._({
                id: "RW8Abh"
            }),
            id: 'payment-1'
        },
        {
            reminderTerm: (reminder === null || reminder === void 0 ? void 0 : reminder.term_2_reminder) ? i18n._({
                id: "TzHRlj",
                values: {
                    0: reminder === null || reminder === void 0 ? void 0 : reminder.term_2_reminder.days_before,
                    1: (reminder === null || reminder === void 0 ? void 0 : (_reminder_term_2_reminder = reminder.term_2_reminder) === null || _reminder_term_2_reminder === void 0 ? void 0 : _reminder_term_2_reminder.days_before) === 1 ? 'day' : 'days'
                }
            }) : i18n._({
                id: "/lx8uf"
            }),
            termPeriodName: i18n._({
                id: "Ca3sej"
            }),
            id: 'payment-2'
        },
        {
            reminderTerm: (reminder === null || reminder === void 0 ? void 0 : reminder.term_final_reminder) ? i18n._({
                id: "TzHRlj",
                values: {
                    0: reminder === null || reminder === void 0 ? void 0 : reminder.term_final_reminder.days_before,
                    1: (reminder === null || reminder === void 0 ? void 0 : (_reminder_term_final_reminder = reminder.term_final_reminder) === null || _reminder_term_final_reminder === void 0 ? void 0 : _reminder_term_final_reminder.days_before) === 1 ? 'day' : 'days'
                }
            }) : i18n._({
                id: "/lx8uf"
            }),
            termPeriodName: i18n._({
                id: "XicmhT"
            }),
            id: 'payment-3'
        }
    ] : (_reminder_terms_map = reminder === null || reminder === void 0 ? void 0 : (_reminder_terms = reminder.terms) === null || _reminder_terms === void 0 ? void 0 : _reminder_terms.map((term, index)=>({
            reminderTerm: i18n._({
                id: "oNNPST",
                values: {
                    0: term.days_after,
                    1: (term === null || term === void 0 ? void 0 : term.days_after) === 1 ? 'day' : 'days'
                }
            }),
            termPeriodName: i18n._({
                id: "XicmhT"
            }),
            id: `overdue-${index + 1}`
        }))) !== null && _reminder_terms_map !== void 0 ? _reminder_terms_map : [];
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-4 mtw:p-4 mtw:bg-neutral-95 mtw:rounded-md",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("ul", {
                className: "mtw:w-full mtw:list-none",
                children: cardTerms === null || cardTerms === void 0 ? void 0 : cardTerms.map(({ termPeriodName, reminderTerm, id }, index, arr)=>{
                    const noReminderSet = reminderTerm === 'No reminder';
                    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
                        className: "mtw:flex mtw:items-start mtw:gap-2 mtw:w-full",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:flex-col mtw:items-center mtw:gap-1 mtw:pt-1",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.NotificationsNone, {
                                        className: `${noReminderSet ? 'mtw:text-neutral-70' : 'mtw:text-neutral-50'} mtw:text-base!`
                                    }),
                                    index !== arr.length - 1 && /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: "mtw:w-px mtw:h-[7px] mtw:bg-neutral-70"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:flex-1 mtw:justify-between mtw:py-0.5",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        className: `mtw:text-sm mtw:font-medium ${noReminderSet ? 'mtw:text-neutral-70' : 'mtw:text-neutral-50'}`,
                                        children: reminderTerm
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        className: "mtw:text-sm mtw:font-normal mtw:text-neutral-70",
                                        children: termPeriodName
                                    })
                                ]
                            })
                        ]
                    }, id);
                })
            }),
            onUpdate && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "text",
                disabled: updateDisabled,
                onClick: (event)=>{
                    event.preventDefault();
                    onUpdate();
                },
                size: "small",
                sx: {
                    width: 'fit-content'
                },
                children: i18n._({
                    id: "Wj4zia"
                })
            })
        ]
    });
};

const ReminderSelectLayout = ({ children, reminder, isReminderLoading, updateDisabled, onUpdate })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-2 mtw:flex-1",
        children: [
            children,
            (isReminderLoading || reminder) && /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                children: isReminderLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
                    variant: "text",
                    width: "100%"
                }) : reminder ? /*#__PURE__*/ jsxRuntime.jsx(ReminderDetails, {
                    reminder: reminder,
                    updateDisabled: updateDisabled,
                    onUpdate: onUpdate
                }) : null
            })
        ]
    });
};

function _define_property$Z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$Z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$Z(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$I(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$I(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$I(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ReminderOverdue = ({ handleCreate, onUpdateOverdueReminder, disabled })=>{
    const { data: overdueReminders } = useGetOverdueReminders();
    const { i18n } = react.useLingui();
    const { data: isUpdateOverdueReminderAllowed } = useIsActionAllowed({
        method: 'overdue_reminder',
        action: 'update'
    });
    const { data: isCreateOverdueReminderAllowed } = useIsActionAllowed({
        method: 'overdue_reminder',
        action: 'create'
    });
    const { control, watch } = reactHookForm.useFormContext();
    const overdueReminderId = watch('overdue_reminder_id');
    const { data: overdueReminder, isLoading: isOverdueReminderLoading } = useGetOverdueReminderById(overdueReminderId);
    const overdueReminderOptions = (overdueReminders === null || overdueReminders === void 0 ? void 0 : overdueReminders.some(({ value })=>value === (overdueReminder === null || overdueReminder === void 0 ? void 0 : overdueReminder.id))) ? overdueReminders : [
        ...overdueReminders !== null && overdueReminders !== void 0 ? overdueReminders : [],
        ...overdueReminder ? [
            {
                value: overdueReminder.id,
                label: overdueReminder.name
            }
        ] : []
    ];
    return /*#__PURE__*/ jsxRuntime.jsx(ReminderSelectLayout, {
        reminder: overdueReminder,
        isReminderLoading: isOverdueReminderLoading,
        updateDisabled: disabled || !isUpdateOverdueReminderAllowed || !overdueReminder,
        onUpdate: onUpdateOverdueReminder,
        children: /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, {
            control: control,
            name: "overdue_reminder_id",
            label: i18n._({
                id: "Wg71Rb"
            }),
            options: [
                {
                    value: 'create',
                    label: i18n._({
                        id: "FJjriG"
                    })
                },
                ...overdueReminderOptions
            ],
            optionKey: "value",
            labelKey: "label",
            noOptionsText: i18n._({
                id: "WFwJas"
            }),
            disabled: disabled,
            getOptionDisabled: (option)=>option.value === 'create' ? Boolean(!isCreateOverdueReminderAllowed) : false,
            getOptionLabel: (option)=>{
                if (typeof option === 'string') return option;
                if (!option.value) return '';
                if (option.value === 'create') return i18n._({
                    id: "FJjriG"
                });
                return option.label || '—';
            },
            renderOption: (props, option)=>/*#__PURE__*/ react$3.createElement(material.MenuItem, _object_spread_props$I(_object_spread$Z({}, props), {
                    key: option.value,
                    value: option.value,
                    onClick: (event)=>{
                        if (option.value === 'create') {
                            event.stopPropagation();
                            handleCreate('overdue');
                        } else {
                            var _props_onClick;
                            props === null || props === void 0 ? void 0 : (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
                        }
                    },
                    disabled: !isCreateOverdueReminderAllowed,
                    sx: option.value === 'create' ? {
                        display: 'flex',
                        justifyContent: 'flex-start',
                        alignItems: 'center',
                        color: 'primary.main',
                        whiteSpace: 'unset',
                        paddingLeft: '0'
                    } : {
                        whiteSpace: 'unset',
                        paddingLeft: '0'
                    },
                    children: [
                        option.value === 'create' && /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {
                            sx: {
                                marginRight: 1
                            }
                        }),
                        option.label
                    ]
                }))
        })
    });
};

function _define_property$Y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$Y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$Y(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$H(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$H(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$H(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ReminderBeforeDueDate = ({ handleCreate, onUpdatePaymentReminder, disabled })=>{
    const { data: paymentReminders } = useGetPaymentReminders();
    const { i18n } = react.useLingui();
    const { data: isUpdatePaymentReminderAllowed } = useIsActionAllowed({
        method: 'payment_reminder',
        action: 'update'
    });
    const { data: isCreatePaymentReminderAllowed } = useIsActionAllowed({
        method: 'payment_reminder',
        action: 'create'
    });
    const { control, watch } = reactHookForm.useFormContext();
    const paymentReminderId = watch('payment_reminder_id');
    const { data: paymentReminder, isLoading: isPaymentReminderLoading } = useGetPaymentReminderById(paymentReminderId);
    const paymentReminderOptions = (paymentReminders === null || paymentReminders === void 0 ? void 0 : paymentReminders.some(({ value })=>value === (paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.id))) ? paymentReminders : [
        ...paymentReminders !== null && paymentReminders !== void 0 ? paymentReminders : [],
        ...paymentReminder ? [
            {
                value: paymentReminder.id,
                label: paymentReminder.name
            }
        ] : []
    ];
    return /*#__PURE__*/ jsxRuntime.jsx(ReminderSelectLayout, {
        reminder: paymentReminder,
        isReminderLoading: isPaymentReminderLoading,
        updateDisabled: disabled || !isUpdatePaymentReminderAllowed || !paymentReminder,
        onUpdate: onUpdatePaymentReminder,
        children: /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, {
            control: control,
            name: "payment_reminder_id",
            label: i18n._({
                id: "k+E5eD"
            }),
            options: [
                {
                    value: 'create',
                    label: i18n._({
                        id: "FJjriG"
                    })
                },
                ...paymentReminderOptions
            ],
            optionKey: "value",
            labelKey: "label",
            noOptionsText: i18n._({
                id: "UQitBZ"
            }),
            disabled: disabled,
            getOptionDisabled: (option)=>option.value === 'create' ? Boolean(!isCreatePaymentReminderAllowed) : false,
            getOptionLabel: (option)=>{
                if (typeof option === 'string') return option;
                if (!option.value) return '';
                if (option.value === 'create') return i18n._({
                    id: "FJjriG"
                });
                return option.label || '—';
            },
            renderOption: (props, option)=>/*#__PURE__*/ react$3.createElement(material.MenuItem, _object_spread_props$H(_object_spread$Y({}, props), {
                    key: option.value,
                    value: option.value,
                    onClick: (event)=>{
                        if (option.value === 'create') {
                            event.stopPropagation();
                            handleCreate('payment');
                        } else {
                            var _props_onClick;
                            props === null || props === void 0 ? void 0 : (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, event);
                        }
                    },
                    disabled: !isCreatePaymentReminderAllowed,
                    sx: option.value === 'create' ? {
                        display: 'flex',
                        justifyContent: 'flex-start',
                        alignItems: 'center',
                        color: 'primary.main',
                        whiteSpace: 'unset',
                        paddingLeft: '0'
                    } : {
                        whiteSpace: 'unset',
                        paddingLeft: '0'
                    },
                    children: [
                        option.value === 'create' && /*#__PURE__*/ jsxRuntime.jsx(AddIcon__default.default, {
                            sx: {
                                marginRight: 1
                            }
                        }),
                        option.label
                    ]
                }))
        })
    });
};

const ReminderSectionContent = ({ disabled, onUpdateOverdueReminder, onUpdatePaymentReminder, onCreateReminder, handleEditCounterpartModal, handleEditProfileState })=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { watch } = reactHookForm.useFormContext();
    const counterpartId = watch('counterpart_id');
    const { data: counterpart, isLoading: isCounterpartLoading } = useCounterpartById(counterpartId);
    const { data: hasCounterpartDefaultContactEmail, isLoading: isCounterpartDefaultContactEmailLoading } = api.counterparts.getCounterpartsIdContacts.useQuery({
        path: {
            counterpart_id: counterpartId !== null && counterpartId !== void 0 ? counterpartId : ''
        }
    }, {
        enabled: Boolean((counterpart === null || counterpart === void 0 ? void 0 : counterpart.type) === 'organization'),
        select: (data)=>{
            var _data_data_find;
            return Boolean((_data_data_find = data.data.find((contact)=>contact.is_default)) === null || _data_data_find === void 0 ? void 0 : _data_data_find.email);
        }
    });
    const hasValidReminderEmail = counterpart && 'individual' in counterpart ? Boolean(counterpart.individual.email) : hasCounterpartDefaultContactEmail;
    const hasValidReminderEmailLoading = isCounterpartLoading || isCounterpartDefaultContactEmailLoading;
    const shouldShowAlert = !hasValidReminderEmailLoading && Boolean(counterpartId) && (!hasValidReminderEmail || !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.reminders_enabled));
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            shouldShowAlert && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "warning",
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:items-start mtw:gap-2",
                    children: [
                        !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.reminders_enabled) && hasValidReminderEmail && /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: i18n._({
                                id: "W0PZsI"
                            })
                        }),
                        !hasValidReminderEmail && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.reminders_enabled) && /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: i18n._({
                                id: "anX8zB"
                            })
                        }),
                        !hasValidReminderEmail && !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.reminders_enabled) && /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: i18n._({
                                id: "NirHWT"
                            })
                        }),
                        handleEditCounterpartModal && /*#__PURE__*/ jsxRuntime.jsx("button", {
                            className: "mtw:underline mtw:p-0 mtw:border-none mtw:outline-none mtw:hover:cursor-pointer mtw:transition-all mtw:hover:opacity-80",
                            type: "button",
                            onClick: ()=>{
                                if (handleEditProfileState) {
                                    handleEditProfileState(true);
                                }
                                handleEditCounterpartModal(true);
                            },
                            children: i18n._({
                                id: "gkD8Wx"
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:gap-6 mtw:space-between mtw:w-full",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(ReminderBeforeDueDate, {
                        handleCreate: onCreateReminder,
                        onUpdatePaymentReminder: onUpdatePaymentReminder,
                        disabled: disabled || isCounterpartLoading
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(ReminderOverdue, {
                        handleCreate: onCreateReminder,
                        onUpdateOverdueReminder: onUpdateOverdueReminder,
                        disabled: disabled || isCounterpartLoading
                    })
                ]
            })
        ]
    });
};

function _define_property$X(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$X(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$X(target, key, source[key]);
        });
    }
    return target;
}
const RemindersSection = (props)=>{
    const { i18n } = react.useLingui();
    const { watch, setValue } = reactHookForm.useFormContext();
    const dueDateId = watch('payment_reminder_id');
    const overdueId = watch('overdue_reminder_id');
    const [showReminders, setShowReminders] = React.useState(Boolean(dueDateId || overdueId));
    return /*#__PURE__*/ jsxRuntime.jsxs("section", {
        className: "mtw:flex mtw:flex-col mtw:gap-6 mtw:pb-10",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h3", {
                        className: "mtw:text-base mtw:font-medium ",
                        children: i18n._({
                            id: "B7zEcF"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                        checked: showReminders,
                        onChange: (e)=>{
                            if (!e.target.checked) {
                                setValue('payment_reminder_id', '');
                                setValue('overdue_reminder_id', '');
                            }
                            setShowReminders(e.target.checked);
                        },
                        color: "primary",
                        "aria-label": i18n._({
                            id: "B7zEcF"
                        })
                    })
                ]
            }),
            showReminders && /*#__PURE__*/ jsxRuntime.jsx(ReminderSectionContent, _object_spread$X({}, props))
        ]
    });
};

/**
 * @internal
 */ const DiscardChangesContext = /*#__PURE__*/ React.createContext(null);
function useDiscardChangesContext() {
    const discardChangesContext = React.useContext(DiscardChangesContext);
    if (!discardChangesContext) {
        throw new Error('Could not find DiscardChangesContext. Make sure that you are using "DiscardChangesContext" component before calling this hook.');
    }
    return discardChangesContext;
}
const DiscardChangesContextProvider = ({ children })=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(DiscardChangesContextProviderBase, {
            children: children
        })
    });
const DiscardChangesContextProviderBase = ({ children })=>{
    const [shouldShowChangesModal, setShouldShowChangesModal] = React.useState(false);
    const handleShowModal = React.useCallback((state)=>{
        setShouldShowChangesModal(state);
    }, []);
    return /*#__PURE__*/ jsxRuntime.jsx(DiscardChangesContext.Provider, {
        value: {
            handleShowModal,
            shouldShowChangesModal
        },
        children: children
    });
};

const useUploadEntityLogo = ()=>{
    const { api, queryClient } = useMoniteContext();
    return api.entities.putEntitiesIdLogo.useMutation(undefined, {
        onSuccess: ()=>{
            api.entityUsers.getEntityUsersMyEntity.invalidateQueries(queryClient);
        }
    });
};

function asyncGeneratorStep$o(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$o(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$o(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$o(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const useDeleteEntityLogo = (entityId)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.entities.deleteEntitiesIdLogo.useMutation({
        path: {
            entity_id: entityId
        }
    }, {
        onSuccess: ()=>_async_to_generator$o(function*() {
                yield api.entityUsers.getEntityUsersMyEntity.invalidateQueries(queryClient);
                reactHotToast.toast.success(i18n._({
                    id: "T5E8os"
                }));
            })(),
        onError: ()=>{
            reactHotToast.toast.error(i18n._({
                id: "j10h7r"
            }));
        }
    });
};

const useGetEntitySettings = (entityId)=>{
    const { api } = useMoniteContext();
    return api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    }, {
        enabled: !!entityId
    });
};

const usePatchEntitySettings = (entityId)=>{
    const { api, queryClient } = useMoniteContext();
    const { i18n } = react.useLingui();
    return api.entities.patchEntitiesIdSettings.useMutation(undefined, {
        onSuccess: ()=>{
            reactHotToast.toast.success(i18n._({
                id: "HahySZ"
            }));
            api.entities.getEntitiesIdSettings.invalidateQueries({
                parameters: {
                    path: {
                        entity_id: entityId
                    }
                }
            }, queryClient);
            api.entities.getEntitiesIdSettingsNextDocumentNumbers.invalidateQueries({
                parameters: {
                    path: {
                        entity_id: entityId
                    }
                }
            }, queryClient);
        }
    });
};

const useGetEntityDocumentNumber = (entityId)=>{
    const { api } = useMoniteContext();
    return api.entities.getEntitiesIdSettingsNextDocumentNumbers.useQuery({
        path: {
            entity_id: entityId
        }
    }, {
        enabled: !!entityId
    });
};

const getDocumentLabel = (i18n, documentType)=>{
    switch(documentType){
        case 'invoice':
            return i18n._({
                id: "IuMGvq"
            });
        case 'credit_note':
            return i18n._({
                id: "jblpWK"
            });
        case 'quote':
            return i18n._({
                id: "ZhhOwV"
            });
        case 'delivery_note':
            return i18n._({
                id: "+XwRvl"
            });
        case 'purchase_order':
            return i18n._({
                id: "cShSqt"
            });
    }
};
const formatTemplateName = (i18n, templateName)=>{
    switch(templateName){
        case 'classic':
            return i18n._({
                id: "1gUYFw"
            });
        case 'default_monite':
            return i18n._({
                id: "v8/IVX"
            });
        case 'modern':
            return i18n._({
                id: "IU7sBy"
            });
        case 'simple':
            return i18n._({
                id: "AQK14J"
            });
        case 'stylish':
            return i18n._({
                id: "qR9Dcb"
            });
        case 'standard':
            return i18n._({
                id: "TJBHlP"
            });
        case 'unknown':
        default:
            return i18n._({
                id: "Ef7StM"
            });
    }
};

const UploadBar = ({ shouldStartProgress, isError, isSuccess })=>{
    const [progress, setProgress] = React.useState(0);
    React.useEffect(()=>{
        let intervalId;
        if (shouldStartProgress) {
            intervalId = setInterval(()=>{
                setProgress((prevState)=>{
                    if (prevState < 98) {
                        return prevState + 2;
                    }
                    if (prevState === 98) {
                        return prevState + 1;
                    }
                    return prevState;
                });
            }, 200);
        }
        return ()=>{
            clearInterval(intervalId);
        };
    }, [
        shouldStartProgress
    ]);
    if (isSuccess) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: "mtw:w-[262px] mtw:h-[6px] mtw:bg-success-50 mtw:rounded-md"
        });
    }
    if (isError) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: "mtw:w-[262px] mtw:h-[6px] mtw:bg-danger-90 mtw:rounded-md"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: "mtw:w-[262px] mtw:h-[6px] mtw:bg-neutral-90 mtw:rounded-md",
        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: "mtw:bg-primary-60 mtw:h-full mtw:rounded-md",
            style: {
                width: `${progress}%`
            }
        })
    });
};

const DragAndDropBox = ({ isUploading, isSuccess, isError, isDraggingOver, resetUpload, fileName })=>{
    const { i18n } = react.useLingui();
    const isUploadInProgress = isUploading || isSuccess || isError;
    function handleUploadIcon() {
        if (isError) {
            return /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.ErrorOutline, {
                sx: {
                    fontSize: 20
                },
                className: "mtw:text-danger-50"
            });
        }
        if (isSuccess) {
            return /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CheckCircleOutline, {
                sx: {
                    fontSize: 20
                },
                className: "mtw:text-success-50"
            });
        }
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
            size: 20
        });
    }
    React.useEffect(()=>{
        let timeoutId;
        if (isSuccess) {
            timeoutId = setTimeout(()=>resetUpload(), 2000);
        }
        return ()=>clearTimeout(timeoutId);
    }, [
        isSuccess,
        resetUpload
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: `${isUploadInProgress || isDraggingOver ? 'mtw:w-full' : 'mtw:w-60'} ${isDraggingOver ? 'mtw:border-solid mtw:border-primary-95' : 'mtw:border-dashed mtw:border-primary-80'} mtw:h-30 mtw:box-border mtw:transition-all mtw:flex mtw:flex-col mtw:items-center mtw:justify-center mtw:text-center mtw:gap-3 mtw:rounded-md mtw:border mtw:px-6`,
        children: isUploadInProgress ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:gap-4 mtw:px-6",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:gap-2 mtw:items-center",
                            children: [
                                handleUploadIcon(),
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: "mtw:w-[98%] mtw:text-sm mtw:leading-5 mtw:text-medium mtw:text-neutral-50 mtw:overflow-hidden mtw:text-ellipsis mtw:whitespace-nowrap",
                                    children: fileName
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:gap-2 mtw:items-center",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(UploadBar, {
                                    shouldStartProgress: isUploading,
                                    isError: isError,
                                    isSuccess: isSuccess
                                }),
                                isError && /*#__PURE__*/ jsxRuntime.jsx("button", {
                                    type: "button",
                                    disabled: isUploading,
                                    onClick: resetUpload,
                                    className: "mtw:border-none mtw:cursor-pointer",
                                    children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Close, {
                                        sx: {
                                            fontSize: 16
                                        }
                                    })
                                })
                            ]
                        })
                    ]
                }),
                isError && /*#__PURE__*/ jsxRuntime.jsx("p", {
                    className: "mtw:text-danger-50 mtw:font-medium mtw:text-sm mtw:leading-5",
                    children: i18n._({
                        id: "GYSXJw"
                    })
                })
            ]
        }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    padding: 0.5,
                    className: "mtw:bg-primary-90",
                    children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Image, {
                        className: "mtw:text-primary-60"
                    })
                }),
                isDraggingOver ? /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body2",
                    fontWeight: 500,
                    children: i18n._({
                        id: "FGEMuN"
                    })
                }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body2",
                    fontWeight: 500,
                    children: i18n._({
                        id: "2zrsQk"
                    })
                })
            ]
        })
    });
};

function asyncGeneratorStep$n(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$n(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$n(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$n(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const LogoSelection = ({ shouldApplyDialogStyles })=>{
    var _entity_logo;
    const { i18n } = react.useLingui();
    const { data: entity } = useMyEntity();
    var _entity_id;
    const entityId = (_entity_id = entity === null || entity === void 0 ? void 0 : entity.id) !== null && _entity_id !== void 0 ? _entity_id : '';
    const { FileInput, openFileInput, checkFileError, resetInput } = useFileInput();
    const [isDragging, setIsDragging] = React.useState(false);
    const [uploadingFileName, setUploadingFileName] = React.useState('');
    const { mutateAsync: uploadLogo, isSuccess: isUploadSuccess, isError: isUploadError, isPending: isUploading, reset: resetUpload } = useUploadEntityLogo();
    const { mutate: deleteLogo, isPending: isDeletingLogo } = useDeleteEntityLogo(entityId);
    function handleUploadLogo(file) {
        return _async_to_generator$n(function*() {
            if (file) {
                const error = checkFileError(file);
                if (error) {
                    reactHotToast.toast.error(error);
                    return;
                }
                setUploadingFileName(file === null || file === void 0 ? void 0 : file.name);
                yield uploadLogo({
                    body: {
                        file
                    },
                    path: {
                        entity_id: entityId
                    }
                });
            }
        })();
    }
    const isUploadInProgress = isUploading || isUploadError;
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: `${isDragging && 'mtw:bg-primary-95'} ${isDragging ? 'mtw:box-border!' : 'mtw:box-content!'} ${shouldApplyDialogStyles ? 'mtw:sm:flex-row mtw:h-30 mtw:md:flex-col mtw:md:h-auto mtw:lg:flex-row mtw:lg:h-30 mtw:lg:justify-between' : 'mtw:h-auto mtw:md:flex-row mtw:md:h-30 mtw:lg:flex-col mtw:lg:h-auto mtw:xl:flex-row mtw:xl:h-30 mtw:xl:justify-between'} mtw:flex mtw:flex-col mtw:gap-6 mtw:mb-8`,
        onDragEnter: (event)=>{
            event.preventDefault();
            setIsDragging(true);
        },
        onDragLeave: (event)=>{
            event.preventDefault();
            setIsDragging(false);
        },
        onDragOver: (event)=>event.preventDefault(),
        onDrop: (event)=>{
            var _event_dataTransfer, _event_dataTransfer_files, _event_dataTransfer1;
            event.preventDefault();
            setIsDragging(false);
            const file = ((_event_dataTransfer = event.dataTransfer) === null || _event_dataTransfer === void 0 ? void 0 : _event_dataTransfer.files) ? (_event_dataTransfer1 = event.dataTransfer) === null || _event_dataTransfer1 === void 0 ? void 0 : (_event_dataTransfer_files = _event_dataTransfer1.files) === null || _event_dataTransfer_files === void 0 ? void 0 : _event_dataTransfer_files[0] : null;
            handleUploadLogo(file);
        },
        children: [
            !isUploadInProgress && Boolean(!uploadingFileName) && !isDragging && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                display: "flex",
                flexDirection: "column",
                gap: 2.5,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h3",
                                sx: {
                                    fontSize: '18px',
                                    fontWeight: '600'
                                },
                                children: i18n._({
                                    id: "bhYVxz"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body2",
                                children: [
                                    i18n._({
                                        id: "NQ6aDA"
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                    i18n._({
                                        id: "7GXCYG"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:gap-2",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Button, {
                                variant: "outlined",
                                onClick: openFileInput,
                                sx: {
                                    width: 'fit-content',
                                    display: 'flex',
                                    gap: 0.5,
                                    alignItems: 'center',
                                    px: 1.5,
                                    fontSize: 14,
                                    fontWeight: 500,
                                    height: '32px'
                                },
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Upload, {
                                        sx: {
                                            fontSize: 16
                                        }
                                    }),
                                    i18n._({
                                        id: "J6WI1B"
                                    })
                                ]
                            }),
                            (entity === null || entity === void 0 ? void 0 : entity.logo) && /*#__PURE__*/ jsxRuntime.jsxs(material.Button, {
                                variant: "text",
                                color: "error",
                                disabled: isDeletingLogo,
                                onClick: ()=>deleteLogo(),
                                sx: {
                                    width: 'fit-content',
                                    display: 'flex',
                                    gap: 0.5,
                                    alignItems: 'center',
                                    px: 1.5,
                                    fontSize: 14,
                                    fontWeight: 500,
                                    height: '32px'
                                },
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.DeleteOutline, {
                                        sx: {
                                            fontSize: 16
                                        }
                                    }),
                                    i18n._({
                                        id: "t/YqKh"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            (entity === null || entity === void 0 ? void 0 : entity.logo) && Boolean(!uploadingFileName) ? /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: `mtw:flex mtw:w-60 mtw:h-30 mtw:box-border mtw:justify-end ${shouldApplyDialogStyles ? 'mtw:md:justify-start mtw:lg:justify-end' : 'mtw:lg:justify-start mtw:xl:justify-end'}`,
                children: /*#__PURE__*/ jsxRuntime.jsx("img", {
                    src: entity === null || entity === void 0 ? void 0 : (_entity_logo = entity.logo) === null || _entity_logo === void 0 ? void 0 : _entity_logo.url,
                    className: "mtw:w-auto mtw:max-w-full mtw:object-contain mtw:max-h-30",
                    alt: i18n._({
                        id: "/VqQlR"
                    })
                })
            }) : /*#__PURE__*/ jsxRuntime.jsx(DragAndDropBox, {
                isUploading: isUploading,
                isSuccess: isUploadSuccess,
                isError: isUploadError,
                isDraggingOver: isDragging,
                fileName: uploadingFileName,
                resetUpload: ()=>{
                    resetInput();
                    resetUpload();
                    setUploadingFileName('');
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FileInput, {
                onChange: (event)=>{
                    const file = event.target.files ? event.target.files[0] : null;
                    handleUploadLogo(file);
                }
            })
        ]
    });
};

const TemplateOption = ({ template, onSelect, isSelected })=>{
    var _template_preview;
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    if (!template) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "rectangular",
            sx: {
                width: '100px',
                height: '142px'
            }
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("button", {
        className: `mtw:relative mtw:cursor-pointer mtw:w-[100px] mtw:h-[142px] mtw:rounded-[4px] mtw:border ${isSelected ? 'mtw:border-primary-50' : 'mtw:border-[#DEDEDE]'}`,
        "data-testid": `documentTemplate-${template.name}`,
        type: "button",
        onClick: onSelect,
        children: [
            template.is_default && /*#__PURE__*/ jsxRuntime.jsx(material.Chip, {
                label: i18n._({
                    id: "ovBPCi"
                }),
                sx: {
                    background: theme.palette.background.paper,
                    color: theme.palette.text.primary,
                    fontSize: 14,
                    fontWeight: 500,
                    position: 'absolute',
                    top: 8,
                    right: 8,
                    borderRadius: '4px',
                    border: '1px solid #DEDEDE',
                    px: 1,
                    py: 0,
                    height: 24
                }
            }),
            /*#__PURE__*/ jsxRuntime.jsx("img", {
                src: template === null || template === void 0 ? void 0 : (_template_preview = template.preview) === null || _template_preview === void 0 ? void 0 : _template_preview.url,
                alt: i18n._({
                    id: "TSIucq",
                    values: {
                        0: (template === null || template === void 0 ? void 0 : template.name) || 'template'
                    }
                }),
                className: "mtw:w-full mtw:h-full mtw:rounded-[4px]"
            })
        ]
    });
};

const TemplatesSelection = ({ templates, selectTemplate, selectedTemplateId, isDefaultButtonDisabled, handleSetDefault })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        display: "flex",
        flexDirection: "column",
        gap: 3,
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h3",
                        sx: {
                            fontSize: '18px',
                            fontWeight: '600'
                        },
                        children: i18n._({
                            id: "L064fX"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        children: i18n._({
                            id: "vUnMMm"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                container: true,
                spacing: 1,
                children: templates.map((template)=>/*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                        item: true,
                        xs: "auto",
                        children: /*#__PURE__*/ jsxRuntime.jsx(TemplateOption, {
                            template: template,
                            onSelect: ()=>selectTemplate(template),
                            isSelected: template.id === selectedTemplateId
                        })
                    }, template.id))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                disabled: isDefaultButtonDisabled,
                variant: "contained",
                onClick: handleSetDefault,
                sx: {
                    width: 'fit-content',
                    minWidth: '128px',
                    py: 2,
                    fontSize: 14,
                    fontWeight: 500,
                    height: '32px'
                },
                children: i18n._({
                    id: "PPcets"
                })
            })
        ]
    });
};

const LayoutAndLogo = ({ shouldApplyDialogStyles })=>{
    var _componentSettings_templateSettings, _componentSettings_templateSettings1, _selectedTemplate_preview, _componentSettings_templateSettings2, _componentSettings_templateSettings3;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { invoiceTemplates, defaultInvoiceTemplate, isLoading, setDefaultTemplate } = useDocumentTemplatesApi();
    const [selectedTemplate, setSelectedTemplate] = React.useState();
    React.useEffect(()=>{
        setSelectedTemplate(defaultInvoiceTemplate);
    }, [
        defaultInvoiceTemplate
    ]);
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {});
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: `mtw:flex mtw:flex-col mtw:gap-10 mtw:xl:gap-20 ${shouldApplyDialogStyles ? 'mtw:md:flex-row' : 'mtw:lg:flex-row'}`,
        children: [
            (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.showTemplateSection) && (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : _componentSettings_templateSettings1.showTemplatePreview) && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:w-[400px] mtw:h-auto mtw:min-w-[400px]",
                children: selectedTemplate && /*#__PURE__*/ jsxRuntime.jsx("img", {
                    src: selectedTemplate === null || selectedTemplate === void 0 ? void 0 : (_selectedTemplate_preview = selectedTemplate.preview) === null || _selectedTemplate_preview === void 0 ? void 0 : _selectedTemplate_preview.url,
                    alt: i18n._({
                        id: "TSIucq",
                        values: {
                            0: selectedTemplate.name || 'template'
                        }
                    }),
                    className: "mtw:w-[400px] mtw:h-[566px] mtw:border mtw:border-gray-200 mtw:shadow-[0_3px_13px_rgba(17,17,17,0.16)]"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-10",
                children: [
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings2 = componentSettings.templateSettings) === null || _componentSettings_templateSettings2 === void 0 ? void 0 : _componentSettings_templateSettings2.showTemplateSection) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(TemplatesSelection, {
                                templates: invoiceTemplates,
                                selectTemplate: (template)=>setSelectedTemplate(template),
                                selectedTemplateId: selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.id,
                                isDefaultButtonDisabled: (defaultInvoiceTemplate === null || defaultInvoiceTemplate === void 0 ? void 0 : defaultInvoiceTemplate.id) === (selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.id),
                                handleSetDefault: ()=>{
                                    var _selectedTemplate_name;
                                    const formattedName = formatTemplateName(i18n, (_selectedTemplate_name = selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.name) !== null && _selectedTemplate_name !== void 0 ? _selectedTemplate_name : 'unknown');
                                    selectedTemplate && setDefaultTemplate(selectedTemplate.id, formattedName);
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {})
                        ]
                    }),
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings3 = componentSettings.templateSettings) === null || _componentSettings_templateSettings3 === void 0 ? void 0 : _componentSettings_templateSettings3.showLogoSection) && /*#__PURE__*/ jsxRuntime.jsx(LogoSelection, {
                        shouldApplyDialogStyles: shouldApplyDialogStyles
                    })
                ]
            })
        ]
    });
};

const getDocumentNumberFormSchema = (i18n, nextNumbers)=>{
    return zod.z.object({
        min_digits: zod.z.coerce.number().int().min(1, i18n._({
            id: "O9zUj0"
        })).max(20, i18n._({
            id: "Ne/z8V"
        })),
        credit_note: zod.z.string().min(1),
        credit_note_number: zod.z.coerce.number().int().min(nextNumbers.credit_note, i18n._({
            id: "cGorJI",
            values: {
                0: nextNumbers.credit_note
            }
        })),
        delivery_note: zod.z.string().min(1),
        delivery_note_number: zod.z.coerce.number().int().min(nextNumbers.delivery_note, i18n._({
            id: "cGorJI",
            values: {
                0: nextNumbers.delivery_note
            }
        })),
        quote: zod.z.string().min(1),
        quote_number: zod.z.coerce.number().int().min(nextNumbers.quote, i18n._({
            id: "cGorJI",
            values: {
                0: nextNumbers.quote
            }
        })),
        invoice: zod.z.string().min(1),
        invoice_number: zod.z.coerce.number().int().min(nextNumbers.invoice, i18n._({
            id: "cGorJI",
            values: {
                0: nextNumbers.invoice
            }
        })),
        purchase_order: zod.z.string().min(1),
        purchase_order_number: zod.z.coerce.number().int().min(nextNumbers.purchase_order, i18n._({
            id: "cGorJI",
            values: {
                0: nextNumbers.purchase_order
            }
        })),
        include_date: zod.z.boolean(),
        prefix: zod.z.string(),
        separator: zod.z.enum([
            '/',
            '-',
            '|',
            '.',
            ''
        ])
    });
};

function _define_property$W(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$W(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$W(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$G(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$G(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$G(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const CommonSettingsBlock = ({ control })=>{
    const { i18n } = react.useLingui();
    const { setValue } = reactHookForm.useFormContext();
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-4",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:gap-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "min_digits",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$G(_object_spread$W({}, field), {
                                id: field.name,
                                label: i18n._({
                                    id: "y04aXn"
                                }),
                                onChange: (e)=>{
                                    if (+e.target.value > 20) {
                                        setValue('min_digits', 20, {
                                            shouldDirty: true
                                        });
                                    } else {
                                        field.onChange(e);
                                    }
                                },
                                type: "number",
                                variant: "outlined",
                                fullWidth: true,
                                error: Boolean(error),
                                helperText: error === null || error === void 0 ? void 0 : error.message
                            }))
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "separator",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                                variant: "standard",
                                fullWidth: true,
                                error: Boolean(error),
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.InputLabel, {
                                        htmlFor: field.name,
                                        children: i18n._({
                                            id: "rXVzgP"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Select, _object_spread_props$G(_object_spread$W({}, field), {
                                        id: field.name,
                                        labelId: field.name,
                                        label: i18n._({
                                            id: "rXVzgP"
                                        }),
                                        MenuProps: {
                                            container: root
                                        },
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                value: "-",
                                                children: i18n._({
                                                    id: "eKC+EC"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                value: "|",
                                                children: i18n._({
                                                    id: "2lJ2E3"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                value: ".",
                                                children: i18n._({
                                                    id: "iB+XuA"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                value: "/",
                                                children: i18n._({
                                                    id: "UHDGIH"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                                value: "",
                                                children: i18n._({
                                                    id: "NHJM/H"
                                                })
                                            })
                                        ]
                                    }))
                                ]
                            })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "prefix",
                        control: control,
                        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$G(_object_spread$W({}, field), {
                                id: field.name,
                                label: i18n._({
                                    id: "DaUOge"
                                }),
                                variant: "outlined",
                                fullWidth: true,
                                inputProps: {
                                    maxLength: 15
                                },
                                error: Boolean(error),
                                helperText: error === null || error === void 0 ? void 0 : error.message
                            }))
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:bg-neutral-95 mtw:w-full mtw:px-4 mtw:py-1 mtw:rounded-md",
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: "include_date",
                    control: control,
                    render: ({ field })=>{
                        var _field_value;
                        return /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                            sx: {
                                mx: 0,
                                alignItems: 'center !important',
                                '& .MuiFormControlLabel-label': {
                                    padding: '0 !important'
                                }
                            },
                            control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, _object_spread_props$G(_object_spread$W({}, field), {
                                checked: (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : false,
                                size: "small"
                            })),
                            label: i18n._({
                                id: "Vam7wJ"
                            })
                        });
                    }
                })
            })
        ]
    });
};

function _define_property$V(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$V(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$V(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$F(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$F(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$F(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DocumentRow = ({ control, fieldName, isOnlyOneAvailable })=>{
    const { i18n } = react.useLingui();
    const { watch } = reactHookForm.useFormContext();
    const minDigits = watch('min_digits');
    const customPrefix = watch('prefix');
    const separator = watch('separator');
    const includeDate = watch('include_date');
    const currentFieldPrefix = watch(fieldName);
    const nextOrderNumber = watch(`${fieldName}_number`);
    function generatePreviewText() {
        return `${currentFieldPrefix}${separator}${customPrefix ? `${customPrefix}${separator}` : ''}${includeDate ? `${new Date().getFullYear()}${separator}` : ''}${nextOrderNumber.toString().padStart(minDigits, '0')}`;
    }
    const previewText = generatePreviewText();
    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
        className: "mtw:flex mtw:items-center mtw:gap-2",
        children: [
            !isOnlyOneAvailable && /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:w-44 mtw:min-w-44 mtw:text-base mtw:font-normal mtw:leading-5 mtw:text-neutral-10",
                children: getDocumentLabel(i18n, fieldName)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                name: fieldName,
                control: control,
                render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$F(_object_spread$V({}, field), {
                        id: field.name,
                        size: "small",
                        variant: "outlined",
                        fullWidth: true,
                        error: Boolean(error),
                        sx: {
                            width: '6.5rem',
                            minWidth: '6.5rem',
                            height: '2rem',
                            '& .MuiInputBase-root': {
                                height: '2rem',
                                minHeight: '2rem',
                                backgroundColor: 'white',
                                borderRadius: '0.5rem'
                            },
                            '& .MuiInputBase-input': {
                                height: '2rem',
                                minHeight: '2rem'
                            }
                        }
                    }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                name: `${fieldName}_number`,
                control: control,
                render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$F(_object_spread$V({}, field), {
                        id: field.name,
                        size: "small",
                        variant: "outlined",
                        fullWidth: true,
                        type: "number",
                        onChange: (event)=>{
                            // This RegEx is for removing the zeros that are added with padStart
                            // before storing the input value so we don't store something like 001 but 1 instead
                            // For example, if min digits is 3, the next number should be 001
                            // Now, when we type in this input, the stored value is actually 1 and not 001
                            const filteredValue = event.target.value.replace(/^0+(?=\d)/, '');
                            field.onChange(Number(filteredValue));
                        },
                        value: field.value.toString().padStart(minDigits, '0'),
                        error: Boolean(error),
                        sx: {
                            width: '8rem',
                            minWidth: '8rem',
                            height: '2rem',
                            '& .MuiInputBase-root': {
                                height: '2rem',
                                minHeight: '2rem',
                                backgroundColor: 'white',
                                borderRadius: '0.5rem'
                            },
                            '& .MuiInputBase-input': {
                                height: '2rem',
                                minHeight: '2rem'
                            }
                        }
                    }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:text-base mtw:font-semibold mtw:text-neutral-10",
                children: previewText
            })
        ]
    });
};

const PREFIX_FIELDS = [
    'invoice',
    'credit_note',
    'delivery_note',
    'purchase_order',
    'quote'
];
const ORDER_NUMBER_FIELDS = [
    'invoice_number',
    'credit_note_number',
    'delivery_note_number',
    'purchase_order_number',
    'quote_number'
];
const PerDocumentBlock = ({ control })=>{
    var _componentSettings_templateSettings, _componentSettings_templateSettings1;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { formState } = reactHookForm.useFormContext();
    const errorKeys = Object.keys(formState.errors);
    var _componentSettings_templateSettings_availableARDocuments, _componentSettings_templateSettings_availableAPDocuments;
    const availableTypes = [
        ...new Set([
            ...(_componentSettings_templateSettings_availableARDocuments = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.availableARDocuments) !== null && _componentSettings_templateSettings_availableARDocuments !== void 0 ? _componentSettings_templateSettings_availableARDocuments : [],
            ...(_componentSettings_templateSettings_availableAPDocuments = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : _componentSettings_templateSettings1.availableAPDocuments) !== null && _componentSettings_templateSettings_availableAPDocuments !== void 0 ? _componentSettings_templateSettings_availableAPDocuments : []
        ])
    ];
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-4",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-1",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h2", {
                        className: "mtw:text-lg mtw:font-semibold mtw:text-neutral-30",
                        children: i18n._({
                            id: "HAVs6k"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50",
                        children: i18n._({
                            id: "LamdvU"
                        })
                    })
                ]
            }),
            !!errorKeys.length && errorKeys.some((key)=>PREFIX_FIELDS.includes(key)) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                icon: /*#__PURE__*/ jsxRuntime.jsx(WarningAmberRoundedIcon__default.default, {}),
                variant: "filled",
                severity: "error",
                sx: {
                    '& .MuiAlert-message': {
                        padding: 0,
                        alignContent: 'center'
                    }
                },
                children: i18n._({
                    id: "Son+lM"
                })
            }),
            !!errorKeys.length && errorKeys.some((key)=>ORDER_NUMBER_FIELDS.includes(key)) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                icon: /*#__PURE__*/ jsxRuntime.jsx(WarningAmberRoundedIcon__default.default, {}),
                variant: "filled",
                severity: "error",
                sx: {
                    '& .MuiAlert-message': {
                        padding: 0,
                        alignContent: 'center'
                    }
                },
                children: i18n._({
                    id: "jBMG/v"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("ul", {
                className: "mtw:flex mtw:flex-col mtw:gap-2 mtw:list-none",
                children: availableTypes.map((availableType)=>/*#__PURE__*/ jsxRuntime.jsx(DocumentRow, {
                        control: control,
                        fieldName: availableType,
                        isOnlyOneAvailable: (availableTypes === null || availableTypes === void 0 ? void 0 : availableTypes.length) === 1
                    }, availableType))
            })
        ]
    });
};

function _define_property$U(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$U(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$U(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$E(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$E(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$E(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DocumentNumberForm = ({ entityId, entitySettings, nextNumbers })=>{
    var _entitySettings_document_ids_document_type_prefix, _entitySettings_document_ids, _entitySettings_document_ids_document_type_prefix1, _entitySettings_document_ids1, _entitySettings_document_ids_document_type_prefix2, _entitySettings_document_ids2, _entitySettings_document_ids_document_type_prefix3, _entitySettings_document_ids3, _entitySettings_document_ids_document_type_prefix4, _entitySettings_document_ids4, _entitySettings_document_ids5, _entitySettings_document_ids6, _entitySettings_document_ids7, _entitySettings_document_ids8;
    const { i18n } = react.useLingui();
    const { handleShowModal } = useDiscardChangesContext();
    const { mutate: updateSettings, isPending: isUpdating } = usePatchEntitySettings(entityId);
    var _entitySettings_document_ids_document_type_prefix_credit_note, _nextNumbers_credit_note, _entitySettings_document_ids_document_type_prefix_delivery_note, _nextNumbers_delivery_note, _entitySettings_document_ids_document_type_prefix_invoice, _nextNumbers_invoice, _entitySettings_document_ids_document_type_prefix_purchase_order, _nextNumbers_purchase_order, _entitySettings_document_ids_document_type_prefix_quote, _nextNumbers_quote, _entitySettings_document_ids_include_date, _entitySettings_document_ids_min_digits, _entitySettings_document_ids_prefix, _entitySettings_document_ids_separator;
    const methods = reactHookForm.useForm({
        resolver: safeZodResolver(getDocumentNumberFormSchema(i18n, nextNumbers)),
        defaultValues: {
            credit_note: (_entitySettings_document_ids_document_type_prefix_credit_note = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids = entitySettings.document_ids) === null || _entitySettings_document_ids === void 0 ? void 0 : (_entitySettings_document_ids_document_type_prefix = _entitySettings_document_ids.document_type_prefix) === null || _entitySettings_document_ids_document_type_prefix === void 0 ? void 0 : _entitySettings_document_ids_document_type_prefix.credit_note) !== null && _entitySettings_document_ids_document_type_prefix_credit_note !== void 0 ? _entitySettings_document_ids_document_type_prefix_credit_note : 'CN',
            credit_note_number: (_nextNumbers_credit_note = nextNumbers === null || nextNumbers === void 0 ? void 0 : nextNumbers.credit_note) !== null && _nextNumbers_credit_note !== void 0 ? _nextNumbers_credit_note : 1,
            delivery_note: (_entitySettings_document_ids_document_type_prefix_delivery_note = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids1 = entitySettings.document_ids) === null || _entitySettings_document_ids1 === void 0 ? void 0 : (_entitySettings_document_ids_document_type_prefix1 = _entitySettings_document_ids1.document_type_prefix) === null || _entitySettings_document_ids_document_type_prefix1 === void 0 ? void 0 : _entitySettings_document_ids_document_type_prefix1.delivery_note) !== null && _entitySettings_document_ids_document_type_prefix_delivery_note !== void 0 ? _entitySettings_document_ids_document_type_prefix_delivery_note : 'DN',
            delivery_note_number: (_nextNumbers_delivery_note = nextNumbers === null || nextNumbers === void 0 ? void 0 : nextNumbers.delivery_note) !== null && _nextNumbers_delivery_note !== void 0 ? _nextNumbers_delivery_note : 1,
            invoice: (_entitySettings_document_ids_document_type_prefix_invoice = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids2 = entitySettings.document_ids) === null || _entitySettings_document_ids2 === void 0 ? void 0 : (_entitySettings_document_ids_document_type_prefix2 = _entitySettings_document_ids2.document_type_prefix) === null || _entitySettings_document_ids_document_type_prefix2 === void 0 ? void 0 : _entitySettings_document_ids_document_type_prefix2.invoice) !== null && _entitySettings_document_ids_document_type_prefix_invoice !== void 0 ? _entitySettings_document_ids_document_type_prefix_invoice : 'INV',
            invoice_number: (_nextNumbers_invoice = nextNumbers === null || nextNumbers === void 0 ? void 0 : nextNumbers.invoice) !== null && _nextNumbers_invoice !== void 0 ? _nextNumbers_invoice : 1,
            purchase_order: (_entitySettings_document_ids_document_type_prefix_purchase_order = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids3 = entitySettings.document_ids) === null || _entitySettings_document_ids3 === void 0 ? void 0 : (_entitySettings_document_ids_document_type_prefix3 = _entitySettings_document_ids3.document_type_prefix) === null || _entitySettings_document_ids_document_type_prefix3 === void 0 ? void 0 : _entitySettings_document_ids_document_type_prefix3.purchase_order) !== null && _entitySettings_document_ids_document_type_prefix_purchase_order !== void 0 ? _entitySettings_document_ids_document_type_prefix_purchase_order : 'PO',
            purchase_order_number: (_nextNumbers_purchase_order = nextNumbers === null || nextNumbers === void 0 ? void 0 : nextNumbers.purchase_order) !== null && _nextNumbers_purchase_order !== void 0 ? _nextNumbers_purchase_order : 1,
            quote: (_entitySettings_document_ids_document_type_prefix_quote = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids4 = entitySettings.document_ids) === null || _entitySettings_document_ids4 === void 0 ? void 0 : (_entitySettings_document_ids_document_type_prefix4 = _entitySettings_document_ids4.document_type_prefix) === null || _entitySettings_document_ids_document_type_prefix4 === void 0 ? void 0 : _entitySettings_document_ids_document_type_prefix4.quote) !== null && _entitySettings_document_ids_document_type_prefix_quote !== void 0 ? _entitySettings_document_ids_document_type_prefix_quote : 'Q',
            quote_number: (_nextNumbers_quote = nextNumbers === null || nextNumbers === void 0 ? void 0 : nextNumbers.quote) !== null && _nextNumbers_quote !== void 0 ? _nextNumbers_quote : 1,
            include_date: (_entitySettings_document_ids_include_date = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids5 = entitySettings.document_ids) === null || _entitySettings_document_ids5 === void 0 ? void 0 : _entitySettings_document_ids5.include_date) !== null && _entitySettings_document_ids_include_date !== void 0 ? _entitySettings_document_ids_include_date : false,
            min_digits: (_entitySettings_document_ids_min_digits = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids6 = entitySettings.document_ids) === null || _entitySettings_document_ids6 === void 0 ? void 0 : _entitySettings_document_ids6.min_digits) !== null && _entitySettings_document_ids_min_digits !== void 0 ? _entitySettings_document_ids_min_digits : 5,
            prefix: (_entitySettings_document_ids_prefix = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids7 = entitySettings.document_ids) === null || _entitySettings_document_ids7 === void 0 ? void 0 : _entitySettings_document_ids7.prefix) !== null && _entitySettings_document_ids_prefix !== void 0 ? _entitySettings_document_ids_prefix : '',
            separator: (_entitySettings_document_ids_separator = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_ids8 = entitySettings.document_ids) === null || _entitySettings_document_ids8 === void 0 ? void 0 : _entitySettings_document_ids8.separator) !== null && _entitySettings_document_ids_separator !== void 0 ? _entitySettings_document_ids_separator : '-'
        }
    });
    const { control, handleSubmit, formState, reset } = methods;
    const handleUpdateSettings = (values)=>{
        updateSettings({
            path: {
                entity_id: entityId
            },
            body: _object_spread_props$E(_object_spread$U({}, entitySettings), {
                document_ids: {
                    document_type_prefix: {
                        invoice: values.invoice,
                        credit_note: values.credit_note,
                        delivery_note: values.delivery_note,
                        purchase_order: values.purchase_order,
                        quote: values.quote
                    },
                    next_number: {
                        invoice: values.invoice_number,
                        credit_note: values.credit_note_number,
                        delivery_note: values.delivery_note_number,
                        purchase_order: values.purchase_order_number,
                        quote: values.quote_number
                    },
                    min_digits: values.min_digits,
                    separator: values.separator,
                    include_date: values.include_date,
                    prefix: values.prefix || null
                }
            })
        }, {
            onSuccess: ()=>{
                reset(methods.getValues());
            }
        });
    };
    React.useEffect(()=>{
        handleShowModal(formState === null || formState === void 0 ? void 0 : formState.isDirty);
    }, [
        formState === null || formState === void 0 ? void 0 : formState.isDirty,
        handleShowModal
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$E(_object_spread$U({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsxs("form", {
            className: "mtw:flex mtw:flex-col mtw:max-w-[680px] mtw:gap-8",
            onSubmit: handleSubmit(handleUpdateSettings),
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(CommonSettingsBlock, {
                    control: control
                }),
                /*#__PURE__*/ jsxRuntime.jsx(PerDocumentBlock, {
                    control: control
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    variant: "contained",
                    type: "submit",
                    sx: {
                        width: 'fit-content',
                        height: 40
                    },
                    disabled: isUpdating || !(formState === null || formState === void 0 ? void 0 : formState.isDirty),
                    children: i18n._({
                        id: "y3aU20"
                    })
                })
            ]
        })
    }));
};

const DocumentNumber = ()=>{
    const { data: entity } = useMyEntity();
    var _entity_id;
    const entityId = (_entity_id = entity === null || entity === void 0 ? void 0 : entity.id) !== null && _entity_id !== void 0 ? _entity_id : '';
    const { data: entitySettings, isLoading: isLoadingSettings } = useGetEntitySettings(entityId);
    const { data: nextNumbers, isLoading: isLoadingNextNumbers } = useGetEntityDocumentNumber(entityId);
    if (isLoadingSettings || isLoadingNextNumbers) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {});
    }
    if (!entitySettings || !nextNumbers) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(DocumentNumberForm, {
        entityId: entityId,
        entitySettings: entitySettings,
        nextNumbers: nextNumbers
    });
};

function _define_property$T(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$T(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$T(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$D(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$D(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$D(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DisplayBankSection = ({ control, shouldShowBankOptionsByDefault })=>{
    var _componentSettings_templateSettings, _componentSettings_templateSettings_availableARDocuments, _componentSettings_templateSettings1, _componentSettings_templateSettings_availableARDocuments1, _componentSettings_templateSettings2, _componentSettings_templateSettings_availableARDocuments2, _componentSettings_templateSettings3;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { setValue, watch } = reactHookForm.useFormContext();
    const [isShowing, setIsShowing] = React.useState(shouldShowBankOptionsByDefault);
    const availableOptions = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.availableARDocuments;
    const availableOptionKey = `${availableOptions === null || availableOptions === void 0 ? void 0 : availableOptions[0]}_bank_display`;
    const availableOptionValue = watch(availableOptionKey);
    if ((availableOptions === null || availableOptions === void 0 ? void 0 : availableOptions.length) === 1) {
        return /*#__PURE__*/ jsxRuntime.jsxs("section", {
            className: "mtw:flex mtw:justify-between mtw:gap-4",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-1",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("h2", {
                            className: "mtw:text-base mtw:font-medium mtw:text-neutral-30",
                            children: i18n._({
                                id: "KKl+x9"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                            className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50",
                            children: i18n._({
                                id: "UZFKY7"
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                    onChange: (event)=>{
                        setValue(availableOptionKey, event.target.checked, {
                            shouldDirty: true
                        });
                    },
                    checked: Boolean(availableOptionValue),
                    color: "primary",
                    "aria-label": i18n._({
                        id: "u2qg7J"
                    })
                })
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("section", {
        className: "mtw:flex mtw:flex-col mtw:gap-6",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:justify-between mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-1",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                className: "mtw:text-base mtw:font-medium mtw:text-neutral-30",
                                children: i18n._({
                                    id: "KKl+x9"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("p", {
                                className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50",
                                children: i18n._({
                                    id: "UZFKY7"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                        checked: isShowing,
                        onChange: (event)=>{
                            if (!event.target.checked) {
                                setValue('credit_note_bank_display', false, {
                                    shouldDirty: true
                                });
                                setValue('invoice_bank_display', false, {
                                    shouldDirty: true
                                });
                                setValue('quote_bank_display', false, {
                                    shouldDirty: true
                                });
                            }
                            setIsShowing(!isShowing);
                        },
                        color: "primary",
                        "aria-label": i18n._({
                            id: "u2qg7J"
                        })
                    })
                ]
            }),
            isShowing && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col",
                children: [
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : (_componentSettings_templateSettings_availableARDocuments = _componentSettings_templateSettings1.availableARDocuments) === null || _componentSettings_templateSettings_availableARDocuments === void 0 ? void 0 : _componentSettings_templateSettings_availableARDocuments.includes('invoice')) && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "invoice_bank_display",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                sx: {
                                    mx: 0,
                                    alignItems: 'center !important',
                                    '& .MuiFormControlLabel-label': {
                                        padding: '0 !important'
                                    }
                                },
                                control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, _object_spread_props$D(_object_spread$T({}, field), {
                                    size: "small",
                                    checked: field.value
                                })),
                                label: i18n._({
                                    id: "IuMGvq"
                                })
                            })
                    }),
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings2 = componentSettings.templateSettings) === null || _componentSettings_templateSettings2 === void 0 ? void 0 : (_componentSettings_templateSettings_availableARDocuments1 = _componentSettings_templateSettings2.availableARDocuments) === null || _componentSettings_templateSettings_availableARDocuments1 === void 0 ? void 0 : _componentSettings_templateSettings_availableARDocuments1.includes('quote')) && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "quote_bank_display",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                sx: {
                                    mx: 0,
                                    alignItems: 'center !important',
                                    '& .MuiFormControlLabel-label': {
                                        padding: '0 !important'
                                    }
                                },
                                control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, _object_spread_props$D(_object_spread$T({}, field), {
                                    size: "small",
                                    checked: field.value
                                })),
                                label: i18n._({
                                    id: "ZhhOwV"
                                })
                            })
                    }),
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings3 = componentSettings.templateSettings) === null || _componentSettings_templateSettings3 === void 0 ? void 0 : (_componentSettings_templateSettings_availableARDocuments2 = _componentSettings_templateSettings3.availableARDocuments) === null || _componentSettings_templateSettings_availableARDocuments2 === void 0 ? void 0 : _componentSettings_templateSettings_availableARDocuments2.includes('credit_note')) && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "credit_note_bank_display",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                sx: {
                                    mx: 0,
                                    alignItems: 'center !important',
                                    '& .MuiFormControlLabel-label': {
                                        padding: '0 !important'
                                    }
                                },
                                control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, _object_spread_props$D(_object_spread$T({}, field), {
                                    size: "small",
                                    checked: field.value
                                })),
                                label: i18n._({
                                    id: "jblpWK"
                                })
                            })
                    })
                ]
            })
        ]
    });
};

function _define_property$S(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$S(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$S(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$C(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$C(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$C(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DisplaySignatureSection = ({ control })=>{
    const { i18n } = react.useLingui();
    const { watch, setValue } = reactHookForm.useFormContext();
    const isQuoteSignatureSelected = watch('quote_signature_display');
    return /*#__PURE__*/ jsxRuntime.jsxs("section", {
        className: "mtw:flex mtw:flex-col mtw:gap-6",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:justify-between mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-1",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                className: "mtw:text-base mtw:font-medium mtw:text-neutral-30",
                                children: i18n._({
                                    id: "Z+aWGY"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("p", {
                                className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50",
                                children: i18n._({
                                    id: "qasuya"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                        name: "quote_signature_display",
                        control: control,
                        render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.Switch, _object_spread_props$C(_object_spread$S({}, field), {
                                color: "primary",
                                onChange: (event)=>{
                                    if (!event.target.checked) {
                                        setValue('quote_electronic_signature', false);
                                    }
                                    field.onChange(event.target.checked);
                                },
                                checked: field.value,
                                "aria-label": i18n._({
                                    id: "bm/7ez"
                                })
                            }))
                    })
                ]
            }),
            isQuoteSignatureSelected && /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                name: "quote_electronic_signature",
                control: control,
                render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsxs(material.RadioGroup, _object_spread_props$C(_object_spread$S({}, field), {
                        sx: {
                            display: 'flex',
                            flexDirection: 'column',
                            gap: 1.5
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                sx: {
                                    mx: 0,
                                    alignItems: 'center !important',
                                    '& .MuiFormControlLabel-label': {
                                        padding: '0 !important'
                                    }
                                },
                                control: /*#__PURE__*/ jsxRuntime.jsx(material.Radio, {
                                    value: "false",
                                    size: "small"
                                }),
                                label: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                                            className: "mtw:font-medium mtw:text-neutral-10",
                                            children: i18n._({
                                                id: "fjBaWX"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                                            className: "mtw:text-neutral-50",
                                            children: i18n._({
                                                id: "lH1vAg"
                                            })
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                sx: {
                                    mx: 0,
                                    alignItems: 'center !important',
                                    '& .MuiFormControlLabel-label': {
                                        padding: '0 !important'
                                    }
                                },
                                control: /*#__PURE__*/ jsxRuntime.jsx(material.Radio, {
                                    value: "true",
                                    size: "small"
                                }),
                                label: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                                            className: "mtw:font-medium mtw:text-neutral-10",
                                            children: i18n._({
                                                id: "cyd90K"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                                            className: "mtw:text-neutral-50",
                                            children: i18n._({
                                                id: "DadFlr"
                                            })
                                        })
                                    ]
                                })
                            })
                        ]
                    }))
            })
        ]
    });
};

function _define_property$R(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$R(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$R(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$B(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$B(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$B(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const UpdatePaidInvoiceSection = ({ control })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx("section", {
        className: "mtw:flex mtw:flex-col mtw:gap-6",
        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
            className: "mtw:flex mtw:justify-between mtw:gap-4",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-1",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("h2", {
                            className: "mtw:text-base mtw:font-medium mtw:text-neutral-30",
                            children: i18n._({
                                id: "2RbU7q"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                            className: "mtw:text-sm mtw:font-normal mtw:text-neutral-50",
                            children: i18n._({
                                id: "jfMJTf"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                            className: "mtw:text-sm mtw:font-medium mtw:text-neutral-50",
                            children: i18n._({
                                id: "JodIk0"
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                    name: "update_paid_invoices",
                    control: control,
                    render: ({ field })=>/*#__PURE__*/ jsxRuntime.jsx(material.Switch, _object_spread_props$B(_object_spread$R({}, field), {
                            color: "primary",
                            "aria-label": i18n._({
                                id: "wZYUg8"
                            }),
                            checked: field.value
                        }))
                })
            ]
        })
    });
};

function _define_property$Q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$Q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$Q(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$A(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$A(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$A(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const hasBankDisplay = (value)=>!!value && typeof value === 'object' && 'display_entity_bank_account' in value;
const getBankDisplayValue = (documentRendering, fallback)=>{
    if (!hasBankDisplay(documentRendering)) {
        return fallback;
    }
    var _documentRendering_display_entity_bank_account;
    return Boolean((_documentRendering_display_entity_bank_account = documentRendering.display_entity_bank_account) !== null && _documentRendering_display_entity_bank_account !== void 0 ? _documentRendering_display_entity_bank_account : fallback);
};
const OtherSettingsForm = ({ entityId, entitySettings })=>{
    var _entitySettings_document_rendering, _entitySettings_document_rendering1, _entitySettings_document_rendering2, _entitySettings_document_rendering3, _entitySettings_document_rendering4, _entitySettings_document_rendering5, _entitySettings_document_rendering_quote, _entitySettings_document_rendering6, _componentSettings_templateSettings_availableARDocuments, _componentSettings_templateSettings;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { handleShowModal } = useDiscardChangesContext();
    const { mutate: updateSettings, isPending: isUpdating } = usePatchEntitySettings(entityId);
    var _entitySettings_document_rendering_display_entity_bank_account, _entitySettings_document_rendering_display_entity_bank_account1, _entitySettings_generate_paid_invoice_pdf, _entitySettings_document_rendering_quote_display_signature, _entitySettings_quote_signature_required;
    const methods = reactHookForm.useForm({
        defaultValues: {
            invoice_bank_display: getBankDisplayValue(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering = entitySettings.document_rendering) === null || _entitySettings_document_rendering === void 0 ? void 0 : _entitySettings_document_rendering.invoice, Boolean((_entitySettings_document_rendering_display_entity_bank_account = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering1 = entitySettings.document_rendering) === null || _entitySettings_document_rendering1 === void 0 ? void 0 : _entitySettings_document_rendering1.display_entity_bank_account) !== null && _entitySettings_document_rendering_display_entity_bank_account !== void 0 ? _entitySettings_document_rendering_display_entity_bank_account : false)),
            credit_note_bank_display: getBankDisplayValue(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering2 = entitySettings.document_rendering) === null || _entitySettings_document_rendering2 === void 0 ? void 0 : _entitySettings_document_rendering2.credit_note, Boolean((_entitySettings_document_rendering_display_entity_bank_account1 = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering3 = entitySettings.document_rendering) === null || _entitySettings_document_rendering3 === void 0 ? void 0 : _entitySettings_document_rendering3.display_entity_bank_account) !== null && _entitySettings_document_rendering_display_entity_bank_account1 !== void 0 ? _entitySettings_document_rendering_display_entity_bank_account1 : false)),
            quote_bank_display: getBankDisplayValue(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering4 = entitySettings.document_rendering) === null || _entitySettings_document_rendering4 === void 0 ? void 0 : _entitySettings_document_rendering4.quote, Boolean(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering5 = entitySettings.document_rendering) === null || _entitySettings_document_rendering5 === void 0 ? void 0 : _entitySettings_document_rendering5.display_entity_bank_account)),
            update_paid_invoices: (_entitySettings_generate_paid_invoice_pdf = entitySettings === null || entitySettings === void 0 ? void 0 : entitySettings.generate_paid_invoice_pdf) !== null && _entitySettings_generate_paid_invoice_pdf !== void 0 ? _entitySettings_generate_paid_invoice_pdf : false,
            quote_signature_display: (_entitySettings_document_rendering_quote_display_signature = entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering6 = entitySettings.document_rendering) === null || _entitySettings_document_rendering6 === void 0 ? void 0 : (_entitySettings_document_rendering_quote = _entitySettings_document_rendering6.quote) === null || _entitySettings_document_rendering_quote === void 0 ? void 0 : _entitySettings_document_rendering_quote.display_signature) !== null && _entitySettings_document_rendering_quote_display_signature !== void 0 ? _entitySettings_document_rendering_quote_display_signature : false,
            quote_electronic_signature: (_entitySettings_quote_signature_required = entitySettings === null || entitySettings === void 0 ? void 0 : entitySettings.quote_signature_required) !== null && _entitySettings_quote_signature_required !== void 0 ? _entitySettings_quote_signature_required : false
        }
    });
    const { control, handleSubmit, formState, watch, reset } = methods;
    const handleUpdateSettings = (values)=>{
        updateSettings({
            path: {
                entity_id: entityId
            },
            body: (()=>{
                var _entitySettings_document_rendering, _entitySettings_document_rendering1;
                const displayEntityBankAccount = Boolean(values.invoice_bank_display || values.credit_note_bank_display || values.quote_bank_display);
                const hadQuotePerDocFlag = hasBankDisplay(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering = entitySettings.document_rendering) === null || _entitySettings_document_rendering === void 0 ? void 0 : _entitySettings_document_rendering.quote);
                const displayLineItems = Boolean(entitySettings === null || entitySettings === void 0 ? void 0 : (_entitySettings_document_rendering1 = entitySettings.document_rendering) === null || _entitySettings_document_rendering1 === void 0 ? void 0 : _entitySettings_document_rendering1.display_line_items);
                const newDocumentRendering = {
                    display_entity_bank_account: displayEntityBankAccount,
                    display_line_items: displayLineItems,
                    quote: _object_spread$Q({
                        display_signature: values.quote_signature_display
                    }, hadQuotePerDocFlag ? {
                        display_entity_bank_account: values.quote_bank_display
                    } : {})
                };
                return _object_spread_props$A(_object_spread$Q({}, entitySettings), {
                    document_rendering: newDocumentRendering,
                    generate_paid_invoice_pdf: values.update_paid_invoices,
                    quote_signature_required: values.quote_electronic_signature === true || values.quote_electronic_signature === 'true'
                });
            })()
        }, {
            onSuccess: ()=>{
                reset(methods.getValues());
            }
        });
    };
    const displayInvoiceBank = watch('invoice_bank_display');
    const displayCreditNoteBank = watch('credit_note_bank_display');
    const displayQuoteBank = watch('quote_bank_display');
    const shouldShowBankOptionsByDefault = displayInvoiceBank || displayCreditNoteBank || displayQuoteBank;
    React.useEffect(()=>{
        handleShowModal(formState === null || formState === void 0 ? void 0 : formState.isDirty);
    }, [
        formState === null || formState === void 0 ? void 0 : formState.isDirty,
        handleShowModal
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$A(_object_spread$Q({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsxs("form", {
            className: "mtw:flex mtw:flex-col mtw:max-w-[680px] mtw:gap-6",
            onSubmit: handleSubmit(handleUpdateSettings),
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(DisplayBankSection, {
                    control: control,
                    shouldShowBankOptionsByDefault: shouldShowBankOptionsByDefault
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : (_componentSettings_templateSettings_availableARDocuments = _componentSettings_templateSettings.availableARDocuments) === null || _componentSettings_templateSettings_availableARDocuments === void 0 ? void 0 : _componentSettings_templateSettings_availableARDocuments.includes('quote')) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(DisplaySignatureSection, {
                            control: control
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {})
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(UpdatePaidInvoiceSection, {
                    control: control
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    variant: "contained",
                    type: "submit",
                    sx: {
                        width: 'fit-content',
                        height: 40
                    },
                    disabled: isUpdating || !(formState === null || formState === void 0 ? void 0 : formState.isDirty) || Boolean(Object.keys(formState.errors).length),
                    children: i18n._({
                        id: "y3aU20"
                    })
                })
            ]
        })
    }));
};

const OtherSettings = ()=>{
    const { data: entity } = useMyEntity();
    var _entity_id;
    const entityId = (_entity_id = entity === null || entity === void 0 ? void 0 : entity.id) !== null && _entity_id !== void 0 ? _entity_id : '';
    const { data: entitySettings, isLoading } = useGetEntitySettings(entityId);
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {});
    }
    if (!entitySettings) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(OtherSettingsForm, {
        entityId: entityId,
        entitySettings: entitySettings
    });
};

const DiscardChangesModal = ({ open, onClose, onContinue })=>{
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Dialog, {
        open: open,
        container: root,
        onClose: onClose,
        "aria-label": i18n._({
            id: "ICsA6P"
        }),
        maxWidth: "sm",
        fullWidth: true,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("header", {
                className: "mtw:px-8 mtw:pt-8 mtw:pb-6",
                children: /*#__PURE__*/ jsxRuntime.jsx("h2", {
                    className: "mtw:text-2xl mtw:font-semibold mtw:leading-8 mtw:text-neutral-10",
                    children: i18n._({
                        id: "ICsA6P"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                sx: {
                    py: 0
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:text-base mtw:font-normal mtw:leading-6",
                        children: i18n._({
                            id: "AKXNIb"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:text-base mtw:font-normal mtw:leading-6",
                        children: i18n._({
                            id: "5rEWHX"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                sx: {
                    px: 4
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "text",
                        onClick: onClose,
                        color: "primary",
                        autoFocus: true,
                        children: i18n._({
                            id: "dEgA5A"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        color: "error",
                        onClick: onContinue,
                        children: i18n._({
                            id: "zCexn+"
                        })
                    })
                ]
            })
        ]
    });
};

function _define_property$P(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$P(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$P(target, key, source[key]);
        });
    }
    return target;
}
const TemplateSettings = (props)=>/*#__PURE__*/ jsxRuntime.jsx(DiscardChangesContextProvider, {
        children: /*#__PURE__*/ jsxRuntime.jsx(TemplateSettingsBase, _object_spread$P({}, props))
    });
const TemplateSettingsBase = ({ isDialog, isOpen, handleCloseDialog })=>{
    var _componentSettings_templateSettings, _componentSettings_templateSettings1, _componentSettings_templateSettings2, _componentSettings_templateSettings3;
    const { componentSettings } = useMoniteContext();
    const { shouldShowChangesModal, handleShowModal } = useDiscardChangesContext();
    const { i18n } = react.useLingui();
    const [activeTabItem, setActiveTabItem] = React.useState('documentDesign');
    const [temporaryTabItem, setTemporaryTabItem] = React.useState(null);
    const [isDiscardChangesModalOpen, setIsDiscardChangesModalOpen] = React.useState(false);
    const handleClose = ()=>{
        if (shouldShowChangesModal) {
            setIsDiscardChangesModalOpen(true);
        } else {
            handleCloseDialog === null || handleCloseDialog === void 0 ? void 0 : handleCloseDialog();
        }
    };
    const content = /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: tailwindMerge.twMerge('mtw:flex mtw:flex-col mtw:w-full mtw:gap-10 mtw:pb-8', isDialog && 'mtw:max-w-[1080px] mtw:place-self-center'),
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Tabs, {
                value: activeTabItem,
                variant: "standard",
                "aria-label": i18n._({
                    id: "Fv9Vqi"
                }),
                onChange: (_, value)=>{
                    if (shouldShowChangesModal) {
                        setIsDiscardChangesModalOpen(true);
                        setTemporaryTabItem(value);
                    } else {
                        setActiveTabItem(value);
                    }
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Tab, {
                        id: "document-design-tab",
                        "aria-controls": "document-design-tabpanel",
                        label: i18n._({
                            id: "1MTDBK"
                        }),
                        value: "documentDesign"
                    }),
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings = componentSettings.templateSettings) === null || _componentSettings_templateSettings === void 0 ? void 0 : _componentSettings_templateSettings.enableDocumentNumberCustomisationTab) && /*#__PURE__*/ jsxRuntime.jsx(material.Tab, {
                        id: "document-number-tab",
                        "aria-controls": "document-number-tabpanel",
                        label: i18n._({
                            id: "999ffy"
                        }),
                        value: "documentNumber"
                    }),
                    (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings1 = componentSettings.templateSettings) === null || _componentSettings_templateSettings1 === void 0 ? void 0 : _componentSettings_templateSettings1.enableOtherSettingsCustomisationTab) && /*#__PURE__*/ jsxRuntime.jsx(material.Tab, {
                        id: "other-settings-tab",
                        "aria-controls": "other-settings-tabpanel",
                        label: i18n._({
                            id: "W5aZzz"
                        }),
                        value: "otherSettings"
                    })
                ]
            }),
            activeTabItem === 'documentDesign' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: "document-design-tabpanel",
                "aria-labelledby": "document-design-tab",
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(LayoutAndLogo, {
                    shouldApplyDialogStyles: isDialog
                })
            }),
            activeTabItem === 'documentNumber' && (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings2 = componentSettings.templateSettings) === null || _componentSettings_templateSettings2 === void 0 ? void 0 : _componentSettings_templateSettings2.enableDocumentNumberCustomisationTab) && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: "document-number-tabpanel",
                "aria-labelledby": "document-number-tab",
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(DocumentNumber, {})
            }),
            activeTabItem === 'otherSettings' && (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_templateSettings3 = componentSettings.templateSettings) === null || _componentSettings_templateSettings3 === void 0 ? void 0 : _componentSettings_templateSettings3.enableOtherSettingsCustomisationTab) && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: "other-settings-tabpanel",
                "aria-labelledby": "other-settings-tab",
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(OtherSettings, {})
            })
        ]
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            isDialog ? /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
                open: Boolean(isOpen),
                fullScreen: true,
                onClose: handleClose,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("header", {
                        className: "mtw:flex mtw:gap-6 mtw:items-center mtw:px-8 mtw:py-6",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                                edge: "start",
                                color: "inherit",
                                onClick: handleClose,
                                "aria-label": "close",
                                children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Close, {})
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                className: "mtw:text-2xl mtw:font-semibold mtw:leading-8 mtw:text-neutral-10",
                                children: i18n._({
                                    id: "UYSe5Y"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                        sx: {
                            px: 4,
                            py: 0
                        },
                        children: content
                    })
                ]
            }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                        className: "-Header",
                        title: /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                            children: i18n._({
                                id: "4+tgrm"
                            })
                        })
                    }),
                    content
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(DiscardChangesModal, {
                open: isDiscardChangesModalOpen,
                onClose: ()=>{
                    setIsDiscardChangesModalOpen(false);
                    if (temporaryTabItem) setTemporaryTabItem(null);
                },
                onContinue: ()=>{
                    setIsDiscardChangesModalOpen(false);
                    handleShowModal(false);
                    if (temporaryTabItem) {
                        setTemporaryTabItem(null);
                        setActiveTabItem(temporaryTabItem);
                    }
                    if (isDialog && handleCloseDialog && !temporaryTabItem) {
                        handleCloseDialog();
                    }
                }
            })
        ]
    });
};

function asyncGeneratorStep$m(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$m(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$m(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$m(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$O(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$O(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$O(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$z(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$z(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$z(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * A component for creating a new Receivable
 * Supported only `invoice` type
 */ const CreateReceivables = (props)=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: props.type === 'invoice' ? /*#__PURE__*/ jsxRuntime.jsx(CreateReceivablesBase, _object_spread$O({}, props)) : /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {
            description: i18n._({
                id: "riRxNt",
                values: {
                    0: 'invoice'
                }
            })
        })
    });
};
const CreateReceivablesBase = ({ type, customerTypes, onCreate })=>{
    var _componentSettings_receivables, _entityVatIds_data_, _entityVatIds_data, _counterpartVats_data_, _counterpartVats_data, _requiredFields_counterpart_tax_id, _requiredFields_counterpart, _requiredFields_counterpart_vat_id, _requiredFields_counterpart1, _requiredFields_entity_tax_id, _requiredFields_entity, _requiredFields_entity_vat_id, _requiredFields_entity1, _settings_currency, _formState_errors, _formState_errors_default_billing_address_id, _formState_errors1, _settings_currency1, _settings_currency2;
    const { i18n } = react.useLingui();
    const { api, entityId, componentSettings, queryClient } = useMoniteContext();
    const [isRecurrenceEnabled, setIsRecurrenceEnabled] = React.useState(false);
    const hasInitiallySetDefaultBank = React.useRef(false);
    const enableEntityBankAccount = Boolean(componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.enableEntityBankAccount);
    const { data: paymentTerms, isLoading: isPaymentTermsLoading, refetch: refetchPaymentTerms } = api.paymentTerms.getPaymentTerms.useQuery();
    const { data: entityVatIds, error: vatIdsError } = api.entities.getEntitiesIdVatIds.useQuery({
        path: {
            entity_id: entityId
        }
    }, {
        enabled: !!entityId
    });
    if (vatIdsError) {
        const message = getAPIErrorMessage(i18n, vatIdsError);
        if (message) {
            reactHotToast.toast.error(message);
        }
    }
    const { data: settings, isLoading: isSettingsLoading } = api.entities.getEntitiesIdSettings.useQuery({
        path: {
            entity_id: entityId
        }
    });
    const { data: bankAccounts } = useGetEntityBankAccounts(undefined, enableEntityBankAccount);
    const { isNonVatSupported, isLoading: isEntityLoading, data: entityData } = useMyEntity();
    const [isEditCounterpartModalOpen, setIsEditCounterpartModalOpen] = React.useState(false);
    const [isEditCounterpartProfileOpen, setIsEditCounterpartProfileOpen] = React.useState(false);
    const [isBankFormOpen, setIsBankFormOpen] = React.useState(false);
    const [selectedBankId, setSelectedBankId] = React.useState('');
    const fallbackCurrency = 'USD';
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getCreateInvoiceValidationSchema(i18n, isNonVatSupported, enableEntityBankAccount, isRecurrenceEnabled)),
        defaultValues: React.useMemo(()=>{
            var _settings_vat_mode;
            return {
                type,
                counterpart_id: '',
                counterpart_contact: '',
                counterpart_vat_id_id: '',
                payment_terms_id: '',
                default_shipping_address_id: '',
                default_billing_address_id: '',
                fulfillment_date: null,
                purchase_order: '',
                entity_vat_id_id: '',
                line_items: [],
                entity_bank_account_id: '',
                overdue_reminder_id: '',
                payment_reminder_id: '',
                memo: i18n._({
                    id: "ag4gw/"
                }),
                footer: '',
                vat_mode: (_settings_vat_mode = settings === null || settings === void 0 ? void 0 : settings.vat_mode) !== null && _settings_vat_mode !== void 0 ? _settings_vat_mode : 'exclusive',
                recurrence_start_date: undefined,
                recurrence_end_date: undefined,
                recurrence_issue_mode: 'first_day'
            };
        }, [
            type,
            i18n,
            settings === null || settings === void 0 ? void 0 : settings.vat_mode
        ])
    });
    const handleEditCounterpartProfileState = (isOpen)=>{
        setIsEditCounterpartProfileOpen(isOpen);
    };
    const handleEditCounterpartModalState = (isOpen)=>{
        setIsEditCounterpartModalOpen(isOpen);
    };
    const { handleSubmit, watch, getValues, setValue, clearErrors, getFieldState, formState } = methods;
    const { registerLineItemCleanupFn, runLineItemCleanup } = useLineItemSubmitCleanup();
    const counterpartId = watch('counterpart_id');
    const initialSettingsFields = {
        isFulfillmentDateShown: false,
        isPurchaseOrderShown: false,
        isTermsAndConditionsShown: false,
        isFooterShown: false
    };
    const [visibleSettingsFields, setVisibleSettingsFields, areFieldsAlwaysSelected, setAreFieldsAlwaysSelected] = useLocalStorageFields('MoniteCreateReceivables', 'formFields', initialSettingsFields);
    const { data: counterpart } = useCounterpartById(counterpartId);
    const { data: counterpartAddresses } = useCounterpartAddresses(counterpartId);
    const { data: counterpartVats } = useCounterpartVatList(counterpartId);
    const { data: counterpartContacts } = useCounterpartContactList(counterpartId);
    const billingAddressId = watch('default_billing_address_id');
    const counterpartBillingAddress = React.useMemo(()=>{
        var _counterpartAddresses_data;
        return counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data.find((address)=>address.id === billingAddressId);
    }, [
        billingAddressId,
        counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : counterpartAddresses.data
    ]);
    const { mutateAsync: createReceivable, isPending: isPendingReceivable } = useCreateReceivable();
    const { mutate: createRecurrence, isPending: isActivatingRecurrence } = useCreateRecurrence();
    const isCreatingReceivable = isPendingReceivable || isActivatingRecurrence;
    const { data: requiredFields } = useGetInvoiceRequiredFields({
        entity_vat_id_id: (entityVatIds === null || entityVatIds === void 0 ? void 0 : (_entityVatIds_data = entityVatIds.data) === null || _entityVatIds_data === void 0 ? void 0 : (_entityVatIds_data_ = _entityVatIds_data[0]) === null || _entityVatIds_data_ === void 0 ? void 0 : _entityVatIds_data_.id) || undefined,
        counterpart_billing_address_id: (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) === counterpartId && billingAddressId || undefined,
        counterpart_country: (counterpartBillingAddress === null || counterpartBillingAddress === void 0 ? void 0 : counterpartBillingAddress.id) === billingAddressId && (counterpartBillingAddress === null || counterpartBillingAddress === void 0 ? void 0 : counterpartBillingAddress.country) || undefined,
        counterpart_id: counterpartId || undefined,
        counterpart_type: (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) === counterpartId && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.type) || undefined,
        counterpart_vat_id_id: (counterpart === null || counterpart === void 0 ? void 0 : counterpart.id) === counterpartId && (counterpartVats === null || counterpartVats === void 0 ? void 0 : (_counterpartVats_data = counterpartVats.data) === null || _counterpartVats_data === void 0 ? void 0 : (_counterpartVats_data_ = _counterpartVats_data[0]) === null || _counterpartVats_data_ === void 0 ? void 0 : _counterpartVats_data_.id) || undefined
    });
    const entityVatId = watch('entity_vat_id_id');
    const counterpartVatId = watch('counterpart_vat_id_id');
    const isCounterpartTaxIdRequired = requiredFields === null || requiredFields === void 0 ? void 0 : (_requiredFields_counterpart = requiredFields.counterpart) === null || _requiredFields_counterpart === void 0 ? void 0 : (_requiredFields_counterpart_tax_id = _requiredFields_counterpart.tax_id) === null || _requiredFields_counterpart_tax_id === void 0 ? void 0 : _requiredFields_counterpart_tax_id.required;
    const isCounterpartVatIdRequired = requiredFields === null || requiredFields === void 0 ? void 0 : (_requiredFields_counterpart1 = requiredFields.counterpart) === null || _requiredFields_counterpart1 === void 0 ? void 0 : (_requiredFields_counterpart_vat_id = _requiredFields_counterpart1.vat_id) === null || _requiredFields_counterpart_vat_id === void 0 ? void 0 : _requiredFields_counterpart_vat_id.required;
    const isEntityTaxIdRequired = requiredFields === null || requiredFields === void 0 ? void 0 : (_requiredFields_entity = requiredFields.entity) === null || _requiredFields_entity === void 0 ? void 0 : (_requiredFields_entity_tax_id = _requiredFields_entity.tax_id) === null || _requiredFields_entity_tax_id === void 0 ? void 0 : _requiredFields_entity_tax_id.required;
    const isEntityVatIdRequired = requiredFields === null || requiredFields === void 0 ? void 0 : (_requiredFields_entity1 = requiredFields.entity) === null || _requiredFields_entity1 === void 0 ? void 0 : (_requiredFields_entity_vat_id = _requiredFields_entity1.vat_id) === null || _requiredFields_entity_vat_id === void 0 ? void 0 : _requiredFields_entity_vat_id.required;
    const handleEntityVatTaxIdWarnings = ()=>{
        if (!requiredFields) return null;
        let message = '';
        if (isEntityTaxIdRequired && !isEntityVatIdRequired && !(entityData === null || entityData === void 0 ? void 0 : entityData.tax_id)) {
            message = i18n._({
                id: "MMPNO2"
            });
        }
        if (!isEntityTaxIdRequired && isEntityVatIdRequired && !entityVatId) {
            message = i18n._({
                id: "t8C8m4"
            });
        }
        if (isEntityTaxIdRequired && isEntityVatIdRequired && !entityVatId && !(entityData === null || entityData === void 0 ? void 0 : entityData.tax_id)) {
            message = i18n._({
                id: "93LzK9"
            });
        }
        if (!message) return null;
        return /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
            severity: "error",
            sx: {
                mb: 5
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:items-start mtw:gap-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                        children: message
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("button", {
                        className: "mtw:underline mtw:p-0 mtw:border-none mtw:outline-none mtw:hover:cursor-pointer mtw:transition-all mtw:hover:opacity-80",
                        type: "button",
                        onClick: ()=>setIsMyEntityProfileModalOpen(true),
                        children: i18n._({
                            id: "9OpVZg"
                        })
                    })
                ]
            })
        });
    };
    const handleCounterpartVatTaxIdWarnings = ()=>{
        if (!requiredFields) return null;
        let message = null;
        if (isCounterpartTaxIdRequired && !isCounterpartVatIdRequired && !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id)) {
            message = i18n._({
                id: "zVoBoY"
            });
        }
        if (!isCounterpartTaxIdRequired && isCounterpartVatIdRequired && !counterpartVatId) {
            message = i18n._({
                id: "t0aFnn"
            });
        }
        if (isCounterpartTaxIdRequired && isCounterpartVatIdRequired && !counterpartVatId && !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id)) {
            message = i18n._({
                id: "M2sCHs"
            });
        }
        if (!message) return null;
        return /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
            severity: "error",
            sx: {
                mb: 5
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:items-start mtw:gap-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                        children: message
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("button", {
                        className: "mtw:underline mtw:p-0 mtw:border-none mtw:outline-none mtw:hover:cursor-pointer mtw:transition-all mtw:hover:opacity-80",
                        type: "button",
                        onClick: ()=>handleEditCounterpartModalState(true),
                        children: i18n._({
                            id: "gkD8Wx"
                        })
                    })
                ]
            })
        });
    };
    const [actualCurrency, setActualCurrency] = React.useState((settings === null || settings === void 0 ? void 0 : (_settings_currency = settings.currency) === null || _settings_currency === void 0 ? void 0 : _settings_currency.default) || fallbackCurrency);
    const [tempCurrency, setTempCurrency] = React.useState(undefined);
    const formName = `Monite-Form-receivablesDetailsForm-${React.useId()}`;
    // this is a workaround until we refactor this component, this component
    // should be broken down into multiple pieces to better position the logic to avoid these workarounds
    React.useEffect(()=>{
        if (enableEntityBankAccount && actualCurrency && bankAccounts && !hasInitiallySetDefaultBank.current) {
            var _bankAccounts_data;
            const preselectedAccount = bankAccounts === null || bankAccounts === void 0 ? void 0 : (_bankAccounts_data = bankAccounts.data) === null || _bankAccounts_data === void 0 ? void 0 : _bankAccounts_data.find((bank)=>(bank === null || bank === void 0 ? void 0 : bank.currency) === actualCurrency && (bank === null || bank === void 0 ? void 0 : bank.is_default_for_currency));
            var _preselectedAccount_id;
            setValue('entity_bank_account_id', (_preselectedAccount_id = preselectedAccount === null || preselectedAccount === void 0 ? void 0 : preselectedAccount.id) !== null && _preselectedAccount_id !== void 0 ? _preselectedAccount_id : '');
            hasInitiallySetDefaultBank.current = true;
        }
    }, [
        actualCurrency,
        setValue,
        bankAccounts,
        enableEntityBankAccount
    ]);
    const { createReminderDialog, editReminderDialog, onCreateReminder, onEditOverdueReminder, onEditPaymentReminder, closeCreateReminderDialog, closeUpdateReminderDialog } = useInvoiceReminderDialogs({
        getValues
    });
    const theme = material.useTheme();
    const className = 'Monite-CreateReceivable';
    const { data: measureUnits, isLoading: isMeasureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const handleCreateReceivable = (values)=>_async_to_generator$m(function*() {
            var _counterpartContacts_find, _counterpartAddresses_data;
            const customerHasRemindersEnabled = counterpart && (counterpart === null || counterpart === void 0 ? void 0 : counterpart.reminders_enabled);
            const customerHasDefaultEmail = counterpart && (counterpartContacts === null || counterpartContacts === void 0 ? void 0 : (_counterpartContacts_find = counterpartContacts.find((contact)=>contact.is_default)) === null || _counterpartContacts_find === void 0 ? void 0 : _counterpartContacts_find.email);
            if (values.type !== 'invoice') {
                showErrorToast(new Error('`type` except `invoice` is not supported yet'));
                return;
            }
            if (isEntityTaxIdRequired && !isEntityVatIdRequired && !(entityData === null || entityData === void 0 ? void 0 : entityData.tax_id)) {
                showErrorToast(new Error("Set your entity's Tax ID to issue invoice"));
                return;
            }
            if (!isEntityTaxIdRequired && isEntityVatIdRequired && !values.entity_vat_id_id) {
                showErrorToast(new Error("Set your entity's VAT ID to issue invoice"));
                return;
            }
            if (isEntityTaxIdRequired && isEntityVatIdRequired && !values.entity_vat_id_id && !(entityData === null || entityData === void 0 ? void 0 : entityData.tax_id)) {
                showErrorToast(new Error("Set your entity's VAT ID and Tax ID to issue invoice"));
                return;
            }
            if (isCounterpartTaxIdRequired && !isCounterpartVatIdRequired && !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id)) {
                showErrorToast(new Error('Set a Tax ID for this customer to issue invoice'));
                return;
            }
            if (!isCounterpartTaxIdRequired && isCounterpartVatIdRequired && !values.counterpart_vat_id_id) {
                showErrorToast(new Error('Set a VAT ID for this customer to issue invoice'));
                return;
            }
            if (isCounterpartTaxIdRequired && isCounterpartVatIdRequired && !values.counterpart_vat_id_id && !(counterpart === null || counterpart === void 0 ? void 0 : counterpart.tax_id)) {
                showErrorToast(new Error('Set a VAT ID and Tax ID for this customer to issue invoice'));
                return;
            }
            if (!actualCurrency) {
                showErrorToast(new Error('`actualCurrency` is not defined'));
                return;
            }
            if (!counterpartBillingAddress) {
                showErrorToast(new Error('`Billing address` is not provided'));
                return;
            }
            if (!customerHasRemindersEnabled && customerHasDefaultEmail && (values.payment_reminder_id || values.overdue_reminder_id)) {
                showErrorToast(new Error('Payment reminders are disabled for this customer. Please enable them in the customer details or turn them off.'));
                return;
            }
            if (!customerHasDefaultEmail && customerHasRemindersEnabled && (values.payment_reminder_id || values.overdue_reminder_id)) {
                showErrorToast(new Error('No email address is added for the selected customer. Please add it to the customer details or turn off the reminders.'));
                return;
            }
            if (!customerHasRemindersEnabled && !customerHasDefaultEmail && (values.payment_reminder_id || values.overdue_reminder_id)) {
                showErrorToast(new Error('Reminders are disabled for this customer, and no email address has been added for it. Please update the details or turn off reminders.'));
                return;
            }
            const shippingAddressId = values.default_shipping_address_id;
            const counterpartShippingAddress = counterpartAddresses === null || counterpartAddresses === void 0 ? void 0 : (_counterpartAddresses_data = counterpartAddresses.data) === null || _counterpartAddresses_data === void 0 ? void 0 : _counterpartAddresses_data.find((address)=>address.id === shippingAddressId);
            const invoicePayload = _object_spread_props$z(_object_spread$O({
                type: values.type,
                counterpart_id: values.counterpart_id,
                counterpart_vat_id_id: values.counterpart_vat_id_id || undefined,
                counterpart_billing_address_id: counterpartBillingAddress === null || counterpartBillingAddress === void 0 ? void 0 : counterpartBillingAddress.id,
                counterpart_shipping_address_id: counterpartShippingAddress === null || counterpartShippingAddress === void 0 ? void 0 : counterpartShippingAddress.id,
                entity_bank_account_id: values.entity_bank_account_id || undefined,
                payment_terms_id: values.payment_terms_id,
                line_items: values.line_items.map((item)=>{
                    var _measureUnits_data_find, _measureUnits_data;
                    return _object_spread$O({
                        quantity: item.quantity,
                        product: {
                            name: item.product.name,
                            price: {
                                currency: item.product.price.currency,
                                value: item.product.price.value
                            },
                            measure_unit: item.product.measure_unit_id ? {
                                name: (measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : (_measureUnits_data_find = _measureUnits_data.find((unit)=>unit.id === item.product.measure_unit_id)) === null || _measureUnits_data_find === void 0 ? void 0 : _measureUnits_data_find.name) || ''
                            } : undefined,
                            type: 'product'
                        }
                    }, isNonVatSupported ? {
                        tax_rate_value: (item === null || item === void 0 ? void 0 : item.tax_rate_value) ? rateMajorToMinor(item.tax_rate_value) : undefined
                    } : {
                        vat_rate_id: item.vat_rate_id
                    });
                }),
                memo: values.memo,
                footer: values.footer,
                vat_exemption_rationale: values.vat_exemption_rationale
            }, !isNonVatSupported && values.entity_vat_id_id ? {
                entity_vat_id_id: values.entity_vat_id_id
            } : {}), {
                fulfillment_date: values.fulfillment_date ? /**
           * We have to change the date as Backend accepts it.
           * There is no `time` in the request, only year, month and date
           */ dateFns.format(values.fulfillment_date, 'yyyy-MM-dd') : undefined,
                purchase_order: values.purchase_order || undefined,
                currency: actualCurrency,
                payment_reminder_id: values.payment_reminder_id || undefined,
                overdue_reminder_id: values.overdue_reminder_id || undefined,
                tag_ids: [],
                vat_mode: values.vat_mode || 'exclusive'
            });
            const { id: receivableId } = yield createReceivable(invoicePayload, {
                onSuccess: (createdReceivable)=>_async_to_generator$m(function*() {
                        if (!isRecurrenceEnabled) {
                            yield api.receivables.getReceivables.invalidateQueries(queryClient);
                            onCreate === null || onCreate === void 0 ? void 0 : onCreate(createdReceivable.id);
                        }
                    })()
            });
            if (isRecurrenceEnabled) {
                createRecurrence({
                    body: {
                        invoice_id: receivableId,
                        frequency: 'month',
                        interval: 1,
                        start_date: values.recurrence_start_date ? dateFns.format(new Date(values.recurrence_start_date), 'yyyy-MM-dd') : undefined,
                        end_date: values.recurrence_end_date ? dateFns.format(new Date(values.recurrence_end_date), 'yyyy-MM-dd') : undefined,
                        automation_level: 'issue'
                    }
                }, {
                    onSuccess: ()=>{
                        onCreate === null || onCreate === void 0 ? void 0 : onCreate(receivableId);
                    }
                });
            }
        })();
    const { control } = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getCreateInvoiceProductsValidationSchema(i18n)),
        defaultValues: React.useMemo(()=>({
                items: [],
                currency: actualCurrency !== null && actualCurrency !== void 0 ? actualCurrency : fallbackCurrency
            }), [
            actualCurrency
        ])
    });
    const { root } = useRootElements();
    const [isCurrencyModalOpen, setIsCurrencyModalOpen] = React.useState(false);
    const [isEnableFieldsModalOpen, setIsEnableFieldsModalOpen] = React.useState(false);
    const [isEditTemplateModalOpen, setIsEditTemplateModalOpen] = React.useState(false);
    const [isMyEntityProfileModalOpen, setIsMyEntityProfileModalOpen] = React.useState(false);
    const handleFieldChange = (fieldName, value)=>{
        setVisibleSettingsFields(_object_spread_props$z(_object_spread$O({}, visibleSettingsFields), {
            [fieldName]: value
        }));
    };
    const handleFieldsAlwaysSelectedChange = (e)=>{
        setAreFieldsAlwaysSelected(e.target.checked);
    };
    const handleCloseCurrencyModal = ()=>{
        setIsCurrencyModalOpen(false);
    };
    const handleCloseEnableFieldsModal = ()=>{
        setIsEnableFieldsModalOpen(false);
    };
    const lineItems = watch('line_items');
    const entityBankAccountId = watch('entity_bank_account_id');
    const paymentTermsId = watch('payment_terms_id');
    const fulfillmentDate = watch('fulfillment_date');
    const memo = watch('memo');
    const footer = watch('footer');
    const vatMode = watch('vat_mode');
    const bankAccountField = getFieldState('entity_bank_account_id');
    const [removeItemsWarning, setRemoveItemsWarning] = React.useState(false);
    const handleCurrencySubmit = ()=>{
        if (tempCurrency !== actualCurrency) {
            const validLineItems = lineItems.filter((item)=>{
                var _item_product_name, _item_product;
                return ((_item_product = item.product) === null || _item_product === void 0 ? void 0 : (_item_product_name = _item_product.name) === null || _item_product_name === void 0 ? void 0 : _item_product_name.trim()) !== '';
            });
            if (validLineItems.length) {
                setRemoveItemsWarning(true);
            } else {
                var _bankAccounts_data, _newAccounts_currentlySelected, _newAccounts_currentlySelected1;
                const newAccounts = bankAccounts === null || bankAccounts === void 0 ? void 0 : (_bankAccounts_data = bankAccounts.data) === null || _bankAccounts_data === void 0 ? void 0 : _bankAccounts_data.reduce((acc, bankAccount)=>{
                    if ((bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.id) === entityBankAccountId) {
                        acc.currentlySelected = bankAccount;
                    }
                    if ((bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.currency) === tempCurrency && (bankAccount === null || bankAccount === void 0 ? void 0 : bankAccount.is_default_for_currency)) {
                        acc.newDefault = bankAccount;
                    }
                    return acc;
                }, {
                    newDefault: null,
                    currentlySelected: null
                });
                setRemoveItemsWarning(false);
                setActualCurrency(tempCurrency);
                handleCloseCurrencyModal();
                if ((newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.newDefault) && (newAccounts === null || newAccounts === void 0 ? void 0 : (_newAccounts_currentlySelected = newAccounts.currentlySelected) === null || _newAccounts_currentlySelected === void 0 ? void 0 : _newAccounts_currentlySelected.id) !== newAccounts.newDefault.id && (newAccounts === null || newAccounts === void 0 ? void 0 : (_newAccounts_currentlySelected1 = newAccounts.currentlySelected) === null || _newAccounts_currentlySelected1 === void 0 ? void 0 : _newAccounts_currentlySelected1.is_default_for_currency)) {
                    var _newAccounts_newDefault;
                    setValue('entity_bank_account_id', newAccounts === null || newAccounts === void 0 ? void 0 : (_newAccounts_newDefault = newAccounts.newDefault) === null || _newAccounts_newDefault === void 0 ? void 0 : _newAccounts_newDefault.id);
                }
            }
        } else {
            setRemoveItemsWarning(false);
            setTempCurrency(actualCurrency);
            handleCloseCurrencyModal();
        }
    };
    const handleSelectBankAfterDeletion = (bankId)=>{
        setValue('entity_bank_account_id', bankId);
    };
    const handleCloseForm = ()=>{
        setIsBankFormOpen(false);
        if (selectedBankId) setSelectedBankId('');
    };
    const handleOnBankAccountCreation = (newBankAccountId)=>{
        setIsBankFormOpen(false);
        setValue('entity_bank_account_id', newBankAccountId);
    };
    React.useEffect(()=>{
        if (entityBankAccountId && (bankAccountField === null || bankAccountField === void 0 ? void 0 : bankAccountField.invalid)) {
            clearErrors('entity_bank_account_id');
        }
    }, [
        entityBankAccountId,
        bankAccountField,
        clearErrors
    ]);
    React.useEffect(()=>{
        if (entityBankAccountId && (bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.data)) {
            const selectedBankAccount = bankAccounts.data.find((bank)=>bank.id === entityBankAccountId);
            if (!(selectedBankAccount === null || selectedBankAccount === void 0 ? void 0 : selectedBankAccount.currency)) return;
            const newCurrency = selectedBankAccount.currency;
            if (newCurrency !== actualCurrency) {
                setActualCurrency(newCurrency);
            }
        }
    }, [
        entityBankAccountId,
        bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.data,
        actualCurrency
    ]);
    React.useEffect(()=>{
        if (entityVatIds && entityVatIds.data.length > 0) {
            setValue('entity_vat_id_id', entityVatIds.data[0].id);
        }
    }, [
        entityVatIds,
        setValue
    ]);
    const { currencyGroups, isLoadingCurrencyGroups } = useProductCurrencyGroups();
    if (isSettingsLoading || isEntityLoading || isMeasureUnitsLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    var _bankAccounts_data;
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        direction: "row",
        maxHeight: '100vh',
        sx: {
            overflow: 'hidden'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    width: '50%',
                    height: '100%',
                    display: 'flex',
                    flexDirection: 'column'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(FullScreenModalHeader, {
                        className: className + '-Title Invoice-Preview',
                        title: i18n._({
                            id: "R53qXO"
                        }),
                        actions: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                                            asChild: true,
                                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                variant: "outlined",
                                                color: "primary",
                                                sx: {
                                                    marginRight: '.5em'
                                                },
                                                disabled: isCreatingReceivable,
                                                children: /*#__PURE__*/ jsxRuntime.jsx(SettingsOutlinedIcon__default.default, {})
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                                            align: "end",
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                    onClick: ()=>setIsCurrencyModalOpen(true),
                                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                        sx: {
                                                            display: 'flex',
                                                            justifyContent: 'space-between',
                                                            width: '100%'
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                children: i18n._({
                                                                    id: "Q2lUR2"
                                                                })
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                children: actualCurrency
                                                            })
                                                        ]
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                    onClick: ()=>setIsEditTemplateModalOpen(true),
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        children: i18n._({
                                                            id: "UYSe5Y"
                                                        })
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                    onClick: ()=>setIsEnableFieldsModalOpen(true),
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        children: i18n._({
                                                            id: "+KQZ/P"
                                                        })
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                                    onClick: ()=>setIsMyEntityProfileModalOpen(true),
                                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        children: i18n._({
                                                            id: "1Y0u8h"
                                                        })
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    variant: "contained",
                                    color: "primary",
                                    type: "submit",
                                    form: formName,
                                    disabled: isCreatingReceivable,
                                    children: isRecurrenceEnabled ? i18n._({
                                        id: "FQBaXG"
                                    }) : i18n._({
                                        id: "UgT6EY"
                                    })
                                }, "next")
                            ]
                        }),
                        closeButtonTooltip: i18n._({
                            id: "MGdK0K"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.DialogContent, {
                        className: className + '-Content',
                        sx: {
                            overflow: 'auto',
                            flex: 1
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Modal, {
                                open: isCurrencyModalOpen,
                                container: root,
                                onClose: handleCloseCurrencyModal,
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    sx: {
                                        position: 'relative',
                                        top: '50%',
                                        left: '50%',
                                        transform: 'translate(-50%, -50%)',
                                        maxWidth: 600,
                                        bgcolor: 'background.paper',
                                        boxShadow: 24,
                                        borderRadius: 8
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        alignItems: "center",
                                        p: 4,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                                item: true,
                                                width: "100%",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "h3",
                                                        mb: 3.5,
                                                        children: i18n._({
                                                            id: "dzZuIH"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "body2",
                                                        color: "black",
                                                        mb: 1,
                                                        children: i18n._({
                                                            id: "whWSxp"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(MoniteCurrency, {
                                                        size: "small",
                                                        name: "currency",
                                                        control: control,
                                                        defaultValue: actualCurrency,
                                                        hideLabel: true,
                                                        groups: currencyGroups,
                                                        disabled: isLoadingCurrencyGroups,
                                                        onChange: (_event, value)=>{
                                                            if (value && !Array.isArray(value) && typeof value !== 'string') {
                                                                setTempCurrency(value.code);
                                                            }
                                                        }
                                                    }),
                                                    removeItemsWarning && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                                                        severity: "warning",
                                                        sx: {
                                                            mt: 2,
                                                            mb: 1
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                            variant: "inherit",
                                                            children: i18n._({
                                                                id: "wKpaSq"
                                                            })
                                                        })
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                                item: true,
                                                sx: {
                                                    display: 'flex',
                                                    justifyContent: 'flex-end',
                                                    alignItems: 'flex-end',
                                                    justifySelf: 'flex-end',
                                                    marginLeft: 'auto',
                                                    gap: '1rem',
                                                    minHeight: 96
                                                },
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                        variant: "text",
                                                        onClick: handleCloseCurrencyModal,
                                                        children: i18n._({
                                                            id: "dEgA5A"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                        variant: "contained",
                                                        onClick: handleCurrencySubmit,
                                                        children: i18n._({
                                                            id: "tfDRzk"
                                                        })
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Modal, {
                                open: isEnableFieldsModalOpen,
                                container: root,
                                onClose: handleCloseEnableFieldsModal,
                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                    sx: {
                                        position: 'relative',
                                        top: '50%',
                                        left: '50%',
                                        transform: 'translate(-50%, -50%)',
                                        maxWidth: 600,
                                        bgcolor: 'background.paper',
                                        boxShadow: 24,
                                        borderRadius: 8
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                        container: true,
                                        alignItems: "center",
                                        p: 4,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                                item: true,
                                                width: "100%",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        variant: "h3",
                                                        mb: 3.5,
                                                        children: i18n._({
                                                            id: "+KQZ/P"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                        display: "flex",
                                                        alignItems: "start",
                                                        justifyContent: "space-between",
                                                        sx: {
                                                            pb: 4
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        sx: {
                                                                            color: 'rgba(0, 0, 0, 0.84)'
                                                                        },
                                                                        children: i18n._({
                                                                            id: "6hlq+R"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        color: "textSecondary",
                                                                        children: i18n._({
                                                                            id: "2yzrM/"
                                                                        })
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                                                                checked: visibleSettingsFields.isFulfillmentDateShown,
                                                                onChange: (e)=>handleFieldChange('isFulfillmentDateShown', e.target.checked),
                                                                color: "primary",
                                                                "aria-label": i18n._({
                                                                    id: "6hlq+R"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                        display: "flex",
                                                        alignItems: "start",
                                                        justifyContent: "space-between",
                                                        sx: {
                                                            pb: 4,
                                                            pt: 4,
                                                            borderTop: 'solid 1px rgba(0, 0, 0, 0.13)'
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        sx: {
                                                                            color: 'rgba(0, 0, 0, 0.84)'
                                                                        },
                                                                        children: i18n._({
                                                                            id: "cShSqt"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        color: "textSecondary",
                                                                        children: i18n._({
                                                                            id: "x+8FHu"
                                                                        })
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                                                                checked: visibleSettingsFields.isPurchaseOrderShown,
                                                                onChange: (e)=>handleFieldChange('isPurchaseOrderShown', e.target.checked),
                                                                color: "primary",
                                                                "aria-label": i18n._({
                                                                    id: "cShSqt"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                        display: "flex",
                                                        alignItems: "start",
                                                        justifyContent: "space-between",
                                                        sx: {
                                                            pb: 4,
                                                            pt: 4,
                                                            borderTop: 'solid 1px rgba(0, 0, 0, 0.13)'
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        sx: {
                                                                            color: 'rgba(0, 0, 0, 0.84)'
                                                                        },
                                                                        children: i18n._({
                                                                            id: "OlnOso"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        color: "textSecondary",
                                                                        children: i18n._({
                                                                            id: "pQkna/"
                                                                        })
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                                                                checked: visibleSettingsFields.isFooterShown,
                                                                onChange: (e)=>handleFieldChange('isFooterShown', e.target.checked),
                                                                color: "primary",
                                                                "aria-label": i18n._({
                                                                    id: "OlnOso"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                        sx: {
                                                            display: 'none',
                                                            pb: 4,
                                                            pt: 4,
                                                            alignItems: 'start',
                                                            justifyContent: 'space-between',
                                                            borderTop: 'solid 1px rgba(0, 0, 0, 0.13)'
                                                        },
                                                        children: [
                                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                                children: [
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        sx: {
                                                                            color: 'rgba(0, 0, 0, 0.84)'
                                                                        },
                                                                        children: i18n._({
                                                                            id: "PrLJUa"
                                                                        })
                                                                    }),
                                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                                        variant: "body2",
                                                                        color: "textSecondary",
                                                                        children: i18n._({
                                                                            id: "UYkMwx"
                                                                        })
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ jsxRuntime.jsx(material.Switch, {
                                                                checked: visibleSettingsFields.isTermsAndConditionsShown,
                                                                onChange: (e)=>handleFieldChange('isTermsAndConditionsShown', e.target.checked),
                                                                color: "primary",
                                                                "aria-label": i18n._({
                                                                    id: "PrLJUa"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                                        sx: {
                                                            marginTop: 4,
                                                            paddingTop: 1
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                                                            sx: {
                                                                ml: 0
                                                            },
                                                            control: /*#__PURE__*/ jsxRuntime.jsx(material.Checkbox, {
                                                                edge: "start",
                                                                checked: areFieldsAlwaysSelected,
                                                                onChange: handleFieldsAlwaysSelectedChange,
                                                                disableRipple: true
                                                            }),
                                                            label: i18n._({
                                                                id: "FxPLjW"
                                                            })
                                                        })
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                                item: true,
                                                sx: {
                                                    display: 'flex',
                                                    justifyContent: 'flex-end',
                                                    alignItems: 'flex-end',
                                                    justifySelf: 'flex-end',
                                                    marginLeft: 'auto',
                                                    gap: '1rem',
                                                    minHeight: 96
                                                },
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                        variant: "text",
                                                        onClick: handleCloseEnableFieldsModal,
                                                        children: i18n._({
                                                            id: "dEgA5A"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                        variant: "contained",
                                                        onClick: handleCloseEnableFieldsModal,
                                                        children: i18n._({
                                                            id: "tfDRzk"
                                                        })
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$z(_object_spread$O({}, methods), {
                                children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                                    id: formName,
                                    noValidate: true,
                                    onSubmit: (e)=>_async_to_generator$m(function*() {
                                            e.preventDefault();
                                            runLineItemCleanup();
                                            yield handleSubmit(handleCreateReceivable)(e);
                                        })(),
                                    style: {
                                        marginBottom: theme.spacing(7)
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                        direction: "column",
                                        spacing: 7,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                children: [
                                                    Boolean(formState === null || formState === void 0 ? void 0 : (_formState_errors = formState.errors) === null || _formState_errors === void 0 ? void 0 : _formState_errors.default_billing_address_id) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                                                        severity: "error",
                                                        sx: {
                                                            mb: 5
                                                        },
                                                        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                                            className: "mtw:flex mtw:flex-col mtw:items-start mtw:gap-2",
                                                            children: [
                                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                                    children: formState === null || formState === void 0 ? void 0 : (_formState_errors1 = formState.errors) === null || _formState_errors1 === void 0 ? void 0 : (_formState_errors_default_billing_address_id = _formState_errors1.default_billing_address_id) === null || _formState_errors_default_billing_address_id === void 0 ? void 0 : _formState_errors_default_billing_address_id.message
                                                                }),
                                                                /*#__PURE__*/ jsxRuntime.jsx("button", {
                                                                    className: "mtw:underline mtw:p-0 mtw:border-none mtw:outline-none mtw:hover:cursor-pointer mtw:transition-all mtw:hover:opacity-80",
                                                                    type: "button",
                                                                    onClick: ()=>handleEditCounterpartModalState(true),
                                                                    children: i18n._({
                                                                        id: "gkD8Wx"
                                                                    })
                                                                })
                                                            ]
                                                        })
                                                    }),
                                                    handleEntityVatTaxIdWarnings(),
                                                    handleCounterpartVatTaxIdWarnings(),
                                                    /*#__PURE__*/ jsxRuntime.jsx(CustomerSection, {
                                                        disabled: isCreatingReceivable,
                                                        customerTypes: customerTypes,
                                                        isEditModalOpen: isEditCounterpartModalOpen,
                                                        isEditProfileOpen: isEditCounterpartProfileOpen,
                                                        handleEditModal: handleEditCounterpartModalState,
                                                        handleEditProfileState: handleEditCounterpartProfileState,
                                                        counterpart: counterpart
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(ItemsSection, {
                                                registerLineItemCleanupFn: registerLineItemCleanupFn,
                                                defaultCurrency: (settings === null || settings === void 0 ? void 0 : (_settings_currency1 = settings.currency) === null || _settings_currency1 === void 0 ? void 0 : _settings_currency1.default) || fallbackCurrency,
                                                actualCurrency: actualCurrency,
                                                isNonVatSupported: isNonVatSupported
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                sx: {
                                                    width: '100%',
                                                    display: 'flex',
                                                    flexDirection: 'column'
                                                },
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                        sx: {
                                                            mb: 2
                                                        },
                                                        variant: "subtitle1",
                                                        children: i18n._({
                                                            id: "4Y5H+g"
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(FullfillmentSummary, {
                                                        paymentTerms: paymentTerms,
                                                        isPaymentTermsLoading: isPaymentTermsLoading,
                                                        isFieldShown: visibleSettingsFields.isFulfillmentDateShown,
                                                        refetch: refetchPaymentTerms,
                                                        disabled: isCreatingReceivable
                                                    }),
                                                    enableEntityBankAccount && /*#__PURE__*/ jsxRuntime.jsx(BankAccountSection, {
                                                        entityCurrency: actualCurrency,
                                                        disabled: isCreatingReceivable,
                                                        handleOpenBankModal: (id)=>{
                                                            setIsBankFormOpen(true);
                                                            if (id) setSelectedBankId(id);
                                                        }
                                                    })
                                                ]
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx(RemindersSection, {
                                                        disabled: isCreatingReceivable,
                                                        onUpdateOverdueReminder: onEditOverdueReminder,
                                                        onUpdatePaymentReminder: onEditPaymentReminder,
                                                        onCreateReminder: onCreateReminder,
                                                        handleEditCounterpartModal: handleEditCounterpartModalState,
                                                        handleEditProfileState: handleEditCounterpartProfileState
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(EntitySection, {
                                                        visibleFields: visibleSettingsFields,
                                                        disabled: isCreatingReceivable
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx(RecurrenceSection, {
                                                        isRecurrenceEnabled: isRecurrenceEnabled,
                                                        toggleRecurrence: ()=>{
                                                            setIsRecurrenceEnabled((prevState)=>{
                                                                const nextState = !prevState;
                                                                if (!nextState) {
                                                                    clearErrors([
                                                                        'recurrence_issue_mode',
                                                                        'recurrence_start_date',
                                                                        'recurrence_end_date'
                                                                    ]);
                                                                    setValue('recurrence_start_date', undefined, {
                                                                        shouldDirty: false
                                                                    });
                                                                    setValue('recurrence_end_date', undefined, {
                                                                        shouldDirty: false
                                                                    });
                                                                }
                                                                return nextState;
                                                            });
                                                        }
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                })
                            }))
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                width: "50%",
                sx: {
                    background: 'linear-gradient(180deg, #F6F6F6 0%, #E4E4FF 100%)',
                    height: '100vh',
                    overflow: 'auto'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(InvoicePreview, {
                    invoiceData: {
                        payment_terms_id: paymentTermsId,
                        line_items: (lineItems || []).map((item)=>_object_spread_props$z(_object_spread$O({}, item), {
                                id: item.id || `temp-${Math.random().toString(36).substr(2, 9)}`
                            })),
                        fulfillment_date: fulfillmentDate,
                        memo,
                        footer,
                        entity_bank_account_id: entityBankAccountId,
                        vat_mode: vatMode
                    },
                    counterpart: counterpart,
                    currency: actualCurrency || (settings === null || settings === void 0 ? void 0 : (_settings_currency2 = settings.currency) === null || _settings_currency2 === void 0 ? void 0 : _settings_currency2.default) || fallbackCurrency,
                    isNonVatSupported: isNonVatSupported,
                    entityData: entityData,
                    address: counterpartBillingAddress,
                    paymentTerms: paymentTerms,
                    entityVatIds: entityVatIds,
                    counterpartVats: counterpartVats
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CreateInvoiceReminderDialog, {
                open: createReminderDialog.open,
                reminderType: createReminderDialog.reminderType,
                onClose: closeCreateReminderDialog,
                onCreate: ({ reminderId, reminderType })=>{
                    if (reminderType === 'payment') {
                        setValue('payment_reminder_id', reminderId);
                    } else if (reminderType === 'overdue') {
                        setValue('overdue_reminder_id', reminderId);
                    }
                }
            }),
            editReminderDialog.reminderId && /*#__PURE__*/ jsxRuntime.jsx(EditInvoiceReminderDialog, {
                open: editReminderDialog.open,
                reminderId: editReminderDialog.reminderId,
                reminderType: editReminderDialog.reminderType,
                onClose: closeUpdateReminderDialog
            }),
            isEditTemplateModalOpen && /*#__PURE__*/ jsxRuntime.jsx(TemplateSettings, {
                isDialog: true,
                isOpen: isEditTemplateModalOpen,
                handleCloseDialog: ()=>setIsEditTemplateModalOpen(false)
            }),
            isMyEntityProfileModalOpen && /*#__PURE__*/ jsxRuntime.jsx(EntityProfileModal, {
                open: isMyEntityProfileModalOpen,
                onClose: ()=>setIsMyEntityProfileModalOpen(false)
            }),
            enableEntityBankAccount && isBankFormOpen && /*#__PURE__*/ jsxRuntime.jsx(BankAccountFormDialog, {
                isOpen: isBankFormOpen,
                entityBankAccountId: selectedBankId,
                bankAccounts: (_bankAccounts_data = bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.data) !== null && _bankAccounts_data !== void 0 ? _bankAccounts_data : [],
                onCancel: handleCloseForm,
                onCreate: handleOnBankAccountCreation,
                onUpdate: handleCloseForm,
                onDelete: handleCloseForm,
                handleClose: handleCloseForm,
                handleSelectBankAfterDeletion: handleSelectBankAfterDeletion
            })
        ]
    });
};

function asyncGeneratorStep$l(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$l(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$l(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$l(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$N(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$N(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$N(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$y(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$y(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$y(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const EditInvoiceDetailsContent = ({ invoice, onCancel, onUpdated, isOpen })=>{
    var _invoice_footer, _invoice_purchase_order;
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { isLoading: isEntityLoading, isNonVatSupported } = useMyEntity();
    const { data: measureUnits, isLoading: isMeasureUnitsLoading } = api.measureUnits.getMeasureUnits.useQuery();
    const defaultValues = React.useMemo(()=>{
        var _invoice_counterpart_vat_id, _invoice_counterpart_shipping_address, _invoice_counterpart_billing_address, _invoice_entity_vat_id, _invoice_entity_bank_account, _invoice_payment_terms;
        var _invoice_counterpart_vat_id_id, _invoice_counterpart_shipping_address_id, _invoice_counterpart_billing_address_id, _invoice_entity_vat_id_id, _invoice_purchase_order, _invoice_footer, _invoice_vat_exemption_rationale, _invoice_memo, _invoice_entity_bank_account_id, _invoice_payment_terms_id, _invoice_payment_reminder_id, _invoice_overdue_reminder_id, _invoice_vat_mode;
        return {
            /** Customer section */ counterpart_id: invoice.counterpart_id,
            counterpart_vat_id_id: (_invoice_counterpart_vat_id_id = (_invoice_counterpart_vat_id = invoice.counterpart_vat_id) === null || _invoice_counterpart_vat_id === void 0 ? void 0 : _invoice_counterpart_vat_id.id) !== null && _invoice_counterpart_vat_id_id !== void 0 ? _invoice_counterpart_vat_id_id : '',
            default_shipping_address_id: (_invoice_counterpart_shipping_address_id = (_invoice_counterpart_shipping_address = invoice.counterpart_shipping_address) === null || _invoice_counterpart_shipping_address === void 0 ? void 0 : _invoice_counterpart_shipping_address.id) !== null && _invoice_counterpart_shipping_address_id !== void 0 ? _invoice_counterpart_shipping_address_id : '',
            default_billing_address_id: (_invoice_counterpart_billing_address_id = (_invoice_counterpart_billing_address = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address === void 0 ? void 0 : _invoice_counterpart_billing_address.id) !== null && _invoice_counterpart_billing_address_id !== void 0 ? _invoice_counterpart_billing_address_id : '',
            /** Entity section */ entity_vat_id_id: (_invoice_entity_vat_id_id = (_invoice_entity_vat_id = invoice.entity_vat_id) === null || _invoice_entity_vat_id === void 0 ? void 0 : _invoice_entity_vat_id.id) !== null && _invoice_entity_vat_id_id !== void 0 ? _invoice_entity_vat_id_id : '',
            fulfillment_date: invoice.fulfillment_date ? new Date(invoice.fulfillment_date) : null,
            purchase_order: (_invoice_purchase_order = invoice.purchase_order) !== null && _invoice_purchase_order !== void 0 ? _invoice_purchase_order : '',
            footer: (_invoice_footer = invoice.footer) !== null && _invoice_footer !== void 0 ? _invoice_footer : '',
            /** Items section */ line_items: invoice.line_items.map((lineItem)=>{
                var _lineItem_product_measure_unit, _lineItem_product_measure_unit1;
                const measureUnitName = (_lineItem_product_measure_unit = lineItem.product.measure_unit) === null || _lineItem_product_measure_unit === void 0 ? void 0 : _lineItem_product_measure_unit.name;
                const measureUnitId = (_lineItem_product_measure_unit1 = lineItem.product.measure_unit) === null || _lineItem_product_measure_unit1 === void 0 ? void 0 : _lineItem_product_measure_unit1.id;
                var _lineItem_product_vat_rate_id;
                return {
                    quantity: lineItem.quantity,
                    product_id: lineItem.product.id,
                    vat_rate_id: (_lineItem_product_vat_rate_id = lineItem.product.vat_rate.id) !== null && _lineItem_product_vat_rate_id !== void 0 ? _lineItem_product_vat_rate_id : undefined,
                    vat_rate_value: lineItem.product.vat_rate.value,
                    product: {
                        name: lineItem.product.name,
                        price: invoice.vat_mode === 'inclusive' ? lineItem.product.price_after_vat : lineItem.product.price,
                        // Get measure_unit_id directly from the API response if available
                        measure_unit_id: measureUnitId && measureUnitId !== '' ? measureUnitId : undefined,
                        // Store the measure unit name separately for custom units
                        measure_unit_name: !measureUnitId && measureUnitName ? measureUnitName : undefined,
                        type: lineItem.product.type || 'product'
                    },
                    // For custom measure units that don't have an ID but have a name
                    measure_unit: !measureUnitId && measureUnitName ? {
                        name: measureUnitName,
                        id: null
                    } : undefined,
                    tax_rate_value: isNonVatSupported ? lineItem.product.vat_rate.value !== undefined ? rateMinorToMajor(lineItem.product.vat_rate.value) : undefined : undefined
                };
            }),
            vat_exemption_rationale: (_invoice_vat_exemption_rationale = invoice.vat_exemption_rationale) !== null && _invoice_vat_exemption_rationale !== void 0 ? _invoice_vat_exemption_rationale : '',
            memo: (_invoice_memo = invoice.memo) !== null && _invoice_memo !== void 0 ? _invoice_memo : '',
            /** Payment section */ entity_bank_account_id: (_invoice_entity_bank_account_id = (_invoice_entity_bank_account = invoice.entity_bank_account) === null || _invoice_entity_bank_account === void 0 ? void 0 : _invoice_entity_bank_account.id) !== null && _invoice_entity_bank_account_id !== void 0 ? _invoice_entity_bank_account_id : '',
            payment_terms_id: (_invoice_payment_terms_id = (_invoice_payment_terms = invoice.payment_terms) === null || _invoice_payment_terms === void 0 ? void 0 : _invoice_payment_terms.id) !== null && _invoice_payment_terms_id !== void 0 ? _invoice_payment_terms_id : '',
            /** Reminders section */ payment_reminder_id: (_invoice_payment_reminder_id = invoice.payment_reminder_id) !== null && _invoice_payment_reminder_id !== void 0 ? _invoice_payment_reminder_id : '',
            overdue_reminder_id: (_invoice_overdue_reminder_id = invoice.overdue_reminder_id) !== null && _invoice_overdue_reminder_id !== void 0 ? _invoice_overdue_reminder_id : '',
            vat_mode: (_invoice_vat_mode = invoice.vat_mode) !== null && _invoice_vat_mode !== void 0 ? _invoice_vat_mode : 'exclusive'
        };
    }, [
        invoice,
        isNonVatSupported
    ]);
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getUpdateInvoiceValidationSchema(i18n, isNonVatSupported)),
        defaultValues
    });
    const actualCurrency = invoice.currency;
    const { handleSubmit, formState: { isDirty }, getValues, setValue, reset } = methods;
    const { registerLineItemCleanupFn, runLineItemCleanup } = useLineItemSubmitCleanup();
    useMeasureUnitsMapping(measureUnits, getValues, reset);
    const [isAlertOpen, setIsAlertOpen] = React.useState(false);
    const handleCancelWithAlert = React.useCallback(()=>{
        /** If the form hasn't been changed, we could just cancel it */ if (!isDirty) {
            onCancel();
            return;
        }
        /** Otherwise open cancel alert modal */ setIsAlertOpen(true);
    }, [
        isDirty,
        onCancel
    ]);
    const updateReceivableLineItems = useUpdateReceivableLineItems(invoice.id);
    const updateReceivable = useUpdateReceivable(invoice.id);
    const isLoading = updateReceivableLineItems.isPending || updateReceivable.isPending || isEntityLoading || isMeasureUnitsLoading;
    const formName = `Monite-Form-receivablesDetailsForm-${React.useId()}`;
    const { createReminderDialog, editReminderDialog, onCreateReminder, onEditOverdueReminder, onEditPaymentReminder, closeCreateReminderDialog, closeUpdateReminderDialog } = useInvoiceReminderDialogs({
        getValues
    });
    const className = 'Monite-EditInvoiceDetails';
    const theme = material.useTheme();
    var _invoice_document_id;
    return /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
        fullScreen: true,
        open: isOpen,
        onClose: onCancel,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                className: className + '-Title',
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Toolbar, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "text",
                            color: isDirty ? 'error' : 'primary',
                            onClick: handleCancelWithAlert,
                            startIcon: /*#__PURE__*/ jsxRuntime.jsx(ArrowBackIcon__default.default, {}),
                            disabled: isLoading,
                            children: i18n._({
                                id: "dEgA5A"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            sx: {
                                marginLeft: 'auto'
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "contained",
                                color: "primary",
                                type: "submit",
                                form: formName,
                                disabled: isLoading,
                                children: i18n._({
                                    id: "EkH9pt"
                                })
                            }, "next")
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {
                className: className + '-Divider'
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                className: className + '-Content',
                children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$y(_object_spread$N({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsxs("form", {
                        id: formName,
                        noValidate: true,
                        onSubmit: (e)=>_async_to_generator$l(function*() {
                                e.preventDefault();
                                runLineItemCleanup();
                                yield handleSubmit((values)=>{
                                    const lineItems = {
                                        data: values.line_items.map((lineItem)=>{
                                            var _extendedLineItem_measure_unit;
                                            const extendedLineItem = lineItem;
                                            let measureUnitName;
                                            // Case 1: We have a valid measure_unit_id - look up its name
                                            if (extendedLineItem.product.measure_unit_id) {
                                                var _measureUnits_data;
                                                const measureUnitId = extendedLineItem.product.measure_unit_id;
                                                const unit = measureUnits === null || measureUnits === void 0 ? void 0 : (_measureUnits_data = measureUnits.data) === null || _measureUnits_data === void 0 ? void 0 : _measureUnits_data.find((u)=>u.id === measureUnitId);
                                                measureUnitName = unit === null || unit === void 0 ? void 0 : unit.name;
                                            } else if (extendedLineItem.product.measure_unit_name || ((_extendedLineItem_measure_unit = extendedLineItem.measure_unit) === null || _extendedLineItem_measure_unit === void 0 ? void 0 : _extendedLineItem_measure_unit.name)) {
                                                var _extendedLineItem_measure_unit1;
                                                measureUnitName = extendedLineItem.product.measure_unit_name || ((_extendedLineItem_measure_unit1 = extendedLineItem.measure_unit) === null || _extendedLineItem_measure_unit1 === void 0 ? void 0 : _extendedLineItem_measure_unit1.name);
                                            }
                                            var _lineItem_product_price_currency, _lineItem_product_price_value;
                                            const processedLineItem = _object_spread$N({
                                                quantity: lineItem.quantity,
                                                product: {
                                                    name: lineItem.product.name,
                                                    type: lineItem.product.type,
                                                    measure_unit: measureUnitName ? {
                                                        name: measureUnitName
                                                    } : undefined,
                                                    price: lineItem.product.price ? {
                                                        currency: (_lineItem_product_price_currency = lineItem.product.price.currency) !== null && _lineItem_product_price_currency !== void 0 ? _lineItem_product_price_currency : 'USD',
                                                        value: Math.round((_lineItem_product_price_value = lineItem.product.price.value) !== null && _lineItem_product_price_value !== void 0 ? _lineItem_product_price_value : 0)
                                                    } : undefined
                                                }
                                            }, isNonVatSupported ? {
                                                tax_rate_value: lineItem.tax_rate_value !== undefined ? rateMajorToMinor(lineItem.tax_rate_value) : undefined
                                            } : {
                                                vat_rate_id: lineItem.vat_rate_id
                                            });
                                            return processedLineItem;
                                        })
                                    };
                                    const invoicePayload = {
                                        invoice: {
                                            /** Customer section */ counterpart_id: values.counterpart_id,
                                            counterpart_vat_id_id: values.counterpart_vat_id_id || undefined,
                                            currency: actualCurrency,
                                            memo: values.memo,
                                            vat_exemption_rationale: values.vat_exemption_rationale,
                                            // @ts-expect-error - we need to send `null`, but the backend doesn't provide a correct type
                                            counterpart_shipping_address_id: (values === null || values === void 0 ? void 0 : values.default_shipping_address_id) || null,
                                            counterpart_billing_address_id: values === null || values === void 0 ? void 0 : values.default_billing_address_id,
                                            /** We shouldn't send an empty string to the server if the value is not set */ entity_bank_account_id: values.entity_bank_account_id || undefined,
                                            payment_terms_id: values.payment_terms_id,
                                            entity_vat_id_id: values.entity_vat_id_id || undefined,
                                            // @ts-expect-error - we need to send `null`, but the backend doesn't provide a correct type
                                            fulfillment_date: values.fulfillment_date ? /**
                         * We have to change the date as Backend accepts it.
                         * There is no `time` in request, only year, month and date
                         */ dateFns.format(values.fulfillment_date, 'yyyy-MM-dd') : null,
                                            // @ts-expect-error - we need to send `null`, but the backend doesn't provide a correct type
                                            payment_reminder_id: values.payment_reminder_id || null,
                                            // @ts-expect-error - we need to send `null`, but the backend doesn't provide a correct type
                                            overdue_reminder_id: values.overdue_reminder_id || null
                                        }
                                    };
                                    updateReceivableLineItems.mutate(lineItems, {
                                        onSuccess: ()=>{
                                            updateReceivable.mutate(invoicePayload, {
                                                onSuccess: (receivable)=>{
                                                    onUpdated(receivable);
                                                }
                                            });
                                        }
                                    });
                                })(e);
                            })(),
                        style: {
                            marginBottom: theme.spacing(7)
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                direction: "column",
                                spacing: 4,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        variant: "h1",
                                        sx: {
                                            mb: 2
                                        },
                                        "data-testid": ActiveInvoiceTitleTestId.ActiveInvoiceTitleTestId,
                                        children: [
                                            i18n._({
                                                id: "IuMGvq"
                                            }),
                                            ' ',
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                                component: "span",
                                                variant: "h1",
                                                color: "textSecondary",
                                                children: [
                                                    "#",
                                                    (_invoice_document_id = invoice.document_id) !== null && _invoice_document_id !== void 0 ? _invoice_document_id : INVOICE_DOCUMENT_AUTO_ID
                                                ]
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(ItemsSection, {
                                        isNonVatSupported: isNonVatSupported,
                                        actualCurrency: actualCurrency,
                                        isVatSelectionDisabled: true,
                                        registerLineItemCleanupFn: registerLineItemCleanupFn
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(EntitySection, {
                                        disabled: isLoading,
                                        hidden: [
                                            'purchase_order'
                                        ],
                                        visibleFields: {
                                            isFooterShown: typeof invoice.footer === 'string' && ((_invoice_footer = invoice.footer) === null || _invoice_footer === void 0 ? void 0 : _invoice_footer.trim()) !== '',
                                            isPurchaseOrderShown: typeof invoice.purchase_order === 'string' && ((_invoice_purchase_order = invoice.purchase_order) === null || _invoice_purchase_order === void 0 ? void 0 : _invoice_purchase_order.trim()) !== ''
                                        }
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(RemindersSection, {
                                        disabled: isLoading,
                                        onUpdateOverdueReminder: onEditOverdueReminder,
                                        onUpdatePaymentReminder: onEditPaymentReminder,
                                        onCreateReminder: onCreateReminder
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
                                open: isAlertOpen,
                                title: i18n._({
                                    id: "QrPLE3"
                                }),
                                message: i18n._({
                                    id: "Aa+kmZ"
                                }),
                                confirmLabel: i18n._({
                                    id: "l75CjT"
                                }),
                                cancelLabel: i18n._({
                                    id: "1UzENP"
                                }),
                                onClose: ()=>setIsAlertOpen(false),
                                onConfirm: onCancel
                            })
                        ]
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsx(CreateInvoiceReminderDialog, {
                open: createReminderDialog.open,
                reminderType: createReminderDialog.reminderType,
                onClose: closeCreateReminderDialog,
                onCreate: ({ reminderId, reminderType })=>{
                    if (reminderType === 'payment') {
                        setValue('payment_reminder_id', reminderId);
                    } else if (reminderType === 'overdue') {
                        setValue('overdue_reminder_id', reminderId);
                    }
                }
            }),
            editReminderDialog.reminderId && /*#__PURE__*/ jsxRuntime.jsx(EditInvoiceReminderDialog, {
                open: editReminderDialog.open,
                reminderId: editReminderDialog.reminderId,
                reminderType: editReminderDialog.reminderType,
                onClose: closeUpdateReminderDialog
            })
        ]
    });
};
const EditInvoiceDetails = (props)=>{
    return /*#__PURE__*/ jsxRuntime.jsx(EditInvoiceDetailsContent, _object_spread$N({}, props));
};

function _define_property$M(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$M(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$M(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$x(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$x(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$x(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const Form = ({ formName, style, children, handleIssueAndSend })=>{
    return /*#__PURE__*/ jsxRuntime.jsx("form", {
        id: formName,
        noValidate: true,
        onSubmit: handleIssueAndSend,
        style: style,
        children: children
    });
};
const RecipientSelector = ({ invoiceId, control })=>{
    const { data: receivable } = useGetReceivableById(invoiceId);
    const { data: counterpart } = useCounterpartById(receivable === null || receivable === void 0 ? void 0 : receivable.counterpart_id);
    const { data: contacts, isLoading } = useCounterpartContactList(receivable === null || receivable === void 0 ? void 0 : receivable.counterpart_id);
    const { root } = useRootElements();
    if (isLoading) return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {});
    const defaultContact = getDefaultContact(contacts, counterpart);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        name: "to",
        control: control,
        render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
                variant: "standard",
                required: true,
                fullWidth: true,
                error: Boolean(error),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Select, _object_spread_props$x(_object_spread$M({
                        MenuProps: {
                            container: root
                        },
                        className: "Monite-NakedField Monite-RecipientSelector",
                        "data-testid": `${field.name}-select`
                    }, field), {
                        children: getContactList(contacts, defaultContact).map((contact)=>{
                            var _contact_email;
                            return /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                value: contact.email,
                                children: /*#__PURE__*/ jsxRuntime.jsx(DefaultEmail, {
                                    email: (_contact_email = contact.email) !== null && _contact_email !== void 0 ? _contact_email : '',
                                    isDefault: contact.is_default
                                })
                            }, contact.id);
                        })
                    })),
                    error && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                        children: error.message
                    })
                ]
            })
    });
};
const FormContent = ({ invoiceId, control, isDisabled })=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Card, {
                sx: {
                    mb: 3
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.CardContent, {
                    sx: {
                        px: 3,
                        pt: 1,
                        pb: 1,
                        '&:last-child': {
                            pb: 1
                        }
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        spacing: 2,
                        direction: "row",
                        alignItems: "center",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                sx: {
                                    minWidth: '52px'
                                },
                                children: i18n._({
                                    id: "/jQctM"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(RecipientSelector, {
                                invoiceId: invoiceId,
                                control: control
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Card, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardContent, {
                        sx: {
                            px: 3,
                            py: 1,
                            borderBottomWidth: '1px',
                            borderBottomStyle: 'solid',
                            borderBottomColor: 'divider'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                            spacing: 2,
                            direction: "row",
                            alignItems: "center",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body2",
                                    children: i18n._({
                                        id: "UJmAAK"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                                    name: "subject",
                                    control: control,
                                    render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$x(_object_spread$M({
                                            id: field.name,
                                            "data-testid": `${field.name}-input`,
                                            variant: "standard",
                                            className: "Monite-NakedField",
                                            fullWidth: true,
                                            error: Boolean(error),
                                            helperText: error === null || error === void 0 ? void 0 : error.message,
                                            required: true
                                        }, field), {
                                            disabled: isDisabled
                                        }))
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.CardContent, {
                        sx: {
                            pl: 3,
                            pr: 3,
                            pb: 3,
                            pt: 1
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
                            name: "body",
                            control: control,
                            render: ({ field, fieldState: { error } })=>/*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread_props$x(_object_spread$M({
                                    id: field.name,
                                    "data-testid": `${field.name}-input`,
                                    variant: "standard",
                                    className: "Monite-NakedField",
                                    fullWidth: true,
                                    error: Boolean(error),
                                    helperText: error === null || error === void 0 ? void 0 : error.message,
                                    required: true,
                                    multiline: true,
                                    rows: 8
                                }, field), {
                                    disabled: isDisabled
                                }))
                        })
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$k(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$k(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$k(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$k(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
/**
 * Marks receivable as issued by provided id
 *
 * @see {@link https://docs.monite.com/reference/post_receivables_id_issue} Monite backend call API
 */ const useIssueReceivableById = (receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.postReceivablesIdIssue.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: (receivable)=>_async_to_generator$k(function*() {
                api.receivables.getReceivablesId.setQueryData({
                    path: {
                        receivable_id
                    }
                }, receivable, queryClient);
                yield Promise.all([
                    api.receivables.getReceivables.invalidateQueries(queryClient),
                    api.receivables.getReceivablesIdPdfLink.resetQueries({
                        parameters: {
                            path: {
                                receivable_id
                            }
                        }
                    }, queryClient)
                ]);
                reactHotToast.toast.success(i18n._({
                    id: "f3Xcwg",
                    values: {
                        0: receivable.type
                    }
                }));
            })()
    });
};

function asyncGeneratorStep$j(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$j(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$j(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$j(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
/**
 * Issue a receivable and send PDF with an email
 *  to the counterpart
 */ const useSendReceivableById = (receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.postReceivablesIdSend.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: ()=>_async_to_generator$j(function*() {
                yield Promise.all([
                    api.receivables.getReceivables.invalidateQueries(queryClient),
                    api.receivables.getReceivablesId.invalidateQueries({
                        parameters: {
                            path: {
                                receivable_id
                            }
                        }
                    }, queryClient)
                ]);
                const receivable = api.receivables.getReceivablesId.getQueryData({
                    path: {
                        receivable_id
                    }
                }, queryClient);
                var _receivable_type;
                reactHotToast.toast.success(i18n._({
                    id: "E+kiJx",
                    values: {
                        0: (_receivable_type = receivable === null || receivable === void 0 ? void 0 : receivable.type) !== null && _receivable_type !== void 0 ? _receivable_type : ''
                    }
                }));
            })()
    });
};

const PreviewEmail = ({ invoiceId, body, subject })=>{
    const { i18n } = react.useLingui();
    const [attemptNumber, setAttemptNumber] = React.useState(0);
    const { data: preview, mutateAsync: createPreview, isPending: isCreatingPreview, error } = useCreateInvoiceEmailPreview(invoiceId);
    const refresh = ()=>{
        setAttemptNumber(attemptNumber + 1);
    };
    const isLanguageCodeEnum = (value)=>{
        return Object.values(LanguageCodeEnum).includes(value);
    };
    const language = ()=>{
        const locale = i18n.locale;
        const dashIndex = locale.indexOf('-');
        const languageCode = dashIndex >= 0 ? locale.substring(0, dashIndex) : locale;
        if (isLanguageCodeEnum(languageCode)) {
            return languageCode;
        }
        return 'en';
    };
    React.useEffect(()=>{
        createPreview({
            body_text: body,
            subject_text: subject,
            language: language(),
            type: 'receivable'
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        attemptNumber
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: "mtw:flex mtw:flex-col mtw:min-h-0 mtw:overflow-hidden mtw:flex-1",
        children: isCreatingPreview ? /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
            children: /*#__PURE__*/ jsxRuntime.jsx(LoadingSpinner, {})
        }) : /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
            children: error ? /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:items-center mtw:justify-center mtw:gap-4",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.CircleAlert, {
                            className: "mtw:text-red-500"
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:justify-center mtw:text-center mtw:gap-1 mtw:items-center",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                    className: "mtw:font-bold mtw:text-base",
                                    children: i18n._({
                                        id: "st7yJi"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    className: "mtw:items-center",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-sm mtw:font-normal mtw:leading-5",
                                            children: i18n._({
                                                id: "GloT7f"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-sm mtw:font-normal mtw:leading-5",
                                            children: i18n._({
                                                id: "v9j1Tg"
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                    variant: "ghost",
                                    onClick: refresh,
                                    "data-testid": "reload-preview-button",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.RefreshCcw, {}),
                                        i18n._({
                                            id: "HpK/8d"
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            }) : /*#__PURE__*/ jsxRuntime.jsx("iframe", {
                srcDoc: preview === null || preview === void 0 ? void 0 : preview.body_preview,
                style: {
                    width: '100%',
                    height: '100%',
                    marginBottom: '-16px',
                    border: 0,
                    flex: 1
                }
            })
        })
    });
};

function asyncGeneratorStep$i(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$i(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$i(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$i(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$L(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$L(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$L(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$w(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$w(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$w(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const EmailInvoiceDetails = (props)=>{
    const { i18n } = react.useLingui();
    const { data: me, isLoading: isLoadingUser } = useMe();
    const { data: receivable, isLoading: isLoadingReceivable } = useGetReceivableById(props.invoiceId);
    const { entityName, isLoading: isLoadingEntity } = useMyEntity();
    const { data: contacts, isLoading: isLoadingContacts } = useCounterpartContactList(receivable === null || receivable === void 0 ? void 0 : receivable.counterpart_id);
    const { data: counterpart } = useCounterpartById(receivable === null || receivable === void 0 ? void 0 : receivable.counterpart_id);
    const defaultContact = getDefaultContact(contacts, counterpart);
    var _defaultContact_email;
    const to = (_defaultContact_email = defaultContact === null || defaultContact === void 0 ? void 0 : defaultContact.email) !== null && _defaultContact_email !== void 0 ? _defaultContact_email : '';
    var _me_first_name;
    const body = defaultContact && me ? i18n._({
        id: "Y/N4xI",
        values: {
            0: defaultContact.first_name,
            1: me.first_name
        }
    }) : i18n._({
        id: "giiiDv",
        values: {
            0: (_me_first_name = me === null || me === void 0 ? void 0 : me.first_name) !== null && _me_first_name !== void 0 ? _me_first_name : ''
        }
    });
    const subject = receivable && entityName ? receivable.document_id ? i18n._({
        id: "I4Dq1m",
        values: {
            entityName: entityName,
            0: receivable.document_id
        }
    }) : i18n._({
        id: "VQYmkA",
        values: {
            entityName: entityName
        }
    }) : '';
    const isLoading = isLoadingContacts || isLoadingReceivable || isLoadingUser || isLoadingEntity;
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(EmailInvoiceDetailsBase, _object_spread_props$w(_object_spread$L({}, props), {
            to: to,
            body: body,
            subject: subject,
            isLoading: isLoading,
            isIssued: (receivable === null || receivable === void 0 ? void 0 : receivable.status) !== 'draft',
            isOpen: props.isOpen
        }))
    });
};
const EmailInvoiceDetailsBase = ({ invoiceId, subject, body, to, isLoading, isIssued, onClose, onSendEmail, isOpen })=>{
    const { i18n } = react.useLingui();
    const { api, entityId } = useMoniteContext();
    const { control, handleSubmit, getValues, trigger, reset } = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getEmailInvoiceDetailsSchema(i18n)),
        defaultValues: React.useMemo(()=>({
                subject,
                body,
                to
            }), [
            subject,
            body,
            to
        ])
    });
    const { subject: emailSubject, body: emailBody } = getValues();
    React.useEffect(()=>{
        reset({
            subject,
            body,
            to
        });
    }, [
        body,
        reset,
        subject,
        to
    ]);
    // Use the same storage key for all invoices to avoid overloading the localStorage with dozens of saved form states
    // TODO: Form persistance disabled as requested by Joao on Sep 5
    // useFormPersist(`Monite-EmailInvoiceDetails-FormState`, getValues, setValue);
    const sendMutation = useSendReceivableById(invoiceId);
    const issueMutation = useIssueReceivableById(invoiceId);
    const createPaymentLinkMutation = api.paymentLinks.postPaymentLinks.useMutation({});
    const { data: paymentMethods } = api.entities.getEntitiesIdPaymentMethods.useQuery({
        path: {
            entity_id: entityId
        }
    });
    const [presentation, setPresentation] = React.useState("form");
    const formName = `Monite-Form-emailInvoiceDetails-${React.useId()}`;
    const handleIssueAndSend = React.useCallback((e)=>{
        e.preventDefault();
        const createPaymentLink = createPaymentLinkMutation.mutateAsync;
        const issue = issueMutation.mutateAsync;
        const sendEmail = sendMutation.mutate;
        handleSubmit((values)=>_async_to_generator$i(function*() {
                const availablePaymentMethods = paymentMethods ? paymentMethods.data.filter(({ status, direction })=>status === 'active' && direction === 'receive') : [];
                /**
         * We can't create a payment link if no payment methods are available.
         * As an MVP approach, we should show a message to the user and prevent the email from being sent.
         */ if (availablePaymentMethods.length === 0) {
                    reactHotToast.toast.error(i18n._({
                        id: "Kz0awa"
                    }));
                } else {
                    yield issue(undefined);
                    /**
           * We need to create a payment link for the invoice before sending the email.
           * Otherwise, the recipient won't be able to pay the invoice.
           *
           * The link will be automatically attached to the email because we provide `object` field
           *  with the invoice id and type
           *
           * For more information, you could check Monite API documentation:
           * @see {@link https://docs.monite.com/docs/payment-links#22-payment-link-for-a-receivable}
           */ yield createPaymentLink({
                        recipient: {
                            id: entityId,
                            type: 'entity'
                        },
                        payment_methods: availablePaymentMethods.map((method)=>method.type),
                        object: {
                            id: invoiceId,
                            type: 'receivable'
                        }
                    });
                }
                const emailParams = {
                    body_text: values.body,
                    subject_text: values.subject,
                    recipients: values.to ? {
                        to: [
                            values.to
                        ]
                    } : undefined
                };
                // TODO: provide support for multiple recipients, cc and bcc fields
                /**
         * If `payment methods` available, we should create a payment link.
         * If not, we should send the email without a payment link.
         */ sendEmail(emailParams, {
                    onSuccess: ()=>{
                        onSendEmail === null || onSendEmail === void 0 ? void 0 : onSendEmail(invoiceId);
                        onClose();
                    }
                });
            })())(e);
    }, [
        createPaymentLinkMutation.mutateAsync,
        issueMutation.mutateAsync,
        handleSubmit,
        i18n,
        invoiceId,
        entityId,
        onClose,
        onSendEmail,
        paymentMethods,
        sendMutation.mutate
    ]);
    const isDisabled = issueMutation.isPending || sendMutation.isPending || createPaymentLinkMutation.isPending;
    const className = 'Monite-EmailInvoiceDetails';
    const isPreview = presentation == "preview";
    return /*#__PURE__*/ jsxRuntime.jsxs(Dialog$1, {
        open: isOpen,
        fullScreen: true,
        onClose: onClose,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                className: className + '-Title',
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Toolbar, {
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        container: true,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                item: true,
                                xs: 6,
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    direction: "row",
                                    alignItems: "center",
                                    spacing: 2,
                                    children: [
                                        presentation == "form" && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                    variant: "text",
                                                    color: "primary",
                                                    onClick: onClose,
                                                    startIcon: /*#__PURE__*/ jsxRuntime.jsx(ArrowBackIcon__default.default, {}),
                                                    disabled: isDisabled,
                                                    "data-testid": "back-button",
                                                    children: i18n._({
                                                        id: "iH8pgl"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "h3",
                                                    children: i18n._({
                                                        id: "rYRNgS"
                                                    })
                                                })
                                            ]
                                        }),
                                        isPreview && /*#__PURE__*/ jsxRuntime.jsx(IconWrapper, {
                                            edge: "start",
                                            color: "inherit",
                                            onClick: ()=>{
                                                setPresentation("form");
                                            },
                                            "aria-label": i18n._({
                                                id: "xD9ABo"
                                            }),
                                            "data-testid": "close-preview-button",
                                            children: /*#__PURE__*/ jsxRuntime.jsx(CloseIcon__default.default, {})
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                item: true,
                                xs: 6,
                                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                    direction: "row",
                                    alignItems: "center",
                                    justifyContent: "end",
                                    spacing: 2,
                                    children: [
                                        presentation == "form" && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "outlined",
                                            color: "primary",
                                            type: "button",
                                            form: formName,
                                            disabled: isDisabled || isLoading,
                                            onClick: ()=>_async_to_generator$i(function*() {
                                                    const isValid = yield trigger();
                                                    if (isValid) setPresentation("preview");
                                                })(),
                                            "data-testid": "preview-button",
                                            children: i18n._({
                                                id: "JYE1PA"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "contained",
                                            color: "primary",
                                            type: "submit",
                                            form: formName,
                                            disabled: isDisabled || isLoading,
                                            "data-testid": "issue-and-send-button",
                                            children: isIssued ? i18n._({
                                                id: "JlFcis"
                                            }) : i18n._({
                                                id: "bXeimc"
                                            })
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                className: className + '-Content',
                sx: {
                    mt: isPreview ? 0 : 4,
                    p: isPreview ? 0 : '0 32px 32px 32px',
                    height: '100%',
                    width: '100%',
                    display: 'flex',
                    flexDirection: 'column'
                },
                children: /*#__PURE__*/ jsxRuntime.jsxs(Form, {
                    formName: formName,
                    handleIssueAndSend: handleIssueAndSend,
                    style: {
                        display: 'flex',
                        flexDirection: 'column',
                        flex: 1,
                        minHeight: 0,
                        width: '100%'
                    },
                    children: [
                        isLoading ? /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
                            className: "Monite-LoadingPage",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {})
                        }) : presentation == "form" && /*#__PURE__*/ jsxRuntime.jsx(FormContent, {
                            invoiceId: invoiceId,
                            control: control,
                            isDisabled: isDisabled
                        }),
                        isPreview && /*#__PURE__*/ jsxRuntime.jsx(PreviewEmail, {
                            invoiceId: invoiceId,
                            body: emailBody,
                            subject: emailSubject
                        })
                    ]
                })
            })
        ]
    });
};

function asyncGeneratorStep$h(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$h(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$h(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$h(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$K(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$K(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$K(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$v(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$v(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$v(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Marks receivable as canceled by provided id
 *
 * @see {@link https://docs.monite.com/reference/post_receivables_id_cancel} Monite backend call API
 */ const useCancelReceivableById = (receivable_id)=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    return api.receivables.postReceivablesIdCancel.useMutation({
        path: {
            receivable_id
        }
    }, {
        onSuccess: ()=>_async_to_generator$h(function*() {
                const previousReceivable = api.receivables.getReceivablesId.getQueryData({
                    path: {
                        receivable_id
                    }
                }, queryClient);
                if ((previousReceivable === null || previousReceivable === void 0 ? void 0 : previousReceivable.type) === 'invoice') api.receivables.getReceivablesId.setQueryData({
                    path: {
                        receivable_id
                    }
                }, _object_spread_props$v(_object_spread$K({}, previousReceivable), {
                    status: 'canceled'
                }), queryClient);
                yield api.receivables.getReceivables.invalidateQueries(queryClient);
                var _previousReceivable_type;
                reactHotToast.toast.success(i18n._({
                    id: "ejeJqN",
                    values: {
                        0: (_previousReceivable_type = previousReceivable === null || previousReceivable === void 0 ? void 0 : previousReceivable.type) !== null && _previousReceivable_type !== void 0 ? _previousReceivable_type : ''
                    }
                }));
            })()
    });
};

const InvoiceCancelModal = ({ invoiceId, open, onClose })=>{
    const { i18n } = react.useLingui();
    const { data: receivable, isLoading: isReceivableLoading } = useGetReceivableById(invoiceId);
    const cancelReceivableMutation = useCancelReceivableById(invoiceId);
    const creditNoteIds = (receivable === null || receivable === void 0 ? void 0 : receivable.type) === 'invoice' ? receivable.related_documents.credit_note_ids : undefined;
    const hasNoCreditNotes = !(creditNoteIds === null || creditNoteIds === void 0 ? void 0 : creditNoteIds.length);
    if (!receivable) {
        return null;
    }
    const modalTitle = receivable.document_id ? i18n._({
        id: "elcT6X",
        values: {
            0: receivable === null || receivable === void 0 ? void 0 : receivable.document_id
        }
    }) : i18n._({
        id: "ROZu5e"
    });
    const modalDescription = hasNoCreditNotes ? i18n._({
        id: "F2qklq",
        values: {
            0: receivable === null || receivable === void 0 ? void 0 : receivable.document_id
        }
    }) : i18n._({
        id: "3LDCpD"
    });
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open && Boolean(invoiceId),
        title: hasNoCreditNotes ? modalTitle : i18n._({
            id: "MR54EK"
        }),
        message: modalDescription,
        confirmLabel: i18n._({
            id: "dEgA5A"
        }),
        cancelLabel: i18n._({
            id: "yz7wBu"
        }),
        onClose: onClose,
        onConfirm: ()=>{
            cancelReceivableMutation.mutate(undefined, {
                onSuccess: onClose
            });
        },
        isLoading: cancelReceivableMutation.isPending || isReceivableLoading
    });
};

const InvoiceDeleteModal = ({ open, onClose, invoiceId, onDelete, entityUserId, documentId })=>{
    const { i18n } = react.useLingui();
    const { receivablesCallbacks } = useComponentSettings();
    const { mutate: deleteInvoice, isPending: isDeletingReceivable } = useDeleteReceivableById(invoiceId);
    const { data: isDeleteAllowed, isLoading: isDeleteAllowedLoading } = useIsActionAllowed({
        method: 'receivable',
        action: 'delete',
        entityUserId
    });
    const handleConfirm = ()=>{
        if (isDeleteAllowed) {
            deleteInvoice(undefined, {
                onSuccess: ()=>{
                    var _receivablesCallbacks_onDelete;
                    receivablesCallbacks === null || receivablesCallbacks === void 0 ? void 0 : (_receivablesCallbacks_onDelete = receivablesCallbacks.onDelete) === null || _receivablesCallbacks_onDelete === void 0 ? void 0 : _receivablesCallbacks_onDelete.call(receivablesCallbacks, invoiceId);
                    onDelete === null || onDelete === void 0 ? void 0 : onDelete();
                    onClose();
                }
            });
        } else {
            reactHotToast.toast.error(i18n._({
                id: "5OSG1G"
            }));
        }
    };
    const title = documentId ? i18n._({
        id: "S1uvGV",
        values: {
            documentId: documentId
        }
    }) : i18n._({
        id: "PUfTsf"
    });
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: open,
        title: title,
        message: i18n._({
            id: "3LDCpD"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: onClose,
        onConfirm: handleConfirm,
        isLoading: isDeletingReceivable || isDeleteAllowedLoading
    });
};

function _define_property$J(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$J(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$J(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$e(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$e(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$e(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Textarea(_param) {
    var { className } = _param, props = _object_without_properties$e(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("textarea", _object_spread$J({
        "data-slot": "textarea",
        className: cn("mtw:border-input mtw:placeholder:text-muted-foreground mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:aria-invalid:ring-destructive/20 mtw:dark:aria-invalid:ring-destructive/40 mtw:aria-invalid:border-destructive mtw:dark:bg-input/30 mtw:flex mtw:field-sizing-content mtw:min-h-16 mtw:w-full mtw:rounded-md mtw:border mtw:bg-transparent mtw:px-3 mtw:py-2 mtw:text-base mtw:shadow-xs mtw:transition-[color,box-shadow] mtw:outline-none mtw:focus-visible:ring-[3px] mtw:disabled:cursor-not-allowed mtw:disabled:opacity-50 mtw:md:text-sm", className)
    }, props));
}

const MarkAsUncollectibleModal = ({ invoiceId, open, onClose, onMarkAsUncollectible })=>{
    const { i18n } = react.useLingui();
    const [comment, setComment] = React.useState('');
    const { mutate: markAsUncollectible, isPending: isMarkingAsUncollectible } = useMarkAsUncollectibleReceivableById(invoiceId, onMarkAsUncollectible);
    const handleMarkAsUncollectible = ()=>{
        markAsUncollectible({
            comment: comment.trim()
        }, {
            onSuccess: ()=>{
                onClose();
            }
        });
    };
    return /*#__PURE__*/ jsxRuntime.jsx(Dialog, {
        open: open,
        onOpenChange: onClose,
        children: /*#__PURE__*/ jsxRuntime.jsxs(DialogContent, {
            showCloseButton: false,
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(DialogHeader$1, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                            children: i18n._({
                                id: "HDiLCp"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(DialogDescription, {
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    children: i18n._({
                                        id: "OLpUEo"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    children: i18n._({
                                        id: "hsfFiu"
                                    })
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-2",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(Label, {
                            htmlFor: "comment",
                            children: i18n._({
                                id: "4pZng4"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(Textarea, {
                            id: "comment",
                            placeholder: i18n._({
                                id: "vYOUOk"
                            }),
                            value: comment,
                            onChange: (e)=>setComment(e.target.value)
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(DialogFooter$1, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            variant: "outline",
                            onClick: onClose,
                            children: i18n._({
                                id: "dEgA5A"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                            onClick: handleMarkAsUncollectible,
                            disabled: isMarkingAsUncollectible,
                            children: [
                                isMarkingAsUncollectible && /*#__PURE__*/ jsxRuntime.jsx(LoadingSpinner, {
                                    className: "mtw:w-5 mtw:h-5 mtw:border-inherit mtw:border-t-transparent"
                                }),
                                i18n._({
                                    id: "3hoNxe"
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};

const ManualPaymentRecordDetails = ({ paymentRecords, invoice })=>{
    var _paymentRecords_payment_time, _paymentRecords_payment_time1;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    var _paymentRecords_payment_date, _paymentRecords_payment_time_getHours, _paymentRecords_payment_time_getMinutes;
    const dateTimeWithReplacedTime = new Date((_paymentRecords_payment_date = paymentRecords.payment_date) !== null && _paymentRecords_payment_date !== void 0 ? _paymentRecords_payment_date : '').setHours((_paymentRecords_payment_time_getHours = (_paymentRecords_payment_time = paymentRecords.payment_time) === null || _paymentRecords_payment_time === void 0 ? void 0 : _paymentRecords_payment_time.getHours()) !== null && _paymentRecords_payment_time_getHours !== void 0 ? _paymentRecords_payment_time_getHours : 0, (_paymentRecords_payment_time_getMinutes = (_paymentRecords_payment_time1 = paymentRecords.payment_time) === null || _paymentRecords_payment_time1 === void 0 ? void 0 : _paymentRecords_payment_time1.getMinutes()) !== null && _paymentRecords_payment_time_getMinutes !== void 0 ? _paymentRecords_payment_time_getMinutes : 0);
    const dateTime = i18n.date(new Date(dateTimeWithReplacedTime), locale.dateTimeFormat);
    const { data: entityUser, isLoading: isEntityUserLoading } = useEntityUserByAuthToken();
    var _entityUser_first_name, _entityUser_last_name;
    const paymentAuthor = `${(_entityUser_first_name = entityUser === null || entityUser === void 0 ? void 0 : entityUser.first_name) !== null && _entityUser_first_name !== void 0 ? _entityUser_first_name : ''} ${(_entityUser_last_name = entityUser === null || entityUser === void 0 ? void 0 : entityUser.last_name) !== null && _entityUser_last_name !== void 0 ? _entityUser_last_name : ''}`;
    var _paymentRecords_amount;
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: {
            display: 'flex',
            flexDirection: 'column',
            gap: 3
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 1,
                    alignItems: 'center',
                    textAlign: 'center'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        sx: {
                            borderRadius: '100%',
                            backgroundColor: '#F2F2F2',
                            width: '44px',
                            height: '44px',
                            display: 'flex',
                            justifyContent: 'center',
                            alignItems: 'center'
                        },
                        children: /*#__PURE__*/ jsxRuntime.jsx(DriveFileRenameOutlineIcon__default.default, {
                            sx: {
                                color: '#707070'
                            }
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: i18n._({
                            id: "8EDFEE"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h2",
                                children: formatCurrencyToDisplay((_paymentRecords_amount = paymentRecords === null || paymentRecords === void 0 ? void 0 : paymentRecords.amount) !== null && _paymentRecords_amount !== void 0 ? _paymentRecords_amount : 0, invoice.currency)
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: i18n._({
                                    id: "wX2Tuz",
                                    values: {
                                        0: invoice.counterpart_name
                                    }
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(MoniteCard, {
                items: [
                    {
                        label: i18n._({
                            id: "fZ5Vnu"
                        }),
                        value: !paymentRecords.payment_date ? '—' : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            fontWeight: 500,
                            children: dateTime
                        })
                    },
                    {
                        label: i18n._({
                            id: "N2C89m"
                        }),
                        value: !invoice.id ? '—' : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            fontWeight: 500,
                            children: invoice.id
                        })
                    },
                    {
                        label: i18n._({
                            id: "NCIYDF"
                        }),
                        value: isEntityUserLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
                            variant: "text",
                            width: "50%"
                        }) : !paymentAuthor ? '—' : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            fontWeight: 500,
                            children: paymentAuthor
                        })
                    }
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "warning",
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body2",
                    children: i18n._({
                        id: "/Ux+T4"
                    })
                })
            })
        ]
    });
};

function _define_property$I(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$I(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$I(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$u(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$u(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$u(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$d(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$d(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$d(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFDatePicker = (_param)=>{
    var { control, name, slotProps, valueAs = 'date', stringFormat = 'yyyy-MM-dd' } = _param, other = _object_without_properties$d(_param, [
        "control",
        "name",
        "slotProps",
        "valueAs",
        "stringFormat"
    ]);
    const isErrorCustom = (error)=>(error === null || error === void 0 ? void 0 : error.type) === 'custom';
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error, isTouched }, formState: { isValid } })=>{
            const isInvalid = (isTouched || !isValid) && !isErrorCustom(error);
            // new Date(null) generates "1970-01-01T00:00:00.000Z" and undefined is not acceptable because component becomes uncontrolled
            const date = field.value !== null ? typeof field.value === 'string' ? dateFns.parse(field.value, stringFormat, new Date()) : new Date(field.value) : null;
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.DatePicker, _object_spread_props$u(_object_spread$I({}, field, other), {
                        value: date,
                        onChange: (newValue)=>{
                            if (newValue instanceof Date && !Number.isNaN(newValue.getTime())) {
                                const nextValue = valueAs === 'string' ? dateFns.format(newValue, stringFormat) : newValue;
                                field.onChange(nextValue);
                            } else {
                                field.onChange(null);
                            }
                        },
                        slotProps: _object_spread_props$u(_object_spread$I({}, slotProps), {
                            popper: _object_spread_props$u(_object_spread$I({}, slotProps === null || slotProps === void 0 ? void 0 : slotProps.popper), {
                                container: root
                            }),
                            dialog: _object_spread_props$u(_object_spread$I({}, slotProps === null || slotProps === void 0 ? void 0 : slotProps.dialog), {
                                container: root
                            }),
                            textField: _object_spread_props$u(_object_spread$I({
                                variant: 'standard'
                            }, slotProps === null || slotProps === void 0 ? void 0 : slotProps.textField), {
                                id: name,
                                error: isInvalid && !!(error === null || error === void 0 ? void 0 : error.message),
                                helperText: isInvalid && (error === null || error === void 0 ? void 0 : error.message)
                            })
                        })
                    })),
                    isErrorCustom(error) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                        severity: "error",
                        icon: false,
                        sx: {
                            marginTop: -2
                        },
                        children: error === null || error === void 0 ? void 0 : error.message
                    })
                ]
            });
        }
    });
};

function _define_property$H(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$H(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$H(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$t(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$t(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$t(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$c(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$c(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$c(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFTimePicker = (_param)=>{
    var { control, name, required, fullWidth, slotProps } = _param, other = _object_without_properties$c(_param, [
        "control",
        "name",
        "required",
        "fullWidth",
        "slotProps"
    ]);
    const isErrorCustom = (error)=>(error === null || error === void 0 ? void 0 : error.type) === 'custom';
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: ({ field, fieldState: { error, isTouched }, formState: { isValid } })=>{
            const isInvalid = (isTouched || !isValid) && !isErrorCustom(error);
            const date = field.value !== null ? new Date(field.value) : null;
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(xDatePickers.TimeField, _object_spread_props$t(_object_spread$H({}, field, other), {
                        variant: "standard",
                        required: required,
                        fullWidth: fullWidth,
                        value: date,
                        helperText: isInvalid && (error === null || error === void 0 ? void 0 : error.message),
                        slotProps: _object_spread_props$t(_object_spread$H({}, slotProps), {
                            textField: _object_spread_props$t(_object_spread$H({}, slotProps === null || slotProps === void 0 ? void 0 : slotProps.textField), {
                                id: name,
                                error: isInvalid && !!(error === null || error === void 0 ? void 0 : error.message),
                                helperText: isInvalid && (error === null || error === void 0 ? void 0 : error.message)
                            })
                        })
                    })),
                    isErrorCustom(error) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                        severity: "error",
                        icon: false,
                        sx: {
                            marginTop: -2
                        },
                        children: error === null || error === void 0 ? void 0 : error.message
                    })
                ]
            });
        }
    });
};

const PaymentRecordForm = ({ invoice, initialValues, isLoading, onSubmit, onCancel })=>{
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay, getSymbolFromCurrency } = useCurrencies();
    const { control, handleSubmit, reset, setValue } = reactHookForm.useForm({
        resolver: safeZodResolver(manualPaymentRecordValidationSchema(i18n, invoice.amount_due)),
        defaultValues: React.useMemo(()=>initialValues !== null && initialValues !== void 0 ? initialValues : {
                amount: 0,
                payment_date: new Date(),
                payment_time: new Date()
            }, [
            initialValues
        ])
    });
    React.useEffect(()=>{
        reset(initialValues);
    }, [
        initialValues,
        reset
    ]);
    const currencySymbol = getSymbolFromCurrency(invoice.currency);
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsxs("form", {
            onSubmit: handleSubmit(onSubmit),
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogTitle, {
                    sx: {
                        px: 4,
                        pt: 4
                    },
                    variant: "h3",
                    id: "dialog-title",
                    children: i18n._({
                        id: "QrqqXQ"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                    sx: {
                        p: 4
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                        container: true,
                        spacing: 1,
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Grid, {
                                item: true,
                                xs: 12,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                                        label: i18n._({
                                            id: "hehnjM"
                                        }),
                                        name: "amount",
                                        placeholder: "0",
                                        control: control,
                                        type: "number",
                                        sx: {
                                            '::after': {
                                                content: `"${currencySymbol}"`,
                                                position: 'absolute',
                                                right: '16px',
                                                bottom: 0,
                                                transform: 'translateY(-50%)',
                                                fontSize: '16px',
                                                color: 'rgba(0,0,0,0.28)',
                                                pointerEvents: 'none'
                                            }
                                        },
                                        fullWidth: true,
                                        required: true
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.FormHelperText, {
                                        children: [
                                            i18n._({
                                                id: "bjO8Oh"
                                            }),
                                            ' ',
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                                variant: "text",
                                                sx: {
                                                    textDecoration: 'underline'
                                                },
                                                onClick: ()=>setValue('amount', invoice.amount_due / 100),
                                                children: formatCurrencyToDisplay(invoice.amount_due, invoice.currency)
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                item: true,
                                xs: 6,
                                children: /*#__PURE__*/ jsxRuntime.jsx(RHFDatePicker, {
                                    label: i18n._({
                                        id: "mYGY3B"
                                    }),
                                    name: "payment_date",
                                    control: control
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Grid, {
                                item: true,
                                xs: 6,
                                children: /*#__PURE__*/ jsxRuntime.jsx(RHFTimePicker, {
                                    label: i18n._({
                                        id: "LhMjLm"
                                    }),
                                    name: "payment_time",
                                    control: control,
                                    sx: {
                                        '::after': {
                                            content: '"UTC"',
                                            position: 'absolute',
                                            right: '16px',
                                            bottom: 0,
                                            transform: 'translateY(-50%)',
                                            fontSize: '16px',
                                            color: 'rgba(0,0,0,0.28)',
                                            pointerEvents: 'none'
                                        }
                                    },
                                    fullWidth: true,
                                    required: true
                                })
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                    sx: {
                        px: 4,
                        pb: 4
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            autoFocus: true,
                            onClick: onCancel,
                            children: i18n._({
                                id: "dEgA5A"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            variant: "contained",
                            startIcon: isLoading ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                                size: 20,
                                color: "warning"
                            }) : null,
                            type: "submit",
                            children: i18n._({
                                id: "tfDRzk"
                            })
                        })
                    ]
                })
            ]
        })
    });
};

function _define_property$G(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$G(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$G(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$s(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$s(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$s(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const DEFAULT_PAYMENT_RECORD = {
    amount: 0,
    payment_date: new Date(),
    payment_time: new Date(),
    created_by: ''
};
const RecordManualPaymentModal = ({ children, invoice })=>{
    const [modalOpen, setModalOpen] = React.useState(false);
    const [confirmSubmission, setConfirmSubmission] = React.useState(false);
    const [formValues, setFormValues] = React.useState(DEFAULT_PAYMENT_RECORD);
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const openModal = ()=>setModalOpen(true);
    const closeModal = ()=>setModalOpen(false);
    const { api, queryClient } = useMoniteContext();
    const { mutate: createPaymentRecord, isPending: isCreatingPaymentRecord } = useCreatePaymentRecord();
    const { data: user, isLoading: isLoadingUser } = useEntityUserByAuthToken();
    const showConfirmation = (data)=>{
        var _data_amount, _user_id;
        setFormValues(_object_spread_props$s(_object_spread$G({}, data), {
            amount: toMinorUnits((_data_amount = data === null || data === void 0 ? void 0 : data.amount) !== null && _data_amount !== void 0 ? _data_amount : 0),
            created_by: (_user_id = user === null || user === void 0 ? void 0 : user.id) !== null && _user_id !== void 0 ? _user_id : ''
        }));
        setConfirmSubmission(true);
    };
    const resetForm = ()=>{
        setConfirmSubmission(false);
        setFormValues(DEFAULT_PAYMENT_RECORD);
    };
    const createManualPaymentRecord = ()=>{
        const dateTimeWithReplacedTime = new Date(formValues.payment_date).setHours(formValues.payment_time.getHours(), formValues.payment_time.getMinutes());
        const paid_at = new Date(dateTimeWithReplacedTime);
        var _formValues_amount;
        createPaymentRecord({
            amount: (_formValues_amount = formValues === null || formValues === void 0 ? void 0 : formValues.amount) !== null && _formValues_amount !== void 0 ? _formValues_amount : 0,
            currency: invoice.currency,
            paid_at: paid_at.toISOString(),
            object: {
                id: invoice.id,
                type: 'receivable'
            },
            payment_intent_id: invoice.id,
            entity_user_id: user === null || user === void 0 ? void 0 : user.id,
            status: 'succeeded'
        }, {
            onSuccess: ()=>{
                api.receivables.getReceivablesId.invalidateQueries({
                    parameters: {
                        path: {
                            receivable_id: invoice.id
                        }
                    }
                }, queryClient);
                api.receivables.getReceivables.invalidateQueries(queryClient);
                closeModal();
                resetForm();
            }
        });
    };
    const isLoading = isCreatingPaymentRecord || isLoadingUser;
    if ([
        'draft',
        'paid',
        'canceled',
        'deleted',
        'accepted',
        'recurring',
        'expired',
        'declined',
        'uncollectible'
    ].includes(invoice.status)) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            children({
                openModal
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Dialog, {
                open: modalOpen,
                onClose: closeModal,
                container: root,
                "aria-labelledby": "dialog-title",
                fullWidth: true,
                maxWidth: "sm",
                children: confirmSubmission ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.DialogContent, {
                            sx: {
                                p: 4
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(ManualPaymentRecordDetails, {
                                invoice: invoice,
                                paymentRecords: formValues
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.DialogActions, {
                            sx: {
                                px: 4,
                                pb: 4,
                                justifyContent: 'space-between'
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                    onClick: closeModal,
                                    children: i18n._({
                                        id: "dEgA5A"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                    sx: {
                                        display: 'flex',
                                        gap: 2
                                    },
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "outlined",
                                            disabled: isLoading,
                                            onClick: ()=>setConfirmSubmission(false),
                                            children: i18n._({
                                                id: "BuJ3vH"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                            variant: "contained",
                                            disabled: isLoading,
                                            onClick: createManualPaymentRecord,
                                            children: i18n._({
                                                id: "7VpPHA"
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }) : /*#__PURE__*/ jsxRuntime.jsx(PaymentRecordForm, {
                    invoice: invoice,
                    initialValues: {
                        amount: formValues.amount ? fromMinorUnits(formValues.amount) : 0,
                        payment_date: formValues.payment_date,
                        payment_time: formValues.payment_time
                    },
                    isLoading: isLoading,
                    onCancel: closeModal,
                    onSubmit: showConfirmation
                })
            })
        ]
    });
};

const RecurrenceCancelModal = ({ invoice, open, onClose })=>{
    var _iterations_filter, _iterations, _this;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    var _invoice_recurrence_id;
    const recurrence_id = (_invoice_recurrence_id = invoice === null || invoice === void 0 ? void 0 : invoice.recurrence_id) !== null && _invoice_recurrence_id !== void 0 ? _invoice_recurrence_id : '';
    const { mutate: cancelRecurrence, isPending: isCancellingRecurrence } = useCancelRecurrence(recurrence_id, invoice.id);
    const { data: recurrence } = useGetRecurrenceById(recurrence_id);
    const previousRecurrence = reactUse.usePreviousDistinct(recurrence, deepEqual__default.default);
    var _iterations_filter_length;
    const totalPendingInvoices = (_iterations_filter_length = (_this = (previousRecurrence === null || previousRecurrence === void 0 ? void 0 : previousRecurrence.status) === 'active' && (recurrence === null || recurrence === void 0 ? void 0 : recurrence.status) === 'canceled' ? previousRecurrence : recurrence) === null || _this === void 0 ? void 0 : (_iterations = _this.iterations) === null || _iterations === void 0 ? void 0 : (_iterations_filter = _iterations.filter(({ status })=>status === 'pending')) === null || _iterations_filter === void 0 ? void 0 : _iterations_filter.length) !== null && _iterations_filter_length !== void 0 ? _iterations_filter_length : 0;
    const pendingInvoicesTotalAmountWithCreditNotes = invoice && totalPendingInvoices !== undefined ? formatCurrencyToDisplay(invoice.total_amount_with_credit_notes * totalPendingInvoices, invoice.currency) : undefined;
    const invoicesPluralForm = i18n._({
        id: "Icgalf",
        values: {
            0: totalPendingInvoices !== null && totalPendingInvoices !== void 0 ? totalPendingInvoices : 0
        }
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(ConfirmationModal, {
        open: open && Boolean(invoice.id),
        title: i18n._({
            id: "VTDxQD"
        }),
        confirmLabel: i18n._({
            id: "QLbn1Q"
        }),
        cancelLabel: i18n._({
            id: "yz7wBu"
        }),
        onClose: onClose,
        onConfirm: ()=>cancelRecurrence(undefined, {
                onSuccess: onClose
            }),
        isLoading: isCancellingRecurrence,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:inline-block",
                children: i18n._({
                    id: "Qcl8La"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:inline-block",
                children: i18n._({
                    id: "q2cqoh"
                })
            }),
            invoice && totalPendingInvoices !== undefined && /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:inline-block",
                children: /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
                    id: "4FT/4T",
                    values: {
                        totalPendingInvoices: totalPendingInvoices,
                        invoicesPluralForm: invoicesPluralForm,
                        pendingInvoicesTotalAmountWithCreditNotes: pendingInvoicesTotalAmountWithCreditNotes
                    },
                    components: {
                        0: /*#__PURE__*/ jsxRuntime.jsx("strong", {}),
                        1: /*#__PURE__*/ jsxRuntime.jsx("strong", {})
                    }
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                className: "mtw:inline-block",
                children: i18n._({
                    id: "3LDCpD"
                })
            })
        ]
    });
};

function asyncGeneratorStep$g(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$g(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$g(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$g(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const InvoiceDetailsActions = ({ invoice, actions, isPDFViewerOpen })=>{
    const { i18n } = react.useLingui();
    const isMobileScreen = useIsMobileScreen();
    const [markAsUncollectibleModalOpen, setMarkAsUncollectibleModalOpen] = React.useState(false);
    const [deleteModalOpen, setDeleteModalOpen] = React.useState(false);
    const [cancelModalOpen, setCancelModalOpen] = React.useState(false);
    const [cancelRecurrenceModalOpen, setCancelRecurrenceModalOpen] = React.useState(false);
    const PERMISSION_ERROR_MESSAGE = i18n._({
        id: "o1evUu"
    });
    const { data: isUpdateAllowed, isLoading: isUpdateAllowedLoading } = useIsActionAllowed({
        method: 'receivable',
        action: 'update',
        entityUserId: invoice === null || invoice === void 0 ? void 0 : invoice.entity_user_id
    });
    const { refetch: downloadPdf, isLoading: isDownloadingPdf } = useGetReceivablePDFById(invoice.id, false);
    const { mutate: issueInvoice, isPending: isIssuingInvoice } = useIssueReceivableById(invoice.id);
    const { mutate: duplicateInvoice } = useDuplicateInvoice(actions.onDuplicate);
    const isDraft = invoice.status === 'draft';
    const isIssued = invoice.status === 'issued';
    const isOverdue = invoice.status === 'overdue';
    const isPartiallyPaid = invoice.status === 'partially_paid';
    const isUncollectible = invoice.status === 'uncollectible';
    const isCancelled = invoice.status === 'canceled';
    const isRecurring = invoice.status === 'recurring';
    const allowRecordPayment = isIssued || isOverdue || isPartiallyPaid;
    const hideSendAndPdfButtons = allowRecordPayment && isMobileScreen;
    const handleDuplicateInvoice = ()=>{
        duplicateInvoice({
            path: {
                receivable_id: invoice.id
            }
        });
    };
    const handleDownloadPdf = ()=>_async_to_generator$g(function*() {
            var _pdfLink_data;
            const pdfLink = yield downloadPdf();
            if ((_pdfLink_data = pdfLink.data) === null || _pdfLink_data === void 0 ? void 0 : _pdfLink_data.file_url) {
                window.open(pdfLink.data.file_url, '_blank');
            }
        })();
    const handleButtonClick = (callback)=>{
        if (isUpdateAllowed) {
            callback();
        } else {
            reactHotToast.toast.error(PERMISSION_ERROR_MESSAGE);
        }
    };
    var _invoice_id, _invoice_id1, _invoice_id2;
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:items-center mtw:gap-1.5",
        children: [
            markAsUncollectibleModalOpen && /*#__PURE__*/ jsxRuntime.jsx(MarkAsUncollectibleModal, {
                invoiceId: (_invoice_id = invoice === null || invoice === void 0 ? void 0 : invoice.id) !== null && _invoice_id !== void 0 ? _invoice_id : '',
                open: markAsUncollectibleModalOpen,
                onClose: ()=>setMarkAsUncollectibleModalOpen(false),
                onMarkAsUncollectible: actions.onMarkAsUncollectible
            }),
            deleteModalOpen && /*#__PURE__*/ jsxRuntime.jsx(InvoiceDeleteModal, {
                open: deleteModalOpen,
                onClose: ()=>setDeleteModalOpen(false),
                invoiceId: (_invoice_id1 = invoice === null || invoice === void 0 ? void 0 : invoice.id) !== null && _invoice_id1 !== void 0 ? _invoice_id1 : '',
                entityUserId: invoice === null || invoice === void 0 ? void 0 : invoice.entity_user_id,
                documentId: invoice === null || invoice === void 0 ? void 0 : invoice.document_id,
                onDelete: actions.onDelete
            }),
            cancelModalOpen && /*#__PURE__*/ jsxRuntime.jsx(InvoiceCancelModal, {
                invoiceId: (_invoice_id2 = invoice === null || invoice === void 0 ? void 0 : invoice.id) !== null && _invoice_id2 !== void 0 ? _invoice_id2 : '',
                open: cancelModalOpen,
                onClose: ()=>setCancelModalOpen(false)
            }),
            cancelRecurrenceModalOpen && /*#__PURE__*/ jsxRuntime.jsx(RecurrenceCancelModal, {
                invoice: invoice,
                open: cancelRecurrenceModalOpen,
                onClose: ()=>setCancelRecurrenceModalOpen(false)
            }),
            isRecurring && !isCancelled && /*#__PURE__*/ jsxRuntime.jsx(Button, {
                type: "button",
                variant: "destructive",
                size: "sm",
                onClick: ()=>handleButtonClick(()=>setCancelRecurrenceModalOpen(true)),
                disabled: isUpdateAllowedLoading,
                children: i18n._({
                    id: "QLbn1Q"
                })
            }),
            isDraft && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(Button, {
                        type: "button",
                        size: "sm",
                        onClick: ()=>handleButtonClick(actions.onIssueAndSendButtonClick),
                        disabled: isUpdateAllowedLoading,
                        children: i18n._({
                            id: "u2z0ER"
                        })
                    }),
                    !isMobileScreen && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                type: "button",
                                variant: "outline",
                                size: "sm",
                                disabled: isIssuingInvoice || isUpdateAllowedLoading,
                                onClick: ()=>handleButtonClick(issueInvoice),
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.FileCheck, {}),
                                    " ",
                                    i18n._({
                                        id: "DLNgVH"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                                type: "button",
                                variant: "outline",
                                size: "sm",
                                onClick: ()=>handleButtonClick(actions.onEditButtonClick),
                                disabled: isUpdateAllowedLoading,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.SquarePen, {}),
                                    " ",
                                    i18n._({
                                        id: "ePK91l"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            allowRecordPayment && /*#__PURE__*/ jsxRuntime.jsx(RecordManualPaymentModal, {
                invoice: invoice,
                children: ({ openModal })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                        type: "button",
                        size: "sm",
                        disabled: isUpdateAllowedLoading,
                        onClick: ()=>handleButtonClick(openModal),
                        children: i18n._({
                            id: "QrqqXQ"
                        })
                    })
            }),
            !isDraft && !isUncollectible && !hideSendAndPdfButtons && !isRecurring && /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                type: "button",
                variant: "outline",
                size: "sm",
                onClick: ()=>handleButtonClick(actions.onIssueAndSendButtonClick),
                disabled: isUpdateAllowedLoading,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Mail, {}),
                    " ",
                    i18n._({
                        id: "JlFcis"
                    })
                ]
            }),
            !isDraft && !hideSendAndPdfButtons && /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                type: "button",
                variant: "outline",
                size: "sm",
                disabled: isDownloadingPdf,
                onClick: handleDownloadPdf,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Download, {}),
                    " ",
                    i18n._({
                        id: "CcK+Ft"
                    })
                ]
            }),
            isRecurring && /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                type: "button",
                variant: "outline",
                size: "sm",
                onClick: ()=>handleButtonClick(handleDuplicateInvoice),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Copy, {}),
                    " ",
                    i18n._({
                        id: "euc6Ns"
                    })
                ]
            }),
            !isRecurring && /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenu$1, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuTrigger, {
                        asChild: true,
                        children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                            type: "button",
                            variant: "outline",
                            size: "sm",
                            disabled: isUpdateAllowedLoading,
                            children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.MoreVerticalIcon, {})
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(DropdownMenuContent, {
                        align: "end",
                        children: [
                            isDraft && isMobileScreen && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                        disabled: isIssuingInvoice || isUpdateAllowedLoading,
                                        onClick: ()=>handleButtonClick(issueInvoice),
                                        children: i18n._({
                                            id: "DLNgVH"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                        disabled: isUpdateAllowedLoading,
                                        onClick: ()=>handleButtonClick(actions.onEditButtonClick),
                                        children: i18n._({
                                            id: "ePK91l"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                onClick: ()=>handleButtonClick(handleDuplicateInvoice),
                                children: i18n._({
                                    id: "euc6Ns"
                                })
                            }),
                            (isDraft || hideSendAndPdfButtons) && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                        onClick: ()=>handleButtonClick(actions.onIssueAndSendButtonClick),
                                        children: i18n._({
                                            id: "DDmKR9"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                        onClick: handleDownloadPdf,
                                        children: i18n._({
                                            id: "Yxwxxw"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                onClick: actions.onTemplateSettingsButtonClick,
                                children: i18n._({
                                    id: "UYSe5Y"
                                })
                            }),
                            isDraft && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                onClick: ()=>setDeleteModalOpen(true),
                                variant: "destructive",
                                children: i18n._({
                                    id: "cnGeoo"
                                })
                            }),
                            (isIssued || isOverdue) && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                onClick: ()=>handleButtonClick(()=>setCancelModalOpen(true)),
                                children: i18n._({
                                    id: "fGX+Xc"
                                })
                            }),
                            isOverdue && /*#__PURE__*/ jsxRuntime.jsx(DropdownMenuItem, {
                                onClick: ()=>handleButtonClick(()=>setMarkAsUncollectibleModalOpen(true)),
                                children: i18n._({
                                    id: "3hoNxe"
                                })
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                type: "button",
                variant: "secondary",
                className: "mtw:ml-auto",
                size: "sm",
                onClick: actions.onViewPDFButtonClick,
                children: [
                    isPDFViewerOpen ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.EyeOff, {}) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Eye, {}),
                    " ",
                    i18n._({
                        id: "0R105c"
                    })
                ]
            })
        ]
    });
};

const InvoiceDetailsInfoBlock = ({ label, value, status, onClick })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("h3", {
                className: "mtw:text-neutral-10 mtw:text-sm mtw:font-medium mtw:leading-5",
                children: label
            }),
            onClick ? /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                variant: "link",
                onClick: onClick,
                className: "mtw:w-fit mtw:gap-1 mtw:h-5 mtw:hover:no-underline mtw:text-neutral-10 mtw:font-normal mtw:p-0 mtw:has-[>svg]:px-0",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "mtw:underline",
                        children: value
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ArrowUpRight, {})
                ]
            }) : /*#__PURE__*/ jsxRuntime.jsx("p", {
                className: tailwindMerge.twMerge('mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-neutral-10', status && status === 'overdue' && 'mtw:text-danger-10', status && status === 'draft' && 'mtw:text-neutral-50'),
                children: value
            })
        ]
    });
};

const SummaryLine = ({ label, value, isBold })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
        className: tailwindMerge.twMerge('mtw:w-full mtw:flex mtw:gap-4 mtw:justify-between mtw:text-neutral-50 mtw:font-normal mtw:text-sm mtw:leading-5', isBold && 'mtw:font-medium mtw:text-neutral-10'),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                children: label
            }),
            /*#__PURE__*/ jsxRuntime.jsx("span", {
                children: value
            })
        ]
    });
};
const InvoiceDetailsSummary = ({ invoice })=>{
    var _invoice_related_documents, _invoice_total_vat_amounts, _paymentRecords_data, _creditNoteQuery_data;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { locale } = useMoniteContext();
    const { data: paymentRecords } = useGetPaymentRecords(invoice === null || invoice === void 0 ? void 0 : invoice.id);
    const creditNoteIds = (invoice === null || invoice === void 0 ? void 0 : invoice.type) === 'invoice' ? invoice === null || invoice === void 0 ? void 0 : (_invoice_related_documents = invoice.related_documents) === null || _invoice_related_documents === void 0 ? void 0 : _invoice_related_documents.credit_note_ids : undefined;
    const { data: creditNoteQuery } = useGetReceivables({
        id__in: creditNoteIds,
        type: 'credit_note'
    }, Boolean(creditNoteIds === null || creditNoteIds === void 0 ? void 0 : creditNoteIds.length));
    const isPaid = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'paid';
    const isPartiallyPaid = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'partially_paid';
    const isCanceled = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'canceled';
    const shouldShowExtraPaymentDetails = isPaid || isPartiallyPaid || isCanceled;
    var _invoice_subtotal, _invoice_total_amount, _invoice_amount_due;
    return /*#__PURE__*/ jsxRuntime.jsxs("ul", {
        className: "mtw:w-full mtw:flex mtw:flex-col mtw:gap-2",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(SummaryLine, {
                label: i18n._({
                    id: "X2rrlw"
                }),
                value: formatCurrencyToDisplay((_invoice_subtotal = invoice === null || invoice === void 0 ? void 0 : invoice.subtotal) !== null && _invoice_subtotal !== void 0 ? _invoice_subtotal : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
            }),
            /*#__PURE__*/ jsxRuntime.jsx("li", {
                className: "mtw:flex mtw:flex-col mtw:gap-1",
                children: invoice === null || invoice === void 0 ? void 0 : (_invoice_total_vat_amounts = invoice.total_vat_amounts) === null || _invoice_total_vat_amounts === void 0 ? void 0 : _invoice_total_vat_amounts.map((vatRate)=>{
                    var _vatRate_amount;
                    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:w-full mtw:flex mtw:gap-4 mtw:justify-between mtw:text-neutral-50 mtw:font-normal mtw:text-sm mtw:leading-5",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                children: i18n._({
                                    id: "APIWMD",
                                    values: {
                                        0: rateMinorToMajor(vatRate === null || vatRate === void 0 ? void 0 : vatRate.value)
                                    }
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                children: formatCurrencyToDisplay((_vatRate_amount = vatRate === null || vatRate === void 0 ? void 0 : vatRate.amount) !== null && _vatRate_amount !== void 0 ? _vatRate_amount : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                            })
                        ]
                    }, vatRate === null || vatRate === void 0 ? void 0 : vatRate.id);
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(SummaryLine, {
                label: i18n._({
                    id: "1gj2RY",
                    values: {
                        0: invoice === null || invoice === void 0 ? void 0 : invoice.currency
                    }
                }),
                value: formatCurrencyToDisplay((_invoice_total_amount = invoice === null || invoice === void 0 ? void 0 : invoice.total_amount) !== null && _invoice_total_amount !== void 0 ? _invoice_total_amount : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency),
                isBold: true
            }),
            shouldShowExtraPaymentDetails && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    paymentRecords === null || paymentRecords === void 0 ? void 0 : (_paymentRecords_data = paymentRecords.data) === null || _paymentRecords_data === void 0 ? void 0 : _paymentRecords_data.map((paymentRecord)=>{
                        var _paymentRecord_amount;
                        return /*#__PURE__*/ jsxRuntime.jsx(SummaryLine, {
                            label: (paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.paid_at) ? i18n._({
                                id: "OHVBR5",
                                values: {
                                    0: i18n.date(paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.paid_at, locale.dateTimeFormat)
                                }
                            }) : i18n._({
                                id: "9HvliP"
                            }),
                            value: formatCurrencyToDisplay((_paymentRecord_amount = paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.amount) !== null && _paymentRecord_amount !== void 0 ? _paymentRecord_amount : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                        }, paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.id);
                    }),
                    creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data = creditNoteQuery.data) === null || _creditNoteQuery_data === void 0 ? void 0 : _creditNoteQuery_data.map((creditNote)=>{
                        var _creditNote_total_amount;
                        return /*#__PURE__*/ jsxRuntime.jsx(SummaryLine, {
                            label: (creditNote === null || creditNote === void 0 ? void 0 : creditNote.issue_date) ? i18n._({
                                id: "VZ7lPX",
                                values: {
                                    0: i18n.date(creditNote === null || creditNote === void 0 ? void 0 : creditNote.issue_date, locale.dateTimeFormat)
                                }
                            }) : i18n._({
                                id: "uNz5FV"
                            }),
                            value: formatCurrencyToDisplay((_creditNote_total_amount = creditNote === null || creditNote === void 0 ? void 0 : creditNote.total_amount) !== null && _creditNote_total_amount !== void 0 ? _creditNote_total_amount : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                        }, creditNote === null || creditNote === void 0 ? void 0 : creditNote.id);
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(SummaryLine, {
                        label: i18n._({
                            id: "RtEjhl",
                            values: {
                                0: invoice === null || invoice === void 0 ? void 0 : invoice.currency
                            }
                        }),
                        value: formatCurrencyToDisplay((_invoice_amount_due = invoice === null || invoice === void 0 ? void 0 : invoice.amount_due) !== null && _invoice_amount_due !== void 0 ? _invoice_amount_due : 0, invoice === null || invoice === void 0 ? void 0 : invoice.currency),
                        isBold: true
                    })
                ]
            })
        ]
    });
};

const InvoiceDetailsTabDetails = ({ invoice })=>{
    var _invoice_counterpart_vat_id, _invoice_counterpart_vat_id1, _invoice_counterpart_billing_address, _invoice_counterpart_billing_address1, _invoice_counterpart_billing_address2, _invoice_counterpart_billing_address3, _invoice_counterpart_billing_address4, _invoice_counterpart_billing_address5, _invoice_counterpart_contact, _invoice_counterpart_contact1, _invoice_line_items, _invoice_line_items1, _invoice_payment_terms, _invoice_entity_bank_account, _invoice_entity_bank_account1, _invoice_entity_bank_account2;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const isInclusivePricing = (invoice === null || invoice === void 0 ? void 0 : invoice.vat_mode) === 'inclusive';
    if ((invoice === null || invoice === void 0 ? void 0 : invoice.type) !== 'invoice') {
        return null;
    }
    var _invoice_counterpart_name, _invoice_counterpart_billing_address_country, _invoice_payment_terms_name, _invoice_entity_bank_account_bank_name, _invoice_entity_bank_account_iban, _invoice_entity_bank_account_bic;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h2", {
                        className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                        children: i18n._({
                            id: "876pfE"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:grid mtw:grid-cols-2 mtw:gap-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "6YtxFj"
                                }),
                                value: (_invoice_counterpart_name = invoice === null || invoice === void 0 ? void 0 : invoice.counterpart_name) !== null && _invoice_counterpart_name !== void 0 ? _invoice_counterpart_name : '-'
                            }),
                            (invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_vat_id = invoice.counterpart_vat_id) === null || _invoice_counterpart_vat_id === void 0 ? void 0 : _invoice_counterpart_vat_id.value) && /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "m+elvG"
                                }),
                                value: invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_vat_id1 = invoice.counterpart_vat_id) === null || _invoice_counterpart_vat_id1 === void 0 ? void 0 : _invoice_counterpart_vat_id1.value
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "gzEjAL"
                                }),
                                value: `${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address === void 0 ? void 0 : _invoice_counterpart_billing_address.line1}${(invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address1 = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address1 === void 0 ? void 0 : _invoice_counterpart_billing_address1.line2) ? ` ${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address2 = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address2 === void 0 ? void 0 : _invoice_counterpart_billing_address2.line2}` : ''}, ${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address3 = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address3 === void 0 ? void 0 : _invoice_counterpart_billing_address3.postal_code}, ${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address4 = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address4 === void 0 ? void 0 : _invoice_counterpart_billing_address4.city}, ${getCountries(i18n)[(_invoice_counterpart_billing_address_country = invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_billing_address5 = invoice.counterpart_billing_address) === null || _invoice_counterpart_billing_address5 === void 0 ? void 0 : _invoice_counterpart_billing_address5.country) !== null && _invoice_counterpart_billing_address_country !== void 0 ? _invoice_counterpart_billing_address_country : '']}`
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "OSRvgd"
                                }),
                                value: `${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_contact = invoice.counterpart_contact) === null || _invoice_counterpart_contact === void 0 ? void 0 : _invoice_counterpart_contact.first_name} ${invoice === null || invoice === void 0 ? void 0 : (_invoice_counterpart_contact1 = invoice.counterpart_contact) === null || _invoice_counterpart_contact1 === void 0 ? void 0 : _invoice_counterpart_contact1.last_name}`
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:w-full mtw:h-px mtw:bg-border"
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h2", {
                        className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                        children: i18n._({
                            id: "BzfzPK"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-5",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs("table", {
                                className: "mtw:w-full",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx("thead", {
                                        children: /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                            className: "mtw:border-b-1 mtw:border-border mtw:h-10 mtw:text-neutral-10 mtw:text-sm mtw:leading-5",
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    className: "mtw:w-full mtw:text-left mtw:pr-2 mtw:whitespace-nowrap mtw:font-medium",
                                                    children: i18n._({
                                                        id: "omAUDO"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    className: "mtw:text-left mtw:px-2 mtw:whitespace-nowrap mtw:font-medium",
                                                    children: i18n._({
                                                        id: "pJ67B8"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    className: "mtw:text-right mtw:px-2 mtw:whitespace-nowrap mtw:font-medium",
                                                    children: i18n._({
                                                        id: "hehnjM"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("th", {
                                                    className: "mtw:text-right mtw:pl-2 mtw:whitespace-nowrap mtw:font-medium",
                                                    children: i18n._({
                                                        id: "zHg6Ls"
                                                    })
                                                })
                                            ]
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("tbody", {
                                        children: (invoice === null || invoice === void 0 ? void 0 : (_invoice_line_items = invoice.line_items) === null || _invoice_line_items === void 0 ? void 0 : _invoice_line_items.length) > 0 && (invoice === null || invoice === void 0 ? void 0 : (_invoice_line_items1 = invoice.line_items) === null || _invoice_line_items1 === void 0 ? void 0 : _invoice_line_items1.map((item, index)=>{
                                            var _item_product, _item_product_price_after_vat, _item_product1, _item_product_price, _item_product2, _item_product_price1, _item_product3, _item_product_price2, _item_product4, _item_product_price3, _item_product5, _item_product_vat_rate, _item_product6, _item_product7;
                                            return /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                                                className: "mtw:border-b-1 mtw:border-border mtw:h-10 mtw:text-neutral-10 mtw:text-sm mtw:leading-5",
                                                children: [
                                                    /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                        className: "mtw:py-4 mtw:pr-2 mtw:font-normal",
                                                        children: item === null || item === void 0 ? void 0 : (_item_product = item.product) === null || _item_product === void 0 ? void 0 : _item_product.name
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                        className: "mtw:py-4 mtw:px-2 mtw:font-normal mtw:whitespace-nowrap",
                                                        children: i18n._({
                                                            id: "U3Y3M6",
                                                            values: {
                                                                0: item === null || item === void 0 ? void 0 : item.quantity,
                                                                1: formatCurrencyToDisplay(isInclusivePricing ? item === null || item === void 0 ? void 0 : (_item_product1 = item.product) === null || _item_product1 === void 0 ? void 0 : (_item_product_price_after_vat = _item_product1.price_after_vat) === null || _item_product_price_after_vat === void 0 ? void 0 : _item_product_price_after_vat.value : item === null || item === void 0 ? void 0 : (_item_product2 = item.product) === null || _item_product2 === void 0 ? void 0 : (_item_product_price = _item_product2.price) === null || _item_product_price === void 0 ? void 0 : _item_product_price.value, item === null || item === void 0 ? void 0 : (_item_product3 = item.product) === null || _item_product3 === void 0 ? void 0 : (_item_product_price1 = _item_product3.price) === null || _item_product_price1 === void 0 ? void 0 : _item_product_price1.currency)
                                                            }
                                                        })
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsx("td", {
                                                        className: "mtw:py-4 mtw:px-2 mtw:font-normal mtw:text-right mtw:whitespace-nowrap",
                                                        children: formatCurrencyToDisplay(isInclusivePricing ? item === null || item === void 0 ? void 0 : item.total_after_vat : (item === null || item === void 0 ? void 0 : (_item_product4 = item.product) === null || _item_product4 === void 0 ? void 0 : (_item_product_price2 = _item_product4.price) === null || _item_product_price2 === void 0 ? void 0 : _item_product_price2.value) * (item === null || item === void 0 ? void 0 : item.quantity), item === null || item === void 0 ? void 0 : (_item_product5 = item.product) === null || _item_product5 === void 0 ? void 0 : (_item_product_price3 = _item_product5.price) === null || _item_product_price3 === void 0 ? void 0 : _item_product_price3.currency)
                                                    }),
                                                    /*#__PURE__*/ jsxRuntime.jsxs("td", {
                                                        className: "mtw:py-4 mtw:pl-2 mtw:font-normal mtw:text-right",
                                                        children: [
                                                            rateMinorToMajor(item === null || item === void 0 ? void 0 : (_item_product6 = item.product) === null || _item_product6 === void 0 ? void 0 : (_item_product_vat_rate = _item_product6.vat_rate) === null || _item_product_vat_rate === void 0 ? void 0 : _item_product_vat_rate.value),
                                                            "%"
                                                        ]
                                                    })
                                                ]
                                            }, `${item === null || item === void 0 ? void 0 : (_item_product7 = item.product) === null || _item_product7 === void 0 ? void 0 : _item_product7.id}-${index}`);
                                        }))
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsSummary, {
                                invoice: invoice
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:w-full mtw:h-px mtw:bg-border"
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h2", {
                        className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                        children: i18n._({
                            id: "Bl42QR"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:grid mtw:grid-cols-2 mtw:gap-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "4WK0VU"
                                }),
                                value: (_invoice_payment_terms_name = invoice === null || invoice === void 0 ? void 0 : (_invoice_payment_terms = invoice.payment_terms) === null || _invoice_payment_terms === void 0 ? void 0 : _invoice_payment_terms.name) !== null && _invoice_payment_terms_name !== void 0 ? _invoice_payment_terms_name : '-'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "RhQWz/"
                                }),
                                value: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                            children: [
                                                i18n._({
                                                    id: "2V2MxR"
                                                }),
                                                ' ',
                                                (_invoice_entity_bank_account_bank_name = invoice === null || invoice === void 0 ? void 0 : (_invoice_entity_bank_account = invoice.entity_bank_account) === null || _invoice_entity_bank_account === void 0 ? void 0 : _invoice_entity_bank_account.bank_name) !== null && _invoice_entity_bank_account_bank_name !== void 0 ? _invoice_entity_bank_account_bank_name : '-'
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                        /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                            children: [
                                                i18n._({
                                                    id: "+NOtzV"
                                                }),
                                                " ",
                                                (_invoice_entity_bank_account_iban = invoice === null || invoice === void 0 ? void 0 : (_invoice_entity_bank_account1 = invoice.entity_bank_account) === null || _invoice_entity_bank_account1 === void 0 ? void 0 : _invoice_entity_bank_account1.iban) !== null && _invoice_entity_bank_account_iban !== void 0 ? _invoice_entity_bank_account_iban : '-'
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                        /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                            children: [
                                                i18n._({
                                                    id: "luNjrA"
                                                }),
                                                ' ',
                                                (_invoice_entity_bank_account_bic = invoice === null || invoice === void 0 ? void 0 : (_invoice_entity_bank_account2 = invoice.entity_bank_account) === null || _invoice_entity_bank_account2 === void 0 ? void 0 : _invoice_entity_bank_account2.bic) !== null && _invoice_entity_bank_account_bic !== void 0 ? _invoice_entity_bank_account_bic : '-'
                                            ]
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$f(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$f(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$f(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$f(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$F(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$F(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$F(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$r(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$r(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$r(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const InvoiceDetailsOverviewRecurrenceSection = ({ recurrence, handleTabChange, openInvoiceDetails, isCreatedFromRecurrence })=>{
    const { i18n } = react.useLingui();
    const [isEditRecurrenceOpen, setIsEditRecurrenceOpen] = React.useState(false);
    const startDay = new Date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.start_date).getDate();
    const issuedDocuments = React.useMemo(()=>{
        var _recurrence_iterations;
        return recurrence === null || recurrence === void 0 ? void 0 : (_recurrence_iterations = recurrence.iterations) === null || _recurrence_iterations === void 0 ? void 0 : _recurrence_iterations.filter((iteration)=>iteration.status === 'completed');
    }, [
        recurrence
    ]);
    const { mutateAsync: updateRecurrence, isPending: isUpdatingRecurrence } = useUpdateRecurrenceById(recurrence === null || recurrence === void 0 ? void 0 : recurrence.id, recurrence === null || recurrence === void 0 ? void 0 : recurrence.invoice_id);
    const formName = 'edit-recurrence-form';
    const methods = reactHookForm.useForm({
        resolver: zod$1.zodResolver(getCreateRecurrenceValidationSchema(i18n)),
        defaultValues: {
            recurrence_start_date: new Date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.start_date),
            recurrence_end_date: (recurrence === null || recurrence === void 0 ? void 0 : recurrence.end_date) ? new Date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.end_date) : undefined,
            recurrence_issue_mode: startDay === 1 ? 'first_day' : 'last_day'
        }
    });
    const onSubmit = (values)=>_async_to_generator$f(function*() {
            yield updateRecurrence({
                end_date: values.recurrence_end_date ? dateFns.format(new Date(values.recurrence_end_date), 'yyyy-MM-dd') : undefined,
                start_date: values.recurrence_start_date ? dateFns.format(new Date(values.recurrence_start_date), 'yyyy-MM-dd') : undefined
            });
            setIsEditRecurrenceOpen(false);
        })();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            isEditRecurrenceOpen && /*#__PURE__*/ jsxRuntime.jsx(Sheet, {
                open: isEditRecurrenceOpen,
                onOpenChange: setIsEditRecurrenceOpen,
                children: /*#__PURE__*/ jsxRuntime.jsx(Form$1, _object_spread_props$r(_object_spread$F({}, methods), {
                    children: /*#__PURE__*/ jsxRuntime.jsx("form", {
                        id: formName,
                        name: formName,
                        onSubmit: methods.handleSubmit(onSubmit),
                        children: /*#__PURE__*/ jsxRuntime.jsxs(SheetContent, {
                            className: "mtw:gap-0",
                            showCloseButton: false,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs(SheetHeader, {
                                    className: "mtw:border-b mtw:border-border",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(SheetTitle, {
                                            children: i18n._({
                                                id: "mdwIrC"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(SheetDescription, {
                                            hidden: true,
                                            children: i18n._({
                                                id: "Z3vYqA"
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    className: "mtw:p-8 mtw:flex mtw:flex-col mtw:gap-10",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-foreground",
                                            children: i18n._({
                                                id: "6C3POP"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(RecurrenceFormContent, {
                                            isUpdate: true
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs(SheetFooter, {
                                    className: "mtw:border-t mtw:border-border mtw:flex-row mtw:justify-end",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                            variant: "outline",
                                            size: "sm",
                                            onClick: ()=>setIsEditRecurrenceOpen(false),
                                            children: i18n._({
                                                id: "dEgA5A"
                                            })
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(Button, {
                                            size: "sm",
                                            type: "submit",
                                            form: formName,
                                            disabled: isUpdatingRecurrence,
                                            children: i18n._({
                                                id: "tfDRzk"
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                }))
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-4",
                children: [
                    isCreatedFromRecurrence ? /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:justify-between mtw:items-center mtw:gap-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                                children: i18n._({
                                    id: "onzVeZ"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceRecurrenceStatusChip, {
                                status: recurrence === null || recurrence === void 0 ? void 0 : recurrence.status
                            })
                        ]
                    }) : /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-0.5",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                                children: i18n._({
                                    id: "QBQXiF"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("p", {
                                className: "mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-muted-foreground",
                                children: i18n._({
                                    id: "l9wkiK"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:grid mtw:grid-cols-2 mtw:gap-4",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "tXkhj/"
                                }),
                                value: (recurrence === null || recurrence === void 0 ? void 0 : recurrence.start_date) ? i18n.date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.start_date, {
                                    month: 'long',
                                    year: 'numeric'
                                }) : '-'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "xDr/ct"
                                }),
                                value: (recurrence === null || recurrence === void 0 ? void 0 : recurrence.end_date) ? i18n.date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.end_date, {
                                    month: 'long',
                                    year: 'numeric'
                                }) : '-'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "wtuVU4"
                                }),
                                value: i18n._({
                                    id: "5xqOaV",
                                    values: {
                                        0: startDay === 1 ? 'first' : 'last'
                                    }
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "jqwZQU"
                                }),
                                value: i18n._({
                                    id: "JX30IV",
                                    values: {
                                        0: issuedDocuments.length,
                                        1: recurrence === null || recurrence === void 0 ? void 0 : recurrence.iterations.length
                                    }
                                }),
                                onClick: ()=>{
                                    if (isCreatedFromRecurrence) {
                                        openInvoiceDetails === null || openInvoiceDetails === void 0 ? void 0 : openInvoiceDetails(recurrence === null || recurrence === void 0 ? void 0 : recurrence.invoice_id);
                                    }
                                    handleTabChange('scheduled-invoices');
                                }
                            })
                        ]
                    }),
                    isCreatedFromRecurrence ? /*#__PURE__*/ jsxRuntime.jsx(Button, {
                        variant: "outline",
                        size: "sm",
                        className: "mtw:w-fit",
                        onClick: ()=>openInvoiceDetails === null || openInvoiceDetails === void 0 ? void 0 : openInvoiceDetails(recurrence === null || recurrence === void 0 ? void 0 : recurrence.invoice_id),
                        children: i18n._({
                            id: "8v+KGc"
                        })
                    }) : /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                        variant: "outline",
                        size: "sm",
                        className: "mtw:w-fit",
                        onClick: ()=>setIsEditRecurrenceOpen(true),
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(lucideReact.SquarePen, {}),
                            " ",
                            i18n._({
                                id: "zVkIrp"
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

function _define_property$E(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$2() {
    _extends$2 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$2.apply(this, arguments);
}
function _object_destructuring_empty$2(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$E(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$E(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$q(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$q(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$q(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$b(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$b(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$b(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Accordion(_param) {
    var props = _extends$2({}, _object_destructuring_empty$2(_param));
    return /*#__PURE__*/ jsxRuntime.jsx(AccordionPrimitive__namespace.Root, _object_spread$E({
        "data-slot": "accordion"
    }, props));
}
function AccordionItem(_param) {
    var { className } = _param, props = _object_without_properties$b(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AccordionPrimitive__namespace.Item, _object_spread$E({
        "data-slot": "accordion-item",
        className: cn('mtw:border-b mtw:last:border-b-0', className)
    }, props));
}
function AccordionTrigger(_param) {
    var { className, children } = _param, props = _object_without_properties$b(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AccordionPrimitive__namespace.Header, {
        className: "mtw:flex",
        children: /*#__PURE__*/ jsxRuntime.jsxs(AccordionPrimitive__namespace.Trigger, _object_spread_props$q(_object_spread$E({
            "data-slot": "accordion-trigger",
            className: cn('mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:flex mtw:flex-1 mtw:items-start mtw:justify-between mtw:gap-4 mtw:rounded-md mtw:py-4 mtw:text-left mtw:text-sm mtw:font-medium mtw:transition-all mtw:outline-none mtw:hover:underline mtw:focus-visible:ring-[3px] mtw:disabled:pointer-events-none mtw:disabled:opacity-50 mtw:[&[data-state=open]>svg]:rotate-180', className)
        }, props), {
            children: [
                children,
                /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {
                    className: "mtw:text-muted-foreground mtw:pointer-events-none mtw:size-4 mtw:shrink-0 mtw:translate-y-0.5 mtw:transition-transform mtw:duration-200"
                })
            ]
        }))
    });
}
function AccordionContent(_param) {
    var { className, children } = _param, props = _object_without_properties$b(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AccordionPrimitive__namespace.Content, _object_spread_props$q(_object_spread$E({
        "data-slot": "accordion-content",
        className: "mtw:data-[state=closed]:animate-accordion-up mtw:data-[state=open]:animate-accordion-down mtw:overflow-hidden mtw:text-sm"
    }, props), {
        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: cn('mtw:pt-0 mtw:pb-4', className),
            children: children
        })
    }));
}

const TermItem = ({ term, isLastTerm, invoiceId })=>{
    const { i18n } = react.useLingui();
    const [isPreviewOpen, setIsPreviewOpen] = React.useState(false);
    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
        className: "mtw:flex mtw:gap-1 mtw:items-center mtw:justify-between",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center mtw:gap-3",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: tailwindMerge.twMerge('mtw:flex mtw:flex-col mtw:gap-1', isLastTerm ? 'mtw:pt-0' : 'mtw:pt-2 mtw:justify-end mtw:items-center'),
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Bell, {
                                className: "mtw:size-4"
                            }),
                            !isLastTerm && /*#__PURE__*/ jsxRuntime.jsx("div", {
                                className: "mtw:w-px mtw:h-1.5 mtw:bg-neutral-80"
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "mtw:text-neutral-10 mtw:text-sm mtw:font-normal mtw:leading-5",
                        children: term.reminderTerm
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Button, {
                variant: "link",
                onClick: ()=>setIsPreviewOpen(true),
                children: i18n._({
                    id: "+t8YBO"
                })
            }),
            isPreviewOpen && /*#__PURE__*/ jsxRuntime.jsx(Dialog, {
                open: isPreviewOpen,
                onOpenChange: setIsPreviewOpen,
                children: /*#__PURE__*/ jsxRuntime.jsxs(DialogContent, {
                    fullScreen: true,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(PreviewEmail, {
                            invoiceId: invoiceId,
                            body: term.body,
                            subject: term.subject
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(DialogDescription, {
                            hidden: true,
                            children: i18n._({
                                id: "ccVY/K"
                            })
                        })
                    ]
                })
            })
        ]
    });
};
const InvoiceDetailsOverviewReminders = ({ paymentReminderId, overdueReminderId, invoiceId, counterpartId })=>{
    var _paymentReminder_term_1_reminder, _paymentReminder_term_1_reminder1, _paymentReminder_term_1_reminder2, _paymentReminder_term_2_reminder, _paymentReminder_term_2_reminder1, _paymentReminder_term_2_reminder2, _paymentReminder_term_final_reminder, _paymentReminder_term_final_reminder1, _paymentReminder_term_final_reminder2, _overdueReminder_terms;
    const { i18n } = react.useLingui();
    const { data: contacts } = useCounterpartContactList(counterpartId);
    const { data: counterpart } = useCounterpartById(counterpartId);
    const { data: paymentReminder } = useGetPaymentReminderById(paymentReminderId);
    const { data: overdueReminder } = useGetOverdueReminderById(overdueReminderId);
    const defaultContact = getDefaultContact(contacts, counterpart);
    const paymentTerms = [
        ...(paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_1_reminder) ? [
            {
                body: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_1_reminder = paymentReminder.term_1_reminder) === null || _paymentReminder_term_1_reminder === void 0 ? void 0 : _paymentReminder_term_1_reminder.body,
                subject: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_1_reminder1 = paymentReminder.term_1_reminder) === null || _paymentReminder_term_1_reminder1 === void 0 ? void 0 : _paymentReminder_term_1_reminder1.subject,
                reminderTerm: i18n._({
                    id: "TzHRlj",
                    values: {
                        0: paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_1_reminder.days_before,
                        1: (paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_1_reminder2 = paymentReminder.term_1_reminder) === null || _paymentReminder_term_1_reminder2 === void 0 ? void 0 : _paymentReminder_term_1_reminder2.days_before) === 1 ? 'day' : 'days'
                    }
                }),
                id: 'payment-1'
            }
        ] : [],
        ...(paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_2_reminder) ? [
            {
                body: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_2_reminder = paymentReminder.term_2_reminder) === null || _paymentReminder_term_2_reminder === void 0 ? void 0 : _paymentReminder_term_2_reminder.body,
                subject: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_2_reminder1 = paymentReminder.term_2_reminder) === null || _paymentReminder_term_2_reminder1 === void 0 ? void 0 : _paymentReminder_term_2_reminder1.subject,
                reminderTerm: i18n._({
                    id: "TzHRlj",
                    values: {
                        0: paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_2_reminder.days_before,
                        1: (paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_2_reminder2 = paymentReminder.term_2_reminder) === null || _paymentReminder_term_2_reminder2 === void 0 ? void 0 : _paymentReminder_term_2_reminder2.days_before) === 1 ? 'day' : 'days'
                    }
                }),
                id: 'payment-2'
            }
        ] : [],
        ...(paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_final_reminder) ? [
            {
                body: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_final_reminder = paymentReminder.term_final_reminder) === null || _paymentReminder_term_final_reminder === void 0 ? void 0 : _paymentReminder_term_final_reminder.body,
                subject: paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_final_reminder1 = paymentReminder.term_final_reminder) === null || _paymentReminder_term_final_reminder1 === void 0 ? void 0 : _paymentReminder_term_final_reminder1.subject,
                reminderTerm: i18n._({
                    id: "TzHRlj",
                    values: {
                        0: paymentReminder === null || paymentReminder === void 0 ? void 0 : paymentReminder.term_final_reminder.days_before,
                        1: (paymentReminder === null || paymentReminder === void 0 ? void 0 : (_paymentReminder_term_final_reminder2 = paymentReminder.term_final_reminder) === null || _paymentReminder_term_final_reminder2 === void 0 ? void 0 : _paymentReminder_term_final_reminder2.days_before) === 1 ? 'day' : 'days'
                    }
                }),
                id: 'payment-3'
            }
        ] : []
    ];
    var _overdueReminder_terms_map;
    const overdueTerms = (_overdueReminder_terms_map = overdueReminder === null || overdueReminder === void 0 ? void 0 : (_overdueReminder_terms = overdueReminder.terms) === null || _overdueReminder_terms === void 0 ? void 0 : _overdueReminder_terms.map((term, index)=>({
            body: term === null || term === void 0 ? void 0 : term.body,
            subject: term === null || term === void 0 ? void 0 : term.subject,
            reminderTerm: i18n._({
                id: "oNNPST",
                values: {
                    0: term.days_after,
                    1: (term === null || term === void 0 ? void 0 : term.days_after) === 1 ? 'day' : 'days'
                }
            }),
            id: `overdue-${index + 1}`
        }))) !== null && _overdueReminder_terms_map !== void 0 ? _overdueReminder_terms_map : [];
    var _defaultContact_email;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(AccordionTrigger, {
                className: "mtw:hover:no-underline mtw:group",
                children: /*#__PURE__*/ jsxRuntime.jsxs("span", {
                    className: "mtw:flex mtw:items-center mtw:gap-3",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:group-hover:underline",
                            children: i18n._({
                                id: "tK+u46"
                            })
                        }),
                        (paymentTerms === null || paymentTerms === void 0 ? void 0 : paymentTerms.length) + (overdueTerms === null || overdueTerms === void 0 ? void 0 : overdueTerms.length) > 0 && /*#__PURE__*/ jsxRuntime.jsx(Badge, {
                            variant: "secondary",
                            className: "mtw:h-5 mtw:min-w-5 mtw:rounded-full mtw:px-1 mtw:tabular-nums",
                            children: (paymentTerms === null || paymentTerms === void 0 ? void 0 : paymentTerms.length) + (overdueTerms === null || overdueTerms === void 0 ? void 0 : overdueTerms.length)
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(AccordionContent, {
                className: "mtw:flex mtw:gap-6",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:gap-0.5 mtw:flex-1",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h3", {
                                className: "mtw:text-neutral-10 mtw:text-sm mtw:font-medium mtw:leading-5",
                                children: i18n._({
                                    id: "yPrbsy"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: "mtw:text-sm mtw:font-normal mtw:leading-5",
                                children: (_defaultContact_email = defaultContact === null || defaultContact === void 0 ? void 0 : defaultContact.email) !== null && _defaultContact_email !== void 0 ? _defaultContact_email : '-'
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:flex-col mtw:flex-1",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("h3", {
                                className: "mtw:text-neutral-10 mtw:text-sm mtw:font-medium mtw:leading-5",
                                children: i18n._({
                                    id: "51L6sx"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("ul", {
                                children: [
                                    (paymentTerms === null || paymentTerms === void 0 ? void 0 : paymentTerms.length) > 0 && paymentTerms.map((term, index)=>/*#__PURE__*/ jsxRuntime.jsx(TermItem, {
                                            term: term,
                                            isLastTerm: overdueTerms.length > 0 ? false : index === paymentTerms.length - 1,
                                            invoiceId: invoiceId
                                        }, term.id)),
                                    overdueTerms.length > 0 && /*#__PURE__*/ jsxRuntime.jsx("li", {
                                        className: "mtw:flex mtw:gap-1 mtw:items-center mtw:justify-between",
                                        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                            className: "mtw:flex mtw:items-center mtw:gap-3",
                                            children: [
                                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                                    className: "mtw:flex mtw:flex-col mtw:justify-end mtw:items-center mtw:gap-1 mtw:pt-2",
                                                    children: [
                                                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Calendar, {
                                                            className: "mtw:size-4 mtw:text-neutral-50"
                                                        }),
                                                        /*#__PURE__*/ jsxRuntime.jsx("div", {
                                                            className: "mtw:w-px mtw:h-1.5 mtw:bg-neutral-80"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                                    className: "mtw:text-neutral-50 mtw:text-sm mtw:font-normal mtw:leading-5",
                                                    children: i18n._({
                                                        id: "XicmhT"
                                                    })
                                                })
                                            ]
                                        })
                                    }),
                                    (overdueTerms === null || overdueTerms === void 0 ? void 0 : overdueTerms.length) > 0 && overdueTerms.map((term, index)=>/*#__PURE__*/ jsxRuntime.jsx(TermItem, {
                                            term: term,
                                            isLastTerm: index === overdueTerms.length - 1,
                                            invoiceId: invoiceId
                                        }, term.id))
                                ]
                            })
                        ]
                    })
                ]
            })
        ]
    });
};

const getCommonStatusLabel = (i18n, status)=>{
    switch(status){
        case 'NEW':
            return i18n._({
                id: "mUquLi"
            });
        case 'DEFAULTED':
            return i18n._({
                id: "oZBPYz"
            });
        case 'PAID':
            return i18n._({
                id: "MUa8SB"
            });
        case 'FUNDED':
            return i18n._({
                id: "AabQyr"
            });
        case 'LATE':
            return i18n._({
                id: "/Fo5iQ"
            });
        case 'REJECTED':
            return i18n._({
                id: "ekCRTP"
            });
        default:
            throw new Error(`Unknown status ${JSON.stringify(status)}`);
    }
};

function _define_property$D(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$D(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$D(target, key, source[key]);
        });
    }
    return target;
}
/**
 * Displays the status of an Invoice.
 */ const FinancedInvoiceStatusChip = /*#__PURE__*/ React.forwardRef((inProps, ref)=>{
    const { status, variant, icon, size } = styles$2.useThemeProps({
        props: inProps,
        name: 'MoniteFinancedInvoiceStatusChip'
    });
    const { i18n } = react.useLingui();
    const Icon = FINANCE_INVOICE_STATUS_TO_MUI_ICON_MAP[status];
    return /*#__PURE__*/ jsxRuntime.jsx(StyledChip, {
        ref: ref,
        sx: {
            width: 'auto',
            color: ROW_TO_TAG_FINANCE_STATUS_MUI_MAP[status],
            bgcolor: BACKGROUND_FINANCE_STATUS_MUI_MAP[status]
        },
        icon: icon && Icon ? /*#__PURE__*/ jsxRuntime.jsx(Icon, {
            sx: {
                fontSize: 16,
                fill: ROW_TO_TAG_FINANCE_STATUS_MUI_MAP[status]
            }
        }) : /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Circle, {
            sx: {
                fontSize: '10px !important'
            }
        }),
        label: getCommonStatusLabel(i18n, status),
        size: size,
        status: status,
        variant: variant !== null && variant !== void 0 ? variant : 'filled'
    });
});
const StyledChip = styles$2.styled(/*#__PURE__*/ React.forwardRef((props, ref)=>/*#__PURE__*/ jsxRuntime.jsx(material.Chip, _object_spread$D({
        ref: ref
    }, props))), {
    name: 'MoniteFinancedInvoiceStatusChip',
    slot: 'root',
    shouldForwardProp: ()=>true
})({});

function _define_property$C(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$C(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$C(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$p(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$p(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$p(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const FinanceDetails = ({ invoice, offers, financedInvoice, enableNavigate = false, handleNavigate })=>{
    var _offers__pricing_plans, _offers_, _financedInvoice_repayment_schedule, _pricingPlan_data, _pricingPlan_data1, _pricingPlan_data2;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { startFinanceSession } = useKanmonContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const theme = material.useTheme();
    const dateFormat = locale.dateFormat;
    const issueDate = financedInvoice ? i18n.date(financedInvoice.issue_date, dateFormat) : '—';
    const invoiceAmount = financedInvoice ? formatCurrencyToDisplay(financedInvoice.total_amount, financedInvoice.currency) : '-';
    const pricingPlan = offers === null || offers === void 0 ? void 0 : (_offers_ = offers[0]) === null || _offers_ === void 0 ? void 0 : (_offers__pricing_plans = _offers_.pricing_plans) === null || _offers__pricing_plans === void 0 ? void 0 : _offers__pricing_plans.reduce((acc, cur, index)=>{
        if ((cur === null || cur === void 0 ? void 0 : cur.fee_percentage) === (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.fee_percentage) && (cur === null || cur === void 0 ? void 0 : cur.advance_rate_percentage) === (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.advance_rate_percentage)) {
            acc = {
                pricingPlanIndex: index,
                data: cur
            };
        }
        return acc;
    }, null);
    const repaymentDate = (financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repayment_schedule = financedInvoice.repayment_schedule) === null || _financedInvoice_repayment_schedule === void 0 ? void 0 : _financedInvoice_repayment_schedule.repayment_date) ? i18n.date(financedInvoice.repayment_schedule.repayment_date, dateFormat) : '—';
    const receivedSum = (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.advance_amount) ? formatCurrencyToDisplay(financedInvoice.advance_amount, financedInvoice.currency) : '-';
    const serviceFee = (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.fee_amount) ? formatCurrencyToDisplay(financedInvoice.fee_amount, financedInvoice.currency) : '-';
    const repaymentSum = (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.repayment_amount) ? formatCurrencyToDisplay(financedInvoice.repayment_amount, financedInvoice.currency) : '-';
    const isRequestedSum = (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status) === 'REJECTED' || (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status) === 'NEW';
    const shouldDisplayPayOutButton = (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status) === 'FUNDED' || (financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status) === 'LATE';
    var _pricingPlan_pricingPlanIndex, _pricingPlan_data_advance_rate_percentage, _pricingPlan_data_fee_percentage, _financedInvoice_status;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    p: 4,
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 4
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "h3",
                        children: i18n._({
                            id: "I72Oe1"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h2",
                                fontWeight: 600,
                                fontSize: 32,
                                children: invoiceAmount
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                fontWeight: 500,
                                variant: "body1",
                                children: i18n._({
                                    id: "kokZdR",
                                    values: {
                                        issueDate: issueDate
                                    }
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'flex',
                            gap: 3
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                width: "100%",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        color: material.darken(theme.palette.grey[50], 0.4),
                                        mb: 0.5,
                                        fontWeight: 400,
                                        children: i18n._({
                                            id: "uUr1p6",
                                            values: {
                                                0: ((_pricingPlan_pricingPlanIndex = pricingPlan === null || pricingPlan === void 0 ? void 0 : pricingPlan.pricingPlanIndex) !== null && _pricingPlan_pricingPlanIndex !== void 0 ? _pricingPlan_pricingPlanIndex : 0) + 1
                                            }
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        fontWeight: 400,
                                        children: i18n._({
                                            id: "PuO1Ve",
                                            values: {
                                                0: ((_pricingPlan_data_advance_rate_percentage = pricingPlan === null || pricingPlan === void 0 ? void 0 : (_pricingPlan_data = pricingPlan.data) === null || _pricingPlan_data === void 0 ? void 0 : _pricingPlan_data.advance_rate_percentage) !== null && _pricingPlan_data_advance_rate_percentage !== void 0 ? _pricingPlan_data_advance_rate_percentage : 0) / 100,
                                                1: pricingPlan === null || pricingPlan === void 0 ? void 0 : (_pricingPlan_data1 = pricingPlan.data) === null || _pricingPlan_data1 === void 0 ? void 0 : _pricingPlan_data1.repayment_duration_days,
                                                2: ((_pricingPlan_data_fee_percentage = pricingPlan === null || pricingPlan === void 0 ? void 0 : (_pricingPlan_data2 = pricingPlan.data) === null || _pricingPlan_data2 === void 0 ? void 0 : _pricingPlan_data2.fee_percentage) !== null && _pricingPlan_data_fee_percentage !== void 0 ? _pricingPlan_data_fee_percentage : 0) / 100
                                            }
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                width: "100%",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        color: material.darken(theme.palette.grey[50], 0.4),
                                        mb: 0.5,
                                        fontWeight: 400,
                                        children: i18n._({
                                            id: "TGM/OV"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        fontWeight: 400,
                                        children: i18n._({
                                            id: "lFcvwY",
                                            values: {
                                                repaymentDate: repaymentDate
                                            }
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                width: "100%",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        color: material.darken(theme.palette.grey[50], 0.4),
                                        mb: 0.5,
                                        fontWeight: 400,
                                        children: i18n._({
                                            id: "uAQUqI"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(FinancedInvoiceStatusChip, {
                                        icon: true,
                                        status: (_financedInvoice_status = financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status) !== null && _financedInvoice_status !== void 0 ? _financedInvoice_status : 'DEFAULTED'
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        sx: {
                            display: 'grid',
                            gridTemplateColumns: 'minmax(140px, auto) 1fr',
                            flexDirection: 'column',
                            rowGap: 1,
                            columnGap: 2
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                color: material.darken(theme.palette.grey[50], 0.4),
                                children: i18n._({
                                    id: "J/hVSQ",
                                    values: {
                                        0: isRequestedSum ? 'Requested sum' : 'Received sum'
                                    }
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: receivedSum
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                color: material.darken(theme.palette.grey[50], 0.4),
                                children: i18n._({
                                    id: "/jZOZa"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: serviceFee
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                color: material.darken(theme.palette.grey[50], 0.4),
                                children: i18n._({
                                    id: "MMpOlx"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: repaymentSum
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, _object_spread_props$p(_object_spread$C({
                        sx: {
                            borderRadius: '16px',
                            px: 3,
                            py: 2.5,
                            border: `1px solid ${theme.palette.divider}`,
                            display: 'flex',
                            gap: 2,
                            justifyContent: 'space-between',
                            alignItems: 'center',
                            cursor: enableNavigate ? 'pointer' : 'default'
                        }
                    }, enableNavigate && handleNavigate && {
                        onClick: ()=>handleNavigate(invoice.id)
                    }), {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        fontWeight: 500,
                                        children: i18n._({
                                            id: "1KNHI6",
                                            values: {
                                                0: invoice.document_id || INVOICE_DOCUMENT_AUTO_ID
                                            }
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        color: theme.palette.text.secondary,
                                        variant: "body2",
                                        children: i18n._({
                                            id: "I8gLs0",
                                            values: {
                                                invoiceAmount: invoiceAmount,
                                                issueDate: issueDate
                                            }
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                                    status: invoice.status
                                })
                            })
                        ]
                    }))
                ]
            }),
            shouldDisplayPayOutButton && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    mt: 'auto',
                    borderTop: `1px solid ${theme.palette.divider}`,
                    px: 4,
                    py: 2,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'flex-end'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    variant: "contained",
                    color: "primary",
                    onClick: ()=>startFinanceSession({
                            component: 'PAY_NOW'
                        }),
                    sx: {
                        py: 1.25,
                        px: 1.5,
                        height: 32,
                        fontSize: 14,
                        ml: 'auto'
                    },
                    children: i18n._({
                        id: "Kogm/W"
                    })
                })
            })
        ]
    });
};

function _define_property$B(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$B(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$B(target, key, source[key]);
        });
    }
    return target;
}
const FinancedInvoicesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(FinancedInvoicesTableBase, _object_spread$B({}, props))
    });
const FinancedInvoicesTableBase = ({ onRowClick, query, offers })=>{
    var _componentSettings_receivables_pageSizeOptions;
    const { i18n } = react.useLingui();
    const { locale, componentSettings } = useMoniteContext();
    const { startFinanceSession } = useKanmonContext();
    const [dialogIsOpen, setDialogIsOpen] = React.useState(false);
    const [financedInvoice, setFinancedInvoice] = React.useState(null);
    var _financedInvoice_invoice_id;
    const { data: invoice } = useGetReceivableById((_financedInvoice_invoice_id = financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoice_id) !== null && _financedInvoice_invoice_id !== void 0 ? _financedInvoice_invoice_id : '', Boolean(financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoice_id));
    const [paginationToken, setPaginationToken] = React.useState(undefined);
    var _componentSettings_receivables_pageSizeOptions_;
    const [pageSize, setPageSize] = React.useState((_componentSettings_receivables_pageSizeOptions_ = (_componentSettings_receivables_pageSizeOptions = componentSettings.receivables.pageSizeOptions) === null || _componentSettings_receivables_pageSizeOptions === void 0 ? void 0 : _componentSettings_receivables_pageSizeOptions[0]) !== null && _componentSettings_receivables_pageSizeOptions_ !== void 0 ? _componentSettings_receivables_pageSizeOptions_ : 15);
    var _query_sort, _query_order;
    const [sortModel, setSortModel] = React.useState({
        field: (_query_sort = query === null || query === void 0 ? void 0 : query.sort) !== null && _query_sort !== void 0 ? _query_sort : 'created_at',
        sort: (_query_order = query === null || query === void 0 ? void 0 : query.order) !== null && _query_order !== void 0 ? _query_order : 'desc'
    });
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: invoices, isLoading, isError, refetch } = useGetFinancedInvoices({
        order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
        limit: pageSize,
        pagination_token: paginationToken
    });
    const collection = invoices;
    const collectionData = collection === null || collection === void 0 ? void 0 : collection.data;
    const onChangeSort = (model)=>{
        setSortModel(model[0]);
        setPaginationToken(undefined);
    };
    const dateFormat = locale.dateFormat;
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'document_id',
                headerName: i18n._({
                    id: "HptUxX"
                }),
                sortable: false,
                width: 140,
                renderCell: ({ value })=>{
                    if (!value) {
                        return /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "Monite-TextOverflowContainer",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                color: "text.secondary",
                                component: "span",
                                fontSize: "inherit",
                                children: i18n._({
                                    id: "IounKn"
                                })
                            })
                        });
                    }
                    return /*#__PURE__*/ jsxRuntime.jsx("span", {
                        className: "Monite-TextOverflowContainer",
                        children: value
                    });
                }
            },
            {
                field: 'payer_type',
                headerName: i18n._({
                    id: "876pfE"
                }),
                display: 'flex',
                width: defaultCounterpartColumnWidth,
                renderCell: (params)=>/*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        children: params.row.payer_type == 'BUSINESS' ? params.row.payer_business_name : `${params.row.payer_first_name} ${params.row.payer_last_name}`
                    })
            },
            {
                field: 'status',
                headerName: i18n._({
                    id: "uAQUqI"
                }),
                sortable: ReceivableCursorFields.includes('status'),
                width: 160,
                renderCell: ({ value: status })=>{
                    return /*#__PURE__*/ jsxRuntime.jsx(FinancedInvoiceStatusChip, {
                        icon: true,
                        status: status
                    });
                }
            },
            {
                field: 'total_amount',
                headerName: i18n._({
                    id: "MYggMZ"
                }),
                headerAlign: 'right',
                align: 'right',
                width: 120,
                valueGetter: (_, row)=>{
                    var _row_repayment_schedule;
                    const value = (_row_repayment_schedule = row.repayment_schedule) === null || _row_repayment_schedule === void 0 ? void 0 : _row_repayment_schedule.repayment_amount;
                    return value ? formatCurrencyToDisplay(value, row.currency) : '-';
                }
            },
            {
                field: 'repayment_schedule',
                headerName: i18n._({
                    id: "YgZNxq"
                }),
                headerAlign: 'right',
                align: 'right',
                width: 120,
                valueGetter: (_, row)=>{
                    var _row_repayment_schedule;
                    const value = (_row_repayment_schedule = row.repayment_schedule) === null || _row_repayment_schedule === void 0 ? void 0 : _row_repayment_schedule.repayment_principal_amount;
                    return value ? formatCurrencyToDisplay(value, row.currency) : '-';
                }
            },
            {
                field: 'issue_date',
                headerName: i18n._({
                    id: "V1Pe1X"
                }),
                sortable: false,
                width: 140,
                valueFormatter: (value)=>value ? i18n.date(value, dateFormat) : '—'
            },
            {
                field: 'repayment_date',
                headerName: i18n._({
                    id: "dgVjFu"
                }),
                sortable: false,
                width: 120,
                valueGetter: (_, row)=>{
                    var _row_repayment_schedule;
                    const value = (_row_repayment_schedule = row.repayment_schedule) === null || _row_repayment_schedule === void 0 ? void 0 : _row_repayment_schedule.repayment_date;
                    return value ? i18n.date(value, dateFormat) : '-';
                }
            },
            {
                field: '',
                headerName: i18n._({
                    id: "621rYf"
                }),
                sortable: false,
                width: 120,
                renderCell: (params)=>{
                    const shouldDisplayButton = params.row.status === 'FUNDED' || params.row.status === 'LATE';
                    return shouldDisplayButton ? /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        variant: "contained",
                        color: "primary",
                        onClick: (event)=>{
                            event.stopPropagation();
                            startFinanceSession({
                                component: 'PAY_NOW'
                            });
                        },
                        sx: {
                            py: 1.25,
                            px: 1.5,
                            height: 32,
                            fontSize: 14
                        },
                        children: i18n._({
                            id: "Kogm/W"
                        })
                    }) : null;
                }
            }
        ];
    }, [
        formatCurrencyToDisplay,
        i18n,
        dateFormat,
        startFinanceSession
    ]);
    const gridApiRef = useAutosizeGridColumns(collectionData, columns, false, // eslint-disable-next-line lingui/no-unlocalized-strings
    'FinancedInvoicesTable');
    const className = 'Monite-FinancedInvoicesTable';
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: classNames(ScopedCssBaselineContainerClassName, className),
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                mb: 2,
                variant: "subtitle1",
                children: i18n._({
                    id: "iapc71"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                apiRef: gridApiRef,
                rowSelection: false,
                disableColumnFilter: true,
                loading: isLoading,
                onSortModelChange: onChangeSort,
                onRowClick: (params)=>{
                    setDialogIsOpen(true);
                    setFinancedInvoice === null || setFinancedInvoice === void 0 ? void 0 : setFinancedInvoice(params.row);
                },
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.receivables.pageSizeOptions,
                            nextPage: invoices === null || invoices === void 0 ? void 0 : invoices.next_pagination_token,
                            prevPage: invoices === null || invoices === void 0 ? void 0 : invoices.prev_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: paginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setPaginationToken(page !== null && page !== void 0 ? page : undefined);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (collectionData === null || collectionData === void 0 ? void 0 : collectionData.length) || 0,
                            isFiltering: false,
                            isSearching: false,
                            isError: isError,
                            refetch: refetch,
                            entityName: i18n._({
                                id: "SHV6g0"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "IuMGvq"
                                })
                            ],
                            noDataDescription2: i18n._({
                                id: "PSrVjR"
                            }),
                            type: "no-data"
                        })
                },
                columns: columns,
                getRowId: (row)=>row.document_id,
                rows: collectionData !== null && collectionData !== void 0 ? collectionData : []
            }),
            invoice && financedInvoice && /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: dialogIsOpen,
                onClose: ()=>{
                    setDialogIsOpen(false);
                    setFinancedInvoice(null);
                },
                alignDialog: "right",
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceDetails, {
                    invoice: invoice,
                    offers: offers !== null && offers !== void 0 ? offers : [],
                    financedInvoice: financedInvoice,
                    enableNavigate: true,
                    handleNavigate: onRowClick
                })
            })
        ]
    });
};

const FinanceHowItWorks = ()=>{
    var _componentSettings_financing;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const steps = [
        {
            id: 1,
            title: i18n._({
                id: "j48oOO"
            }),
            description: i18n._({
                id: "lM+wML"
            }),
            description2: i18n._({
                id: "73PNcD"
            }),
            list: {
                listTitle: i18n._({
                    id: "RIjnkH"
                }),
                listItems: [
                    {
                        id: 'listItem-1',
                        text: i18n._({
                            id: "nc0G7w"
                        })
                    },
                    {
                        id: 'listItem-2',
                        text: i18n._({
                            id: "eR9AJJ"
                        })
                    },
                    {
                        id: 'listItem-3',
                        text: i18n._({
                            id: "P7ghPN"
                        })
                    }
                ]
            }
        },
        {
            id: 2,
            title: i18n._({
                id: "w/MGpg"
            }),
            description: i18n._({
                id: "3gTfUP"
            })
        },
        {
            id: 3,
            title: i18n._({
                id: "WJeAbr"
            }),
            description: i18n._({
                id: "mQdJGk"
            })
        }
    ];
    var _componentSettings_financing_financeSteps;
    const financeSteps = (_componentSettings_financing_financeSteps = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_financing = componentSettings.financing) === null || _componentSettings_financing === void 0 ? void 0 : _componentSettings_financing.financeSteps) !== null && _componentSettings_financing_financeSteps !== void 0 ? _componentSettings_financing_financeSteps : steps;
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        px: 4,
        py: 5,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "h3",
                    children: i18n._({
                        id: "K16LHb"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.List, {
                sx: {
                    mt: 4,
                    display: 'flex',
                    flexDirection: 'column',
                    gap: 3,
                    p: 0,
                    pl: 2
                },
                component: "ul",
                children: financeSteps.map((step)=>/*#__PURE__*/ jsxRuntime.jsxs(material.ListItem, {
                        component: "li",
                        sx: {
                            p: 0,
                            display: 'list-item',
                            listStyleType: 'disc',
                            maxWidth: 472,
                            mx: 'auto'
                        },
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body1",
                                fontWeight: 400,
                                mb: step.list || step.description2 ? 3 : 0,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                        component: "span",
                                        variant: "body1",
                                        fontWeight: 600,
                                        children: [
                                            step.title,
                                            ' '
                                        ]
                                    }),
                                    step.description
                                ]
                            }),
                            step.description2 && /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                fontWeight: 400,
                                mb: step.list ? 3 : 0,
                                children: step.description2
                            }),
                            step.list && /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                variant: "body1",
                                fontWeight: 600,
                                children: [
                                    step.list.listTitle,
                                    step.list.listItems.map((listItem)=>/*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            component: "span",
                                            display: "block",
                                            fontWeight: 400,
                                            children: listItem.text
                                        }, listItem.id))
                                ]
                            })
                        ]
                    }, step.id))
            })
        ]
    });
};

const FinanceIntegrationCard = ()=>{
    const { i18n } = react.useLingui();
    const { startFinanceSession } = useKanmonContext();
    const theme = material.useTheme();
    const { isLoading, isEnabled } = useFinancing();
    if (!isEnabled) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        gap: 4,
        sx: {
            border: `1px solid ${theme.palette.divider}`
        },
        borderRadius: "16px",
        p: 3,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    sx: {
                        backgroundColor: material.lighten(theme.palette.primary.main, 0.9),
                        borderRadius: '100%',
                        width: '40px',
                        height: '40px',
                        display: 'flex',
                        justifyContent: 'center',
                        alignItems: 'center',
                        p: 2
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.Money, {
                        sx: {
                            color: theme.palette.primary.main,
                            width: 20,
                            height: 20
                        }
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                gap: 1,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle1",
                        children: i18n._({
                            id: "TTfTw+"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        fontWeight: 400,
                        children: i18n._({
                            id: "Ccybri"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                direction: "row",
                gap: 1,
                alignItems: "center",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        disabled: isLoading,
                        onClick: ()=>startFinanceSession(),
                        variant: "outlined",
                        sx: {
                            px: 2
                        },
                        children: i18n._({
                            id: "KV5B3G"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(FinanceFaqWrapper, {
                        children: ({ openModal })=>/*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                onClick: openModal,
                                variant: "text",
                                children: i18n._({
                                    id: "Qoq+GP"
                                })
                            })
                    })
                ]
            })
        ]
    });
};

const FinanceOverviewCard = ({ invoice, offers })=>{
    var _data_data, _financedInvoice_repayment_schedule, _financedInvoice_repayment_schedule1, _financedInvoice_repayment_schedule2;
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    const { locale } = useMoniteContext();
    const [dialogIsOpen, setDialogIsOpen] = React.useState(false);
    const { formatCurrencyToDisplay } = useCurrencies();
    const { isLoading, data } = useGetFinancedInvoices({
        invoice_id: invoice.id,
        type: 'receivable'
    });
    var _data_data_;
    const financedInvoice = (_data_data_ = data === null || data === void 0 ? void 0 : (_data_data = data.data) === null || _data_data === void 0 ? void 0 : _data_data[0]) !== null && _data_data_ !== void 0 ? _data_data_ : null;
    const dateFormat = locale.dateFormat;
    var _financedInvoice_repayment_schedule_repayment_amount;
    const repaymentAmount = financedInvoice ? formatCurrencyToDisplay((_financedInvoice_repayment_schedule_repayment_amount = (_financedInvoice_repayment_schedule = financedInvoice.repayment_schedule) === null || _financedInvoice_repayment_schedule === void 0 ? void 0 : _financedInvoice_repayment_schedule.repayment_amount) !== null && _financedInvoice_repayment_schedule_repayment_amount !== void 0 ? _financedInvoice_repayment_schedule_repayment_amount : 0, invoice.currency) : '—';
    const repaymentDate = (financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repayment_schedule1 = financedInvoice.repayment_schedule) === null || _financedInvoice_repayment_schedule1 === void 0 ? void 0 : _financedInvoice_repayment_schedule1.repayment_date) ? i18n.date(financedInvoice === null || financedInvoice === void 0 ? void 0 : (_financedInvoice_repayment_schedule2 = financedInvoice.repayment_schedule) === null || _financedInvoice_repayment_schedule2 === void 0 ? void 0 : _financedInvoice_repayment_schedule2.repayment_date, dateFormat) : '—';
    const repaymentStatus = financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.status;
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Skeleton, {
            variant: "rounded",
            height: 80
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                onClick: ()=>setDialogIsOpen(true),
                sx: {
                    borderRadius: '16px',
                    px: 3,
                    py: 2.5,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'space-between',
                    border: `1px solid ${theme.palette.divider}`,
                    cursor: 'pointer'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "subtitle2",
                                children: i18n._({
                                    id: "3j790V",
                                    values: {
                                        repaymentAmount: repaymentAmount
                                    }
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                children: i18n._({
                                    id: "VyiELv",
                                    values: {
                                        repaymentDate: repaymentDate
                                    }
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(FinancedInvoiceStatusChip, {
                            icon: true,
                            status: repaymentStatus !== null && repaymentStatus !== void 0 ? repaymentStatus : 'DEFAULTED'
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: dialogIsOpen,
                onClose: ()=>setDialogIsOpen(false),
                alignDialog: "right",
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceDetails, {
                    invoice: invoice,
                    offers: offers === null || offers === void 0 ? void 0 : offers.offers,
                    financedInvoice: financedInvoice
                })
            })
        ]
    });
};

function asyncGeneratorStep$e(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$e(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$e(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$e(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const SIX_DAYS_IN_MILLISECONDS = 6 * 24 * 60 * 60 * 1000;
const FinanceInvoice = ({ invoice })=>{
    var _financedInvoices_data;
    const { i18n } = react.useLingui();
    const { startFinanceSession } = useKanmonContext();
    const [isFinancingAnInvoice, setIsFinancingAnInvoice] = React.useState(false);
    const financeInvoiceMutation = useFinanceAnInvoice();
    const { isLoading: isLoadingFinancedInvoices, data: financedInvoices } = useGetFinancedInvoices({
        invoice_id: invoice.id,
        type: 'receivable'
    });
    const { isLoading: isLoadingFinanceSdk, isEnabled, isServicing } = useFinancing();
    const { isLoading: isLoadingFinanceOffers, data: financeOffersData } = useGetFinanceOffers();
    const isFinanced = Boolean(financedInvoices === null || financedInvoices === void 0 ? void 0 : (_financedInvoices_data = financedInvoices.data) === null || _financedInvoices_data === void 0 ? void 0 : _financedInvoices_data.find((financedInvoice)=>(financedInvoice === null || financedInvoice === void 0 ? void 0 : financedInvoice.invoice_id) === invoice.id));
    const isLoading = isLoadingFinanceSdk || isLoadingFinancedInvoices || isLoadingFinanceOffers;
    const invoiceStatusIsValid = [
        'issued',
        'partially_paid'
    ].includes(invoice.status);
    const invoiceDueDateIsValid = invoice.due_date ? new Date(invoice.due_date).getTime() - (new Date().getTime() + SIX_DAYS_IN_MILLISECONDS) > 0 : false;
    const invoiceIsEligibleForFinance = invoiceStatusIsValid && invoiceDueDateIsValid;
    const financeInvoice = ()=>_async_to_generator$e(function*() {
            try {
                setIsFinancingAnInvoice(true);
                financeInvoiceMutation.mutate({
                    invoices: [
                        {
                            id: invoice.id,
                            type: 'receivable'
                        }
                    ]
                }, {
                    onError: ()=>{
                        setIsFinancingAnInvoice(false);
                    },
                    onSuccess: ({ session_token })=>{
                        startFinanceSession({
                            sessionToken: session_token,
                            component: 'SESSION_INVOICE_FLOW_WITH_INVOICE_FILE'
                        });
                        setIsFinancingAnInvoice(false);
                    }
                });
            } catch (e) {
                setIsFinancingAnInvoice(false);
            }
        })();
    if (!isEnabled || !isServicing) {
        return null;
    }
    if (isFinanced) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            children: /*#__PURE__*/ jsxRuntime.jsx(FinanceOverviewCard, {
                invoice: invoice,
                offers: financeOffersData !== null && financeOffersData !== void 0 ? financeOffersData : null
            })
        });
    }
    if (!invoiceIsEligibleForFinance) {
        return /*#__PURE__*/ jsxRuntime.jsx(FinanceBannerWrapper, {
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                sx: {
                    flex: '1 1 0%'
                },
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "subtitle2",
                        children: i18n._({
                            id: "+q3MkE"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: i18n._({
                            id: "c4ofxw"
                        })
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(FinanceBannerWrapper, {
        children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
            sx: {
                display: 'flex',
                alignItems: 'center',
                gap: 2,
                justifyContent: 'space-between'
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        flex: '1 1 0%'
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "subtitle2",
                            children: i18n._({
                                id: "HXw4+w"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                            variant: "body1",
                            children: [
                                i18n._({
                                    id: "io/pP3"
                                }),
                                ".",
                                ' ',
                                /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
                                    arrow: true,
                                    title: i18n._({
                                        id: "3KIJF5"
                                    }),
                                    children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        sx: {
                                            textDecoration: 'underline'
                                        },
                                        component: "span",
                                        children: i18n._({
                                            id: "9BruTc"
                                        })
                                    })
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                    onClick: financeInvoice,
                    disabled: isFinancingAnInvoice || isLoading,
                    color: "primary",
                    variant: "contained",
                    sx: {
                        px: 2.5,
                        py: 1.5
                    },
                    children: isFinancingAnInvoice ? i18n._({
                        id: "Z3FXyt"
                    }) : i18n._({
                        id: "BpeFLX"
                    })
                })
            ]
        })
    });
};

const FinanceMenuButtons = ()=>{
    const { i18n } = react.useLingui();
    const { startFinanceSession } = useKanmonContext();
    const [isDialogOpen, setIsDialogOpen] = React.useState(false);
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        direction: "row",
        gap: 1,
        alignItems: "center",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                variant: "text",
                onClick: ()=>setIsDialogOpen(true),
                children: i18n._({
                    id: "K16LHb"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: ()=>startFinanceSession(),
                variant: "contained",
                color: "primary",
                sx: {
                    px: 2.5,
                    py: 1.5,
                    height: 40
                },
                children: i18n._({
                    id: "XRdp4f"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                open: isDialogOpen,
                onClose: ()=>setIsDialogOpen(false),
                alignDialog: "right",
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceHowItWorks, {})
            })
        ]
    });
};

const FinanceLimits = ({ offers = [] })=>{
    var _offers_, _offers_1, _offers_2, _offers_3, _offers_4, _componentSettings_financing;
    const { componentSettings } = useMoniteContext();
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    const { formatCurrencyToDisplay } = useCurrencies();
    var _offers__total_amount;
    const totalLimit = (_offers__total_amount = offers === null || offers === void 0 ? void 0 : (_offers_ = offers[0]) === null || _offers_ === void 0 ? void 0 : _offers_.total_amount) !== null && _offers__total_amount !== void 0 ? _offers__total_amount : 0;
    var _ref;
    const remainingLimit = (_ref = (offers === null || offers === void 0 ? void 0 : (_offers_1 = offers[0]) === null || _offers_1 === void 0 ? void 0 : _offers_1.status) === 'LATE' ? 0 : offers === null || offers === void 0 ? void 0 : (_offers_2 = offers[0]) === null || _offers_2 === void 0 ? void 0 : _offers_2.available_amount) !== null && _ref !== void 0 ? _ref : 0;
    const progress = remainingLimit / totalLimit * 100;
    const isAvailable = (offers === null || offers === void 0 ? void 0 : (_offers_3 = offers[0]) === null || _offers_3 === void 0 ? void 0 : _offers_3.status) !== 'CLOSED' && (offers === null || offers === void 0 ? void 0 : (_offers_4 = offers[0]) === null || _offers_4 === void 0 ? void 0 : _offers_4.status) !== 'DEFAULTED';
    const handleWidgetText = ()=>{
        var _offers_;
        switch(offers === null || offers === void 0 ? void 0 : (_offers_ = offers[0]) === null || _offers_ === void 0 ? void 0 : _offers_.status){
            case 'DEFAULTED':
                return i18n._({
                    id: "846VYr"
                });
            case 'CLOSED':
                return i18n._({
                    id: "VSANA+"
                });
            case 'LATE':
                return i18n._({
                    id: "LN9k4z"
                });
            default:
                return i18n._({
                    id: "EN9hn6"
                });
        }
    };
    if (!offers || offers.length === 0) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        maxWidth: "440px",
        width: "100%",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "subtitle1",
                sx: {
                    mb: 3,
                    display: 'inline-block'
                },
                children: i18n._({
                    id: "J9mZzB"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FinanceBannerWrapper, {
                children: /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        display: 'flex',
                        flexDirection: 'column',
                        gap: 1.25
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                            children: isAvailable ? /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body1",
                                        children: i18n._({
                                            id: "49OhsH"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                        display: "flex",
                                        alignItems: "center",
                                        gap: 1,
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                variant: "h2",
                                                fontSize: 24,
                                                lineHeight: "32px",
                                                children: formatCurrencyToDisplay(remainingLimit, 'USD')
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                                                component: "span",
                                                variant: "subtitle1",
                                                fontSize: 18,
                                                color: theme.palette.grey[400],
                                                children: [
                                                    "/ ",
                                                    formatCurrencyToDisplay(totalLimit, 'USD')
                                                ]
                                            })
                                        ]
                                    })
                                ]
                            }) : /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "h2",
                                fontSize: 24,
                                children: i18n._({
                                    id: "OJx3wK"
                                })
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            display: "flex",
                            flexDirection: "column",
                            gap: 1.5,
                            children: [
                                isAvailable && /*#__PURE__*/ jsxRuntime.jsx(FinanceProgressBar, {
                                    progress: progress
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                    variant: "body1",
                                    fontSize: 14,
                                    lineHeight: "22px",
                                    fontWeight: 400,
                                    children: handleWidgetText()
                                })
                            ]
                        }),
                        (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_financing = componentSettings.financing) === null || _componentSettings_financing === void 0 ? void 0 : _componentSettings_financing.enableFinanceWidgetButton) && /*#__PURE__*/ jsxRuntime.jsx(FinanceMenuButtons, {})
                    ]
                })
            })
        ]
    });
};

const FinanceOffers = ({ offers })=>{
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    if (!offers || offers.length === 0) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        width: "100%",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "subtitle1",
                sx: {
                    mb: 3,
                    display: 'inline-block'
                },
                children: i18n._({
                    id: "oO/tB4"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    display: 'flex',
                    gap: 2,
                    flexWrap: 'wrap'
                },
                children: offers.map((offer, offerIndex)=>{
                    var _offer_pricing_plans;
                    return offer === null || offer === void 0 ? void 0 : (_offer_pricing_plans = offer.pricing_plans) === null || _offer_pricing_plans === void 0 ? void 0 : _offer_pricing_plans.map((item, index)=>/*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                            width: 232,
                            height: 148,
                            px: 3,
                            py: 2.5,
                            sx: {
                                backgroundColor: theme.palette.background.paper,
                                borderRadius: '16px',
                                border: `1px solid ${theme.palette.divider}`
                            },
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                                    sx: {
                                        display: 'flex',
                                        alignItems: 'center',
                                        gap: 1,
                                        mb: 2
                                    },
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.MonetizationOnOutlined, {
                                            sx: {
                                                fontSize: 24,
                                                color: material.lighten(theme.palette.primary.main, 0.6)
                                            }
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                            variant: "body1",
                                            fontWeight: 500,
                                            sx: {
                                                flex: '1 1 0%',
                                                width: '100%'
                                            },
                                            children: i18n._({
                                                id: "dkHU7c"
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(material.List, {
                                    sx: {
                                        p: 0
                                    },
                                    children: /*#__PURE__*/ jsxRuntime.jsxs(React.Fragment, {
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                sx: {
                                                    p: 0
                                                },
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body1",
                                                    fontWeight: 400,
                                                    children: i18n._({
                                                        id: "ap6LQ1",
                                                        values: {
                                                            0: item.advance_rate_percentage / 100
                                                        }
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                sx: {
                                                    p: 0
                                                },
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body1",
                                                    fontWeight: 400,
                                                    children: i18n._({
                                                        id: "Nz9As9",
                                                        values: {
                                                            0: item.repayment_duration_days
                                                        }
                                                    })
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                                                sx: {
                                                    p: 0
                                                },
                                                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                                    variant: "body1",
                                                    fontWeight: 400,
                                                    children: i18n._({
                                                        id: "7xiLIS",
                                                        values: {
                                                            0: item.fee_percentage / 100
                                                        }
                                                    })
                                                })
                                            })
                                        ]
                                    }, item.advance_rate_percentage)
                                })
                            ]
                        }, `${offer.available_amount}-${offerIndex}-${offer.total_amount}-${index}`));
                })
            })
        ]
    });
};

const FinanceWidget = ({ offers })=>{
    var _offers_;
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        sx: {
            display: 'flex',
            gap: 2
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(FinanceLimits, {
                offers: offers
            }),
            (offers === null || offers === void 0 ? void 0 : (_offers_ = offers[0]) === null || _offers_ === void 0 ? void 0 : _offers_.status) === 'CURRENT' && /*#__PURE__*/ jsxRuntime.jsx(FinanceOffers, {
                offers: offers
            })
        ]
    });
};

const FinanceTab = ({ onRowClick })=>{
    const { isLoading: isLoadingOffers, data } = useGetFinanceOffers();
    const { isLoading, isEnabled } = useFinancing();
    if (isLoading || isLoadingOffers) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
            color: "inherit",
            size: 20
        });
    }
    if (!isEnabled) {
        return null;
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
        mt: 4,
        gap: 4,
        px: 1.5,
        height: "100%",
        children: [
            (data === null || data === void 0 ? void 0 : data.offers) && data.offers.length > 0 && /*#__PURE__*/ jsxRuntime.jsx(FinanceWidget, {
                offers: data.offers
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FinancedInvoicesTable, {
                onRowClick: onRowClick,
                offers: data === null || data === void 0 ? void 0 : data.offers
            })
        ]
    });
};

function _define_property$A(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$A(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$A(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$a(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$a(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$a(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Card(_param) {
    var { className } = _param, props = _object_without_properties$a(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$A({
        "data-slot": "card",
        className: cn('mtw:bg-card mtw:text-card-foreground mtw:flex mtw:flex-col mtw:gap-6 mtw:rounded-xl mtw:border mtw:py-6 mtw:shadow-sm', className)
    }, props));
}
function CardContent(_param) {
    var { className } = _param, props = _object_without_properties$a(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _object_spread$A({
        "data-slot": "card-content",
        className: cn('mtw:px-6', className)
    }, props));
}

const DocumentCard = ({ documentId, issueDate, totalAmount, currency, status, type })=>{
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    return /*#__PURE__*/ jsxRuntime.jsx(Card, {
        className: "mtw:py-3 mtw:px-4 mtw:border-border",
        children: /*#__PURE__*/ jsxRuntime.jsxs(CardContent, {
            className: "mtw:flex mtw:items-center mtw:gap-2 mtw:px-0",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:items-center mtw:gap-3 mtw:flex-1",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(lucideReact.File, {}),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:gap-0.5",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("h3", {
                                    className: "mtw:text-neutral-10 mtw:text-sm mtw:font-normal mtw:leading-5",
                                    children: [
                                        getTypeLabel(i18n, type),
                                        " ",
                                        documentId
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsxs("p", {
                                    className: "mtw:text-neutral-50 mtw:text-sm mtw:font-normal mtw:leading-5",
                                    children: [
                                        formatCurrencyToDisplay(totalAmount, currency),
                                        " •",
                                        ' ',
                                        i18n._({
                                            id: "J/hVSQ",
                                            values: {
                                                0: status === 'draft' ? 'Created' : 'Issued'
                                            }
                                        }),
                                        ' ',
                                        i18n.date(issueDate, locale.dateFormat)
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                    status: status
                })
            ]
        })
    });
};
const InvoiceDetailsTabOverview = ({ invoice, recurrence, handleTabChange, openInvoiceDetails })=>{
    var _invoice_related_documents, _invoice_payment_terms, _creditNoteQuery_data, _creditNoteQuery_data1, _creditNoteQuery_data2, _creditNoteQuery_data3, _creditNoteQuery_data4, _creditNoteQuery_data5, _creditNoteQuery_data6;
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const isRecurringInvoice = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'recurring';
    const creditNoteIds = (invoice === null || invoice === void 0 ? void 0 : invoice.type) === 'invoice' ? invoice === null || invoice === void 0 ? void 0 : (_invoice_related_documents = invoice.related_documents) === null || _invoice_related_documents === void 0 ? void 0 : _invoice_related_documents.credit_note_ids : undefined;
    const { data: creditNoteQuery } = useGetReceivables({
        id__in: creditNoteIds,
        type: 'credit_note'
    }, Boolean(creditNoteIds === null || creditNoteIds === void 0 ? void 0 : creditNoteIds.length));
    if ((invoice === null || invoice === void 0 ? void 0 : invoice.type) !== 'invoice') {
        return null;
    }
    var _invoice_counterpart_name, _invoice_payment_terms_name, _invoice_document_id;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:grid mtw:grid-cols-2 mtw:gap-4",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                        label: i18n._({
                            id: "876pfE"
                        }),
                        value: (_invoice_counterpart_name = invoice === null || invoice === void 0 ? void 0 : invoice.counterpart_name) !== null && _invoice_counterpart_name !== void 0 ? _invoice_counterpart_name : '-'
                    }),
                    recurrence && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "4WK0VU"
                                }),
                                value: (_invoice_payment_terms_name = invoice === null || invoice === void 0 ? void 0 : (_invoice_payment_terms = invoice.payment_terms) === null || _invoice_payment_terms === void 0 ? void 0 : _invoice_payment_terms.name) !== null && _invoice_payment_terms_name !== void 0 ? _invoice_payment_terms_name : '-'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "d+F6q9"
                                }),
                                value: (recurrence === null || recurrence === void 0 ? void 0 : recurrence.created_at) ? i18n.date(recurrence === null || recurrence === void 0 ? void 0 : recurrence.created_at, locale.dateFormat) : '-'
                            })
                        ]
                    }),
                    !recurrence && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "999ffy"
                                }),
                                value: (_invoice_document_id = invoice === null || invoice === void 0 ? void 0 : invoice.document_id) !== null && _invoice_document_id !== void 0 ? _invoice_document_id : i18n._({
                                    id: "IounKn"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "X7pkpC"
                                }),
                                value: (invoice === null || invoice === void 0 ? void 0 : invoice.issue_date) ? i18n.date(invoice === null || invoice === void 0 ? void 0 : invoice.issue_date, locale.dateFormat) : '-'
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                                label: i18n._({
                                    id: "XicmhT"
                                }),
                                value: (invoice === null || invoice === void 0 ? void 0 : invoice.due_date) ? i18n.date(invoice === null || invoice === void 0 ? void 0 : invoice.due_date, locale.dateFormat) : '-',
                                status: invoice === null || invoice === void 0 ? void 0 : invoice.status
                            })
                        ]
                    }),
                    (invoice === null || invoice === void 0 ? void 0 : invoice.status) !== 'draft' && !recurrence && /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsInfoBlock, {
                        label: i18n._({
                            id: "MTQqrg"
                        }),
                        value: i18n._({
                            id: "G+00/E",
                            values: {
                                0: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.amount_paid, invoice === null || invoice === void 0 ? void 0 : invoice.currency),
                                1: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.amount_due, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                            }
                        })
                    })
                ]
            }),
            recurrence && /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:w-full mtw:h-px mtw:bg-border"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsOverviewRecurrenceSection, {
                        recurrence: recurrence,
                        isCreatedFromRecurrence: Boolean((invoice === null || invoice === void 0 ? void 0 : invoice.recurrence_id) && !isRecurringInvoice),
                        openInvoiceDetails: openInvoiceDetails,
                        handleTabChange: handleTabChange
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(FinanceInvoice, {
                invoice: invoice
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(Accordion, {
                type: "multiple",
                className: "mtw:w-full",
                children: [
                    (creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data = creditNoteQuery.data) === null || _creditNoteQuery_data === void 0 ? void 0 : _creditNoteQuery_data.length) && (creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data1 = creditNoteQuery.data) === null || _creditNoteQuery_data1 === void 0 ? void 0 : _creditNoteQuery_data1.length) > 0 && /*#__PURE__*/ jsxRuntime.jsxs(AccordionItem, {
                        value: "item-1",
                        disabled: !(creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data2 = creditNoteQuery.data) === null || _creditNoteQuery_data2 === void 0 ? void 0 : _creditNoteQuery_data2.length),
                        className: "mtw:border-border",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(AccordionTrigger, {
                                className: "mtw:hover:no-underline mtw:group",
                                children: /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                    className: "mtw:flex mtw:items-center mtw:gap-3",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                                            className: "mtw:group-hover:underline",
                                            children: i18n._({
                                                id: "KvVocI"
                                            })
                                        }),
                                        (creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data3 = creditNoteQuery.data) === null || _creditNoteQuery_data3 === void 0 ? void 0 : _creditNoteQuery_data3.length) && (creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data4 = creditNoteQuery.data) === null || _creditNoteQuery_data4 === void 0 ? void 0 : _creditNoteQuery_data4.length) > 0 && /*#__PURE__*/ jsxRuntime.jsx(Badge, {
                                            variant: "secondary",
                                            className: "mtw:h-5 mtw:min-w-5 mtw:rounded-full mtw:px-1 mtw:tabular-nums",
                                            children: creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data5 = creditNoteQuery.data) === null || _creditNoteQuery_data5 === void 0 ? void 0 : _creditNoteQuery_data5.length
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(AccordionContent, {
                                className: "mtw:flex mtw:flex-col mtw:gap-2",
                                children: creditNoteQuery === null || creditNoteQuery === void 0 ? void 0 : (_creditNoteQuery_data6 = creditNoteQuery.data) === null || _creditNoteQuery_data6 === void 0 ? void 0 : _creditNoteQuery_data6.map((creditNote)=>{
                                    var _creditNote_document_id, _creditNote_created_at, _creditNote_issue_date, _creditNote_total_amount;
                                    return /*#__PURE__*/ jsxRuntime.jsx(DocumentCard, {
                                        type: creditNote === null || creditNote === void 0 ? void 0 : creditNote.type,
                                        documentId: (_creditNote_document_id = creditNote === null || creditNote === void 0 ? void 0 : creditNote.document_id) !== null && _creditNote_document_id !== void 0 ? _creditNote_document_id : '',
                                        issueDate: (creditNote === null || creditNote === void 0 ? void 0 : creditNote.status) === 'draft' ? (_creditNote_created_at = creditNote === null || creditNote === void 0 ? void 0 : creditNote.created_at) !== null && _creditNote_created_at !== void 0 ? _creditNote_created_at : '' : (_creditNote_issue_date = creditNote === null || creditNote === void 0 ? void 0 : creditNote.issue_date) !== null && _creditNote_issue_date !== void 0 ? _creditNote_issue_date : '',
                                        totalAmount: (_creditNote_total_amount = creditNote === null || creditNote === void 0 ? void 0 : creditNote.total_amount) !== null && _creditNote_total_amount !== void 0 ? _creditNote_total_amount : 0,
                                        currency: creditNote === null || creditNote === void 0 ? void 0 : creditNote.currency,
                                        status: creditNote === null || creditNote === void 0 ? void 0 : creditNote.status
                                    }, creditNote.id);
                                })
                            })
                        ]
                    }),
                    ((invoice === null || invoice === void 0 ? void 0 : invoice.payment_reminder_id) || (invoice === null || invoice === void 0 ? void 0 : invoice.overdue_reminder_id)) && /*#__PURE__*/ jsxRuntime.jsx(AccordionItem, {
                        value: "item-2",
                        className: "mtw:border-border",
                        disabled: !(invoice === null || invoice === void 0 ? void 0 : invoice.payment_reminder_id) && !(invoice === null || invoice === void 0 ? void 0 : invoice.overdue_reminder_id),
                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsOverviewReminders, {
                            paymentReminderId: invoice === null || invoice === void 0 ? void 0 : invoice.payment_reminder_id,
                            overdueReminderId: invoice === null || invoice === void 0 ? void 0 : invoice.overdue_reminder_id,
                            invoiceId: invoice === null || invoice === void 0 ? void 0 : invoice.id,
                            counterpartId: invoice === null || invoice === void 0 ? void 0 : invoice.counterpart_id
                        })
                    })
                ]
            })
        ]
    });
};

const PaymentCard = ({ issueDate, totalAmount, currency, paymentMethod, isExternal, entityUserId })=>{
    const { i18n } = react.useLingui();
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: entityUser } = useEntityUserById(entityUserId);
    const getPayedByText = ()=>{
        if (!isExternal) {
            return getPaymentMethodName(paymentMethod, i18n);
        }
        if (!entityUser) {
            return i18n._({
                id: "5UbV8Z"
            });
        }
        var _entityUser_first_name, _entityUser_last_name;
        return `${i18n._({
            id: "FAsbRB"
        })} ${`${(_entityUser_first_name = entityUser === null || entityUser === void 0 ? void 0 : entityUser.first_name) !== null && _entityUser_first_name !== void 0 ? _entityUser_first_name : ''} ${(_entityUser_last_name = entityUser === null || entityUser === void 0 ? void 0 : entityUser.last_name) !== null && _entityUser_last_name !== void 0 ? _entityUser_last_name : ''}`}`;
    };
    return /*#__PURE__*/ jsxRuntime.jsx(Card, {
        className: "mtw:py-3 mtw:px-4 mtw:border-border",
        children: /*#__PURE__*/ jsxRuntime.jsxs(CardContent, {
            className: "mtw:flex mtw:items-center mtw:gap-4 mtw:px-0",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-0.5 mtw:flex-1",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:font-medium mtw:text-sm mtw:leading-5 mtw:text-neutral-10",
                            children: i18n._({
                                id: "8Lx2X7"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("span", {
                            className: "mtw:text-sm mtw:font-normal mtw:leading-5 mtw:text-neutral-50",
                            children: [
                                getPayedByText(),
                                ' ',
                                issueDate && `• ${i18n.date(issueDate, locale.dateFormat)}`
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-0.5",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("span", {
                            className: "mtw:font-medium mtw:text-sm mtw:text-right mtw:leading-5 mtw:text-neutral-10",
                            children: formatCurrencyToDisplay(totalAmount, currency)
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("span", {
                            className: "mtw:text-sm mtw:font-normal mtw:inline-flex mtw:items-center mtw:gap-1 mtw:leading-5 mtw:text-green-500",
                            children: [
                                i18n._({
                                    id: "KWsCqG"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(lucideReact.CheckCircle, {
                                    className: "mtw:text-inherit mtw:w-3.5 mtw:h-3.5"
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};
const InvoiceDetailsTabPayments = ({ invoice })=>{
    var _paymentRecords_data, _paymentRecords_data1, _paymentRecords_data2;
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { data: paymentRecords, isLoading: isLoadingPaymentRecords } = useGetPaymentRecords(invoice === null || invoice === void 0 ? void 0 : invoice.id);
    const isUncollectible = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'uncollectible';
    const isIssued = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'issued';
    const isOverdue = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'overdue';
    const isPartiallyPaid = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'partially_paid';
    const isPaid = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'paid';
    const shouldShowRecordPaymentButton = isIssued || isOverdue || isPartiallyPaid;
    const shouldShowAmountPaidAndAmountDue = isIssued || isOverdue || isPartiallyPaid || isPaid || isUncollectible && (paymentRecords === null || paymentRecords === void 0 ? void 0 : paymentRecords.data) && (paymentRecords === null || paymentRecords === void 0 ? void 0 : (_paymentRecords_data = paymentRecords.data) === null || _paymentRecords_data === void 0 ? void 0 : _paymentRecords_data.length) > 0;
    function getEmptyListMessage() {
        switch(invoice === null || invoice === void 0 ? void 0 : invoice.status){
            case 'draft':
                return i18n._({
                    id: "+8o1tD"
                });
            case 'canceled':
                return i18n._({
                    id: "JkJZSx"
                });
            case 'uncollectible':
                return i18n._({
                    id: "Fr56KK"
                });
            default:
                return i18n._({
                    id: "VZcVnl"
                });
        }
    }
    if ((invoice === null || invoice === void 0 ? void 0 : invoice.type) !== 'invoice') {
        return null;
    }
    if (isLoadingPaymentRecords) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: "mtw:flex mtw:justify-center mtw:items-center",
            children: /*#__PURE__*/ jsxRuntime.jsx(LoadingSpinner, {})
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
        children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
            className: "mtw:flex mtw:flex-col mtw:gap-4",
            children: [
                /*#__PURE__*/ jsxRuntime.jsx("h2", {
                    className: "mtw:text-lg mtw:font-semibold mtw:leading-6",
                    children: i18n._({
                        id: "zp5uQy"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-3",
                    children: [
                        (paymentRecords === null || paymentRecords === void 0 ? void 0 : paymentRecords.data) && (paymentRecords === null || paymentRecords === void 0 ? void 0 : (_paymentRecords_data1 = paymentRecords.data) === null || _paymentRecords_data1 === void 0 ? void 0 : _paymentRecords_data1.length) > 0 ? /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                            children: paymentRecords === null || paymentRecords === void 0 ? void 0 : (_paymentRecords_data2 = paymentRecords.data) === null || _paymentRecords_data2 === void 0 ? void 0 : _paymentRecords_data2.map((paymentRecord)=>{
                                var _paymentRecord_payment_method, _paymentRecord_entity_user_id;
                                return /*#__PURE__*/ jsxRuntime.jsx(PaymentCard, {
                                    issueDate: paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.paid_at,
                                    totalAmount: paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.amount,
                                    currency: paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.currency,
                                    paymentMethod: (_paymentRecord_payment_method = paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.payment_method) !== null && _paymentRecord_payment_method !== void 0 ? _paymentRecord_payment_method : '',
                                    isExternal: paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.is_external,
                                    entityUserId: (_paymentRecord_entity_user_id = paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.entity_user_id) !== null && _paymentRecord_entity_user_id !== void 0 ? _paymentRecord_entity_user_id : ''
                                }, paymentRecord === null || paymentRecord === void 0 ? void 0 : paymentRecord.id);
                            })
                        }) : /*#__PURE__*/ jsxRuntime.jsxs("p", {
                            className: "mtw:text-sm mtw:text-neutral-50 mtw:font-normal mtw:leading-5",
                            children: [
                                i18n._({
                                    id: "W2Q6SA"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("br", {}),
                                getEmptyListMessage()
                            ]
                        }),
                        shouldShowRecordPaymentButton && /*#__PURE__*/ jsxRuntime.jsx(RecordManualPaymentModal, {
                            invoice: invoice,
                            children: ({ openModal })=>/*#__PURE__*/ jsxRuntime.jsx(Button, {
                                    size: "sm",
                                    className: "mtw:w-fit",
                                    onClick: openModal,
                                    children: i18n._({
                                        id: "QrqqXQ"
                                    })
                                })
                        }),
                        shouldShowAmountPaidAndAmountDue && /*#__PURE__*/ jsxRuntime.jsx("div", {
                            className: "mtw:w-full mtw:h-px mtw:bg-border"
                        })
                    ]
                }),
                shouldShowAmountPaidAndAmountDue && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:justify-between mtw:gap-8",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:font-medium mtw:text-neutral-10",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: "mtw:text-sm mtw:leading-5",
                                    children: i18n._({
                                        id: "MYggMZ"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: "mtw:text-base mtw:leading-6",
                                    children: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.amount_due, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:font-medium mtw:text-neutral-10",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: "mtw:text-sm mtw:leading-5 mtw:text-right",
                                    children: i18n._({
                                        id: "9HvliP"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("span", {
                                    className: "mtw:text-base mtw:leading-6 mtw:text-right",
                                    children: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.amount_paid, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
};

const statusChipVariants = classVarianceAuthority.cva('', {
    variants: {
        variant: {
            pending: 'mtw:bg-gray-100 mtw:text-gray-950',
            skipped: 'mtw:bg-amber-50 mtw:text-amber-600',
            canceled: 'mtw:bg-red-50 mtw:text-red-600',
            issue_failed: 'mtw:bg-red-50 mtw:text-red-600',
            send_failed: 'mtw:bg-red-50 mtw:text-red-600',
            completed: 'mtw:bg-green-50 mtw:text-green-600'
        }
    }
});
const InvoiceRecurrenceIterationStatusChip = /*#__PURE__*/ React.forwardRef(({ status, className }, ref)=>{
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsx(Badge, {
        ref: ref,
        className: cn('mtw:inline-flex mtw:items-center mtw:gap-1', statusChipVariants({
            variant: status
        }), className),
        children: getCommonRecurrenceIterationStatusLabel(i18n, status)
    });
});

function _define_property$z(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$z(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$z(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$o(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$o(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$o(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const IterationInvoice = ({ iteration, invoice, i18n, onRowClick })=>{
    const { locale } = useMoniteContext();
    const { formatCurrencyToDisplay } = useCurrencies();
    var _iteration_issued_invoice_id;
    const { data: iterationInvoice } = useGetReceivableById((_iteration_issued_invoice_id = iteration === null || iteration === void 0 ? void 0 : iteration.issued_invoice_id) !== null && _iteration_issued_invoice_id !== void 0 ? _iteration_issued_invoice_id : '', Boolean(iteration === null || iteration === void 0 ? void 0 : iteration.issued_invoice_id));
    const enableRowClick = Boolean(iterationInvoice);
    return /*#__PURE__*/ jsxRuntime.jsxs("tr", _object_spread_props$o(_object_spread$z({
        className: tailwindMerge.twMerge('mtw:border-t mtw:border-border', enableRowClick && 'mtw:hover:cursor-pointer')
    }, enableRowClick && onRowClick && {
        onClick: ()=>{
            var _iterationInvoice_id;
            return onRowClick((_iterationInvoice_id = iterationInvoice === null || iterationInvoice === void 0 ? void 0 : iterationInvoice.id) !== null && _iterationInvoice_id !== void 0 ? _iterationInvoice_id : '');
        }
    }), {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("td", {
                className: "mtw:text-left mtw:h-9 mtw:py-2 mtw:pr-2 mtw:text-sm mtw:leading-5 mtw:font-normal",
                children: (iteration === null || iteration === void 0 ? void 0 : iteration.issued_invoice_id) ? iterationInvoice === null || iterationInvoice === void 0 ? void 0 : iterationInvoice.document_id : INVOICE_DOCUMENT_AUTO_ID
            }),
            /*#__PURE__*/ jsxRuntime.jsx("td", {
                className: "mtw:text-left mtw:h-9 mtw:py-2 mtw:px-2",
                children: iterationInvoice ? /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                    status: invoice === null || invoice === void 0 ? void 0 : invoice.status
                }) : /*#__PURE__*/ jsxRuntime.jsx(InvoiceRecurrenceIterationStatusChip, {
                    status: iteration.status
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("td", {
                className: "mtw:text-left mtw:h-9 mtw:py-2 mtw:px-2 mtw:text-sm mtw:leading-5 mtw:font-normal",
                children: i18n.date(iteration === null || iteration === void 0 ? void 0 : iteration.issue_at, locale.dateFormat)
            }),
            /*#__PURE__*/ jsxRuntime.jsx("td", {
                className: "mtw:text-right mtw:h-9 mtw:py-2 mtw:pl-2 mtw:text-sm mtw:leading-5 mtw:font-normal",
                children: iterationInvoice ? /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                    children: formatCurrencyToDisplay(iterationInvoice === null || iterationInvoice === void 0 ? void 0 : iterationInvoice.total_amount, iterationInvoice === null || iterationInvoice === void 0 ? void 0 : iterationInvoice.currency)
                }) : /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                    children: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.total_amount, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                })
            })
        ]
    }));
};
const InvoiceDetailsTabScheduledInvoices = ({ invoice, recurrence, openInvoiceDetails })=>{
    var _recurrence_iterations;
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs("table", {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("thead", {
                children: /*#__PURE__*/ jsxRuntime.jsxs("tr", {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("th", {
                            className: "mtw:text-left mtw:h-10 mtw:pr-2 mtw:text-sm mtw:font-medium mtw:leading-5",
                            children: i18n._({
                                id: "Y0Jaj3"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("th", {
                            className: "mtw:text-left mtw:h-10 mtw:px-2 mtw:text-sm mtw:font-medium mtw:leading-5",
                            children: i18n._({
                                id: "uAQUqI"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("th", {
                            className: "mtw:text-left mtw:h-10 mtw:px-2 mtw:text-sm mtw:font-medium mtw:leading-5",
                            children: i18n._({
                                id: "mYGY3B"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("th", {
                            className: "mtw:text-right mtw:h-10 mtw:pl-2 mtw:text-sm mtw:font-medium mtw:leading-5",
                            children: i18n._({
                                id: "hehnjM"
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("tbody", {
                children: recurrence === null || recurrence === void 0 ? void 0 : (_recurrence_iterations = recurrence.iterations) === null || _recurrence_iterations === void 0 ? void 0 : _recurrence_iterations.map((iteration, index)=>{
                    return /*#__PURE__*/ jsxRuntime.jsx(IterationInvoice, {
                        iteration: iteration,
                        invoice: invoice,
                        i18n: i18n,
                        onRowClick: openInvoiceDetails
                    }, i18n._({
                        id: "2AX2/p",
                        values: {
                            index: index,
                            0: iteration === null || iteration === void 0 ? void 0 : iteration.iteration
                        }
                    }));
                })
            })
        ]
    });
};

const InvoicePDFViewer = ({ receivable_id, showCloseButton, onClose })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const pdfLink = api.receivables.getReceivablesIdPdfLink.getQueryData({
        path: {
            receivable_id
        }
    }, queryClient);
    const { data, isLoading, error } = api.receivables.getReceivablesIdPdfLink.useQuery({
        path: {
            receivable_id
        }
    }, {
        staleTime: 10000,
        refetchIntervalInBackground: true,
        refetchInterval: (pdfLink === null || pdfLink === void 0 ? void 0 : pdfLink.file_url) ? false : 1000
    });
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoadingPage, {});
    }
    if (error) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
            children: getAPIErrorMessage(i18n, error)
        });
    }
    if ((data === null || data === void 0 ? void 0 : data.file_url) === '') {
        return /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
            sx: {
                padding: 4
            },
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                alignItems: "center",
                gap: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(ErrorIcon__default.default, {
                        color: "error"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                        gap: 0.5,
                        alignItems: "center",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body1",
                                fontWeight: "bold",
                                children: i18n._({
                                    id: "XSIM6+"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                                alignItems: "center",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body2",
                                        children: i18n._({
                                            id: "GloT7f"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                        variant: "body2",
                                        children: i18n._({
                                            id: "nW+RXF"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                onClick: void api.receivables.getReceivablesIdPdfLink.resetQueries({
                                    parameters: {
                                        path: {
                                            receivable_id
                                        }
                                    }
                                }, queryClient),
                                startIcon: /*#__PURE__*/ jsxRuntime.jsx(RefreshIcon__default.default, {}),
                                children: i18n._({
                                    id: "HpK/8d"
                                })
                            })
                        ]
                    })
                ]
            })
        });
    }
    if (!(data === null || data === void 0 ? void 0 : data.file_url)) {
        return /*#__PURE__*/ jsxRuntime.jsx(CenteredContentBox, {
            children: /*#__PURE__*/ jsxRuntime.jsxs(material.Stack, {
                alignItems: "center",
                gap: 2,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {}),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                        textAlign: "center",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                fontWeight: "500",
                                children: i18n._({
                                    id: "5Pckp5"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                                variant: "body2",
                                fontWeight: "500",
                                children: i18n._({
                                    id: "PXOPc5"
                                })
                            })
                        ]
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(FileViewer, {
        mimetype: "application/pdf",
        url: data.file_url,
        showCloseButton: showCloseButton,
        onClose: onClose
    });
};

function _define_property$y(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$y(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$y(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$9(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$9(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$9(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function Tabs(_param) {
    var { className } = _param, props = _object_without_properties$9(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(TabsPrimitive__namespace.Root, _object_spread$y({
        "data-slot": "tabs",
        className: cn('mtw:flex mtw:flex-col mtw:gap-2', className)
    }, props));
}
function TabsList(_param) {
    var { className } = _param, props = _object_without_properties$9(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(TabsPrimitive__namespace.List, _object_spread$y({
        "data-slot": "tabs-list",
        className: cn('mtw:bg-muted mtw:text-muted-foreground mtw:inline-flex mtw:h-9 mtw:w-fit mtw:items-center mtw:justify-center mtw:rounded-lg mtw:p-[3px]', className)
    }, props));
}
function TabsTrigger(_param) {
    var { className } = _param, props = _object_without_properties$9(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(TabsPrimitive__namespace.Trigger, _object_spread$y({
        "data-slot": "tabs-trigger",
        className: cn('mtw:data-[state=active]:bg-background mtw:dark:data-[state=active]:text-foreground mtw:focus-visible:border-ring mtw:focus-visible:ring-ring/50 mtw:focus-visible:outline-ring mtw:dark:data-[state=active]:border-input mtw:dark:data-[state=active]:bg-input/30 mtw:text-foreground mtw:dark:text-muted-foreground mtw:inline-flex mtw:h-[calc(100%-1px)] mtw:flex-1 mtw:items-center mtw:justify-center mtw:gap-1.5 mtw:rounded-md mtw:border mtw:border-transparent mtw:px-2 mtw:py-1 mtw:text-sm mtw:font-medium mtw:whitespace-nowrap mtw:transition-[color,box-shadow] mtw:focus-visible:ring-[3px] mtw:focus-visible:outline-1 mtw:disabled:pointer-events-none mtw:disabled:opacity-50 mtw:data-[state=active]:shadow-sm mtw:[&_svg]:pointer-events-none mtw:[&_svg]:shrink-0 mtw:[&_svg:not([class*=size-])]:size-4', className)
    }, props));
}
function TabsContent(_param) {
    var { className } = _param, props = _object_without_properties$9(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(TabsPrimitive__namespace.Content, _object_spread$y({
        "data-slot": "tabs-content",
        className: cn('mtw:flex-1 mtw:outline-none', className)
    }, props));
}

function _define_property$x(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$x(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$x(target, key, source[key]);
        });
    }
    return target;
}
const InvoiceDetails$1 = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsBase$1, _object_spread$x({}, props))
    });
const InvoiceDetailsBase$1 = ({ invoiceId, open, onCloseInvoiceDetails, onDuplicate, onMarkAsUncollectible, openInvoiceDetails })=>{
    const { i18n } = react.useLingui();
    const { formatCurrencyToDisplay } = useCurrencies();
    const { receivablesCallbacks } = useComponentSettings();
    const isLargeDesktop = useIsLargeDesktopScreen();
    const { data: invoice, isLoading: isLoadingInvoiceDetails } = useGetReceivableById(invoiceId, true);
    const { data: recurrence, isLoading: isLoadingRecurrence } = useGetRecurrenceById((invoice === null || invoice === void 0 ? void 0 : invoice.type) === 'invoice' ? invoice === null || invoice === void 0 ? void 0 : invoice.recurrence_id : undefined);
    const [isEditing, setIsEditing] = React.useState(false);
    const [editTemplateModalOpen, setEditTemplateModalOpen] = React.useState(false);
    const [showEmail, setShowEmail] = React.useState(false);
    const [showPDF, setShowPDF] = React.useState(false);
    const [selectedTab, setSelectedTab] = React.useState("overview");
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'receivable',
        action: 'read',
        entityUserId: invoice === null || invoice === void 0 ? void 0 : invoice.entity_user_id
    });
    const actions = React.useMemo(()=>{
        return {
            onEditButtonClick: ()=>setIsEditing(true),
            onTemplateSettingsButtonClick: ()=>setEditTemplateModalOpen(true),
            onIssueAndSendButtonClick: ()=>setShowEmail(true),
            onViewPDFButtonClick: ()=>setShowPDF((prevState)=>!prevState),
            onDelete: ()=>onCloseInvoiceDetails(),
            onDuplicate: onDuplicate,
            onMarkAsUncollectible: onMarkAsUncollectible
        };
    }, [
        onDuplicate,
        onMarkAsUncollectible,
        onCloseInvoiceDetails
    ]);
    const isRecurringInvoice = (invoice === null || invoice === void 0 ? void 0 : invoice.status) === 'recurring';
    // TODO: This is a workaround until we replace all MUI with shadcn
    // If this is not done, then shadcn's overlay overrides MUI's overlay
    const isSheetOpen = open && !isEditing && !editTemplateModalOpen && !showEmail;
    const isPDFOpen = showPDF && !isEditing && !editTemplateModalOpen && !showEmail;
    const handleTabChange = (value)=>{
        setSelectedTab(value);
    };
    const handleSheetContent = ()=>{
        if (isLoadingInvoiceDetails || isReadAllowedLoading || isLoadingRecurrence) {
            return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:w-full mtw:items-center mtw:justify-center mtw:h-full",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                        hidden: true,
                        children: i18n._({
                            id: "TeS101"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(LoadingSpinner, {})
                ]
            });
        }
        if (!isReadAllowed) {
            return /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:w-3/4 mtw:m-auto",
                children: /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {})
            });
        }
        if (!invoice) {
            return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:w-3/4 mtw:m-auto",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                        hidden: true,
                        children: i18n._({
                            id: "YSd1ls"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
                        title: i18n._({
                            id: "YSd1ls"
                        }),
                        description: i18n._({
                            id: "ebGy2F",
                            values: {
                                invoiceId: invoiceId
                            }
                        })
                    })
                ]
            });
        }
        if (invoice.type !== 'invoice') {
            return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:w-3/4 mtw:m-auto",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(DialogTitle, {
                        hidden: true,
                        children: i18n._({
                            id: "vgo1MW"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(NotFound, {
                        title: i18n._({
                            id: "vgo1MW"
                        }),
                        description: i18n._({
                            id: "cG9XpL",
                            values: {
                                0: invoice.type
                            }
                        })
                    })
                ]
            });
        }
        return /*#__PURE__*/ jsxRuntime.jsxs("div", {
            className: "mtw:flex mtw:flex-col mtw:overflow-y-auto",
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(SheetHeader, {
                    className: "mtw:pl-8 mtw:gap-2 mtw:flex-row",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:items-center mtw:gap-2 mtw:flex-1",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(SheetTitle, {
                                    className: "mtw:text-xl mtw:font-semibold mtw:leading-6",
                                    children: recurrence && isRecurringInvoice ? i18n._({
                                        id: "4nacqC"
                                    }) : i18n._({
                                        id: "IuMGvq"
                                    })
                                }),
                                recurrence && isRecurringInvoice ? /*#__PURE__*/ jsxRuntime.jsx(InvoiceRecurrenceStatusChip, {
                                    status: recurrence === null || recurrence === void 0 ? void 0 : recurrence.status
                                }) : /*#__PURE__*/ jsxRuntime.jsx(InvoiceStatusChip, {
                                    status: invoice === null || invoice === void 0 ? void 0 : invoice.status
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(SheetDescription, {
                            hidden: true,
                            children: i18n._({
                                id: "cDiHt4"
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-8",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("section", {
                            className: "mtw:flex mtw:flex-col mtw:gap-5 mtw:px-8",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                    className: "mtw:flex mtw:flex-col",
                                    children: [
                                        /*#__PURE__*/ jsxRuntime.jsx("h2", {
                                            className: "mtw:text-[32px] mtw:font-semibold mtw:leading-10",
                                            children: formatCurrencyToDisplay(invoice === null || invoice === void 0 ? void 0 : invoice.total_amount, invoice === null || invoice === void 0 ? void 0 : invoice.currency)
                                        }),
                                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                                            className: "mtw:text-sm mtw:font-medium mtw:leading-5",
                                            children: i18n._({
                                                id: "PqfYW9",
                                                values: {
                                                    0: invoice === null || invoice === void 0 ? void 0 : invoice.counterpart_name
                                                }
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsActions, {
                                    invoice: invoice,
                                    actions: actions,
                                    isPDFViewerOpen: isPDFOpen
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("section", {
                            className: "mtw:border-t mtw:border-neutral-80 mtw:pt-4 mtw:px-8",
                            children: /*#__PURE__*/ jsxRuntime.jsxs(Tabs, {
                                defaultValue: "overview",
                                className: "mtw:gap-8",
                                value: selectedTab,
                                onValueChange: handleTabChange,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsxs(TabsList, {
                                        className: "mtw:w-full",
                                        children: [
                                            /*#__PURE__*/ jsxRuntime.jsx(TabsTrigger, {
                                                value: "overview",
                                                children: i18n._({
                                                    id: "6/dCYd"
                                                })
                                            }),
                                            /*#__PURE__*/ jsxRuntime.jsx(TabsTrigger, {
                                                value: "details",
                                                children: i18n._({
                                                    id: "URmyfc"
                                                })
                                            }),
                                            recurrence ? /*#__PURE__*/ jsxRuntime.jsx(TabsTrigger, {
                                                value: "scheduled-invoices",
                                                children: i18n._({
                                                    id: "NaHtmo"
                                                })
                                            }) : /*#__PURE__*/ jsxRuntime.jsx(TabsTrigger, {
                                                value: "payments",
                                                children: i18n._({
                                                    id: "H0ShEF"
                                                })
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(TabsContent, {
                                        value: "overview",
                                        className: "mtw:flex mtw:flex-col mtw:gap-8",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsTabOverview, {
                                            invoice: invoice,
                                            recurrence: recurrence,
                                            handleTabChange: handleTabChange,
                                            openInvoiceDetails: openInvoiceDetails
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(TabsContent, {
                                        value: "details",
                                        className: "mtw:flex mtw:flex-col mtw:gap-8",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsTabDetails, {
                                            invoice: invoice
                                        })
                                    }),
                                    recurrence ? /*#__PURE__*/ jsxRuntime.jsx(TabsContent, {
                                        value: "scheduled-invoices",
                                        className: "mtw:flex mtw:flex-col mtw:gap-8",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsTabScheduledInvoices, {
                                            invoice: invoice,
                                            recurrence: recurrence,
                                            openInvoiceDetails: openInvoiceDetails
                                        })
                                    }) : /*#__PURE__*/ jsxRuntime.jsx(TabsContent, {
                                        value: "payments",
                                        className: "mtw:flex mtw:flex-col mtw:gap-8",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsTabPayments, {
                                            invoice: invoice
                                        })
                                    })
                                ]
                            })
                        })
                    ]
                })
            ]
        });
    };
    var _invoice_id, _invoice_id1;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            showEmail && /*#__PURE__*/ jsxRuntime.jsx(EmailInvoiceDetails, {
                invoiceId: (_invoice_id = invoice === null || invoice === void 0 ? void 0 : invoice.id) !== null && _invoice_id !== void 0 ? _invoice_id : '',
                onClose: ()=>{
                    setShowEmail(false);
                },
                onSendEmail: receivablesCallbacks === null || receivablesCallbacks === void 0 ? void 0 : receivablesCallbacks.onInvoiceSent,
                isOpen: showEmail
            }),
            editTemplateModalOpen && /*#__PURE__*/ jsxRuntime.jsx(TemplateSettings, {
                isDialog: true,
                isOpen: editTemplateModalOpen,
                handleCloseDialog: ()=>setEditTemplateModalOpen(false)
            }),
            isEditing && invoice && /*#__PURE__*/ jsxRuntime.jsx(EditInvoiceDetails, {
                isOpen: isEditing,
                invoice: invoice,
                onUpdated: (updatedReceivable)=>{
                    var _receivablesCallbacks_onUpdate;
                    setIsEditing(false);
                    receivablesCallbacks === null || receivablesCallbacks === void 0 ? void 0 : (_receivablesCallbacks_onUpdate = receivablesCallbacks.onUpdate) === null || _receivablesCallbacks_onUpdate === void 0 ? void 0 : _receivablesCallbacks_onUpdate.call(receivablesCallbacks, updatedReceivable.id, updatedReceivable);
                },
                onCancel: ()=>setIsEditing(false)
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Sheet, {
                open: isSheetOpen,
                modal: false,
                onOpenChange: ()=>{
                    onCloseInvoiceDetails();
                    if (showPDF) setShowPDF(false);
                },
                children: /*#__PURE__*/ jsxRuntime.jsxs(SheetContent, {
                    className: "mtw:gap-0 mtw:pb-12",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(SheetDescription, {
                            hidden: true,
                            children: i18n._({
                                id: "cDiHt4"
                            })
                        }),
                        handleSheetContent(),
                        /*#__PURE__*/ jsxRuntime.jsx(Sheet, {
                            open: isPDFOpen,
                            modal: false,
                            children: /*#__PURE__*/ jsxRuntime.jsxs(SheetContent, {
                                className: "mtw:w-full mtw:flex-row mtw:xl:max-w-[1200px] mtw:xl:z-1299",
                                showCloseButton: false,
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(SheetTitle, {
                                        hidden: true,
                                        children: i18n._({
                                            id: "d4/7Xi"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx(SheetDescription, {
                                        hidden: true,
                                        children: i18n._({
                                            id: "d4/7Xi"
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: "mtw:w-full mtw:xl:w-1/2 mtw:bg-white",
                                        children: /*#__PURE__*/ jsxRuntime.jsx(InvoicePDFViewer, {
                                            receivable_id: (_invoice_id1 = invoice === null || invoice === void 0 ? void 0 : invoice.id) !== null && _invoice_id1 !== void 0 ? _invoice_id1 : '',
                                            showCloseButton: !isLargeDesktop,
                                            onClose: ()=>setShowPDF(false)
                                        })
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: "mtw:w-0 mtw:xl:w-1/2"
                                    })
                                ]
                            })
                        })
                    ]
                })
            })
        ]
    });
};

function _define_property$w(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$w(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$w(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$n(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$n(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$n(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const InvoiceDetails = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetailsBase, _object_spread$w({}, props))
    });
const InvoiceDetailsBase = (props)=>{
    const { componentSettings } = useMoniteContext();
    if (props.type) {
        var _componentSettings_counterparts;
        return /*#__PURE__*/ jsxRuntime.jsx(CreateReceivables, _object_spread_props$n(_object_spread$w({}, props), {
            customerTypes: props.customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes)
        }));
    }
    return /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetails$1, {
        open: !!props.id,
        onCloseInvoiceDetails: props.onClose,
        invoiceId: props.id,
        onDuplicate: props.onDuplicate,
        onMarkAsUncollectible: props.onMarkAsUncollectible,
        openInvoiceDetails: props.openInvoiceDetails
    });
};

function _define_property$v(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$v(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$v(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$8(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$8(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$8(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
var ReceivablesTableTabEnum = /*#__PURE__*/ function(ReceivablesTableTabEnum) {
    ReceivablesTableTabEnum[ReceivablesTableTabEnum["Invoices"] = 0] = "Invoices";
    ReceivablesTableTabEnum[ReceivablesTableTabEnum["Quotes"] = 1] = "Quotes";
    ReceivablesTableTabEnum[ReceivablesTableTabEnum["CreditNotes"] = 2] = "CreditNotes";
    ReceivablesTableTabEnum[ReceivablesTableTabEnum["Financing"] = 3] = "Financing";
    return ReceivablesTableTabEnum;
}({});
/**
 * ReceivablesTable component
 * Displays Invoices, Quotes, Credit Notes
 *
 * @example Monite Provider customisation
 * ```ts
 * // You can configure the component through Monite Provider property `componentSettings` like this:
 * const componentSettings = {
 *   receivables: {
 *    tab: 0,                      // The default tab index to display
 *    tabs: [
 *           {
 *             label: 'Draft Invoices', // The label of the Tab
 *             query: {                 // The query parameters for the Tab
 *               type: 'invoice',       // The type of the Receivables, *required*
 *               sort: 'created_at',
 *               order: 'desc',
 *               status__in: ['draft'],
 *             },
 *             filters: [               // The UI filters for the Tab
 *               'document_id__contains',
 *               'counterpart_id',
 *               'due_date__lte',
 *             ],
 *           },
 *           {
 *             label: 'Recurring invoices',
 *             query: {
 *               type: 'invoice',
 *               status__in: ['recurring'],
 *             },
 *             filters: ['document_id__contains', 'counterpart_id'],
 *           },
 *           {
 *             label: 'Other Invoices',
 *             query: {
 *               type: 'invoice',
 *               sort: 'created_at',
 *               order: 'desc',
 *               status__in: [             // The "status" filter for the Tab will
 *                 'issued',               // only contain the values specified in "status__in"
 *                 'overdue',
 *                 'partially_paid',
 *                 'paid',
 *                 'uncollectible',
 *                 'canceled',
 *               ],
 *               // If no "filters" are specified, default UI filters will be displayed
 *             },
 *           },
 *           {
 *             label: 'Credit notes',
 *             query: {
 *               type: 'credit_note',
 *             },
 *           },
 *     ],
 *   },
 * });
 * ```
 */ const ReceivablesTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ReceivablesTableBase, _object_spread$v({}, props))
    });
const ReceivablesTableBase = (_param)=>{
    var { onRowClick, onTabChange, setIsCreateInvoiceDialogOpen } = _param, inProps = _object_without_properties$8(_param, [
        "onRowClick",
        "onTabChange",
        "setIsCreateInvoiceDialogOpen"
    ]);
    var _finance_offers_, _finance_offers, _activeTabItem_query, _activeTabItem_query1, _activeTabItem_query2;
    const { tab, tabs } = useReceivablesTableProps(inProps);
    const { data: finance } = useGetFinanceOffers();
    const { i18n } = react.useLingui();
    const theme = material.useTheme();
    const { isUSEntity } = useMyEntity();
    const [activeTabIndex, setActiveTabIndex] = React.useState(tab !== null && tab !== void 0 ? tab : 0);
    const tabsIdBase = `Monite-ReceivablesTable-Tabs-${React.useId()}-`;
    const className = 'Monite-ReceivablesTable';
    const activeTabItem = tabs === null || tabs === void 0 ? void 0 : tabs[activeTabIndex];
    const isFinanceTabNew = window.localStorage.getItem('isFinanceTabNew') === 'true';
    const isServicing = (finance === null || finance === void 0 ? void 0 : finance.business_status) === 'ONBOARDED' && (finance === null || finance === void 0 ? void 0 : (_finance_offers = finance.offers) === null || _finance_offers === void 0 ? void 0 : (_finance_offers_ = _finance_offers[0]) === null || _finance_offers_ === void 0 ? void 0 : _finance_offers_.status) === 'CURRENT';
    const handleTabChange = (tab)=>{
        setActiveTabIndex(tab);
        onTabChange === null || onTabChange === void 0 ? void 0 : onTabChange(tab);
    };
    React.useEffect(()=>{
        if ((activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.label) === FINANCING_LABEL && isFinanceTabNew) {
            window.localStorage.setItem('isFinanceTabNew', 'false');
        }
    }, [
        isFinanceTabNew,
        activeTabItem
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                className: classNames(ScopedCssBaselineContainerClassName, className + '-Tabs'),
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Tabs, {
                    value: activeTabIndex,
                    variant: "standard",
                    "aria-label": i18n._({
                        id: "uIUvwE"
                    }),
                    onChange: (_, value)=>handleTabChange(Number(value)),
                    children: tabs === null || tabs === void 0 ? void 0 : tabs.map(({ label }, index)=>{
                        if (label == FINANCING_LABEL && !isUSEntity || !isServicing) {
                            return null;
                        }
                        return /*#__PURE__*/ jsxRuntime.jsx(material.Tab, _object_spread$v({
                            id: `${tabsIdBase}-${index}-tab`,
                            "aria-controls": `${tabsIdBase}-${index}-tabpanel`,
                            label: label,
                            value: index
                        }, isFinanceTabNew && label == FINANCING_LABEL && {
                            iconPosition: 'end',
                            icon: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                sx: {
                                    width: 16,
                                    height: 16,
                                    px: 0.5,
                                    borderRadius: '100%',
                                    bgcolor: theme.palette.primary.main,
                                    color: '#FFF',
                                    alignContent: 'center',
                                    fontSize: 10
                                },
                                children: "1"
                            }),
                            sx: {
                                flexDirection: 'row',
                                gap: 1,
                                '.MuiTab-iconWrapper': {
                                    mb: 0
                                }
                            }
                        }), `${label}-${tabsIdBase}-${index}`);
                    })
                })
            }),
            (activeTabItem === null || activeTabItem === void 0 ? void 0 : (_activeTabItem_query = activeTabItem.query) === null || _activeTabItem_query === void 0 ? void 0 : _activeTabItem_query.type) === 'quote' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: `${tabsIdBase}-${activeTabIndex}-tabpanel`,
                "aria-labelledby": `${tabsIdBase}-${activeTabIndex}-tab`,
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(QuotesTable, {
                    onRowClick: onRowClick,
                    setIsCreateInvoiceDialogOpen: setIsCreateInvoiceDialogOpen,
                    query: activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.query
                }, activeTabIndex)
            }),
            (activeTabItem === null || activeTabItem === void 0 ? void 0 : (_activeTabItem_query1 = activeTabItem.query) === null || _activeTabItem_query1 === void 0 ? void 0 : _activeTabItem_query1.type) === 'invoice' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: `${tabsIdBase}-${activeTabIndex}-tabpanel`,
                "aria-labelledby": `${tabsIdBase}-${activeTabIndex}-tab`,
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(InvoicesTable, {
                    onRowClick: onRowClick,
                    setIsCreateInvoiceDialogOpen: setIsCreateInvoiceDialogOpen,
                    query: activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.query,
                    filters: activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.filters
                }, activeTabIndex)
            }),
            (activeTabItem === null || activeTabItem === void 0 ? void 0 : (_activeTabItem_query2 = activeTabItem.query) === null || _activeTabItem_query2 === void 0 ? void 0 : _activeTabItem_query2.type) === 'credit_note' && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: `${tabsIdBase}-${activeTabIndex}-tabpanel`,
                "aria-labelledby": `${tabsIdBase}-${activeTabIndex}-tab`,
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(CreditNotesTable, {
                    onRowClick: onRowClick,
                    setIsCreateInvoiceDialogOpen: setIsCreateInvoiceDialogOpen,
                    query: activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.query
                }, activeTabIndex)
            }),
            (activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.label) == FINANCING_LABEL && /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                role: "tabpanel",
                id: `${tabsIdBase}-${activeTabIndex}-tabpanel`,
                "aria-labelledby": `${tabsIdBase}-${activeTabIndex}-tab`,
                sx: {
                    display: 'flex',
                    flexDirection: 'column',
                    height: 'inherit',
                    minHeight: '0'
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceTab, {
                    onRowClick: onRowClick
                })
            })
        ]
    });
};
const useReceivablesTableProps = (inProps)=>{
    var _componentSettings_receivables, _componentSettings_receivables1;
    const { componentSettings } = useMoniteContext();
    var _inProps_tab, _inProps_tabs;
    return {
        tab: (_inProps_tab = inProps === null || inProps === void 0 ? void 0 : inProps.tab) !== null && _inProps_tab !== void 0 ? _inProps_tab : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : _componentSettings_receivables.tab,
        tabs: (_inProps_tabs = inProps === null || inProps === void 0 ? void 0 : inProps.tabs) !== null && _inProps_tabs !== void 0 ? _inProps_tabs : componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables1 = componentSettings.receivables) === null || _componentSettings_receivables1 === void 0 ? void 0 : _componentSettings_receivables1.tabs
    };
};

function _define_property$u(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$u(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$u(target, key, source[key]);
        });
    }
    return target;
}
const Receivables = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ReceivablesBase, _object_spread$u({}, props))
    });
const ReceivablesBase = ({ customerTypes })=>{
    var _componentSettings_receivables_tabs, _componentSettings_receivables, _componentSettings_financing, _componentSettings_counterparts;
    const { i18n } = react.useLingui();
    const { componentSettings, receivablesCallbacks } = useComponentSettings();
    const { isEnabled, isServicing } = useFinancing();
    const [invoiceId, setInvoiceId] = React.useState('');
    const [isCreateInvoiceDialogOpen, setIsCreateInvoiceDialogOpen] = React.useState(false);
    var _componentSettings_receivables_tab;
    const [activeTab, setActiveTab] = React.useState((_componentSettings_receivables_tab = componentSettings.receivables.tab) !== null && _componentSettings_receivables_tab !== void 0 ? _componentSettings_receivables_tab : ReceivablesTableTabEnum.Invoices);
    const activeTabItem = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_receivables = componentSettings.receivables) === null || _componentSettings_receivables === void 0 ? void 0 : (_componentSettings_receivables_tabs = _componentSettings_receivables.tabs) === null || _componentSettings_receivables_tabs === void 0 ? void 0 : _componentSettings_receivables_tabs[activeTab];
    const openInvoiceModal = React.useCallback((id)=>{
        setInvoiceId(id);
    }, []);
    const onRowClick = React.useCallback((id)=>{
        openInvoiceModal(id);
    }, [
        openInvoiceModal
    ]);
    const closeModal = React.useCallback(()=>{
        setInvoiceId('');
    }, []);
    const handleCreate = React.useCallback((receivableId)=>{
        var _receivablesCallbacks_onCreate;
        setIsCreateInvoiceDialogOpen(false);
        setActiveTab(ReceivablesTableTabEnum.Invoices);
        openInvoiceModal(receivableId);
        (_receivablesCallbacks_onCreate = receivablesCallbacks.onCreate) === null || _receivablesCallbacks_onCreate === void 0 ? void 0 : _receivablesCallbacks_onCreate.call(receivablesCallbacks, receivableId);
    }, [
        receivablesCallbacks,
        openInvoiceModal,
        setActiveTab
    ]);
    const { root } = useRootElements();
    const { data: user } = useEntityUserByAuthToken();
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'receivable',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'receivable',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const className = 'Monite-Receivables';
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                className: className + '-Header',
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "mUv9U4"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                    children: isEnabled && isServicing && !(componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_financing = componentSettings.financing) === null || _componentSettings_financing === void 0 ? void 0 : _componentSettings_financing.enableFinanceWidgetButton) && (activeTabItem === null || activeTabItem === void 0 ? void 0 : activeTabItem.label) === FINANCING_LABEL ? /*#__PURE__*/ jsxRuntime.jsx(FinanceMenuButtons, {}) : /*#__PURE__*/ jsxRuntime.jsx(Button, {
                        id: "actions",
                        size: "lg",
                        disabled: !isCreateAllowed,
                        onClick: ()=>{
                            setIsCreateInvoiceDialogOpen(true);
                        },
                        children: i18n._({
                            id: "ZC4IiQ"
                        })
                    })
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(ReceivablesTable, {
                tab: activeTab,
                onTabChange: setActiveTab,
                onRowClick: onRowClick,
                setIsCreateInvoiceDialogOpen: setIsCreateInvoiceDialogOpen
            }),
            /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetails, {
                id: invoiceId,
                onClose: closeModal,
                onDuplicate: openInvoiceModal,
                openInvoiceDetails: openInvoiceModal
            }),
            /*#__PURE__*/ jsxRuntime.jsx(Dialog$1, {
                className: className + '-Dialog-CreateReceivable',
                open: isCreateInvoiceDialogOpen,
                container: root,
                fullScreen: true,
                onClose: ()=>{
                    setIsCreateInvoiceDialogOpen(false);
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(InvoiceDetails, {
                    type: "invoice",
                    onCreate: handleCreate,
                    customerTypes: customerTypes || (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_counterparts = componentSettings.counterparts) === null || _componentSettings_counterparts === void 0 ? void 0 : _componentSettings_counterparts.customerTypes)
                })
            })
        ]
    });
};

function _define_property$t(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$t(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$t(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$m(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$m(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$m(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useOnboardingRequirementsData = ()=>{
    const { api } = useMoniteContext();
    return api.frontend.getFrontendOnboardingRequirements.useQuery({}, {
        retry: false,
        staleTime: Infinity,
        refetchOnMount: false,
        refetchOnWindowFocus: false
    });
};
const useOnboardingPersonMask = (relationships, country)=>{
    const { api } = useMoniteContext();
    const onlyDirector = relationships.includes('director') && relationships.length === 1;
    const enabled = !!(!!relationships.length && (onlyDirector || !onlyDirector && country));
    return api.frontend.getFrontendPersonMask.useQuery({
        query: {
            relationships,
            country
        }
    }, {
        enabled,
        retry: false,
        staleTime: Infinity
    });
};
const useOnboardingBankAccountMask = ()=>{
    const { api } = useMoniteContext();
    return api.frontend.getFrontendBankAccountMasks.useQuery({}, {
        retry: false,
        staleTime: Infinity
    });
};
const usePatchOnboardingRequirementsData = ()=>{
    const { api, queryClient } = useMoniteContext();
    return React.useCallback(({ data, requirements = [] })=>{
        api.frontend.getFrontendOnboardingRequirements.setQueryData({}, (onboarding)=>{
            if (!onboarding) return;
            return _object_spread_props$m(_object_spread$t({}, onboarding), {
                data: _object_spread$t({}, onboarding.data, data),
                requirements: onboarding.requirements.filter((item)=>!(requirements === null || requirements === void 0 ? void 0 : requirements.includes(item)))
            });
        }, queryClient);
    }, [
        api,
        queryClient
    ]);
};
const useOnboardingCurrencyToCountries = ()=>{
    const { api } = useMoniteContext();
    return api.frontend.getFrontendBankAccountsCurrencyToSupportedCountries.useQuery({}, {
        retry: false,
        staleTime: Infinity
    });
};

const schema = {
    entity: 'entity',
    business_profile: 'business_profile',
    representative: 'representative',
    owners: 'owners',
    directors: 'directors',
    executives: 'executives',
    persons: 'persons',
    bank_accounts: 'bank_accounts',
    entity_documents: 'entity_documents',
    ownership_declaration: 'ownership_declaration',
    persons_documents: 'persons_documents',
    tos_acceptance: 'tos_acceptance'
};
const OnboardingRequirement = Object.values(schema);

/**
 * Determines if the given requirement is for a representative.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a representative.
 */ function isRepresentative(requirement) {
    return requirement === 'representative';
}
/**
 * Determines if the given requirement is for directors.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for directors.
 */ function isDirectors(requirement) {
    return requirement === 'directors';
}
/**
 * Determines if the given requirement is for owners.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for owners.
 */ function isOwners(requirement) {
    return requirement === 'owners';
}
/**
 * Determines if the given requirement is for executives.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for executives.
 */ function isExecutives(requirement) {
    return requirement === 'executives';
}
/**
 * Determines if the given requirement is for an individual.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is entity.
 */ function isEntity(requirement) {
    return requirement === 'entity';
}
/**
 * Determines if the given requirement is for a bank account.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a bank account.
 */ function isBankAccount(requirement) {
    return requirement === 'bank_accounts';
}
/**
 * Determines if the given requirement is for a person.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a person.
 */ function isPersons(requirement) {
    return requirement === 'persons';
}
/**
 * Determines if the given requirement is for a business profile.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a business profile.
 */ function isBusinessProfile(requirement) {
    return requirement === 'business_profile';
}
/**
 * Determines if the given requirement is for a TOS acceptance.
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a TOS acceptance.
 */ function isTosAcceptance(requirement) {
    return requirement === 'tos_acceptance';
}
/**
 * Determines if the given requirement is for an ownership declaration.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for an ownership declaration.
 */ function isOwnershipDeclaration(requirement) {
    return requirement === 'ownership_declaration';
}
/**
 * Determines if the given requirement is for entity documents.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for entity documents.
 */ const isEntityDocuments = (requirement)=>{
    return requirement === 'entity_documents';
};
/**
 * Maps the given onboarding requirement to a company property key.
 *
 * @param requirement - The onboarding requirement to be mapped.
 * @returns A keyof OnboardingEntity or an empty
 *  string if no match is found.
 */ function requirementToCompanyRole(requirement) {
    if (isRepresentative(requirement)) return 'representative_provided';
    if (isDirectors(requirement)) return 'directors_provided';
    if (isOwners(requirement)) return 'owners_provided';
    return 'executives_provided';
}
/**
 * Maps the given company property key to an onboarding requirement.
 *
 * @param companyRequirement - The company property key to be mapped.
 * @returns An OnboardingRequirement based on the provided company property key.
 */ function companyRoleToRequirement(companyRequirement) {
    switch(companyRequirement){
        case 'representative_provided':
            return 'representative';
        case 'directors_provided':
            return 'directors';
        case 'owners_provided':
            return 'owners';
        default:
            return 'executives';
    }
}
/**
 * Maps the given onboarding requirement to a relationship code.
 *
 * @param requirement - The onboarding requirement to be mapped.
 * @returns An OnboardingRelationshipCode based on the provided requirement.
 */ function requirementToRelationship(requirement) {
    if (isRepresentative(requirement)) return 'representative';
    if (isDirectors(requirement)) return 'director';
    if (isOwners(requirement)) return 'owner';
    return 'executive';
}
/**
 * Checks if the requirement is for a person list (executives, owners, directors).
 *
 * @param {OnboardingRequirement} requirement - The onboarding requirement to check.
 *
 * @returns {boolean} - Returns true if the requirement is for executives, owners or directors. Otherwise, returns false.
 */ function isPersonList(requirement) {
    if (!requirement) return false;
    if (isExecutives(requirement)) return true;
    if (isOwners(requirement)) return true;
    return isDirectors(requirement);
}
/**
 * Determines if the given requirement is for a persons document.
 *
 * @param requirement - The onboarding requirement to be checked.
 * @returns A boolean value indicating if the requirement is for a persons documents.
 */ function isPersonsDocuments(requirement) {
    return requirement === 'persons_documents';
}
/**
 * Checks if the requirement is a mask requirement.
 *
 * @param {OnboardingRequirement} requirement - The onboarding requirement to check.
 *
 * @returns {boolean} - Returns true if the requirement is representative or a person list requirement. Otherwise, returns false.
 */ function isMask(requirement) {
    if (isRepresentative(requirement)) return true;
    return isPersonList(requirement);
}
const PERSON_CREATION = '';
/**
 * Checks if person mode is enabled, i.e., the personId is not null or undefined.
 *
 * @param {OnboardingPersonId} personId - The personId of the person.
 *
 * @returns {boolean} - Returns true if person mode is enabled, false otherwise.
 */ const isPersonEditingEnabled = (personId)=>{
    return personId !== null && personId !== undefined;
};
/**
 * Checks if person is being created.
 *
 * @param {OnboardingPersonId} personId - The id of the person.
 *
 * @returns {boolean} - Returns true if person mode is enabled and the index equals PERSON_CREATION, false otherwise.
 */ const isCreatingPerson = (personId)=>{
    return isPersonEditingEnabled(personId) && personId === PERSON_CREATION;
};
/**
 * Checks if person is being edited.
 *
 * @param {OnboardingPersonId} personId - The id of the person.
 *
 * @returns {boolean} - Returns true if person mode is enabled and the index is greater than PERSON_CREATION, false otherwise.
 */ const isEditingPerson = (personId)=>{
    return isPersonEditingEnabled(personId) && personId !== PERSON_CREATION;
};
/**
 * Checks if person has a specific requirement.
 *
 * @param {OnboardingPerson} person - The person to check the requirement for.
 * @param {OnboardingRequirement} requirement - The requirement to check.
 *
 * @returns {boolean} - Returns true if the person's relationship includes the requirement, false otherwise.
 */ const hasPersonRequirement = (person, requirement)=>{
    if (!(person === null || person === void 0 ? void 0 : person.relationship) || !requirement) return false;
    return !!person.relationship[requirementToRelationship(requirement)];
};
/**
 * Checks if any person in the list has a specific requirement.
 *
 * @param {OnboardingPerson[]} persons - The list of persons to check the requirement for.
 * @param {OnboardingRequirement} requirement - The requirement to check.
 * @param {boolean} condition - The condition to filter the persons by.
 *
 * @returns {boolean} - Returns true if any person's relationship includes the requirement that matches the condition, false otherwise.
 */ const isRequirementPresentInPersonList = (persons = [], requirement, condition)=>persons.filter((person)=>{
        if (!(person === null || person === void 0 ? void 0 : person.relationship) || !requirement) return false;
        return hasPersonRequirement(person, requirement) === condition;
    }).length > 0;
/**
 * Check if the entity is an individual.
 *
 * @param {EntityResponse} entity - The entity to check.
 * @returns {boolean} - Returns true if the entity is an individual, false otherwise.
 */ const isIndividual = (entity)=>{
    return (entity === null || entity === void 0 ? void 0 : entity.type) === 'individual';
};
/**
 * Gets the name of the entity.
 *
 * @param {EntityResponse} entity - The entity to get the name for.
 * @returns {string} - Returns the name of the entity.
 */ const getEntityName = (entity)=>{
    var _entity_organization;
    if (!entity) return '';
    return isIndividual(entity) ? `${entity.individual.first_name} ${entity.individual.last_name}` : (_entity_organization = entity.organization) === null || _entity_organization === void 0 ? void 0 : _entity_organization.legal_name;
};
/**
 * Gets the appropriate translated identification label based on country
 *
 * @param {I18n} i18n - The i18n instance for translation
 * @param {AllowedCountries | undefined | null} country - The country code
 * @returns {string} The translated identification label
 */ function getIdentificationLabel(i18n, country) {
    if (country === 'US') {
        return i18n._({
            id: "mOjKS5"
        });
    }
    return i18n._({
        id: "WdetUP"
    });
}

const useOnboardingRequirements = ()=>{
    var _onboarding_data, _onboarding_data1;
    const { data: onboarding } = useOnboardingRequirementsData();
    const { data: entity } = useMyEntity();
    const entityName = React.useMemo(()=>{
        return getEntityName(entity);
    }, [
        entity
    ]);
    const [isEditMode, setEditMode] = React.useState(false);
    const [personId, setPersonId] = React.useState(null);
    const [representativePersonId, setRepresentativePersonId] = React.useState(null);
    const hasRepresentative = React.useMemo(()=>{
        var _onboarding_data_persons, _onboarding_data;
        return Boolean(onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : (_onboarding_data_persons = _onboarding_data.persons) === null || _onboarding_data_persons === void 0 ? void 0 : _onboarding_data_persons.some((person)=>{
            var _person_relationship;
            return person === null || person === void 0 ? void 0 : (_person_relationship = person.relationship) === null || _person_relationship === void 0 ? void 0 : _person_relationship.representative;
        }));
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons
    ]);
    // Frontend safeguard: if a representative person already exists, skip the
    // 'representative' requirement even if backend still lists it.
    // TODO: Remove this once the backend is updated (if it is a BE bug actually)
    const onboardingRequirements = React.useMemo(()=>{
        var _onboarding_requirements;
        const base = (_onboarding_requirements = onboarding === null || onboarding === void 0 ? void 0 : onboarding.requirements) !== null && _onboarding_requirements !== void 0 ? _onboarding_requirements : [];
        if (!hasRepresentative) return base;
        return base.filter((req)=>req !== 'representative');
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : onboarding.requirements,
        hasRepresentative
    ]);
    const requirements = React.useMemo(()=>{
        return OnboardingRequirement.filter((requirement)=>onboardingRequirements.includes(requirement));
    }, [
        onboardingRequirements
    ]);
    const [requirement, setRequirement] = React.useState(undefined);
    const index = React.useMemo(()=>{
        if (!requirement) return 0;
        return requirements.findIndex((req)=>req === requirement);
    }, [
        requirement,
        requirements
    ]);
    const getCurrentRequirement = React.useCallback(()=>requirements.find((requirement)=>onboardingRequirements.includes(requirement)), [
        requirements,
        onboardingRequirements
    ]);
    React.useEffect(()=>{
        var _onboarding_data;
        if (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons) {
            const representativePerson = onboarding.data.persons.find((person)=>person.relationship.representative);
            if (representativePerson) {
                setRepresentativePersonId(representativePerson.id);
            }
        }
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data1 = onboarding.data) === null || _onboarding_data1 === void 0 ? void 0 : _onboarding_data1.persons
    ]);
    React.useEffect(()=>window.scrollTo(0, 0), [
        requirement,
        isEditMode
    ]);
    React.useEffect(()=>{
        if (isEditMode) return;
        setRequirement(getCurrentRequirement);
    }, [
        getCurrentRequirement,
        isEditMode
    ]);
    const enableEditMode = React.useCallback((requirement)=>{
        setEditMode(true);
        setRequirement(requirement);
    }, []);
    const enablePersonEditMode = React.useCallback((personId)=>{
        setEditMode(true);
        setPersonId(personId);
    }, []);
    const disableEditMode = React.useCallback(()=>{
        setEditMode(false);
        setPersonId(null);
    }, []);
    const onboardingCompleted = React.useMemo(()=>{
        return requirements.length === 0;
    }, [
        requirements.length
    ]);
    var _requirements_length;
    return {
        progress: (index + 1) / ((_requirements_length = requirements.length) !== null && _requirements_length !== void 0 ? _requirements_length : 1) * 100,
        currentRequirement: requirement,
        requirementList: requirements,
        isEditMode,
        enableEditMode,
        disableEditMode,
        personId,
        enablePersonEditMode,
        representativePersonId,
        entityName,
        onboardingCompleted
    };
};

const OnboardingRequirementsContext = /*#__PURE__*/ React.createContext({});
const OnboardingContextProvider = ({ children })=>{
    const requirements = useOnboardingRequirements();
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingRequirementsContext.Provider, {
        value: requirements,
        children: children
    });
};
const useOnboardingRequirementsContext = ()=>React.useContext(OnboardingRequirementsContext);

function useOnboardingActions() {
    var _onboarding_data;
    const { i18n } = react.useLingui();
    const { currentRequirement, disableEditMode, isEditMode, personId } = useOnboardingRequirementsContext();
    const { data: onboarding } = useOnboardingRequirementsData();
    const persons = React.useMemo(()=>{
        var _onboarding_data;
        return (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons) || [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons
    ]);
    const primaryActionCode = React.useMemo(()=>{
        if (isCreatingPerson(personId)) return 'createPerson';
        if (isEditingPerson(personId)) return 'updatePerson';
        if (isRepresentative(currentRequirement)) return 'createRepresentative';
        if (isPersonList(currentRequirement)) {
            const isEmptyPersonList = isRequirementPresentInPersonList(persons, currentRequirement, true);
            if (isEmptyPersonList) return 'updateEntityOrganizationRequirement';
            if (isOwners(currentRequirement)) return 'noOwners';
            if (isDirectors(currentRequirement)) return 'noDirectors';
            if (isExecutives(currentRequirement)) return 'noExecutives';
            return 'addRequirement';
        }
        if (isEditMode) return 'updateRequirement';
        return 'addRequirement';
    }, [
        personId,
        currentRequirement,
        isEditMode,
        persons
    ]);
    const secondaryActionCode = React.useMemo(()=>{
        if (isEditMode) return 'cancel';
        return undefined;
    }, [
        isEditMode
    ]);
    const secondaryAction = React.useMemo(()=>{
        switch(secondaryActionCode){
            case 'cancel':
                return disableEditMode;
            default:
                return undefined;
        }
    }, [
        secondaryActionCode,
        disableEditMode
    ]);
    return {
        primaryActionCode,
        primaryLabel: getFormLabelByCode(primaryActionCode, i18n),
        secondaryActionCode,
        secondaryLabel: secondaryActionCode ? getFormLabelByCode(secondaryActionCode, i18n) : undefined,
        secondaryAction
    };
}
const getFormLabelByCode = (code, i18n)=>{
    switch(code){
        case 'finish':
            return i18n._({
                id: "Wk10i0"
            });
        case 'addRequirement':
            return i18n._({
                id: "xGVfLh"
            });
        case 'updateRequirement':
            return i18n._({
                id: "y3aU20"
            });
        case 'cancel':
            return i18n._({
                id: "dEgA5A"
            });
        case 'saveClose':
            return i18n._({
                id: "n89h5a"
            });
        case 'createRepresentative':
            return i18n._({
                id: "xGVfLh"
            });
        case 'createPerson':
            return i18n._({
                id: "m16xKo"
            });
        case 'updatePerson':
            return i18n._({
                id: "y3aU20"
            });
        case 'updateEntityOrganizationRequirement':
            return i18n._({
                id: "fyZZKF"
            });
        case 'noOwners':
            return i18n._({
                id: "zrTf0T"
            });
        case 'noExecutives':
            return i18n._({
                id: "NapOX1"
            });
        case 'noDirectors':
            return i18n._({
                id: "n0CXlN"
            });
    }
};

function _define_property$s(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$s(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$s(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$l(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$l(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$l(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function isOnboardingField(field) {
    return !!field && typeof field === 'object' && 'required' in field;
}
const mapValueToForm = (_key, value)=>{
    if (value === undefined) return null;
    return value;
};
const mapValueToField = (key, value)=>{
    if (value === undefined) return null;
    if ((typeof value === 'string' || value instanceof Date) && key === 'date_of_birth' && dateFns.isValid(new Date(value))) {
        return dateFns.format(new Date(value), 'yyyy-MM-dd');
    }
    return value;
};
const generateValuesByFields = (fields)=>{
    const defaultValues = {
        url: 'https://'
    };
    return Object.entries(fields).reduce((acc, [key, item])=>{
        const field = item;
        if (typeof field === 'string' || typeof field === 'boolean') {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: field
            });
        }
        if (isOnboardingField(field)) {
            var _field_value;
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: mapValueToForm(key, (_field_value = field.value) !== null && _field_value !== void 0 ? _field_value : defaultValues[key])
            });
        }
        return _object_spread_props$l(_object_spread$s({}, acc), {
            [key]: generateValuesByFields(field)
        });
    }, {});
};
const generateErrorsByFields = (fields, parentKey = '')=>{
    if (!fields) return [];
    return Object.entries(fields).reduce((acc, [key, item])=>{
        const field = item;
        const fullKey = parentKey ? `${parentKey}.${key}` : key;
        if (typeof field === 'boolean' || typeof field === 'string') return acc;
        if (isOnboardingField(field)) {
            if (!field.error) return acc;
            return [
                ...acc,
                {
                    code: fullKey,
                    message: field.error.message
                }
            ];
        }
        return [
            ...acc,
            ...generateErrorsByFields(field, fullKey)
        ];
    }, []);
};
const findEmptyRequiredFields = (fields, parentKey = '')=>{
    if (!fields) return [];
    return Object.entries(fields).reduce((acc, [key, item])=>{
        const field = item;
        const fullKey = parentKey ? `${parentKey}.${key}` : key;
        if (typeof field === 'boolean' || typeof field === 'string') return acc;
        if (isOnboardingField(field)) {
            if (field.required && !field.value && !field.error) return [
                ...acc,
                fullKey
            ];
            return acc;
        }
        return [
            ...acc,
            ...findEmptyRequiredFields(field, fullKey)
        ];
    }, []);
};
const enrichFieldsByValues = (fields, values)=>{
    return Object.entries(fields).reduce((acc, [key, item])=>{
        const field = item;
        const value = values[key];
        if (value === undefined) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: field
            });
        }
        if (typeof field === 'boolean' || typeof field === 'string') {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: value
            });
        }
        if (isOnboardingField(field)) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: _object_spread_props$l(_object_spread$s({}, field), {
                    error: null,
                    value: mapValueToField(key, value)
                })
            });
        }
        if (!value) return acc;
        return _object_spread_props$l(_object_spread$s({}, acc), {
            [key]: enrichFieldsByValues(field, value)
        });
    }, {});
};
const prepareValuesToSubmit = (values)=>{
    return Object.entries(values).reduce((acc, [key, item])=>{
        const value = item;
        if (typeof value !== 'object' || value === null) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: mapValueToField(key, value)
            });
        }
        return _object_spread_props$l(_object_spread$s({}, acc), {
            [key]: prepareValuesToSubmit(value)
        });
    }, {});
};
const EXCLUDED_REQUEST_FIELDS = [
    'id'
];
/**
 * Filters out fields that should not be included in API request bodies
 * This is useful for preparing data for update requests where the response data
 * includes fields that should not be sent back to the API
 *
 * @param payload The request payload to filter
 * @returns A new object with excluded fields removed
 */ const filterRequestBody = (payload)=>{
    if (!payload) {
        return {};
    }
    return Object.entries(payload).reduce((filteredPayload, [key, value])=>{
        if (EXCLUDED_REQUEST_FIELDS.includes(key)) {
            return filteredPayload;
        }
        if (value !== null && typeof value === 'object' && !Array.isArray(value)) {
            return _object_spread_props$l(_object_spread$s({}, filteredPayload), {
                [key]: filterRequestBody(value)
            });
        }
        return _object_spread_props$l(_object_spread$s({}, filteredPayload), {
            [key]: value
        });
    }, {});
};
const generateFieldsByValues = ({ values, parentKey = '', exclude = [], optional = [], errors = [] })=>{
    return Object.entries(values).reduce((acc, [key, item])=>{
        const value = item;
        const fullKey = parentKey ? `${parentKey}.${key}` : key;
        if (exclude.includes(fullKey)) return acc;
        if (typeof value === 'boolean') {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: mapValueToForm(key, value)
            });
        }
        if (value instanceof Blob) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: value
            });
        }
        if (key === 'id') {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: value
            });
        }
        if (typeof value !== 'object' || value === null) {
            var _errors_find;
            const error = (_errors_find = errors.find((error)=>error.code === fullKey)) === null || _errors_find === void 0 ? void 0 : _errors_find.message;
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: {
                    required: !optional.includes(fullKey),
                    error: error ? {
                        message: error
                    } : null,
                    value: mapValueToField(key, value)
                }
            });
        }
        return _object_spread_props$l(_object_spread$s({}, acc), {
            [key]: generateFieldsByValues({
                values: value,
                parentKey: fullKey,
                exclude,
                optional,
                errors
            })
        });
    }, {});
};
const isAcceptableValue = (value)=>{
    return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || value instanceof Blob;
};
/**
 * This function is used to restore the previous values of an object.
 * If the value is an object, the function is called recursively on it.
 *
 * @template T - The type of the object.
 *
 * @param prevValues - The object that contains previous values.
 * @param nextValues - The object that contains next values.
 *
 * @returns - Returns the object with its values restored based on the
 * previous values.
 *
 * @example
 * restoreValues({a: 1, b: {c: 2, d: null}}, {a: null, b: {c: null, d: 3}});
 * returns {a: 1, b: {c: 2, d: 3}}
 */ const restoreFields = (prevValues, nextValues)=>{
    return Object.entries(nextValues).reduce((acc, [code, nextField])=>{
        const key = code;
        const prevField = prevValues[key];
        if (prevField === undefined && nextField !== undefined) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: nextField
            });
        }
        if (nextField === undefined || nextField === null) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: prevField
            });
        }
        if (prevField === undefined || prevField === null) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: nextField
            });
        }
        if (isAcceptableValue(nextField)) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: nextField
            });
        }
        if (isAcceptableValue(prevField)) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: prevField
            });
        }
        if (isOnboardingField(prevField) && isOnboardingField(nextField)) {
            return _object_spread_props$l(_object_spread$s({}, acc), {
                [key]: {
                    required: nextField.required,
                    value: nextField.value !== prevField.value ? nextField.value : prevField.value,
                    error: nextField.value !== prevField.value ? nextField.error : prevField.error
                }
            });
        }
        return _object_spread_props$l(_object_spread$s({}, acc), {
            [key]: restoreFields(prevField, nextField)
        });
    }, nextValues);
};

function _define_property$r(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$r(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$r(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$k(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$k(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$k(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const isBooleanValue = (key)=>{
    return key === 'representative' || key === 'owner' || key === 'executive' || key === 'director';
};
const generateFieldsByMask = (masks)=>{
    return Object.entries(masks).reduce((acc, [key, item])=>{
        const mask = item;
        if (isBooleanValue(key)) {
            return _object_spread_props$k(_object_spread$r({}, acc), {
                [key]: false
            });
        }
        if (typeof mask !== 'object') {
            return _object_spread_props$k(_object_spread$r({}, acc), {
                [key]: {
                    required: mask,
                    error: null,
                    value: null
                }
            });
        }
        return _object_spread_props$k(_object_spread$r({}, acc), {
            [key]: generateFieldsByMask(mask)
        });
    }, {});
};

const stringValidator = ()=>zod.z.string().nullable();
const numberValidator = ()=>zod.z.coerce.number().nullable();
const booleanValidator = ()=>zod.z.boolean();
const emailValidator = (i18n)=>zod.z.email(i18n._({
        id: "Wq6Wcm"
    })).nullable();
const urlValidator = (i18n)=>zod.z.url(i18n._({
        id: "VEf5xA"
    })).nullable();
const ibanValidator = (i18n, countryCode)=>stringValidator().check((payload)=>{
        if (!payload.value) return;
        validateIBAN(payload.value, i18n, countryCode, payload);
    });
/**
 * Validates the IBAN string based on format, validity and country consistency.
 *
 * @param iban - The IBAN string to be validated.
 * @param i18n - LinguiJS i18n instance for localized error messages.
 * @param countryCode - Expected country code for IBAN validation.
 * @param payload - Zod ParsePayload for adding issues.
 * @returns void - Issues are added to payload.issues.
 */ function validateIBAN(iban, i18n, countryCode, ctx) {
    const formattedIban = ibantools.electronicFormatIBAN(iban);
    if (!formattedIban) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "Kj7tIb"
            }),
            input: iban,
            path: []
        });
        return;
    }
    if (!ibantools.isValidIBAN(formattedIban)) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "Kj7tIb"
            }),
            input: iban,
            path: []
        });
        return;
    }
    const extractedIBAN = ibantools.extractIBAN(iban);
    if (countryCode && extractedIBAN.countryCode !== countryCode) {
        const country = getRegionName(countryCode);
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "MRZSMR",
                values: {
                    country: country
                }
            }),
            input: iban,
            path: [],
            params: {
                countryCode,
                expectedCountry: country
            }
        });
    }
}
const dateOfBirthValidator = (i18n)=>stringValidator().check((payload)=>{
        if (!payload.value) return;
        validateDateOfBirth(payload.value, i18n, payload);
    });
/**
 * Validates the date of birth string using Zod's modern check API.
 *
 * @param value - The date of birth string to be validated.
 * @param i18n - LinguiJS i18n instance for localized error messages.
 * @param payload - Zod ParsePayload for adding issues.
 * @returns void - Issues are added to payload.issues.
 */ function validateDateOfBirth(value, i18n, ctx) {
    const valueDate = new Date(value);
    const currentDate = new Date();
    if (!dateFns.isValid(valueDate)) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "JDvawG"
            }),
            input: value
        });
        return;
    }
    if (dateFns.isAfter(valueDate, currentDate)) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "7yyrX2"
            }),
            input: value
        });
        return;
    }
    const difference = dateFns.differenceInYears(currentDate, valueDate);
    if (difference < 18) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "mqqEVK"
            }),
            input: value,
            params: {
                minimumAge: 18,
                actualAge: difference
            }
        });
        return;
    }
    if (difference > 120) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "jkAezv"
            }),
            input: value,
            params: {
                maximumAge: 120,
                actualAge: difference
            }
        });
    }
}
const phoneValidator = (i18n)=>stringValidator().check((payload)=>{
        if (!payload.value) return;
        validatePhone(payload.value, i18n, payload);
    });
/**
 * Validates the phone number string using Zod's modern check API.
 *
 * @param value - The phone number string to be validated.
 * @param i18n - LinguiJS i18n instance for localized error messages.
 * @param payload - Zod ParsePayload for adding issues.
 * @returns void - Issues are added to payload.issues.
 */ function validatePhone(value, i18n, ctx) {
    try {
        const phoneNumber = libphonenumberJs.parsePhoneNumber(value);
        if (phoneNumber && !phoneNumber.isPossible()) {
            ctx.issues.push({
                code: 'custom',
                message: i18n._({
                    id: "S0UwWX"
                }),
                input: value,
                path: [],
                params: {
                    isPossible: false
                }
            });
        }
    } catch (e) {
        ctx.issues.push({
            code: 'custom',
            message: i18n._({
                id: "Du6whA"
            }),
            input: value,
            path: [],
            params: {
                parseError: true
            }
        });
    }
}
/**
 * Attach an object-level refinement to ensure IBAN country matches the selected country.
 * Reusable across schemas that include `iban` and `country` fields.
 */ const withIbanCountryConsistency = (schema, i18n, options = {})=>{
    const { ibanKey = 'iban', countryKey = 'country' } = options;
    return schema.refine((data)=>{
        const iban = data[ibanKey];
        const country = data[countryKey];
        if (!iban || !country) return true;
        const formatted = ibantools.electronicFormatIBAN(String(iban));
        const ibanCountry = formatted === null || formatted === void 0 ? void 0 : formatted.slice(0, 2);
        return !(ibanCountry && ibanCountry !== country);
    }, {
        message: i18n._({
            id: "sTOo7Z"
        }),
        path: [
            ibanKey
        ]
    });
};

const entitySchema = (i18n)=>({
        email: emailValidator(i18n).describe(i18n._({
            id: "ATGYL1"
        })),
        phone: phoneValidator(i18n).describe(i18n._({
            id: "pNHJMU"
        })),
        tax_id: stringValidator().describe(i18n._({
            id: "nhKOac"
        }))
    });
const entityIndividualSchema = (i18n, country)=>({
        first_name: stringValidator().describe(i18n._({
            id: "V1EGGU"
        })),
        last_name: stringValidator().describe(i18n._({
            id: "1ZaQUH"
        })),
        title: stringValidator().describe(i18n._({
            id: "MHrjPM"
        })),
        date_of_birth: dateOfBirthValidator(i18n).describe(i18n._({
            id: "Dh+FIh"
        })),
        id_number: stringValidator().describe(getIdentificationLabel(i18n, country))
    });
const entityOrganizationSchema = (i18n)=>({
        legal_name: stringValidator().describe(i18n._({
            id: "QOQq/s"
        }))
    });
const entityDocumentsSchema = (i18n)=>({
        verification_document_front: stringValidator().describe(i18n._({
            id: "ttScXi"
        })),
        verification_document_back: stringValidator().describe(i18n._({
            id: "GpShIE"
        })),
        additional_verification_document_front: stringValidator().describe(i18n._({
            id: "WUbvJS"
        })),
        additional_verification_document_back: stringValidator().describe(i18n._({
            id: "GmBHgL"
        }))
    });
const personDocumentsSchema = (i18n)=>({
        verification_document_front: stringValidator().describe(i18n._({
            id: "ttScXi"
        })),
        verification_document_back: stringValidator().describe(i18n._({
            id: "GpShIE"
        })),
        additional_verification_document_front: stringValidator().describe(i18n._({
            id: "WUbvJS"
        })),
        additional_verification_document_back: stringValidator().describe(i18n._({
            id: "GmBHgL"
        }))
    });
const personSchema = (i18n, country)=>({
        first_name: stringValidator().describe(i18n._({
            id: "V1EGGU"
        })),
        last_name: stringValidator().describe(i18n._({
            id: "1ZaQUH"
        })),
        email: emailValidator(i18n).describe(i18n._({
            id: "ATGYL1"
        })),
        phone: phoneValidator(i18n).describe(i18n._({
            id: "ZuLy43"
        })),
        date_of_birth: dateOfBirthValidator(i18n).describe(i18n._({
            id: "Dh+FIh"
        })),
        id_number: stringValidator().describe(getIdentificationLabel(i18n, country))
    });
const bankAccountSchema = (i18n)=>({
        country: stringValidator().describe(i18n._({
            id: "JNCzPW"
        })),
        currency: stringValidator().describe(i18n._({
            id: "Q2lUR2"
        })),
        account_holder_name: stringValidator().describe(i18n._({
            id: "6K88PJ"
        })),
        account_number: stringValidator().describe(i18n._({
            id: "5ad2f4"
        })),
        sort_code: stringValidator().describe(i18n._({
            id: "XHVMHc"
        })).refine((val)=>!val || val.length === 6, {
            message: i18n._({
                id: "6mnJvf"
            })
        }),
        iban: ibanValidator(i18n).describe(i18n._({
            id: "sfIOlH"
        })),
        routing_number: stringValidator().describe(i18n._({
            id: "dVQ/BC"
        })).refine((val)=>!val || val.length === 9, {
            message: i18n._({
                id: "/R3vEU"
            })
        })
    });
const businessProfileSchema = (i18n)=>({
        mcc: stringValidator().describe(i18n._({
            id: "S8gy7K"
        })),
        url: urlValidator(i18n).describe(i18n._({
            id: "V/M8GC"
        }))
    });
const relationshipSchema = (i18n)=>({
        title: stringValidator().describe(i18n._({
            id: "qMgKul"
        })),
        percent_ownership: numberValidator().describe(i18n._({
            id: "cCdqpN"
        })),
        representative: booleanValidator(),
        owner: booleanValidator(),
        executive: booleanValidator(),
        director: booleanValidator()
    });
const addressSchema = (i18n)=>({
        country: stringValidator().describe(i18n._({
            id: "JNCzPW"
        })),
        line1: stringValidator().describe(i18n._({
            id: "DgvTYe"
        })),
        line2: stringValidator().describe(i18n._({
            id: "cXOw12"
        })),
        city: stringValidator().describe(i18n._({
            id: "3wV73y"
        })),
        state: stringValidator().describe(i18n._({
            id: "RS0o7b"
        })),
        postal_code: stringValidator().describe(i18n._({
            id: "U4aiMW"
        }))
    });
const agreementsSchema = (i18n)=>({
        tos_acceptance: zod.z.boolean().describe(i18n._({
            id: "xowcRf"
        })).refine((v)=>v === true, {
            message: i18n._({
                id: "younfv"
            })
        }),
        ownership_declaration: zod.z.boolean().describe(i18n._({
            id: "AS46IG"
        })).refine((v)=>v === true, {
            message: i18n._({
                id: "fHYOKc"
            })
        })
    });

const generateOnboardingValidationSchema = ({ fields, type, i18n, country })=>{
    const schema = getSchemaByType(type)(i18n, country);
    const shape = Object.entries(fields).reduce((acc, [key, item])=>{
        const field = item;
        const schemaKey = key;
        const validator = schemaKey in schema ? schema[schemaKey] : undefined;
        const subresourceType = getSubresourceTypeByKey(key);
        if (!subresourceType && validator) {
            acc[key] = getValidatorSettings(field, validator);
            return acc;
        }
        if (!subresourceType) {
            return acc;
        }
        const nested = generateOnboardingValidationSchema({
            fields: field,
            type: subresourceType,
            i18n,
            country
        });
        acc[key] = nested;
        return acc;
    }, {});
    const objectSchema = zod.z.object(shape);
    return type === 'bankAccount' ? withIbanCountryConsistency(objectSchema, i18n) : objectSchema;
};
const getSchemaByType = (type)=>{
    switch(type){
        case 'entity':
            return entitySchema;
        case 'entityIndividual':
            return entityIndividualSchema;
        case 'entityOrganization':
            return entityOrganizationSchema;
        case 'entityDocuments':
            return entityDocumentsSchema;
        case 'person':
            return personSchema;
        case 'personDocuments':
            return personDocumentsSchema;
        case 'bankAccount':
            return bankAccountSchema;
        case 'businessProfile':
            return businessProfileSchema;
        case 'relationship':
            return relationshipSchema;
        case 'address':
            return addressSchema;
        case 'agreements':
            return agreementsSchema;
    }
};
const getSubresourceTypeByKey = (code)=>{
    switch(code){
        case 'individual':
            return 'entityIndividual';
        case 'organization':
            return 'entityOrganization';
        case 'relationship':
            return 'relationship';
        case 'address':
            return 'address';
    }
};
const getValidatorSettings = (field, validator)=>{
    if (!isOnboardingField(field)) return validator;
    // Make field optional when not required; allow null for optional fields
    if (field.required) return validator;
    // optional + nullable for non-required fields
    return validator.optional().nullable();
};

const useOnboardingValidationSchema = ({ fields, type, country })=>{
    const { i18n } = react.useLingui();
    if (!fields) return undefined;
    return generateOnboardingValidationSchema({
        fields,
        type,
        i18n,
        country
    });
};

const generateErrors = (fields, parentKey = '')=>Object.entries(fields).reduce((acc, [key, field])=>{
        const fullKey = parentKey ? `${parentKey}.${key}` : key;
        const element = document.getElementById(fullKey);
        if (!field || !element) return acc;
        if ((field === null || field === void 0 ? void 0 : field.message) && element) return [
            ...acc,
            element
        ];
        return generateErrors(field, fullKey);
    }, []).sort((a, b)=>{
        const { top: topA } = a.getBoundingClientRect();
        const { top: topB } = b.getBoundingClientRect();
        if (topA < topB) return -1;
        if (topA > topB) return 1;
        return 0;
    });
/**
 * Scrolls to the first error in a form.
 * @param errors - An object containing information about form validation errors.
 */ function useScrollToError(errors) {
    return React.useCallback(()=>{
        const errorList = generateErrors(errors);
        if (!errorList.length) return true;
        const firstError = errorList[0];
        firstError.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'center'
        });
        firstError.focus();
        return false;
    }, [
        errors
    ]);
}

function asyncGeneratorStep$d(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$d(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$d(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$d(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function isHTTPValidationErrorBody(body) {
    return !!(body && 'detail' in body);
}
const getErrorsFieldsByValidationErrors = (errors)=>errors.map(({ loc, msg })=>({
            code: loc.filter((loc)=>loc !== 'body').join('.'),
            message: msg
        }));
function useOnboardingForm(_incomingFields, type, country) {
    const _incomingFieldsRef = React.useRef(_incomingFields);
    const incomingFields = React.useMemo(()=>{
        if (deepEqual__default.default(_incomingFieldsRef.current, _incomingFields)) return _incomingFieldsRef.current;
        return _incomingFieldsRef.current = _incomingFields;
    }, [
        _incomingFields
    ]);
    const validationSchema = useOnboardingValidationSchema({
        fields: incomingFields,
        type,
        country
    });
    const methods = reactHookForm.useForm({
        resolver: validationSchema && safeZodResolver(validationSchema),
        mode: 'onChange',
        defaultValues: incomingFields ? generateValuesByFields(incomingFields) : undefined
    });
    const { setError, getValues, reset, watch, formState: { errors }, handleSubmit: handleFormSubmit } = methods;
    const scrollToError = useScrollToError(errors);
    const setErrors = React.useCallback((errors)=>{
        errors.forEach(({ code, message })=>{
            setError(code, {
                type: 'custom',
                message
            });
        });
    }, [
        setError
    ]);
    const storedFieldsRef = React.useRef(incomingFields);
    const formValues = watch();
    React.useEffect(()=>{
        if (!incomingFields) return;
        var _storedFieldsRef_current;
        storedFieldsRef.current = restoreFields((_storedFieldsRef_current = storedFieldsRef.current) !== null && _storedFieldsRef_current !== void 0 ? _storedFieldsRef_current : incomingFields, enrichFieldsByValues(incomingFields, formValues));
    }, [
        formValues,
        incomingFields
    ]);
    React.useEffect(()=>{
        if (!incomingFields) return;
        var _storedFieldsRef_current;
        reset(generateValuesByFields((_storedFieldsRef_current = storedFieldsRef.current) !== null && _storedFieldsRef_current !== void 0 ? _storedFieldsRef_current : incomingFields), {
            keepErrors: true,
            keepIsValid: true
        });
        setErrors(generateErrorsByFields(incomingFields));
    }, [
        incomingFields,
        reset,
        setErrors
    ]);
    const checkValue = (key)=>{
        const currentFormValues = getValues();
        return !!currentFormValues && key in currentFormValues && currentFormValues[key] !== undefined;
    };
    const handleSubmit = React.useCallback((apiContract)=>(e)=>{
            const isValid = scrollToError();
            if (!isValid) {
                e.preventDefault();
                e.stopPropagation();
                return;
            }
            return handleFormSubmit((values)=>_async_to_generator$d(function*() {
                    try {
                        return void (yield apiContract(prepareValuesToSubmit(values)));
                    } catch (e) {
                        var _error_detail;
                        const error = e;
                        if (isHTTPValidationErrorBody(error) && ((_error_detail = error.detail) === null || _error_detail === void 0 ? void 0 : _error_detail.length)) {
                            setErrors(getErrorsFieldsByValidationErrors(error.detail));
                            scrollToError();
                        }
                    }
                })())(e);
        }, [
        handleFormSubmit,
        scrollToError,
        setErrors
    ]);
    return {
        methods,
        checkValue,
        defaultValues: getValues(),
        handleSubmit
    };
}

function asyncGeneratorStep$c(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$c(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$c(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$c(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$q(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$q(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$q(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$j(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$j(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$j(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useOnboardingEntity() {
    var _onboarding_data;
    const { data: onboarding } = useOnboardingRequirementsData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { api, queryClient } = useMoniteContext();
    const { mutateAsync: updateEntityMutation, isPending, error } = api.entityUsers.patchEntityUsersMyEntity.useMutation(undefined, {
        onSuccess: (updatedEntity)=>{
            api.entityUsers.getEntityUsersMyEntity.setQueryData({}, (prevEntity)=>_object_spread$q({}, prevEntity, updatedEntity), queryClient);
        },
        onError: (error)=>{
            showErrorToast(error);
        }
    });
    const entity = React.useMemo(()=>{
        var _onboarding_data;
        return onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.entity;
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.entity
    ]);
    const updateEntity = React.useCallback((fields, requirements = [])=>_async_to_generator$c(function*() {
            const response = yield updateEntityMutation({
                body: prepareValuesToSubmit(generateValuesByFields(fields))
            });
            patchOnboardingRequirements({
                requirements,
                data: {
                    entity: fields
                }
            });
            return response;
        })(), [
        patchOnboardingRequirements,
        updateEntityMutation
    ]);
    const updateEntityRequirements = React.useCallback((organizationRequirements)=>updateEntity(_object_spread_props$j(_object_spread$q({}, entity), {
            organization: _object_spread$q({}, entity === null || entity === void 0 ? void 0 : entity.organization, organizationRequirements)
        }), Object.keys(organizationRequirements).map((role)=>companyRoleToRequirement(role))), [
        entity,
        updateEntity
    ]);
    return {
        isPending,
        error,
        updateEntity,
        updateEntityRequirements,
        entity
    };
}

function _define_property$p(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$p(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$p(target, key, source[key]);
        });
    }
    return target;
}
const getDefaultMask$1 = (roles = [])=>{
    const isRoleProvided = (role)=>roles.some(({ requirement })=>requirement === role);
    const onlyDirectorProvided = isRoleProvided('directors') && roles.length === 1;
    const shouldRenderAddress = !roles.length || !!roles.length && !onlyDirectorProvided;
    const address = {
        country: true
    };
    const relationship = {
        owner: true,
        director: true,
        executive: true,
        representative: true
    };
    return _object_spread$p({
        first_name: true,
        last_name: true,
        email: true,
        relationship
    }, shouldRenderAddress && {
        address
    });
};
function useOnboardingPersonRelationships() {
    var _onboarding_data;
    const { currentRequirement, personId } = useOnboardingRequirementsContext();
    const { data: onboarding } = useOnboardingRequirementsData();
    const persons = React.useMemo(()=>{
        var _onboarding_data;
        return (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons) || [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons
    ]);
    const currentPerson = React.useMemo(()=>persons.find(({ id })=>id === personId), [
        personId,
        persons
    ]);
    const [mask, setMask] = React.useState(null);
    const ownerState = React.useState(true);
    const directorState = React.useState(true);
    const [isOwnerProvided] = ownerState;
    const [isDirectorProvided] = directorState;
    const [fields, setFields] = React.useState(React.useMemo(()=>{
        if (currentPerson) {
            return currentPerson;
        }
        const representative = persons.find(({ relationship })=>relationship.representative);
        if (isRepresentative(currentRequirement) && representative) {
            return representative;
        }
        return generateFieldsByMask(getDefaultMask$1());
    }, [
        currentPerson,
        currentRequirement,
        persons
    ]));
    const onboardingForm = useOnboardingForm(fields, 'person');
    const { watch, setValue } = onboardingForm.methods;
    const representative = watch('relationship.representative');
    const owner = watch('relationship.owner');
    const director = watch('relationship.director');
    const executive = watch('relationship.executive');
    const country = watch('address.country');
    const roles = React.useMemo(()=>Object.entries({
            representative: representative,
            owners: owner,
            directors: director,
            executives: executive
        }).reduce((acc, [key, checked])=>{
            if (typeof checked !== 'boolean') return acc;
            const requirement = key;
            return [
                ...acc,
                {
                    checked,
                    requirement
                }
            ];
        }, []), [
        director,
        executive,
        owner,
        representative
    ]);
    const selectedRoles = React.useMemo(()=>roles.filter(({ checked })=>checked), [
        roles
    ]);
    const { data: personMask, isLoading: isPersonMaskLoading } = useOnboardingPersonMask(selectedRoles.map((item)=>requirementToRelationship(item.requirement)), country);
    // set default roles
    React.useEffect(()=>{
        if (isEditingPerson(personId)) return;
        if (isMask(currentRequirement)) {
            setValue(`relationship.${requirementToRelationship(currentRequirement)}`, true);
        }
        if (isRepresentative(currentRequirement)) {
            setValue('relationship.executive', true);
        }
    }, [
        currentRequirement,
        setValue,
        personId
    ]);
    // set mask
    React.useEffect(()=>{
        if (!personMask) return;
        setMask(personMask);
    }, [
        personMask
    ]);
    // set fields
    React.useEffect(()=>{
        if (!mask || !selectedRoles.length) return;
        const nextFields = generateFieldsByMask(mask !== null && mask !== void 0 ? mask : getDefaultMask$1(selectedRoles));
        if (deepEqual__default.default(fields, nextFields)) return;
        setFields(nextFields);
    }, [
        fields,
        mask,
        selectedRoles
    ]);
    const isRoleProvided = React.useCallback((role)=>selectedRoles.some(({ requirement })=>requirement === role), [
        selectedRoles
    ]);
    const getOrganizationRequirements = React.useCallback(()=>{
        const payload = {
            [requirementToCompanyRole(currentRequirement)]: true
        };
        if (isRepresentative(currentRequirement)) {
            if (isRoleProvided('owners') && isOwnerProvided) payload.owners_provided = true;
            if (isRoleProvided('directors') && isDirectorProvided) payload.directors_provided = true;
        }
        return payload;
    }, [
        currentRequirement,
        isDirectorProvided,
        isOwnerProvided,
        isRoleProvided
    ]);
    return {
        roles,
        onboardingForm,
        fields,
        isPersonMaskLoading,
        ownerState,
        directorState,
        getOrganizationRequirements,
        isRoleProvided
    };
}

function asyncGeneratorStep$b(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$b(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$b(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$b(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$o(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$o(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$o(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$i(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$i(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$i(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useOnboardingPerson() {
    var _onboarding_data;
    const { personId, currentRequirement, representativePersonId, disableEditMode } = useOnboardingRequirementsContext();
    const { data: onboarding } = useOnboardingRequirementsData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { secondaryAction } = useOnboardingActions();
    const relationships = useOnboardingPersonRelationships();
    const { fields, getOrganizationRequirements } = relationships;
    const { updateEntityRequirements, isPending: isEntityLoading, error: updateEntityError } = useOnboardingEntity();
    const { api } = useMoniteContext();
    const { mutateAsync: createPersonMutation, isPending: isCreateLoading, error: createPersonError } = api.persons.postPersons.useMutation(undefined, {
        onError: (error)=>{
            showErrorToast(error);
        }
    });
    const { mutateAsync: updatePersonMutation, isPending: isUpdateLoading, error: updatePersonError } = api.persons.patchPersonsId.useMutation(undefined, {
        onError: (error)=>{
            showErrorToast(error);
        }
    });
    const { mutateAsync: deletePersonMutation, isPending: isDeleteLoading, error: deletePersonError } = api.persons.deletePersonsId.useMutation(undefined);
    const persons = React.useMemo(()=>{
        var _onboarding_data;
        return (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons) || [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons
    ]);
    const updateOrganizationRequirements = React.useCallback(()=>updateEntityRequirements(getOrganizationRequirements()), [
        getOrganizationRequirements,
        updateEntityRequirements
    ]);
    const createPerson = React.useCallback((payload)=>_async_to_generator$b(function*() {
            const response = yield createPersonMutation({
                body: payload
            });
            const requirement = isRepresentative(currentRequirement) ? currentRequirement : undefined;
            patchOnboardingRequirements({
                requirements: requirement ? [
                    requirement
                ] : [],
                data: {
                    persons: [
                        ...persons,
                        _object_spread_props$i(_object_spread$o({}, enrichFieldsByValues(fields, response)), {
                            id: response.id
                        })
                    ]
                }
            });
            if (isRepresentative(currentRequirement)) {
                yield updateOrganizationRequirements();
            }
            disableEditMode();
            return response;
        })(), [
        currentRequirement,
        createPersonMutation,
        disableEditMode,
        fields,
        patchOnboardingRequirements,
        persons,
        updateOrganizationRequirements
    ]);
    const updatePerson = React.useCallback((personId, payload)=>_async_to_generator$b(function*() {
            const response = yield updatePersonMutation({
                path: {
                    person_id: personId
                },
                body: filterRequestBody(payload)
            });
            patchOnboardingRequirements({
                data: {
                    persons: persons.map((person)=>person.id === personId ? enrichFieldsByValues(person, response) : person)
                }
            });
            disableEditMode();
            return response;
        })(), [
        patchOnboardingRequirements,
        persons,
        updatePersonMutation,
        disableEditMode
    ]);
    const updateRepresentativePerson = React.useCallback((personId, payload)=>_async_to_generator$b(function*() {
            const response = yield updatePersonMutation({
                path: {
                    person_id: personId
                },
                body: filterRequestBody(payload)
            });
            patchOnboardingRequirements({
                requirements: currentRequirement ? [
                    currentRequirement
                ] : undefined,
                data: {
                    persons: persons.map((person)=>person.id === personId ? enrichFieldsByValues(person, response) : person)
                }
            });
            return response;
        })(), [
        updatePersonMutation,
        patchOnboardingRequirements,
        currentRequirement,
        persons
    ]);
    const deletePerson = React.useCallback(()=>_async_to_generator$b(function*() {
            if (!personId) throw new Error('Person id is not defined');
            yield deletePersonMutation({
                path: {
                    person_id: personId
                }
            });
            patchOnboardingRequirements({
                data: {
                    persons: persons.filter(({ id })=>id !== personId)
                }
            });
            disableEditMode();
        })(), [
        deletePersonMutation,
        patchOnboardingRequirements,
        personId,
        persons,
        disableEditMode
    ]);
    const primaryAction = React.useCallback((payload)=>{
        if (isRepresentative(currentRequirement) && representativePersonId) {
            return updateRepresentativePerson(representativePersonId, payload);
        }
        if (personId) {
            return updatePerson(personId, payload);
        }
        return createPerson(payload);
    }, [
        currentRequirement,
        representativePersonId,
        personId,
        createPerson,
        updateRepresentativePerson,
        updatePerson
    ]);
    const isPending = isCreateLoading || isUpdateLoading || isDeleteLoading || isEntityLoading;
    const error = createPersonError || updatePersonError || deletePersonError || updateEntityError;
    return {
        primaryAction,
        secondaryAction,
        updatePerson,
        deletePerson,
        updateOrganizationRequirements,
        relationships,
        isPending,
        error
    };
}

function useOnboardingPersonList() {
    var _entity_address, _onboarding_data;
    const { data: onboarding } = useOnboardingRequirementsData();
    const { currentRequirement } = useOnboardingRequirementsContext();
    const { data: entity } = useMyEntity();
    const form = useOnboardingForm({}, 'person', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const { updatePerson, isPending, updateOrganizationRequirements } = useOnboardingPerson();
    const patchOnboardingRequirementsData = usePatchOnboardingRequirementsData();
    const updatePersonRelationship = React.useCallback((id, value)=>updatePerson(id, {
            relationship: {
                [requirementToRelationship(currentRequirement)]: value
            }
        }), [
        currentRequirement,
        updatePerson
    ]);
    const persons = React.useMemo(()=>{
        var _onboarding_data;
        return (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons) || [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons
    ]);
    const personsWithRequirement = React.useMemo(()=>{
        if (!currentRequirement) return persons;
        return persons.filter((person)=>hasPersonRequirement(person, currentRequirement));
    }, [
        currentRequirement,
        persons
    ]);
    const personsWithoutRequirement = React.useMemo(()=>{
        if (!currentRequirement) return persons;
        return persons.filter((person)=>!hasPersonRequirement(person, currentRequirement));
    }, [
        currentRequirement,
        persons
    ]);
    const personsWithErrors = React.useMemo(()=>{
        return persons.filter((person)=>{
            return generateErrorsByFields(person).length > 0 || findEmptyRequiredFields(person).length > 0;
        });
    }, [
        persons
    ]);
    const shouldRenderPersonList = isRequirementPresentInPersonList(persons, currentRequirement, true);
    const shouldRenderMenu = isRequirementPresentInPersonList(persons, currentRequirement, false);
    const errors = React.useMemo(()=>persons.flatMap((person)=>generateErrorsByFields(person)), [
        persons
    ]);
    const scrollToError = React.useCallback(()=>{
        var _errors_;
        if (errors.length === 0) return;
        const firstError = (_errors_ = errors[0]) === null || _errors_ === void 0 ? void 0 : _errors_.message;
        if (!firstError) return;
        const elements = document.querySelectorAll('td');
        const element = Array.from(elements).find((element)=>element.textContent === firstError);
        if (!element) return;
        element.scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'center'
        });
    }, [
        errors
    ]);
    const submitPersonsReview = React.useCallback(()=>{
        if (errors.length > 0) {
            return scrollToError();
        }
        patchOnboardingRequirementsData({
            requirements: [
                'persons'
            ]
        });
    }, [
        errors.length,
        patchOnboardingRequirementsData,
        scrollToError
    ]);
    return {
        shouldRenderPersonList,
        shouldRenderMenu,
        isPending,
        form,
        updatePersonRelationship,
        updateOrganizationRequirements,
        personsWithErrors,
        personsWithRequirement,
        personsWithoutRequirement,
        submitPersonsReview
    };
}

const useUpdateEntityOnboardingData = ()=>{
    const { entityId, api } = useMoniteContext();
    return api.entities.patchEntitiesIdOnboardingData.useMutation({
        path: {
            entity_id: entityId
        }
    });
};

function asyncGeneratorStep$a(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$a(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$a(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$a(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$n(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$n(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$n(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$h(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$h(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$h(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useOnboardingAgreements = ()=>{
    var _entity_address;
    const { data: onboarding } = useOnboardingRequirementsData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { mutateAsync, isPending } = useUpdateEntityOnboardingData();
    const requirements = React.useMemo(()=>{
        if (!(onboarding === null || onboarding === void 0 ? void 0 : onboarding.requirements)) return [];
        return onboarding.requirements.filter((item)=>item === 'tos_acceptance' || item === 'ownership_declaration');
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : onboarding.requirements
    ]);
    const values = React.useMemo(()=>requirements.reduce((acc, requirement)=>_object_spread_props$h(_object_spread$n({}, acc), {
                [requirement]: false
            }), {}), [
        requirements
    ]);
    const { data: entity } = useMyEntity();
    const form = useOnboardingForm(values, 'agreements', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const handleSubmitAgreements = React.useCallback((values)=>_async_to_generator$a(function*() {
            const date = new Date().toISOString();
            const data = Object.entries(values).reduce((acc, [requirement])=>_object_spread_props$h(_object_spread$n({}, acc), {
                    [requirement]: {
                        date
                    }
                }), {});
            const response = yield mutateAsync(data);
            patchOnboardingRequirements({
                requirements,
                data: generateFieldsByValues({
                    values: data
                })
            });
            return response;
        })(), [
        mutateAsync,
        patchOnboardingRequirements,
        requirements
    ]);
    return {
        isPending,
        handleSubmitAgreements,
        form
    };
};

const StyledActions = material.styled(material.Box)`
  display: flex;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(2)};
  margin-top: ${({ theme })=>theme.spacing(1)};
  padding: ${({ theme })=>theme.spacing(2)};

  ${({ theme })=>theme.breakpoints.up('sm')} {
    padding: ${({ theme })=>theme.spacing(2, 0)};
  }
`;
function OnboardingFormActionsTemplate({ isLoading, primaryLabel, onPrimaryAction, secondaryLabel, onSecondaryAction, deleteButton }) {
    return /*#__PURE__*/ jsxRuntime.jsxs(StyledActions, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                onClick: onPrimaryAction,
                disabled: isLoading,
                type: "submit",
                variant: "contained",
                color: "primary",
                size: "large",
                children: primaryLabel
            }),
            secondaryLabel && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                disabled: isLoading,
                onClick: onSecondaryAction,
                variant: "outlined",
                color: "primary",
                size: "large",
                children: secondaryLabel
            }),
            deleteButton
        ]
    });
}
function OnboardingFormActions({ onPrimaryAction, onSecondaryAction, isLoading, deleteButton }) {
    const { primaryLabel, secondaryLabel } = useOnboardingActions();
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActionsTemplate, {
        isLoading: isLoading,
        primaryLabel: primaryLabel,
        secondaryLabel: secondaryLabel,
        onPrimaryAction: onPrimaryAction,
        onSecondaryAction: onSecondaryAction,
        deleteButton: deleteButton
    });
}

const MoniteLogo = ({ color = 'currentColor', width, height })=>/*#__PURE__*/ jsxRuntime.jsxs("svg", {
        width: width !== null && width !== void 0 ? width : '54',
        height: height !== null && height !== void 0 ? height : '11',
        viewBox: "0 0 54 11",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M9.87444 8.33411C10.1305 8.13667 10.3386 7.74975 10.3386 7.46953V3.38195C10.3386 3.10173 10.1305 2.71481 9.87444 2.51736L7.32884 0.5H4.37869L9.65359 4.56165C9.90962 4.7591 10.1178 5.14602 10.1178 5.42624C10.1178 5.70646 9.90962 6.09337 9.65359 6.29082L4.37869 10.3515H7.32884L9.87444 8.33411Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M5.49575 8.33412C5.75177 8.13667 5.95992 7.74975 5.95992 7.46953V3.38195C5.95992 3.10174 5.75177 2.71482 5.49575 2.51737L2.95015 0.500004H0L5.2749 4.56166C5.53093 4.75911 5.73907 5.14603 5.73907 5.42624C5.73907 5.70646 5.53093 6.09338 5.2749 6.29083L0 10.3515H2.95015L5.49575 8.33412Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M14.1532 0.5C14.4023 0.5 14.9259 0.695454 15.2111 1.55106L15.215 1.54707L16.9235 6.43841L17.7343 9.0561L18.5451 6.43841L20.2975 1.42242C20.5906 0.67551 21.0624 0.5 21.3085 0.5H23.1342V10.3515H21.6778V2.06164L21.2519 3.17353L18.6271 10.3515H16.8405L14.2021 3.17353L13.7898 1.99383V10.3515H12.3334V0.5H14.1532Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M27.6885 3.44555C25.7672 3.44555 24.2046 4.82825 24.2046 6.97278C24.2046 9.11731 25.7672 10.5 27.6885 10.5C29.6236 10.5 31.1862 9.11731 31.1862 6.97278C31.1862 4.82825 29.6236 3.44555 27.6885 3.44555ZM27.6885 9.18829C26.292 9.18829 25.6286 8.48245 25.6286 6.97278C25.6286 5.46311 26.292 4.75726 27.6885 4.75726C29.0988 4.75726 29.7621 5.46311 29.7621 6.97278C29.7621 8.48245 29.0988 9.18829 27.6885 9.18829Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M33.69 5.22096C34.0071 4.13654 34.7122 3.44555 36.0104 3.44555C37.5717 3.44555 38.3867 4.40316 38.3867 6.19355V10.3515H36.9776V6.2924C36.9776 5.27788 36.4248 4.75664 35.5272 4.75664C34.4078 4.75664 33.69 5.60141 33.69 7.16613V10.3505H32.2808V3.58635H33.69V5.22096Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M41.3541 1.49363C41.3678 2.10687 41.0245 2.45546 40.3936 2.45546C39.79 2.45546 39.4468 2.10687 39.4331 1.49363C39.4195 0.894221 39.7764 0.574272 40.3936 0.574272C40.9982 0.573284 41.3405 0.894221 41.3541 1.49363Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M39.676 3.56932H41.0869V10.3515H39.676V3.56932Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                d: "M46.9009 4.88451V3.6059H44.886V1.5396H43.4783V3.6059H42.0843V4.88451H43.4783V8.48236C43.4783 9.60662 44.2101 10.3515 45.3137 10.3515H46.6939V9.07287H44.886V4.88451H46.9009Z",
                fill: color
            }),
            /*#__PURE__*/ jsxRuntime.jsx("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M47.4117 6.98677C47.4117 4.87024 48.7663 3.44555 50.673 3.44555C52.5247 3.44555 53.8105 4.75726 53.8095 6.83081C53.8095 7.04276 53.8095 7.15574 53.7958 7.42368H48.8489C48.9451 8.79238 49.5119 9.32826 50.7555 9.32826C51.6818 9.32826 52.0826 9.08931 52.3862 8.27049H53.6307C53.4245 9.49422 52.0964 10.5 50.7418 10.5C48.7241 10.5 47.4117 9.11731 47.4117 6.98677ZM50.6877 4.5743C49.5817 4.5743 48.9883 5.13818 48.8636 6.36591H52.4009C52.3459 5.0682 51.8351 4.5743 50.6877 4.5743Z",
                fill: color
            })
        ]
    });

function OnboardingContainer({ children }) {
    return /*#__PURE__*/ jsxRuntime.jsx(StyledContainer, {
        children: children
    });
}
const StyledContainer = material.styled(material.Box)`
  max-width: calc(460px + 2 * ${({ theme })=>theme.spacing(4)});
  min-width: 200px;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(2)};
  margin: 0 auto;
  justify-content: center;
  box-sizing: border-box;
  padding: ${({ theme })=>theme.spacing(1, 4, 0)};
`;

const StyledFooter = material.styled(material.Box)`
  padding: ${({ theme })=>theme.spacing(2)};

  ${({ theme })=>theme.breakpoints.up('lg')} {
    padding: ${({ theme })=>theme.spacing(4)};
  }
`;
const StyledLink = material.styled(material.Link)`
  color: ${({ theme })=>theme.palette.text.secondary};
  font-size: 14px;
  line-height: 20px;
  display: flex;
`;
const StyledText = material.styled(material.Box)`
  color: ${({ theme })=>theme.palette.text.secondary};
  font-size: 14px;
  line-height: 20px;
  display: flex;
  align-items: center;
  gap: 3px;
`;
const StyledList = material.styled('ul')`
  padding: 0;
  margin: 0;
  list-style-type: none;
  display: flex;
  flex-direction: column;
  gap: 2px;

  ${({ theme })=>theme.breakpoints.up('sm')} {
    flex-direction: row;
    justify-content: space-between;
  }

  ${({ theme })=>theme.breakpoints.up('lg')} {
    flex-direction: column;
  }
`;
const StyledFooterWrapper = material.styled('div')`
  margin-top: auto;
`;

const DEFAULT_WEBSITE_URL = 'https://monite.com/';
function OnboardingFooterContent() {
    var _componentSettings_onboarding, _componentSettings_onboarding1;
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const customLogoUrl = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding = componentSettings.onboarding) === null || _componentSettings_onboarding === void 0 ? void 0 : _componentSettings_onboarding.footerLogoUrl;
    const customWebsiteUrl = componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding1 = componentSettings.onboarding) === null || _componentSettings_onboarding1 === void 0 ? void 0 : _componentSettings_onboarding1.footerWebsiteUrl;
    return /*#__PURE__*/ jsxRuntime.jsx(StyledFooter, {
        children: /*#__PURE__*/ jsxRuntime.jsx(StyledList, {
            children: /*#__PURE__*/ jsxRuntime.jsx("li", {
                children: /*#__PURE__*/ jsxRuntime.jsxs(StyledText, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: i18n._({
                                id: "g2UNkE"
                            })
                        }),
                        customLogoUrl && customWebsiteUrl ? /*#__PURE__*/ jsxRuntime.jsx(StyledLink, {
                            href: customWebsiteUrl,
                            target: "_blank",
                            rel: "noopener noreferrer",
                            children: /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                                component: "img",
                                src: customLogoUrl,
                                alt: customWebsiteUrl,
                                sx: {
                                    width: 'auto',
                                    height: '1rem'
                                }
                            })
                        }) : /*#__PURE__*/ jsxRuntime.jsx(StyledLink, {
                            href: DEFAULT_WEBSITE_URL,
                            rel: "noopener noreferrer",
                            target: "_blank",
                            children: /*#__PURE__*/ jsxRuntime.jsx(MoniteLogo, {})
                        })
                    ]
                })
            })
        })
    });
}
function OnboardingFooter() {
    var _componentSettings_onboarding;
    const theme = material.useTheme();
    const moreThanLG = material.useMediaQuery(theme.breakpoints.up('lg'));
    const { componentSettings } = useMoniteContext();
    if (componentSettings === null || componentSettings === void 0 ? void 0 : (_componentSettings_onboarding = componentSettings.onboarding) === null || _componentSettings_onboarding === void 0 ? void 0 : _componentSettings_onboarding.hideFooter) {
        return null;
    }
    if (moreThanLG) {
        return /*#__PURE__*/ jsxRuntime.jsx(StyledFooterWrapper, {
            children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFooterContent, {})
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(StyledFooterWrapper, {
        children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingContainer, {
            children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFooterContent, {})
        })
    });
}

const StyledBox = material.styled(material.Box)`
  width: 100%;
  max-width: 300px;
  padding: ${({ theme })=>theme.spacing(2)};

  ${({ theme })=>theme.breakpoints.up('sm')} {
    padding: ${({ theme })=>theme.spacing(2, 0)};
  }
`;
const StepperConnector = material.styled(material.StepConnector)(({ theme })=>({
        [`&.${material.stepConnectorClasses.alternativeLabel}`]: {
            top: 10,
            left: 'calc(-50% + 16px)',
            right: 'calc(50% + 16px)'
        },
        [`&.${material.stepConnectorClasses.active}`]: {
            [`& .${material.stepConnectorClasses.line}`]: {
                borderColor: theme.palette.primary.main
            }
        },
        [`&.${material.stepConnectorClasses.completed}`]: {
            [`& .${material.stepConnectorClasses.line}`]: {
                borderColor: theme.palette.primary.main
            }
        },
        [`& .${material.stepConnectorClasses.line}`]: {
            borderColor: '#eaeaf0',
            borderTopWidth: 3,
            borderRadius: 1
        }
    }));
const StepIconRoot = material.styled('div')(({ theme, ownerState })=>({
        backgroundColor: ownerState.completed ? theme.palette.primary.main : '#fff',
        zIndex: 1,
        width: 24,
        height: 24,
        display: 'flex',
        borderRadius: '50%',
        justifyContent: 'center',
        alignItems: 'center',
        border: '2px solid',
        borderColor: ownerState.active || ownerState.completed ? theme.palette.primary.main : '#ccc',
        color: '#fff'
    }));
const StepDot = material.styled('div')(({ theme, ownerState })=>({
        width: 8,
        height: 8,
        borderRadius: '50%',
        backgroundColor: ownerState.active ? theme.palette.primary.main : '#ccc'
    }));
const CheckmarkIcon = material.styled(CheckIcon__default.default)({
    fontSize: 16
});
function CustomStepIcon(props) {
    const { active, completed, className } = props;
    return /*#__PURE__*/ jsxRuntime.jsx(StepIconRoot, {
        ownerState: {
            completed,
            active
        },
        className: className,
        children: completed ? /*#__PURE__*/ jsxRuntime.jsx(CheckmarkIcon, {}) : /*#__PURE__*/ jsxRuntime.jsx(StepDot, {
            ownerState: {
                completed,
                active
            }
        })
    });
}
function OnboardingProgress({ value }) {
    if (value < 0 || value > 100) return null;
    // Convert percentage to active step (0, 1, or 2)
    const getActiveStep = ()=>{
        if (value < 33.4) return 0;
        if (value < 66.7) return 1;
        return 2;
    };
    const steps = [
        1,
        2,
        3
    ];
    const activeStep = getActiveStep();
    return /*#__PURE__*/ jsxRuntime.jsx(StyledBox, {
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Stepper, {
            activeStep: activeStep,
            alternativeLabel: true,
            connector: /*#__PURE__*/ jsxRuntime.jsx(StepperConnector, {}),
            children: steps.map((label)=>/*#__PURE__*/ jsxRuntime.jsx(material.Step, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(material.StepLabel, {
                        StepIconComponent: CustomStepIcon
                    })
                }, label))
        })
    });
}

function OnboardingHeader() {
    const { progress, isEditMode } = useOnboardingRequirementsContext();
    const shouldRenderProgress = !isEditMode;
    return /*#__PURE__*/ jsxRuntime.jsx(StyledHeader, {
        square: true,
        children: shouldRenderProgress && /*#__PURE__*/ jsxRuntime.jsx(OnboardingProgress, {
            value: progress
        })
    });
}
const StyledHeader = material.styled(material.Paper)`
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
  width: 100%;
  border-radius: 0;
  box-shadow: none;
  padding: ${({ theme })=>theme.spacing(0, 1)};

  ${({ theme })=>theme.breakpoints.down('sm')} {
    margin-bottom: ${({ theme })=>theme.spacing(1)};
  }
`;

function OnboardingLayout({ content, title }) {
    return /*#__PURE__*/ jsxRuntime.jsxs(StyledLayout, {
        className: ScopedCssBaselineContainerClassName,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingHeader, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(OnboardingContainer, {
                children: [
                    title,
                    /*#__PURE__*/ jsxRuntime.jsx(StyledContent$1, {
                        children: content
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingFooter, {})
        ]
    });
}
const StyledLayout = material.styled(material.Box)`
  background-color: ${({ theme })=>theme.palette.background.default};
  box-sizing: border-box;
  min-height: 100%;
  display: flex;
  flex-direction: column;
`;
const StyledContent$1 = material.styled(material.Box)`
  display: flex;
  width: 100%;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(1)};
`;

function OnboardingStepContent({ children, title }) {
    return /*#__PURE__*/ jsxRuntime.jsxs(StyledPaper$1, {
        square: true,
        variant: "outlined",
        children: [
            title,
            children
        ]
    });
}
const StyledPaper$1 = material.styled(material.Paper)`
  display: flex;
  flex-direction: column;
  padding: ${({ theme })=>theme.spacing(3, 2)};
  gap: ${({ theme })=>theme.spacing(3)};
  border-radius: ${({ theme })=>theme.spacing(1.5)};

  ${({ theme })=>theme.breakpoints.up('sm')} {
    padding: ${({ theme })=>theme.spacing(4)};
  }
`;

const StyledContent = material.styled(material.Box)`
  display: flex;
  gap: ${({ theme })=>theme.spacing(2)};
  flex-direction: column;
`;
function OnboardingForm({ children, onSubmit, actions }) {
    return /*#__PURE__*/ jsxRuntime.jsxs("form", {
        noValidate: true,
        onSubmit: onSubmit,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(StyledContent, {
                children: children
            }),
            actions
        ]
    });
}

const StyledPaper = material.styled(material.Paper)`
  text-align: left;
  padding: ${({ theme })=>theme.spacing(4)};
  border-radius: ${({ theme })=>theme.spacing(1.5)};
`;
function OnboardingTitle({ icon, title, description }) {
    return /*#__PURE__*/ jsxRuntime.jsxs(StyledPaper, {
        variant: "outlined",
        children: [
            icon,
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "h3",
                mb: 1,
                fontSize: "1.2rem",
                children: title
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                variant: "body1",
                children: description
            })
        ]
    });
}

const StylesSubTitle = material.styled(material.Typography)`
  font-weight: 600;
  font-size: 18px;
  line-height: 24px;
  display: flex;
  justify-content: space-between;
  align-items: center;
`;
function OnboardingSubTitle({ children, action }) {
    return /*#__PURE__*/ jsxRuntime.jsxs(StylesSubTitle, {
        children: [
            children,
            action
        ]
    });
}

const OnboardingAgreements = ()=>{
    const { i18n } = react.useLingui();
    const { entityName } = useOnboardingRequirements();
    const { isPending, form: { methods: { control }, handleSubmit, checkValue }, handleSubmitAgreements } = useOnboardingAgreements();
    // TODO - replace with real platform name https://monite.atlassian.net/browse/DEV-8863
    const platformName = i18n._({
        id: "ghJu2Z"
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
            isLoading: isPending
        }),
        onSubmit: handleSubmit(handleSubmitAgreements),
        children: [
            checkValue('ownership_declaration') && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
                            id: "AIAJLG",
                            values: {
                                entityName: entityName
                            }
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
                        disabled: isPending,
                        control: control,
                        label: i18n._({
                            id: "EUhWK5"
                        }),
                        name: "ownership_declaration"
                    })
                ]
            }),
            checkValue('tos_acceptance') && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: /*#__PURE__*/ jsxRuntime.jsx(react.Trans, {
                            id: "Q7/mYt",
                            values: {
                                entityName: entityName,
                                platformName: platformName
                            },
                            components: {
                                0: /*#__PURE__*/ jsxRuntime.jsx(material.Link, {
                                    underline: "hover",
                                    target: "_blank",
                                    rel: "noopener noreferrer",
                                    href: "https://stripe.com/en-gb-us/legal/connect-account",
                                    display: "contents"
                                }),
                                1: /*#__PURE__*/ jsxRuntime.jsx(material.Link, {
                                    underline: "hover",
                                    target: "_blank",
                                    rel: "noopener noreferrer",
                                    href: "https://stripe.com/en-gb-us/legal/ssa",
                                    display: "contents"
                                })
                            }
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
                        disabled: isPending,
                        control: control,
                        label: i18n._({
                            id: "Oi71Bx"
                        }),
                        name: "tos_acceptance"
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$9(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$9(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$9(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$9(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$m(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$m(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$m(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$g(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$g(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$g(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function useOnboardingBankAccount() {
    var _onboarding_data, _entity_address;
    const { data: onboarding, isLoading: isOnboardingDataLoading } = useOnboardingRequirementsData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { mutateAsync: createBankAccountMutation, isPending: isCreateBankAccountPending } = api.bankAccounts.postBankAccounts.useMutation(undefined, {
        onError: (error)=>{
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    });
    const { mutateAsync: deleteBankAccountMutation, isPending: isDeleteBankAccountPending } = api.bankAccounts.deleteBankAccountsId.useMutation(undefined, {
        onSuccess: (_, variables)=>_async_to_generator$9(function*() {
                yield Promise.all([
                    api.bankAccounts.getBankAccounts.invalidateQueries(queryClient),
                    api.bankAccounts.getBankAccountsId.invalidateQueries({
                        parameters: {
                            path: {
                                bank_account_id: variables.path.bank_account_id
                            }
                        }
                    }, queryClient)
                ]);
            })()
    });
    const { data: bankAccountMasks, error: bankAccountMasksError, isLoading: isBankAccountMaskLoading } = useOnboardingBankAccountMask();
    const { data: currencyToCountries, isLoading: isCurrencyToCountriesLoading } = useOnboardingCurrencyToCountries();
    const bankAccounts = React.useMemo(()=>{
        var _onboarding_data;
        return (onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.bank_accounts) || [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.bank_accounts
    ]);
    const currencies = React.useMemo(()=>bankAccountMasks ? Object.keys(bankAccountMasks) : [], [
        bankAccountMasks
    ]);
    const currentBankAccount = React.useMemo(()=>{
        if (!(bankAccounts === null || bankAccounts === void 0 ? void 0 : bankAccounts.length)) return null;
        return bankAccounts[0];
    }, [
        bankAccounts
    ]);
    const [mask, setMask] = React.useState(null);
    const [countries, setCountries] = React.useState([]);
    const [fields, setFields] = React.useState(React.useMemo(()=>{
        if (currentBankAccount) {
            return currentBankAccount;
        }
        return generateFieldsByMask(getDefaultMask());
    }, [
        currentBankAccount
    ]));
    const { data: entity } = useMyEntity();
    const onboardingForm = useOnboardingForm(fields, 'bankAccount', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const { watch, reset: resetForm } = onboardingForm.methods;
    const currency = watch('currency');
    React.useEffect(()=>{
        if (!currency) return;
        if (!bankAccountMasks) return;
        if (!(currency in bankAccountMasks)) return;
        const mask = bankAccountMasks[currency];
        const countries = currencyToCountries === null || currencyToCountries === void 0 ? void 0 : currencyToCountries[currency];
        if (countries) setCountries(countries);
        if (mask) setMask(mask);
    }, [
        bankAccountMasks,
        currency,
        currencyToCountries
    ]);
    React.useEffect(()=>{
        if (!mask) return;
        setFields(generateFieldsByMask(mask));
    }, [
        mask
    ]);
    const primaryAction = React.useCallback((payload)=>_async_to_generator$9(function*() {
            const response = yield createBankAccountMutation({
                body: _object_spread_props$g(_object_spread$m({}, payload), {
                    is_default_for_currency: true
                })
            });
            if (currentBankAccount) {
                try {
                    yield deleteBankAccountMutation({
                        path: {
                            bank_account_id: currentBankAccount.id
                        }
                    });
                } catch (error) {
                    console.error('Error deleting bank account:', error);
                }
            }
            // Reset the form with the original payload to ensure fields are properly preserved
            resetForm(payload);
            patchOnboardingRequirements({
                requirements: [
                    'bank_accounts'
                ],
                data: {
                    bank_accounts: [
                        enrichFieldsByValues(fields, payload)
                    ]
                }
            });
            return response;
        })(), [
        createBankAccountMutation,
        deleteBankAccountMutation,
        currentBankAccount,
        patchOnboardingRequirements,
        fields,
        resetForm
    ]);
    return {
        isPending: isCreateBankAccountPending || isDeleteBankAccountPending,
        isLoading: isOnboardingDataLoading || isBankAccountMaskLoading || isCurrencyToCountriesLoading,
        currencies,
        countries,
        onboardingForm,
        primaryAction,
        error: bankAccountMasksError
    };
}
const getDefaultMask = ()=>({
        country: true,
        currency: true
    });

function asyncGeneratorStep$8(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$8(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$8(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$8(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const OnboardingBankAccount = ({ allowedCurrencies, allowedCountries })=>{
    const { i18n } = react.useLingui();
    const { isLoading, isPending, countries, currencies, primaryAction, onboardingForm: { checkValue, handleSubmit, methods: { control, getValues, resetField, setValue, watch, clearErrors } } } = useOnboardingBankAccount();
    const country = watch('country');
    React.useEffect(()=>{
        resetField('iban');
    }, [
        country,
        resetField
    ]);
    React.useEffect(()=>{
        const country = getValues('country');
        if (country && countries.length > 0 && !countries.includes(country)) {
            resetField('country');
        }
        if (!country && countries.length === 1) {
            setValue('country', countries[0], {
                shouldDirty: false,
                shouldValidate: true
            });
            clearErrors('country');
        }
    }, [
        countries,
        getValues,
        resetField,
        setValue,
        clearErrors
    ]);
    const handleFormSubmit = handleSubmit((data)=>_async_to_generator$8(function*() {
            const result = yield primaryAction(data);
            return result;
        })());
    const filteredCurrencies = React.useMemo(()=>{
        if (allowedCurrencies && allowedCurrencies.length > 0) {
            return currencies.filter((c)=>allowedCurrencies.includes(c));
        }
        return currencies;
    }, [
        allowedCurrencies,
        currencies
    ]);
    if (isLoading) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingForm, {
        onSubmit: handleFormSubmit,
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
            isLoading: isPending
        }),
        children: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
            children: [
                checkValue('currency') && !!filteredCurrencies.length && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "Q2lUR2"
                    }),
                    name: "currency",
                    control: control,
                    defaultValue: allowedCurrencies === null || allowedCurrencies === void 0 ? void 0 : allowedCurrencies[0],
                    select: true,
                    children: filteredCurrencies.map((currency)=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                            value: currency,
                            children: currency
                        }, currency))
                }),
                checkValue('country') && /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                    name: "country",
                    control: control,
                    disabled: isPending,
                    defaultValue: countries.length === 1 ? countries[0] : undefined,
                    allowedCountries: countries.length > 0 ? countries : allowedCountries,
                    required: true
                }),
                checkValue('iban') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "sfIOlH"
                    }),
                    name: "iban",
                    control: control
                }),
                checkValue('account_holder_name') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "Y0Mp8n"
                    }),
                    name: "account_holder_name",
                    control: control
                }),
                checkValue('account_number') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "9Ywg3d"
                    }),
                    name: "account_number",
                    control: control
                }),
                checkValue('routing_number') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "3eynKL"
                    }),
                    name: "routing_number",
                    control: control
                }),
                checkValue('sort_code') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                    disabled: isPending,
                    label: i18n._({
                        id: "MeDJKf"
                    }),
                    name: "sort_code",
                    control: control
                })
            ]
        })
    });
};

const getMccCodes = (i18n)=>[
        {
            label: i18n._({
                id: "p0wVVh"
            }),
            short: 'ac_refrigeration_repair',
            code: '7623'
        },
        {
            label: i18n._({
                id: "mWZm+0"
            }),
            short: 'accounting_bookkeeping_services',
            code: '8931'
        },
        {
            label: i18n._({
                id: "1odaFW"
            }),
            short: 'advertising_services',
            code: '7311'
        },
        {
            label: i18n._({
                id: "kdTa7K"
            }),
            short: 'agricultural_cooperative',
            code: '0763'
        },
        {
            label: i18n._({
                id: "QDHkr8"
            }),
            short: 'airlines_air_carriers',
            code: '4511'
        },
        {
            label: i18n._({
                id: "UFeLUQ"
            }),
            short: 'airports_flying_fields',
            code: '4582'
        },
        {
            label: i18n._({
                id: "N0e1EM"
            }),
            short: 'ambulance_services',
            code: '4119'
        },
        {
            label: i18n._({
                id: "Y6mj6W"
            }),
            short: 'amusement_parks_carnivals',
            code: '7996'
        },
        {
            label: i18n._({
                id: "TPS6x1"
            }),
            short: 'antique_reproductions',
            code: '5937'
        },
        {
            label: i18n._({
                id: "27CDdQ"
            }),
            short: 'antique_shops',
            code: '5932'
        },
        {
            label: i18n._({
                id: "QV1+Qi"
            }),
            short: 'aquariums',
            code: '7998'
        },
        {
            label: i18n._({
                id: "ZhQQ1F"
            }),
            short: 'architectural_surveying_services',
            code: '8911'
        },
        {
            label: i18n._({
                id: "dYG1SM"
            }),
            short: 'art_dealers_and_galleries',
            code: '5971'
        },
        {
            label: i18n._({
                id: "P2PNFH"
            }),
            short: 'artists_supply_and_craft_shops',
            code: '5970'
        },
        {
            label: i18n._({
                id: "0ZQCF1"
            }),
            short: 'auto_body_repair_shops',
            code: '7531'
        },
        {
            label: i18n._({
                id: "vLqIGd"
            }),
            short: 'auto_paint_shops',
            code: '7535'
        },
        {
            label: i18n._({
                id: "50YTeH"
            }),
            short: 'auto_service_shops',
            code: '7538'
        },
        {
            label: i18n._({
                id: "ECPuHE"
            }),
            short: 'auto_and_home_supply_stores',
            code: '5531'
        },
        {
            label: i18n._({
                id: "pBQBnu"
            }),
            short: 'automated_cash_disburse',
            code: '6011'
        },
        {
            label: i18n._({
                id: "zMIL7t"
            }),
            short: 'automated_fuel_dispensers',
            code: '5542'
        },
        {
            label: i18n._({
                id: "lwY/5B"
            }),
            short: 'automobile_associations',
            code: '8675'
        },
        {
            label: i18n._({
                id: "6koo0E"
            }),
            short: 'automotive_parts_and_accessories_stores',
            code: '5533'
        },
        {
            label: i18n._({
                id: "GMFIw4"
            }),
            short: 'automotive_tire_stores',
            code: '5532'
        },
        {
            label: i18n._({
                id: "n20Hd+"
            }),
            short: 'bail_and_bond_payments',
            code: '9223'
        },
        {
            label: i18n._({
                id: "i/w1ws"
            }),
            short: 'bakeries',
            code: '5462'
        },
        {
            label: i18n._({
                id: "xkRDL7"
            }),
            short: 'bands_orchestras',
            code: '7929'
        },
        {
            label: i18n._({
                id: "jOl3EA"
            }),
            short: 'barber_and_beauty_shops',
            code: '7230'
        },
        {
            label: i18n._({
                id: "E0l+Ui"
            }),
            short: 'betting_casino_gambling',
            code: '7995'
        },
        {
            label: i18n._({
                id: "iPT3EJ"
            }),
            short: 'bicycle_shops',
            code: '5940'
        },
        {
            label: i18n._({
                id: "BjJA0S"
            }),
            short: 'billiard_pool_establishments',
            code: '7932'
        },
        {
            label: i18n._({
                id: "DKlVkz"
            }),
            short: 'boat_dealers',
            code: '5551'
        },
        {
            label: i18n._({
                id: "nKeK0m"
            }),
            short: 'boat_rentals_and_leases',
            code: '4457'
        },
        {
            label: i18n._({
                id: "eSwxMQ"
            }),
            short: 'book_stores',
            code: '5942'
        },
        {
            label: i18n._({
                id: "CtjFCU"
            }),
            short: 'books_periodicals_and_newspapers',
            code: '5192'
        },
        {
            label: i18n._({
                id: "qVu+m+"
            }),
            short: 'bowling_alleys',
            code: '7933'
        },
        {
            label: i18n._({
                id: "vCYA7v"
            }),
            short: 'bus_lines',
            code: '4131'
        },
        {
            label: i18n._({
                id: "aKVeaw"
            }),
            short: 'business_secretarial_schools',
            code: '8244'
        },
        {
            label: i18n._({
                id: "UUABbG"
            }),
            short: 'buying_shopping_services',
            code: '7278'
        },
        {
            label: i18n._({
                id: "E2QSZr"
            }),
            short: 'cable_satellite_and_other_pay_television_and_radio',
            code: '4899'
        },
        {
            label: i18n._({
                id: "8voF+I"
            }),
            short: 'camera_and_photographic_supply_stores',
            code: '5946'
        },
        {
            label: i18n._({
                id: "QuE/Ym"
            }),
            short: 'candy_nut_and_confectionery_stores',
            code: '5441'
        },
        {
            label: i18n._({
                id: "WyawXJ"
            }),
            short: 'car_rental_agencies',
            code: '7512'
        },
        {
            label: i18n._({
                id: "aeFT9o"
            }),
            short: 'car_washes',
            code: '7542'
        },
        {
            label: i18n._({
                id: "vn1vZp"
            }),
            short: 'car_and_truck_dealers_new_used',
            code: '5511'
        },
        {
            label: i18n._({
                id: "ad2b58"
            }),
            short: 'car_and_truck_dealers_used_only',
            code: '5521'
        },
        {
            label: i18n._({
                id: "bTmvc+"
            }),
            short: 'carpentry_services',
            code: '1750'
        },
        {
            label: i18n._({
                id: "SNhucU"
            }),
            short: 'carpet_upholstery_cleaning',
            code: '7217'
        },
        {
            label: i18n._({
                id: "pVV24B"
            }),
            short: 'caterers',
            code: '5811'
        },
        {
            label: i18n._({
                id: "9+2Czn"
            }),
            short: 'charitable_and_social_service_organizations_fundraising',
            code: '8398'
        },
        {
            label: i18n._({
                id: "KfdDVS"
            }),
            short: 'chemicals_and_allied_products',
            code: '5169'
        },
        {
            label: i18n._({
                id: "dCvRc0"
            }),
            short: 'child_care_services',
            code: '8351'
        },
        {
            label: i18n._({
                id: "grzW/z"
            }),
            short: 'childrens_and_infants_wear_stores',
            code: '5641'
        },
        {
            label: i18n._({
                id: "4gJqNA"
            }),
            short: 'chiropodists_podiatrists',
            code: '8049'
        },
        {
            label: i18n._({
                id: "vojz3y"
            }),
            short: 'chiropractors',
            code: '8041'
        },
        {
            label: i18n._({
                id: "uGiLl/"
            }),
            short: 'cigar_stores_and_stands',
            code: '5993'
        },
        {
            label: i18n._({
                id: "hQAFvC"
            }),
            short: 'civic_social_fraternal_associations',
            code: '8641'
        },
        {
            label: i18n._({
                id: "gvrLbY"
            }),
            short: 'cleaning_and_maintenance',
            code: '7349'
        },
        {
            label: i18n._({
                id: "GFwCP6"
            }),
            short: 'clothing_rental',
            code: '7296'
        },
        {
            label: i18n._({
                id: "lEA483"
            }),
            short: 'colleges_universities',
            code: '8220'
        },
        {
            label: i18n._({
                id: "XGHSPU"
            }),
            short: 'commercial_equipment',
            code: '5046'
        },
        {
            label: i18n._({
                id: "R8qg6k"
            }),
            short: 'commercial_footwear',
            code: '5139'
        },
        {
            label: i18n._({
                id: "3G3BPM"
            }),
            short: 'commercial_photography_art_and_graphics',
            code: '7333'
        },
        {
            label: i18n._({
                id: "hm3a0E"
            }),
            short: 'commuter_transport_and_ferries',
            code: '4111'
        },
        {
            label: i18n._({
                id: "HjIa0/"
            }),
            short: 'computer_network_services',
            code: '4816'
        },
        {
            label: i18n._({
                id: "yz1CR5"
            }),
            short: 'computer_programming',
            code: '7372'
        },
        {
            label: i18n._({
                id: "PhJu+G"
            }),
            short: 'computer_repair',
            code: '7379'
        },
        {
            label: i18n._({
                id: "hyKYKd"
            }),
            short: 'computer_software_stores',
            code: '5734'
        },
        {
            label: i18n._({
                id: "fcTU/f"
            }),
            short: 'computers_peripherals_and_software',
            code: '5045'
        },
        {
            label: i18n._({
                id: "YI3MpI"
            }),
            short: 'concrete_work_services',
            code: '1771'
        },
        {
            label: i18n._({
                id: "ILMknU"
            }),
            short: 'construction_materials',
            code: '5039'
        },
        {
            label: i18n._({
                id: "kIz76E"
            }),
            short: 'consulting_public_relations',
            code: '7392'
        },
        {
            label: i18n._({
                id: "2S83qK"
            }),
            short: 'correspondence_schools',
            code: '8241'
        },
        {
            label: i18n._({
                id: "sdPY8k"
            }),
            short: 'cosmetic_stores',
            code: '5977'
        },
        {
            label: i18n._({
                id: "A1O7j9"
            }),
            short: 'counseling_services',
            code: '7277'
        },
        {
            label: i18n._({
                id: "vResgj"
            }),
            short: 'country_clubs',
            code: '7997'
        },
        {
            label: i18n._({
                id: "fG3oVT"
            }),
            short: 'courier_services',
            code: '4215'
        },
        {
            label: i18n._({
                id: "XBAfW0"
            }),
            short: 'court_costs',
            code: '9211'
        },
        {
            label: i18n._({
                id: "oJ0iuj"
            }),
            short: 'credit_reporting_agencies',
            code: '7321'
        },
        {
            label: i18n._({
                id: "CIv1hT"
            }),
            short: 'cruise_lines',
            code: '4411'
        },
        {
            label: i18n._({
                id: "bZGK9Z"
            }),
            short: 'dairy_products_stores',
            code: '5451'
        },
        {
            label: i18n._({
                id: "XWEDt7"
            }),
            short: 'dance_hall_studios_schools',
            code: '7911'
        },
        {
            label: i18n._({
                id: "Nen7JD"
            }),
            short: 'dating_escort_services',
            code: '7273'
        },
        {
            label: i18n._({
                id: "pBNikV"
            }),
            short: 'dentists_orthodontists',
            code: '8021'
        },
        {
            label: i18n._({
                id: "D8LH3t"
            }),
            short: 'department_stores',
            code: '5311'
        },
        {
            label: i18n._({
                id: "5Q0hrS"
            }),
            short: 'detective_agencies',
            code: '7393'
        },
        {
            label: i18n._({
                id: "g4CDlc"
            }),
            short: 'digital_goods_media',
            code: '5815'
        },
        {
            label: i18n._({
                id: "xv4aXl"
            }),
            short: 'digital_goods_applications',
            code: '5817'
        },
        {
            label: i18n._({
                id: "sNCgfA"
            }),
            short: 'digital_goods_games',
            code: '5816'
        },
        {
            label: i18n._({
                id: "ReInK4"
            }),
            short: 'digital_goods_large_volume',
            code: '5818'
        },
        {
            label: i18n._({
                id: "scQhHH"
            }),
            short: 'direct_marketing_catalog_merchant',
            code: '5964'
        },
        {
            label: i18n._({
                id: "oMYVua"
            }),
            short: 'direct_marketing_combination_catalog_and_retail_merchant',
            code: '5965'
        },
        {
            label: i18n._({
                id: "Q92GO+"
            }),
            short: 'direct_marketing_inbound_telemarketing',
            code: '5967'
        },
        {
            label: i18n._({
                id: "Y8XkSS"
            }),
            short: 'direct_marketing_insurance_services',
            code: '5960'
        },
        {
            label: i18n._({
                id: "t6sVML"
            }),
            short: 'direct_marketing_other',
            code: '5969'
        },
        {
            label: i18n._({
                id: "Yfyiir"
            }),
            short: 'direct_marketing_outbound_telemarketing',
            code: '5966'
        },
        {
            label: i18n._({
                id: "hzefBH"
            }),
            short: 'direct_marketing_subscription',
            code: '5968'
        },
        {
            label: i18n._({
                id: "jdk1KR"
            }),
            short: 'direct_marketing_travel',
            code: '5962'
        },
        {
            label: i18n._({
                id: "7hTpH6"
            }),
            short: 'discount_stores',
            code: '5310'
        },
        {
            label: i18n._({
                id: "P+x4mP"
            }),
            short: 'doctors',
            code: '8011'
        },
        {
            label: i18n._({
                id: "YaLcbB"
            }),
            short: 'door_to_door_sales',
            code: '5963'
        },
        {
            label: i18n._({
                id: "qq9wHN"
            }),
            short: 'drapery_window_covering_and_upholstery_stores',
            code: '5714'
        },
        {
            label: i18n._({
                id: "tvxZw8"
            }),
            short: 'drinking_places',
            code: '5813'
        },
        {
            label: i18n._({
                id: "ct34lz"
            }),
            short: 'drug_stores_and_pharmacies',
            code: '5912'
        },
        {
            label: i18n._({
                id: "uGLRYC"
            }),
            short: 'drugs_drug_proprietaries_and_druggist_sundries',
            code: '5122'
        },
        {
            label: i18n._({
                id: "TdCVfB"
            }),
            short: 'dry_cleaners',
            code: '7216'
        },
        {
            label: i18n._({
                id: "QKTS84"
            }),
            short: 'durable_goods',
            code: '5099'
        },
        {
            label: i18n._({
                id: "MmJy4F"
            }),
            short: 'duty_free_stores',
            code: '5309'
        },
        {
            label: i18n._({
                id: "xrnwUJ"
            }),
            short: 'eating_places_restaurants',
            code: '5812'
        },
        {
            label: i18n._({
                id: "Vz+J55"
            }),
            short: 'educational_services',
            code: '8299'
        },
        {
            label: i18n._({
                id: "0WBHQ6"
            }),
            short: 'electric_razor_stores',
            code: '5997'
        },
        {
            label: i18n._({
                id: "apAIAH"
            }),
            short: 'electrical_parts_and_equipment',
            code: '5065'
        },
        {
            label: i18n._({
                id: "Aq9fqf"
            }),
            short: 'electrical_services',
            code: '1731'
        },
        {
            label: i18n._({
                id: "iibMCk"
            }),
            short: 'electronics_repair_shops',
            code: '7622'
        },
        {
            label: i18n._({
                id: "qSSvJs"
            }),
            short: 'electronics_stores',
            code: '5732'
        },
        {
            label: i18n._({
                id: "UqyaMe"
            }),
            short: 'elementary_secondary_schools',
            code: '8211'
        },
        {
            label: i18n._({
                id: "bvPnBf"
            }),
            short: 'employment_temp_agencies',
            code: '7361'
        },
        {
            label: i18n._({
                id: "Eh/k7n"
            }),
            short: 'equipment_rental',
            code: '7394'
        },
        {
            label: i18n._({
                id: "x7XJsh"
            }),
            short: 'exterminating_services',
            code: '7342'
        },
        {
            label: i18n._({
                id: "TkPaoo"
            }),
            short: 'family_clothing_stores',
            code: '5651'
        },
        {
            label: i18n._({
                id: "QB4Z9M"
            }),
            short: 'fast_food_restaurants',
            code: '5814'
        },
        {
            label: i18n._({
                id: "Y5D7cY"
            }),
            short: 'financial_institutions',
            code: '6012'
        },
        {
            label: i18n._({
                id: "KEeJZb"
            }),
            short: 'fines_government_administrative_entities',
            code: '9222'
        },
        {
            label: i18n._({
                id: "NrjgdM"
            }),
            short: 'fireplace_fireplace_screens_and_accessories_stores',
            code: '5718'
        },
        {
            label: i18n._({
                id: "ho7L1/"
            }),
            short: 'floor_covering_stores',
            code: '5713'
        },
        {
            label: i18n._({
                id: "Ao5/G1"
            }),
            short: 'florists',
            code: '5992'
        },
        {
            label: i18n._({
                id: "b5EKHf"
            }),
            short: 'florists_supplies_nursery_stock_and_flowers',
            code: '5193'
        },
        {
            label: i18n._({
                id: "0Bhqmy"
            }),
            short: 'freezer_and_locker_meat_provisioners',
            code: '5422'
        },
        {
            label: i18n._({
                id: "q0lMi9"
            }),
            short: 'fuel_dealers_non_automotive',
            code: '5983'
        },
        {
            label: i18n._({
                id: "y79lo5"
            }),
            short: 'funeral_services_crematories',
            code: '7261'
        },
        {
            label: i18n._({
                id: "fOInUy"
            }),
            short: 'furniture_repair_refinishing',
            code: '7641'
        },
        {
            label: i18n._({
                id: "r6JWMs"
            }),
            short: 'furniture_home_furnishings_and_equipment_stores_except_appliances',
            code: '5712'
        },
        {
            label: i18n._({
                id: "xUq/Xy"
            }),
            short: 'furriers_and_fur_shops',
            code: '5681'
        },
        {
            label: i18n._({
                id: "5i6NPR"
            }),
            short: 'general_services',
            code: '1520'
        },
        {
            label: i18n._({
                id: "Sbkwmo"
            }),
            short: 'gift_card_novelty_and_souvenir_shops',
            code: '5947'
        },
        {
            label: i18n._({
                id: "vvRWYR"
            }),
            short: 'glass_paint_and_wallpaper_stores',
            code: '5231'
        },
        {
            label: i18n._({
                id: "qnwrxC"
            }),
            short: 'glassware_crystal_stores',
            code: '5950'
        },
        {
            label: i18n._({
                id: "qMoMjs"
            }),
            short: 'golf_courses_public',
            code: '7992'
        },
        {
            label: i18n._({
                id: "R00EhU"
            }),
            short: 'government_services',
            code: '9399'
        },
        {
            label: i18n._({
                id: "AJVEIe"
            }),
            short: 'grocery_stores_supermarkets',
            code: '5411'
        },
        {
            label: i18n._({
                id: "GNd/Iv"
            }),
            short: 'hardware_stores',
            code: '5251'
        },
        {
            label: i18n._({
                id: "l5AsIM"
            }),
            short: 'hardware_equipment_and_supplies',
            code: '5072'
        },
        {
            label: i18n._({
                id: "Ino+EO"
            }),
            short: 'health_and_beauty_spas',
            code: '7298'
        },
        {
            label: i18n._({
                id: "h1nBFH"
            }),
            short: 'hearing_aids_sales_and_supplies',
            code: '5975'
        },
        {
            label: i18n._({
                id: "XQLBln"
            }),
            short: 'heating_plumbing_a_c',
            code: '1711'
        },
        {
            label: i18n._({
                id: "hiuHta"
            }),
            short: 'hobby_toy_and_game_shops',
            code: '5945'
        },
        {
            label: i18n._({
                id: "56jJiL"
            }),
            short: 'home_supply_warehouse_stores',
            code: '5200'
        },
        {
            label: i18n._({
                id: "G4Ryny"
            }),
            short: 'hospitals',
            code: '8062'
        },
        {
            label: i18n._({
                id: "cM5lGq"
            }),
            short: 'hotels_motels_and_resorts',
            code: '7011'
        },
        {
            label: i18n._({
                id: "kTcX1q"
            }),
            short: 'household_appliance_stores',
            code: '5722'
        },
        {
            label: i18n._({
                id: "7frLP2"
            }),
            short: 'industrial_supplies',
            code: '5085'
        },
        {
            label: i18n._({
                id: "U1mqrC"
            }),
            short: 'information_retrieval_services',
            code: '7375'
        },
        {
            label: i18n._({
                id: "96VdND"
            }),
            short: 'insurance_default',
            code: '6399'
        },
        {
            label: i18n._({
                id: "Wbt7FA"
            }),
            short: 'insurance_underwriting_premiums',
            code: '6300'
        },
        {
            label: i18n._({
                id: "K5QeDO"
            }),
            short: 'intra_company_purchases',
            code: '9950'
        },
        {
            label: i18n._({
                id: "02Hiue"
            }),
            short: 'jewelry_stores_watches_clocks_and_silverware_stores',
            code: '5944'
        },
        {
            label: i18n._({
                id: "A/Hq74"
            }),
            short: 'landscaping_services',
            code: '0780'
        },
        {
            label: i18n._({
                id: "dE+klf"
            }),
            short: 'laundries',
            code: '7211'
        },
        {
            label: i18n._({
                id: "NyruWg"
            }),
            short: 'laundry_cleaning_services',
            code: '7210'
        },
        {
            label: i18n._({
                id: "7jTc2G"
            }),
            short: 'legal_services_attorneys',
            code: '8111'
        },
        {
            label: i18n._({
                id: "lbI+wx"
            }),
            short: 'luggage_and_leather_goods_stores',
            code: '5948'
        },
        {
            label: i18n._({
                id: "bjDavV"
            }),
            short: 'lumber_building_materials_stores',
            code: '5211'
        },
        {
            label: i18n._({
                id: "E2Hv57"
            }),
            short: 'manual_cash_disburse',
            code: '6010'
        },
        {
            label: i18n._({
                id: "7Jbzt9"
            }),
            short: 'marinas_service_and_supplies',
            code: '4468'
        },
        {
            label: i18n._({
                id: "djKhFm"
            }),
            short: 'masonry_stonework_and_plaster',
            code: '1740'
        },
        {
            label: i18n._({
                id: "wN/Y7f"
            }),
            short: 'massage_parlors',
            code: '7297'
        },
        {
            label: i18n._({
                id: "LYYVee"
            }),
            short: 'medical_services',
            code: '8099'
        },
        {
            label: i18n._({
                id: "eQsQim"
            }),
            short: 'medical_and_dental_labs',
            code: '8071'
        },
        {
            label: i18n._({
                id: "79gjt+"
            }),
            short: 'medical_dental_ophthalmic_and_hospital_equipment_and_supplies',
            code: '5047'
        },
        {
            label: i18n._({
                id: "h+6rx1"
            }),
            short: 'membership_organizations',
            code: '8699'
        },
        {
            label: i18n._({
                id: "gghnV/"
            }),
            short: 'mens_and_boys_clothing_and_accessories_stores',
            code: '5611'
        },
        {
            label: i18n._({
                id: "K6hdpo"
            }),
            short: 'mens_womens_clothing_stores',
            code: '5691'
        },
        {
            label: i18n._({
                id: "6XclCT"
            }),
            short: 'metal_service_centers',
            code: '5051'
        },
        {
            label: i18n._({
                id: "f5ENpX"
            }),
            short: 'miscellaneous_apparel_and_accessory_shops',
            code: '5699'
        },
        {
            label: i18n._({
                id: "iZnIAs"
            }),
            short: 'miscellaneous_auto_dealers',
            code: '5599'
        },
        {
            label: i18n._({
                id: "WRxTcy"
            }),
            short: 'miscellaneous_business_services',
            code: '7399'
        },
        {
            label: i18n._({
                id: "KP8XyF"
            }),
            short: 'miscellaneous_food_stores',
            code: '5499'
        },
        {
            label: i18n._({
                id: "yc+u3y"
            }),
            short: 'miscellaneous_general_merchandise',
            code: '5399'
        },
        {
            label: i18n._({
                id: "rBSujv"
            }),
            short: 'miscellaneous_general_services',
            code: '7299'
        },
        {
            label: i18n._({
                id: "nMMJrU"
            }),
            short: 'miscellaneous_home_furnishing_specialty_stores',
            code: '5719'
        },
        {
            label: i18n._({
                id: "uITuF/"
            }),
            short: 'miscellaneous_publishing_and_printing',
            code: '2741'
        },
        {
            label: i18n._({
                id: "XRsDt/"
            }),
            short: 'miscellaneous_recreation_services',
            code: '7999'
        },
        {
            label: i18n._({
                id: "qE5oGm"
            }),
            short: 'miscellaneous_repair_shops',
            code: '7699'
        },
        {
            label: i18n._({
                id: "B72BE5"
            }),
            short: 'miscellaneous_specialty_retail',
            code: '5999'
        },
        {
            label: i18n._({
                id: "VwHnrg"
            }),
            short: 'mobile_home_dealers',
            code: '5271'
        },
        {
            label: i18n._({
                id: "vZiSIj"
            }),
            short: 'motion_picture_theaters',
            code: '7832'
        },
        {
            label: i18n._({
                id: "7GuLRn"
            }),
            short: 'motor_freight_carriers_and_trucking',
            code: '4214'
        },
        {
            label: i18n._({
                id: "J5mmIg"
            }),
            short: 'motor_homes_dealers',
            code: '5592'
        },
        {
            label: i18n._({
                id: "dhhmTi"
            }),
            short: 'motor_vehicle_supplies_and_new_parts',
            code: '5013'
        },
        {
            label: i18n._({
                id: "5ossQX"
            }),
            short: 'motorcycle_shops_and_dealers',
            code: '5571'
        },
        {
            label: i18n._({
                id: "g2TI3R"
            }),
            short: 'motorcycle_shops_dealers',
            code: '5561'
        },
        {
            label: i18n._({
                id: "MKBJbz"
            }),
            short: 'music_stores_musical_instruments_pianos_and_sheet_music',
            code: '5733'
        },
        {
            label: i18n._({
                id: "076hVE"
            }),
            short: 'news_dealers_and_newsstands',
            code: '5994'
        },
        {
            label: i18n._({
                id: "EvJqgQ"
            }),
            short: 'non_fi_money_orders',
            code: '6051'
        },
        {
            label: i18n._({
                id: "HaRXnI"
            }),
            short: 'non_fi_stored_value_card_purchase_load',
            code: '6540'
        },
        {
            label: i18n._({
                id: "TpfZs5"
            }),
            short: 'nondurable_goods',
            code: '5199'
        },
        {
            label: i18n._({
                id: "vjQju1"
            }),
            short: 'nurseries_lawn_and_garden_supply_stores',
            code: '5261'
        },
        {
            label: i18n._({
                id: "gEXytm"
            }),
            short: 'nursing_personal_care',
            code: '8050'
        },
        {
            label: i18n._({
                id: "v5UgLB"
            }),
            short: 'office_and_commercial_furniture',
            code: '5021'
        },
        {
            label: i18n._({
                id: "SN0sP/"
            }),
            short: 'opticians_eyeglasses',
            code: '8043'
        },
        {
            label: i18n._({
                id: "vY3/R1"
            }),
            short: 'optometrists_ophthalmologist',
            code: '8042'
        },
        {
            label: i18n._({
                id: "2qCVo1"
            }),
            short: 'orthopedic_goods_prosthetic_devices',
            code: '5976'
        },
        {
            label: i18n._({
                id: "of6Gde"
            }),
            short: 'osteopaths',
            code: '8031'
        },
        {
            label: i18n._({
                id: "QZDeNo"
            }),
            short: 'package_stores_beer_wine_and_liquor',
            code: '5921'
        },
        {
            label: i18n._({
                id: "LMJziE"
            }),
            short: 'paints_varnishes_and_supplies',
            code: '5198'
        },
        {
            label: i18n._({
                id: "6jogzt"
            }),
            short: 'parking_lots_garages',
            code: '7523'
        },
        {
            label: i18n._({
                id: "jtWDj2"
            }),
            short: 'passenger_railways',
            code: '4112'
        },
        {
            label: i18n._({
                id: "Mr1Gi4"
            }),
            short: 'pawn_shops',
            code: '5933'
        },
        {
            label: i18n._({
                id: "vntT9p"
            }),
            short: 'pet_shops_pet_food_and_supplies',
            code: '5995'
        },
        {
            label: i18n._({
                id: "SJnhQ+"
            }),
            short: 'petroleum_and_petroleum_products',
            code: '5172'
        },
        {
            label: i18n._({
                id: "DVDp+1"
            }),
            short: 'photo_developing',
            code: '7395'
        },
        {
            label: i18n._({
                id: "GqhSP0"
            }),
            short: 'photographic_studios',
            code: '7221'
        },
        {
            label: i18n._({
                id: "PcDkYV"
            }),
            short: 'photographic_photocopy_microfilm_equipment_and_supplies',
            code: '5044'
        },
        {
            label: i18n._({
                id: "8YnEBd"
            }),
            short: 'picture_video_production',
            code: '7829'
        },
        {
            label: i18n._({
                id: "qVlH/N"
            }),
            short: 'piece_goods_notions_and_other_dry_goods',
            code: '5131'
        },
        {
            label: i18n._({
                id: "LqTjQv"
            }),
            short: 'plumbing_heating_equipment_and_supplies',
            code: '5074'
        },
        {
            label: i18n._({
                id: "VatpuT"
            }),
            short: 'political_organizations',
            code: '8651'
        },
        {
            label: i18n._({
                id: "ELmFjb"
            }),
            short: 'postal_services_government_only',
            code: '9402'
        },
        {
            label: i18n._({
                id: "RHZR9H"
            }),
            short: 'precious_stones_and_metals_watches_and_jewelry',
            code: '5094'
        },
        {
            label: i18n._({
                id: "VYKe2X"
            }),
            short: 'professional_services',
            code: '8999'
        },
        {
            label: i18n._({
                id: "sW4knR"
            }),
            short: 'public_warehousing_and_storage',
            code: '4225'
        },
        {
            label: i18n._({
                id: "CKGulT"
            }),
            short: 'quick_copy_repro_and_blueprint',
            code: '7338'
        },
        {
            label: i18n._({
                id: "7HMW9p"
            }),
            short: 'railroads',
            code: '4011'
        },
        {
            label: i18n._({
                id: "A7OIfZ"
            }),
            short: 'real_estate_agents_and_managers_rentals',
            code: '6513'
        },
        {
            label: i18n._({
                id: "nmNCya"
            }),
            short: 'record_stores',
            code: '5735'
        },
        {
            label: i18n._({
                id: "w+HNKD"
            }),
            short: 'recreational_vehicle_rentals',
            code: '7519'
        },
        {
            label: i18n._({
                id: "m7+OW8"
            }),
            short: 'religious_goods_stores',
            code: '5973'
        },
        {
            label: i18n._({
                id: "J69wfn"
            }),
            short: 'religious_organizations',
            code: '8661'
        },
        {
            label: i18n._({
                id: "9HMUlN"
            }),
            short: 'roofing_siding_sheet_metal',
            code: '1761'
        },
        {
            label: i18n._({
                id: "GNG6r1"
            }),
            short: 'secretarial_support_services',
            code: '7339'
        },
        {
            label: i18n._({
                id: "Cd0pe2"
            }),
            short: 'security_brokers_dealers',
            code: '6211'
        },
        {
            label: i18n._({
                id: "zTm8gV"
            }),
            short: 'service_stations',
            code: '5541'
        },
        {
            label: i18n._({
                id: "PEVwDN"
            }),
            short: 'sewing_needlework_fabric_and_piece_goods_stores',
            code: '5949'
        },
        {
            label: i18n._({
                id: "tZygJN"
            }),
            short: 'shoe_repair_hat_cleaning',
            code: '7251'
        },
        {
            label: i18n._({
                id: "2c7OCc"
            }),
            short: 'shoe_stores',
            code: '5661'
        },
        {
            label: i18n._({
                id: "SCKlBJ"
            }),
            short: 'small_appliance_repair',
            code: '7629'
        },
        {
            label: i18n._({
                id: "QlK352"
            }),
            short: 'snowmobile_dealers',
            code: '5598'
        },
        {
            label: i18n._({
                id: "aply0P"
            }),
            short: 'special_trade_services',
            code: '1799'
        },
        {
            label: i18n._({
                id: "/KqDEQ"
            }),
            short: 'specialty_cleaning',
            code: '2842'
        },
        {
            label: i18n._({
                id: "sTESFt"
            }),
            short: 'sporting_goods_stores',
            code: '5941'
        },
        {
            label: i18n._({
                id: "xiEnTs"
            }),
            short: 'sporting_recreation_camps',
            code: '7032'
        },
        {
            label: i18n._({
                id: "M77m54"
            }),
            short: 'sports_clubs_fields',
            code: '7941'
        },
        {
            label: i18n._({
                id: "V0O+gh"
            }),
            short: 'sports_and_riding_apparel_stores',
            code: '5655'
        },
        {
            label: i18n._({
                id: "KattWT"
            }),
            short: 'stamp_and_coin_stores',
            code: '5972'
        },
        {
            label: i18n._({
                id: "P+9YZ/"
            }),
            short: 'stationary_office_supplies_printing_and_writing_paper',
            code: '5111'
        },
        {
            label: i18n._({
                id: "Hx4zgC"
            }),
            short: 'stationery_stores_office_and_school_supply_stores',
            code: '5943'
        },
        {
            label: i18n._({
                id: "vr+2CX"
            }),
            short: 'swimming_pools_sales',
            code: '5996'
        },
        {
            label: i18n._({
                id: "2vxHm+"
            }),
            short: 't_ui_travel_germany',
            code: '4723'
        },
        {
            label: i18n._({
                id: "5MTwnp"
            }),
            short: 'tailors_alterations',
            code: '5697'
        },
        {
            label: i18n._({
                id: "Ce56wo"
            }),
            short: 'tax_payments_government_agencies',
            code: '9311'
        },
        {
            label: i18n._({
                id: "UVNjzZ"
            }),
            short: 'tax_preparation_services',
            code: '7276'
        },
        {
            label: i18n._({
                id: "TNe5xv"
            }),
            short: 'taxicabs_limousines',
            code: '4121'
        },
        {
            label: i18n._({
                id: "AXNRKV"
            }),
            short: 'telecommunication_equipment_and_telephone_sales',
            code: '4812'
        },
        {
            label: i18n._({
                id: "N0pjoN"
            }),
            short: 'telecommunication_services',
            code: '4814'
        },
        {
            label: i18n._({
                id: "qjIFCp"
            }),
            short: 'telegraph_services',
            code: '4821'
        },
        {
            label: i18n._({
                id: "baRfoX"
            }),
            short: 'tent_and_awning_shops',
            code: '5998'
        },
        {
            label: i18n._({
                id: "b+rFLm"
            }),
            short: 'testing_laboratories',
            code: '8734'
        },
        {
            label: i18n._({
                id: "Nm/3Sm"
            }),
            short: 'theatrical_ticket_agencies',
            code: '7922'
        },
        {
            label: i18n._({
                id: "iHXj5C"
            }),
            short: 'timeshares',
            code: '7012'
        },
        {
            label: i18n._({
                id: "fuME7C"
            }),
            short: 'tire_retreading_and_repair',
            code: '7534'
        },
        {
            label: i18n._({
                id: "TthS+R"
            }),
            short: 'tolls_bridge_fees',
            code: '4784'
        },
        {
            label: i18n._({
                id: "CBokKt"
            }),
            short: 'tourist_attractions_and_exhibits',
            code: '7991'
        },
        {
            label: i18n._({
                id: "2ejk7c"
            }),
            short: 'towing_services',
            code: '7549'
        },
        {
            label: i18n._({
                id: "Kz0F5M"
            }),
            short: 'trailer_parks_campgrounds',
            code: '7033'
        },
        {
            label: i18n._({
                id: "GW2v/o"
            }),
            short: 'transportation_services',
            code: '4789'
        },
        {
            label: i18n._({
                id: "4mDzmC"
            }),
            short: 'travel_agencies_tour_operators',
            code: '4722'
        },
        {
            label: i18n._({
                id: "VwmFKO"
            }),
            short: 'truck_stop_iteration',
            code: '7511'
        },
        {
            label: i18n._({
                id: "ZQAlTE"
            }),
            short: 'truck_utility_trailer_rentals',
            code: '7513'
        },
        {
            label: i18n._({
                id: "v9EobU"
            }),
            short: 'typesetting_plate_making_and_related_services',
            code: '2791'
        },
        {
            label: i18n._({
                id: "y4njaO"
            }),
            short: 'typewriter_stores',
            code: '5978'
        },
        {
            label: i18n._({
                id: "/Y5+Ze"
            }),
            short: 'u_s_federal_government_agencies_or_departments',
            code: '9405'
        },
        {
            label: i18n._({
                id: "RGxIBt"
            }),
            short: 'uniforms_commercial_clothing',
            code: '5137'
        },
        {
            label: i18n._({
                id: "Fry+Qr"
            }),
            short: 'used_merchandise_and_secondhand_stores',
            code: '5931'
        },
        {
            label: i18n._({
                id: "l7fStm"
            }),
            short: 'utilities',
            code: '4900'
        },
        {
            label: i18n._({
                id: "5ekgoT"
            }),
            short: 'variety_stores',
            code: '5331'
        },
        {
            label: i18n._({
                id: "aB+RQ4"
            }),
            short: 'veterinary_services',
            code: '0742'
        },
        {
            label: i18n._({
                id: "7RHa+A"
            }),
            short: 'video_amusement_game_supplies',
            code: '7993'
        },
        {
            label: i18n._({
                id: "gDrz1Q"
            }),
            short: 'video_game_arcades',
            code: '7994'
        },
        {
            label: i18n._({
                id: "EJHmN5"
            }),
            short: 'video_tape_rental_stores',
            code: '7841'
        },
        {
            label: i18n._({
                id: "j5aAEG"
            }),
            short: 'vocational_trade_schools',
            code: '8249'
        },
        {
            label: i18n._({
                id: "ybR9Pv"
            }),
            short: 'watch_jewelry_repair',
            code: '7631'
        },
        {
            label: i18n._({
                id: "BhpnTo"
            }),
            short: 'welding_repair',
            code: '7692'
        },
        {
            label: i18n._({
                id: "wZGDhG"
            }),
            short: 'wholesale_clubs',
            code: '5300'
        },
        {
            label: i18n._({
                id: "1y3C0K"
            }),
            short: 'wig_and_toupee_stores',
            code: '5698'
        },
        {
            label: i18n._({
                id: "VqvJZo"
            }),
            short: 'wires_money_orders',
            code: '4829'
        },
        {
            label: i18n._({
                id: "pCNKOH"
            }),
            short: 'womens_accessory_and_specialty_shops',
            code: '5631'
        },
        {
            label: i18n._({
                id: "NPMqlC"
            }),
            short: 'womens_ready_to_wear_stores',
            code: '5621'
        },
        {
            label: i18n._({
                id: "15oset"
            }),
            short: 'wrecking_and_salvage_yards',
            code: '5935'
        }
    ];

function asyncGeneratorStep$7(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$7(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$7(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$7(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _object_without_properties$7(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$7(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$7(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const OnboardingBusinessProfile = ()=>{
    var _onboarding_data, _entity_address;
    const { i18n } = react.useLingui();
    const { data: onboarding } = useOnboardingRequirementsData();
    const { mutateAsync, isPending } = useUpdateEntityOnboardingData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    var _onboarding_data_business_profile;
    const _ref = (_onboarding_data_business_profile = onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.business_profile) !== null && _onboarding_data_business_profile !== void 0 ? _onboarding_data_business_profile : {}, fields = _object_without_properties$7(_ref, [
        "operating_countries"
    ]);
    const { data: entity } = useMyEntity();
    const { defaultValues, methods, checkValue, handleSubmit } = useOnboardingForm(fields, 'businessProfile', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const { control } = methods;
    if (!defaultValues || !fields) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingForm, {
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
            isLoading: isPending
        }),
        onSubmit: handleSubmit((_param)=>_async_to_generator$7(function*() {
                var values = _object_without_properties$7(_param, [
                    "operating_countries"
                ]);
                const response = yield mutateAsync({
                    business_profile: values
                });
                patchOnboardingRequirements({
                    requirements: [
                        'business_profile'
                    ],
                    data: {
                        business_profile: enrichFieldsByValues(fields, values)
                    }
                });
                return response;
            })()),
        children: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
            children: [
                checkValue('mcc') && /*#__PURE__*/ jsxRuntime.jsx(RHFAutocomplete, {
                    disabled: isPending,
                    name: "mcc",
                    control: control,
                    label: i18n._({
                        id: "S8gy7K"
                    }),
                    options: getMccCodes(i18n),
                    optionKey: "code",
                    labelKey: "label"
                }),
                checkValue('url') && /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
                    sx: {
                        width: '100%'
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "V/M8GC"
                            }),
                            name: "url",
                            type: "url",
                            control: control,
                            fullWidth: true
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                            icon: /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.InfoOutlined, {
                                fontSize: "small"
                            }),
                            severity: "info",
                            sx: {
                                mt: 1
                            },
                            children: i18n._({
                                id: "mRgPe2"
                            })
                        })
                    ]
                })
            ]
        })
    });
};

const OnboardingCompleted = ({ onComplete, onContinue, showContinueButton = false } = {})=>{
    const { i18n } = react.useLingui();
    const { entityId } = useMoniteContext();
    React.useEffect(()=>{
        onComplete === null || onComplete === void 0 ? void 0 : onComplete(entityId);
    }, [
        entityId,
        onComplete
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingLayout, {
        title: /*#__PURE__*/ jsxRuntime.jsx(OnboardingTitle, {
            title: i18n._({
                id: "iG9cNW"
            }),
            description: i18n._({
                id: "HnTqVe"
            })
        }),
        content: showContinueButton && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
            variant: "contained",
            color: "primary",
            size: "large",
            onClick: onContinue,
            children: i18n._({
                id: "xGVfLh"
            })
        })
    });
};

function _define_property$l(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$l(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$l(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$f(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$f(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$f(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$6(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$6(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$6(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const TextFieldPhone = (_param)=>{
    var { value, onChange, defaultCountry: defaultCountryIso2, SelectProps } = _param, restProps = _object_without_properties$6(_param, [
        "value",
        "onChange",
        "defaultCountry",
        "SelectProps"
    ]);
    var _i18n_locale_split_;
    const { i18n } = react.useLingui();
    const { root } = useRootElements();
    const defaultCountry = defaultCountryIso2 || ((_i18n_locale_split_ = i18n.locale.split('-')[1]) === null || _i18n_locale_split_ === void 0 ? void 0 : _i18n_locale_split_.toLowerCase()) || i18n.locale;
    const { inputValue, handlePhoneValueChange, inputRef, country, setCountry } = reactInternationalPhone.usePhoneInput({
        value,
        defaultCountry,
        disableDialCodePrefill: true,
        countries: reactInternationalPhone.defaultCountries,
        onChange: ({ phone })=>onChange(phone)
    });
    const inputProps = React.useMemo(()=>{
        if (!inputValue) return undefined;
        return {
            startAdornment: /*#__PURE__*/ jsxRuntime.jsx(TextFieldPhoneSelect, {
                value: country.iso2,
                onChange: (country)=>setCountry(country)
            })
        };
    }, [
        inputValue,
        country.iso2,
        setCountry
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.TextField, _object_spread$l({
        type: "tel",
        value: inputValue,
        onChange: handlePhoneValueChange,
        inputRef: inputRef,
        InputProps: inputProps,
        SelectProps: _object_spread_props$f(_object_spread$l({}, SelectProps), {
            MenuProps: _object_spread_props$f(_object_spread$l({}, SelectProps === null || SelectProps === void 0 ? void 0 : SelectProps.MenuProps), {
                container: root
            })
        })
    }, restProps));
};
const TextFieldPhoneSelect = ({ value, onChange })=>{
    const { root } = useRootElements();
    return /*#__PURE__*/ jsxRuntime.jsx(material.InputAdornment, {
        position: "start",
        style: {
            marginRight: '2px',
            marginLeft: '-8px'
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(material.Select, {
            value: value,
            onChange: (e)=>onChange(e.target.value),
            MenuProps: {
                container: root,
                style: {
                    height: '300px',
                    width: '360px',
                    top: '10px',
                    left: '-34px'
                },
                transformOrigin: {
                    vertical: 'top',
                    horizontal: 'left'
                }
            },
            sx: {
                width: 'max-content',
                // Remove default outline (display only on focus)
                fieldset: {
                    display: 'none'
                },
                // Update default spacing
                '.MuiSelect-select': {
                    padding: '8px',
                    paddingRight: '24px !important'
                },
                svg: {
                    right: 0
                }
            },
            renderValue: (value)=>/*#__PURE__*/ jsxRuntime.jsx(reactInternationalPhone.FlagImage, {
                    iso2: value,
                    style: {
                        display: 'flex',
                        marginRight: 8,
                        width: 24
                    }
                }),
            children: reactInternationalPhone.defaultCountries.map((country)=>{
                const { iso2, dialCode, name } = reactInternationalPhone.parseCountry(country);
                return /*#__PURE__*/ jsxRuntime.jsxs(material.MenuItem, {
                    value: iso2,
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(reactInternationalPhone.FlagImage, {
                            iso2: iso2,
                            style: {
                                marginRight: 8,
                                width: 24
                            }
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            marginRight: "8px",
                            children: name
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                            color: "gray",
                            children: [
                                "+",
                                dialCode
                            ]
                        })
                    ]
                }, iso2);
            })
        })
    });
};

function _define_property$k(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$k(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$k(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$e(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$e(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$e(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$5(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$5(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$5(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const RHFTextFieldPhone = (_param)=>{
    var { control, name } = _param, other = _object_without_properties$5(_param, [
        "control",
        "name"
    ]);
    const isErrorCustom = (error)=>(error === null || error === void 0 ? void 0 : error.type) === 'custom';
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: (_param)=>{
            var { field: { value, onChange }, fieldState: { error, isTouched }, formState: { isValid } } = _param, otherField = _object_without_properties$5(_param.field, [
                "value",
                "onChange"
            ]);
            const isInvalid = (isTouched || !isValid) && !isErrorCustom(error);
            return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(TextFieldPhone, _object_spread_props$e(_object_spread$k({}, otherField, other), {
                        id: name,
                        variant: "standard",
                        onChange: (value)=>onChange(value),
                        value: value !== null && value !== void 0 ? value : '',
                        error: isInvalid && !!(error === null || error === void 0 ? void 0 : error.message),
                        helperText: isInvalid && (error === null || error === void 0 ? void 0 : error.message)
                    })),
                    isErrorCustom(error) && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                        severity: "error",
                        icon: false,
                        sx: {
                            marginTop: -2
                        },
                        children: error === null || error === void 0 ? void 0 : error.message
                    })
                ]
            });
        }
    });
};

const OnboardingAddress = ({ title, defaultValues, isLoading })=>{
    const { i18n } = react.useLingui();
    const { control } = reactHookForm.useFormContext();
    const checkValue = (key)=>defaultValues.hasOwnProperty(key);
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingSubTitle, {
                children: title
            }),
            checkValue('country') && /*#__PURE__*/ jsxRuntime.jsx(MoniteCountry, {
                disabled: isLoading,
                name: "address.country",
                control: control,
                required: true
            }),
            checkValue('line1') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "DgvTYe"
                }),
                name: "address.line1",
                control: control
            }),
            checkValue('line2') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "cXOw12"
                }),
                name: "address.line2",
                control: control
            }),
            checkValue('city') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "3wV73y"
                }),
                name: "address.city",
                control: control
            }),
            checkValue('state') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "RS0o7b"
                }),
                name: "address.state",
                control: control
            }),
            checkValue('postal_code') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                type: "tel",
                label: i18n._({
                    id: "U4aiMW"
                }),
                name: "address.postal_code",
                control: control
            })
        ]
    });
};

const OnboardingEntityIndividual = ({ defaultValues, isLoading })=>{
    const { i18n } = react.useLingui();
    const { control, watch } = reactHookForm.useFormContext();
    const addressCountry = watch('address.country');
    const checkField = (key)=>defaultValues.hasOwnProperty(key);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            checkField('first_name') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "V1EGGU"
                }),
                name: "individual.first_name",
                control: control
            }),
            checkField('last_name') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "1ZaQUH"
                }),
                name: "individual.last_name",
                control: control
            }),
            checkField('title') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                label: i18n._({
                    id: "qMgKul"
                }),
                name: "individual.title",
                control: control
            }),
            checkField('date_of_birth') && /*#__PURE__*/ jsxRuntime.jsx(RHFDatePicker, {
                disabled: isLoading,
                label: i18n._({
                    id: "Dh+FIh"
                }),
                name: "individual.date_of_birth",
                control: control,
                valueAs: "string"
            }),
            checkField('id_number') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                disabled: isLoading,
                type: "tel",
                label: getIdentificationLabel(i18n, addressCountry),
                name: "individual.id_number",
                control: control
            })
        ]
    });
};

const OnboardingEntityOrganization = ({ defaultValues, isLoading })=>{
    const { i18n } = react.useLingui();
    const { control } = reactHookForm.useFormContext();
    const checkField = (key)=>defaultValues.hasOwnProperty(key);
    if (!checkField('legal_name')) return null;
    return /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
        disabled: isLoading,
        label: i18n._({
            id: "QOQq/s"
        }),
        name: "organization.legal_name",
        control: control
    });
};

function _define_property$j(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$j(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$j(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$d(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$d(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$d(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const OnboardingEntity = ()=>{
    var _entity_address_country, _entity_address;
    const { i18n } = react.useLingui();
    const { isPending, updateEntity, entity } = useOnboardingEntity();
    var _entity_address_country_value;
    const { defaultValues, methods, checkValue, handleSubmit } = useOnboardingForm(entity, 'entity', (_entity_address_country_value = entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : (_entity_address_country = _entity_address.country) === null || _entity_address_country === void 0 ? void 0 : _entity_address_country.value) !== null && _entity_address_country_value !== void 0 ? _entity_address_country_value : undefined);
    const { control } = methods;
    if (!defaultValues || !entity) return null;
    const isOrganization = checkValue('organization');
    const getAddressTitle = ()=>{
        if (isOrganization) return i18n._({
            id: "6sNAKP"
        });
        return i18n._({
            id: "M9Ed6U"
        });
    };
    const getPhoneLabel = ()=>{
        if (isOrganization) return i18n._({
            id: "pNHJMU"
        });
        return i18n._({
            id: "ZuLy43"
        });
    };
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$d(_object_spread$j({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
            actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
                isLoading: isPending
            }),
            onSubmit: handleSubmit((values)=>updateEntity(enrichFieldsByValues(entity, values), [
                    'entity'
                ])),
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        !!defaultValues.organization && /*#__PURE__*/ jsxRuntime.jsx(OnboardingEntityOrganization, {
                            defaultValues: defaultValues.organization,
                            isLoading: isPending
                        }),
                        !!defaultValues.individual && /*#__PURE__*/ jsxRuntime.jsx(OnboardingEntityIndividual, {
                            defaultValues: defaultValues.individual,
                            isLoading: isPending
                        }),
                        checkValue('email') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            control: control,
                            disabled: isPending,
                            label: i18n._({
                                id: "ATGYL1"
                            }),
                            name: "email",
                            type: "email"
                        }),
                        checkValue('phone') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextFieldPhone, {
                            control: control,
                            disabled: isPending,
                            name: "phone",
                            label: getPhoneLabel()
                        }),
                        checkValue('tax_id') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "nhKOac"
                            }),
                            name: "tax_id",
                            control: control
                        })
                    ]
                }),
                !!defaultValues.address && /*#__PURE__*/ jsxRuntime.jsx(OnboardingAddress, {
                    title: getAddressTitle(),
                    defaultValues: defaultValues.address,
                    isLoading: isPending
                })
            ]
        })
    }));
};

const useDocumentDescriptions = (country)=>{
    const { api } = useMoniteContext();
    return api.frontend.getFrontendDocumentTypeDescriptions.useQuery({
        query: {
            country: country
        }
    }, {
        enabled: !!country
    });
};

const OnboardingFileDescription = ({ descriptions })=>{
    return /*#__PURE__*/ jsxRuntime.jsx(material.List, {
        sx: {
            listStyleType: 'disc',
            pl: 4
        },
        children: descriptions.map((item)=>/*#__PURE__*/ jsxRuntime.jsx(material.ListItem, {
                sx: {
                    display: 'list-item',
                    pl: 1
                },
                children: item
            }, item))
    });
};

function asyncGeneratorStep$6(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$6(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$6(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$6(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const OnboardingFileUploader = ({ label, name, fileType, error, onChange, description })=>{
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const { mutateAsync, isPending } = api.files.postFiles.useMutation(undefined, {
        onSuccess: ()=>_async_to_generator$6(function*() {
                yield api.files.getFiles.invalidateQueries(queryClient);
            })()
    });
    const handleSubmit = React.useCallback((event)=>_async_to_generator$6(function*() {
            var _event_target_files;
            event.preventDefault();
            const selectedFile = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];
            if (!selectedFile) return;
            const file = yield mutateAsync({
                body: {
                    file: selectedFile,
                    file_type: fileType
                }
            });
            onChange(file.id);
            return file;
        })(), [
        fileType,
        mutateAsync,
        onChange
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(StyledUploading, {
                id: name,
                variant: 'outlined',
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: 'h6',
                        children: label
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        color: 'grey',
                        variant: 'body1',
                        children: i18n._({
                            id: "ROQqBe"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs(material.Button, {
                        component: "label",
                        size: "large",
                        variant: "contained",
                        color: "primary",
                        disabled: isPending,
                        startIcon: isPending ? /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            color: "inherit",
                            size: 22
                        }) : /*#__PURE__*/ jsxRuntime.jsx(iconsMaterial.CloudUpload, {}),
                        children: [
                            isPending && i18n._({
                                id: "k1ifdL"
                            }),
                            !isPending && i18n._({
                                id: "8l+Koi"
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(VisuallyHiddenInput, {
                                accept: '.jpg,.jpeg,.png,.pdf',
                                onChange: handleSubmit,
                                type: "file"
                            })
                        ]
                    })
                ]
            }),
            description && /*#__PURE__*/ jsxRuntime.jsx(OnboardingFileDescription, {
                descriptions: description
            }),
            error && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                icon: false,
                children: error
            })
        ]
    });
};
const StyledUploading = material.styled(material.Paper, {
    shouldForwardProp: (prop)=>prop !== 'over'
})`
  position: relative;
  padding: ${({ theme })=>theme.spacing(4)};
  border-width: 3px;
  ${({ theme, over })=>over && `border-color: ${theme.palette.primary.main};`}
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(2)};
`;
const VisuallyHiddenInput = material.styled('input')({
    clipPath: 'inset(50%)',
    height: 1,
    overflow: 'hidden',
    position: 'absolute',
    bottom: 0,
    left: 0,
    whiteSpace: 'nowrap',
    width: 1
});

const OnboardingFileViewer = ({ label, description, value, onChange, error, name })=>{
    const { i18n } = react.useLingui();
    const { data } = useFileById(value);
    const isPDF = (data === null || data === void 0 ? void 0 : data.mimetype) === 'application/pdf';
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                textAlign: "center",
                variant: 'h6',
                children: label
            }),
            !isPDF && (data === null || data === void 0 ? void 0 : data.url) && /*#__PURE__*/ jsxRuntime.jsx("a", {
                target: "_blank",
                rel: "noopener noreferrer",
                href: data.url,
                children: /*#__PURE__*/ jsxRuntime.jsx("img", {
                    css: {
                        width: '100%'
                    },
                    alt: 'test',
                    loading: "lazy",
                    src: data.url
                })
            }),
            isPDF && /*#__PURE__*/ jsxRuntime.jsx("iframe", {
                loading: "lazy",
                css: {
                    border: 'none'
                },
                src: data === null || data === void 0 ? void 0 : data.url,
                width: "100%",
                height: "350"
            }),
            description && /*#__PURE__*/ jsxRuntime.jsx(OnboardingFileDescription, {
                descriptions: description
            }),
            error && /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
                severity: "error",
                icon: false,
                children: error
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                id: name,
                onClick: ()=>onChange(''),
                size: "large",
                variant: "contained",
                color: "primary",
                children: i18n._({
                    id: "jy8rBA"
                })
            })
        ]
    });
};

function _define_property$i(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends$1() {
    _extends$1 = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends$1.apply(this, arguments);
}
function _object_destructuring_empty$1(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$i(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$i(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$c(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$c(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$c(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties$4(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$4(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$4(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const OnboardingFile = (_param)=>{
    var { control, name, fileType } = _param, other = _object_without_properties$4(_param, [
        "control",
        "name",
        "fileType"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.Controller, {
        control: control,
        name: name,
        render: (_param)=>{
            var { field: {}, fieldState: { error } } = _param, field = _extends$1({}, _object_destructuring_empty$1(_param.field));
            if (!field.value) return /*#__PURE__*/ jsxRuntime.jsx(OnboardingFileUploader, _object_spread_props$c(_object_spread$i({}, other, field), {
                error: error === null || error === void 0 ? void 0 : error.message,
                fileType: fileType
            }));
            return /*#__PURE__*/ jsxRuntime.jsx(OnboardingFileViewer, _object_spread_props$c(_object_spread$i({}, other, field), {
                error: error === null || error === void 0 ? void 0 : error.message
            }));
        }
    });
};

function asyncGeneratorStep$5(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$5(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$5(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$5(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const OnboardingEntityDocuments = ()=>{
    var _onboarding_data, _entity_address;
    const { i18n } = react.useLingui();
    const { data: onboarding } = useOnboardingRequirementsData();
    const { api } = useMoniteContext();
    const { data: entity } = useMyEntity();
    const { data: descriptions } = useDocumentDescriptions(entity === null || entity === void 0 ? void 0 : entity.address.country);
    const { mutateAsync, isPending } = api.onboardingDocuments.postOnboardingDocuments.useMutation(undefined);
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const fields = onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.entity_documents;
    const { defaultValues, methods, checkValue, handleSubmit } = useOnboardingForm(fields, 'entityDocuments', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const { control } = methods;
    const isOrganization = (entity === null || entity === void 0 ? void 0 : entity.type) === 'organization';
    const isIndividual = (entity === null || entity === void 0 ? void 0 : entity.type) === 'individual';
    const getDocumentDescriptions = React.useCallback((isAdditional = false)=>{
        if (isOrganization) {
            return descriptions === null || descriptions === void 0 ? void 0 : descriptions.entity_verification;
        }
        if (isIndividual) {
            if (isAdditional) return descriptions === null || descriptions === void 0 ? void 0 : descriptions.additional_verification;
            return descriptions === null || descriptions === void 0 ? void 0 : descriptions.verification;
        }
        return undefined;
    }, [
        isOrganization,
        isIndividual,
        descriptions
    ]);
    if (!defaultValues || !fields) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
            isLoading: isPending
        }),
        onSubmit: handleSubmit((values)=>_async_to_generator$5(function*() {
                yield mutateAsync({
                    body: values
                });
                patchOnboardingRequirements({
                    requirements: [
                        'entity_documents'
                    ],
                    data: {
                        entity_documents: enrichFieldsByValues(fields, values)
                    }
                });
            })()),
        children: [
            checkValue('verification_document_front') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: 'verification_document_front',
                    label: i18n._({
                        id: "ttScXi"
                    }),
                    fileType: 'identity_documents',
                    description: getDocumentDescriptions()
                })
            }),
            checkValue('verification_document_back') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    name: 'verification_document_back',
                    control: control,
                    label: i18n._({
                        id: "GpShIE"
                    }),
                    fileType: 'identity_documents',
                    description: getDocumentDescriptions()
                })
            }),
            checkValue('additional_verification_document_front') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: 'additional_verification_document_front',
                    label: i18n._({
                        id: "WUbvJS"
                    }),
                    fileType: 'additional_identity_documents',
                    description: getDocumentDescriptions(true)
                })
            }),
            checkValue('additional_verification_document_back') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: 'additional_verification_document_back',
                    label: i18n._({
                        id: "GmBHgL"
                    }),
                    fileType: 'additional_identity_documents',
                    description: getDocumentDescriptions(true)
                })
            })
        ]
    });
};

function OnboardingRepresentativeRole({ title, value, onChange }) {
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.FormControl, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.FormLabel, {
                children: title
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(material.RadioGroup, {
                row: true,
                value: value,
                onChange: (_, value)=>onChange(value === 'true'),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                        sx: {
                            typography: 'overline'
                        },
                        value: "true",
                        control: /*#__PURE__*/ jsxRuntime.jsx(material.Radio, {}),
                        label: i18n._({
                            id: "l75CjT"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.FormControlLabel, {
                        value: "false",
                        control: /*#__PURE__*/ jsxRuntime.jsx(material.Radio, {}),
                        label: i18n._({
                            id: "1UzENP"
                        })
                    })
                ]
            })
        ]
    });
}

function _define_property$h(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$h(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$h(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$b(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$b(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$b(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function OnboardingPerson() {
    var _getFieldState, _defaultValues_address;
    const { i18n } = react.useLingui();
    const { currentRequirement, personId } = useOnboardingRequirementsContext();
    const { isPending, primaryAction, secondaryAction, relationships: { roles, ownerState: [isOwnerProvided, setOwnerProvided], directorState: [isDirectorProvided, setDirectorProvided], onboardingForm: { methods, checkValue, defaultValues, handleSubmit }, isRoleProvided } } = useOnboardingPerson();
    const representative = isRoleProvided('representative');
    const owner = isRoleProvided('owners');
    const director = isRoleProvided('directors');
    const { control, getFieldState } = methods;
    const relationshipError = (_getFieldState = getFieldState('relationship')) === null || _getFieldState === void 0 ? void 0 : _getFieldState.error;
    const filteredRelationships = roles.filter(({ requirement })=>isPersonList(requirement) && !(representative && isExecutives(requirement)));
    const checkRelationshipField = (key)=>(defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.relationship) && key in defaultValues.relationship;
    const shouldRenderRelationships = filteredRelationships.length > 0 && isEditingPerson(personId);
    const shouldRenderRepresentativeRoles = isRepresentative(currentRequirement) && (checkRelationshipField('owner') || checkRelationshipField('director'));
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$b(_object_spread$h({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
            onSubmit: handleSubmit(primaryAction),
            actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
                isLoading: isPending,
                onSecondaryAction: secondaryAction
            }),
            children: [
                /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(OnboardingSubTitle, {
                            children: i18n._({
                                id: "ttunJK"
                            })
                        }),
                        checkValue('first_name') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "V1EGGU"
                            }),
                            name: "first_name",
                            control: control
                        }),
                        checkValue('last_name') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "1ZaQUH"
                            }),
                            name: "last_name",
                            control: control
                        }),
                        checkValue('email') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "ATGYL1"
                            }),
                            name: "email",
                            type: "email",
                            control: control
                        })
                    ]
                }),
                shouldRenderRelationships && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(material.FormGroup, {
                            sx: {
                                gap: 2,
                                '& label': {
                                    alignItems: 'flex-start'
                                }
                            },
                            children: filteredRelationships.map(({ requirement })=>{
                                const relationship = requirementToRelationship(requirement);
                                return /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
                                    name: `relationship.${relationship}`,
                                    label: translateMask(relationship, i18n),
                                    control: control
                                }, relationship);
                            })
                        }),
                        relationshipError && /*#__PURE__*/ jsxRuntime.jsx(material.FormHelperText, {
                            error: true,
                            children: relationshipError.message
                        })
                    ]
                }),
                !!(defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.address) && /*#__PURE__*/ jsxRuntime.jsx(OnboardingAddress, {
                    title: i18n._({
                        id: "Du6bPw"
                    }),
                    defaultValues: defaultValues.address,
                    isLoading: isPending
                }),
                shouldRenderRepresentativeRoles && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                    children: /*#__PURE__*/ jsxRuntime.jsxs(material.FormGroup, {
                        children: [
                            checkRelationshipField('owner') && /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
                                name: `relationship.owner`,
                                label: i18n._({
                                    id: "wwjUcl"
                                }),
                                control: control
                            }),
                            owner && checkRelationshipField('owner') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingRepresentativeRole, {
                                title: i18n._({
                                    id: "9Gr+ae"
                                }),
                                value: isOwnerProvided,
                                onChange: setOwnerProvided
                            }),
                            checkRelationshipField('director') && /*#__PURE__*/ jsxRuntime.jsx(RHFCheckbox, {
                                name: `relationship.director`,
                                label: i18n._({
                                    id: "esA84t"
                                }),
                                control: control
                            }),
                            director && checkRelationshipField('director') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingRepresentativeRole, {
                                title: i18n._({
                                    id: "wxS7xA"
                                }),
                                value: isDirectorProvided,
                                onChange: setDirectorProvided
                            })
                        ]
                    })
                }),
                (checkValue('phone') || checkValue('date_of_birth') || checkRelationshipField('title') || checkRelationshipField('percent_ownership')) && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        checkRelationshipField('title') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "qMgKul"
                            }),
                            name: "relationship.title",
                            control: control
                        }),
                        checkRelationshipField('percent_ownership') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            label: i18n._({
                                id: "cCdqpN"
                            }),
                            name: "relationship.percent_ownership",
                            type: "number",
                            control: control
                        }),
                        checkValue('phone') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextFieldPhone, {
                            disabled: isPending,
                            label: i18n._({
                                id: "ZuLy43"
                            }),
                            name: "phone",
                            control: control
                        }),
                        checkValue('date_of_birth') && /*#__PURE__*/ jsxRuntime.jsx(RHFDatePicker, {
                            disabled: isPending,
                            label: i18n._({
                                id: "Dh+FIh"
                            }),
                            name: "date_of_birth",
                            control: control,
                            valueAs: "string"
                        })
                    ]
                }),
                checkValue('id_number') && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(OnboardingSubTitle, {
                            children: i18n._({
                                id: "he73TN"
                            })
                        }),
                        checkValue('id_number') && /*#__PURE__*/ jsxRuntime.jsx(RHFTextField, {
                            disabled: isPending,
                            type: "tel",
                            label: getIdentificationLabel(i18n, defaultValues === null || defaultValues === void 0 ? void 0 : (_defaultValues_address = defaultValues.address) === null || _defaultValues_address === void 0 ? void 0 : _defaultValues_address.country),
                            name: "id_number",
                            control: control
                        })
                    ]
                })
            ]
        })
    }));
}
const translateMask = (mask, i18n)=>{
    switch(mask){
        case 'owner':
            return i18n._({
                id: "IJqoCF"
            });
        case 'director':
            return i18n._({
                id: "rErCCy"
            });
        case 'executive':
            return i18n._({
                id: "8nuATv"
            });
        default:
            return '';
    }
};

const OnboardingPersonDocumentList = ()=>{
    var _personsQuery_data, _onboarding_data;
    const { i18n } = react.useLingui();
    const { data: onboarding } = useOnboardingRequirementsData();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { enablePersonEditMode } = useOnboardingRequirementsContext();
    const { api } = useMoniteContext();
    const personsQuery = api.persons.getPersons.useQuery();
    const persons = (_personsQuery_data = personsQuery.data) === null || _personsQuery_data === void 0 ? void 0 : _personsQuery_data.data;
    const personDocuments = React.useMemo(()=>{
        var _onboarding_data;
        var _onboarding_data_persons_documents;
        return (_onboarding_data_persons_documents = onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons_documents) !== null && _onboarding_data_persons_documents !== void 0 ? _onboarding_data_persons_documents : [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons_documents
    ]);
    const arePersonDocumentsValid = React.useCallback((personDocuments)=>{
        const errors = generateErrorsByFields(personDocuments);
        const values = generateValuesByFields(personDocuments);
        const validationSchema = generateOnboardingValidationSchema({
            fields: personDocuments,
            type: 'personDocuments',
            i18n
        });
        const areFieldsValid = errors.length === 0;
        const areValuesValid = validationSchema.safeParse(values).success;
        return areFieldsValid && areValuesValid;
    }, [
        i18n
    ]);
    const filteredPersonDocuments = React.useMemo(()=>personDocuments.filter((personDocuments)=>!arePersonDocumentsValid(personDocuments)), [
        personDocuments,
        arePersonDocumentsValid
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {}),
        onSubmit: (event)=>{
            event.preventDefault();
            if (filteredPersonDocuments.length > 0) return;
            patchOnboardingRequirements({
                requirements: [
                    'persons_documents'
                ]
            });
        },
        children: [
            filteredPersonDocuments.length === 0 && /*#__PURE__*/ jsxRuntime.jsx(OnboardingTitle, {
                title: i18n._({
                    id: "WHX87L"
                }),
                description: i18n._({
                    id: "QT1Rm6"
                }),
                icon: /*#__PURE__*/ jsxRuntime.jsx(CheckCircleIcon__default.default, {
                    sx: {
                        color: 'success.light',
                        fontSize: '2rem'
                    }
                })
            }),
            filteredPersonDocuments.map(({ id, verification_document_front, verification_document_back, additional_verification_document_front, additional_verification_document_back })=>{
                const person = persons === null || persons === void 0 ? void 0 : persons.find((person)=>person.id === id);
                const descriptions = [
                    {
                        existed: verification_document_front,
                        description: i18n._({
                            id: "ttScXi"
                        })
                    },
                    {
                        existed: verification_document_back,
                        description: i18n._({
                            id: "GpShIE"
                        })
                    },
                    {
                        existed: additional_verification_document_front,
                        description: i18n._({
                            id: "F77WSp"
                        })
                    },
                    {
                        existed: additional_verification_document_back,
                        description: i18n._({
                            id: "9Dhbdv"
                        })
                    }
                ].filter(({ existed })=>!!existed).map(({ description })=>description);
                if (!person) return null;
                return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    title: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingSubTitle, {
                        children: [
                            i18n._({
                                id: "0NqZiF"
                            }),
                            " ",
                            `'${person.first_name} ${person.last_name}':`
                        ]
                    }),
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(OnboardingFileDescription, {
                            descriptions: descriptions
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                            onClick: ()=>enablePersonEditMode(id),
                            variant: "contained",
                            children: i18n._({
                                id: "U16eyH"
                            })
                        })
                    ]
                }, id);
            })
        ]
    });
};

function asyncGeneratorStep$4(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$4(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$4(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$4(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$g(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _object_destructuring_empty(o) {
    if (o === null || o === void 0) throw new TypeError("Cannot destructure " + o);
    return o;
}
function _object_spread$g(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$g(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$3(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$3(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$3(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const OnboardingPersonDocuments = ()=>{
    var _person_address, _onboarding_data, _entity_address;
    const { i18n } = react.useLingui();
    const { data: onboarding } = useOnboardingRequirementsData();
    const { personId, disableEditMode } = useOnboardingRequirementsContext();
    const { api } = useMoniteContext();
    const { mutateAsync, isPending } = api.persons.postPersonsIdOnboardingDocuments.useMutation();
    const patchOnboardingRequirements = usePatchOnboardingRequirementsData();
    const { data: person } = api.persons.getPersonsId.useQuery({
        path: {
            person_id: personId !== null && personId !== void 0 ? personId : ''
        }
    }, {
        enabled: Boolean(personId)
    });
    const { data: descriptions } = useDocumentDescriptions(person === null || person === void 0 ? void 0 : (_person_address = person.address) === null || _person_address === void 0 ? void 0 : _person_address.country);
    const personDocuments = React.useMemo(()=>{
        var _onboarding_data;
        var _onboarding_data_persons_documents;
        return (_onboarding_data_persons_documents = onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons_documents) !== null && _onboarding_data_persons_documents !== void 0 ? _onboarding_data_persons_documents : [];
    }, [
        onboarding === null || onboarding === void 0 ? void 0 : (_onboarding_data = onboarding.data) === null || _onboarding_data === void 0 ? void 0 : _onboarding_data.persons_documents
    ]);
    const fields = React.useMemo(()=>{
        const fields = personDocuments.find(({ id })=>id === personId);
        if (!fields) return undefined;
        const documents = _extends({}, _object_destructuring_empty(fields));
        return documents;
    }, [
        personDocuments,
        personId
    ]);
    const { data: entity } = useMyEntity();
    const { defaultValues, methods, checkValue, handleSubmit } = useOnboardingForm(fields, 'personDocuments', entity === null || entity === void 0 ? void 0 : (_entity_address = entity.address) === null || _entity_address === void 0 ? void 0 : _entity_address.country);
    const { control } = methods;
    if (!personId || !person || !defaultValues || !fields) return null;
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {
            isLoading: isPending,
            onSecondaryAction: disableEditMode
        }),
        onSubmit: handleSubmit((_param)=>_async_to_generator$4(function*() {
                var { // @ts-expect-error - id received from onboarding_requirements doesn't need in PersonDocumentsSchema
                id } = _param, payload = _object_without_properties$3(_param, [
                    "id"
                ]);
                yield mutateAsync({
                    path: {
                        person_id: personId
                    },
                    body: payload
                });
                patchOnboardingRequirements({
                    data: {
                        persons_documents: personDocuments.map((person)=>person.id === personId ? enrichFieldsByValues(person, _object_spread$g({
                                id
                            }, payload)) : person)
                    }
                });
                disableEditMode();
            })()),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingSubTitle, {
                    children: `${person.first_name} ${person.last_name}`
                })
            }),
            checkValue('verification_document_front') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: "verification_document_front",
                    label: i18n._({
                        id: "ttScXi"
                    }),
                    fileType: 'identity_documents',
                    description: descriptions === null || descriptions === void 0 ? void 0 : descriptions.verification
                })
            }),
            checkValue('verification_document_back') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    name: "verification_document_back",
                    control: control,
                    label: i18n._({
                        id: "GpShIE"
                    }),
                    fileType: 'identity_documents',
                    description: descriptions === null || descriptions === void 0 ? void 0 : descriptions.verification
                })
            }),
            checkValue('additional_verification_document_front') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: "additional_verification_document_back",
                    label: i18n._({
                        id: "WUbvJS"
                    }),
                    fileType: 'additional_identity_documents',
                    description: descriptions === null || descriptions === void 0 ? void 0 : descriptions.additional_verification
                })
            }),
            checkValue('additional_verification_document_back') && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFile, {
                    control: control,
                    name: "additional_verification_document_back",
                    label: i18n._({
                        id: "GmBHgL"
                    }),
                    fileType: 'additional_identity_documents',
                    description: descriptions === null || descriptions === void 0 ? void 0 : descriptions.additional_verification
                })
            })
        ]
    });
};

const OnboardingPersonListItem = ({ person: { first_name, last_name, email }, deleteButton })=>/*#__PURE__*/ jsxRuntime.jsxs(StyledPerson, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(StyledPersonBio, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        children: /*#__PURE__*/ jsxRuntime.jsx("b", {
                            children: `${first_name.value} ${last_name.value}`
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body2",
                        children: email.value
                    })
                ]
            }),
            deleteButton
        ]
    });
const StyledPerson = material.styled(material.Box)`
  display: flex;
  justify-content: space-between;
  color: ${({ theme })=>theme.typography.body2.color};
  border-radius: ${({ theme })=>theme.spacing(1)};
  background-color: ${'rgba(36, 111, 255, 0.04)'};
  padding: ${({ theme })=>theme.spacing(2)};
  align-items: center;
`;
const StyledPersonBio = material.styled(material.Box)`
  display: flex;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(0.5)};
`;

function _define_property$f(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$f(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$f(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$a(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$a(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$a(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const OnboardingPersonMenu = ({ title, children, disabled, variant })=>{
    const { menuProps, buttonProps } = useMenuButton();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.Button, _object_spread_props$a(_object_spread$f({}, buttonProps), {
                variant: variant,
                color: "primary",
                disabled: disabled,
                children: title
            })),
            /*#__PURE__*/ jsxRuntime.jsx(material.Menu, _object_spread_props$a(_object_spread$f({}, menuProps), {
                anchorOrigin: {
                    vertical: 'bottom',
                    horizontal: 'center'
                },
                transformOrigin: {
                    vertical: 'top',
                    horizontal: 'center'
                },
                slotProps: {
                    paper: {
                        elevation: 0,
                        sx: {
                            overflow: 'visible',
                            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',
                            mt: 1.5,
                            transform: 'translateX(-35%) !important',
                            '&:before': {
                                content: '""',
                                display: 'block',
                                position: 'absolute',
                                top: 0,
                                right: 14,
                                width: 10,
                                height: 10,
                                bgcolor: 'background.paper',
                                transform: 'translateY(-50%) rotate(45deg)',
                                zIndex: 0
                            }
                        }
                    }
                },
                children: children
            }))
        ]
    });
};

function _define_property$e(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$e(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$e(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$9(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$9(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$9(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const OnboardingPersonList = ()=>{
    const { i18n } = react.useLingui();
    const { currentRequirement, enablePersonEditMode } = useOnboardingRequirementsContext();
    const { isPending, shouldRenderPersonList, shouldRenderMenu, personsWithRequirement, personsWithoutRequirement, updatePersonRelationship, updateOrganizationRequirements, form: { methods } } = useOnboardingPersonList();
    if (!currentRequirement) return null;
    const title = shouldRenderPersonList ? getFillListTitle(currentRequirement, i18n) : getEmptyListTitle(currentRequirement, i18n);
    const { handleSubmit } = methods;
    return /*#__PURE__*/ jsxRuntime.jsx(reactHookForm.FormProvider, _object_spread_props$9(_object_spread$e({}, methods), {
        children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingForm, {
            onSubmit: handleSubmit(updateOrganizationRequirements),
            actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {}),
            children: /*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                        variant: "body1",
                        children: getDescription$1(currentRequirement, i18n)
                    }),
                    shouldRenderPersonList && /*#__PURE__*/ jsxRuntime.jsx(StyledPersonList, {
                        children: personsWithRequirement.map((person)=>{
                            const isRepresentative = isExecutives(currentRequirement) && person.relationship.representative;
                            return /*#__PURE__*/ jsxRuntime.jsx(OnboardingPersonListItem, {
                                person: person,
                                deleteButton: /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
                                    arrow: true,
                                    title: isRepresentative && i18n._({
                                        id: "wo/hLg"
                                    }),
                                    children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                                            "aria-label": i18n._({
                                                id: "XheobN"
                                            }),
                                            disabled: isPending || isRepresentative,
                                            onClick: ()=>updatePersonRelationship(person.id, false),
                                            children: /*#__PURE__*/ jsxRuntime.jsx(DeleteIcon__default$1.default, {})
                                        })
                                    })
                                })
                            }, person.id);
                        })
                    }),
                    shouldRenderMenu && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingPersonMenu, {
                        disabled: isPending,
                        title: title,
                        variant: 'outlined',
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                onClick: ()=>enablePersonEditMode(PERSON_CREATION),
                                children: i18n._({
                                    id: "eYN2mT"
                                })
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx(material.Divider, {}),
                            /*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                disabled: true,
                                children: i18n._({
                                    id: "c65HJI"
                                })
                            }),
                            personsWithoutRequirement.map(({ id, first_name, last_name })=>/*#__PURE__*/ jsxRuntime.jsx(material.MenuItem, {
                                    onClick: ()=>updatePersonRelationship(id, true),
                                    children: `${first_name.value} ${last_name.value}`
                                }, id))
                        ]
                    }),
                    !shouldRenderMenu && /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        onClick: ()=>enablePersonEditMode(PERSON_CREATION),
                        disabled: isPending,
                        variant: "outlined",
                        color: "primary",
                        children: title
                    })
                ]
            })
        })
    }));
};
const StyledPersonList = material.styled(material.Box)`
  display: flex;
  flex-direction: column;
  gap: ${({ theme })=>theme.spacing(2)};
`;
function getDescription$1(requirement, i18n) {
    if (isDirectors(requirement)) return i18n._({
        id: "MoGyzt"
    });
    if (isOwners(requirement)) return i18n._({
        id: "EaXWba"
    });
    return i18n._({
        id: "SUZ9jI"
    });
}
function getEmptyListTitle(requirement, i18n) {
    if (isDirectors(requirement)) return i18n._({
        id: "nDDLax"
    });
    if (isOwners(requirement)) return i18n._({
        id: "ozrWfa"
    });
    return i18n._({
        id: "m0tWjd"
    });
}
function getFillListTitle(requirement, i18n) {
    if (isDirectors(requirement)) return i18n._({
        id: "M1YrNh"
    });
    if (isOwners(requirement)) return i18n._({
        id: "5ZOPWl"
    });
    return i18n._({
        id: "3RKHmX"
    });
}

const StyledRow = material.styled('tr')`
  display: flex;
`;
const StyledErrorRow = material.styled(StyledRow, {
    shouldForwardProp: (prop)=>prop !== 'error'
})`
  color: ${({ theme, error })=>error ? theme.palette.error.dark : theme.palette.text.primary};
`;
const StyledCell = material.styled('td')`
  padding: ${({ theme })=>theme.spacing(1.5)};
  border-bottom: 1px solid ${({ theme })=>theme.palette.divider};

  tr:last-child & {
    border-bottom: none;
  }
`;
const StyledLabel = material.styled(StyledCell)`
  width: 100%;
`;
const StyledErrorCell = material.styled(StyledCell)`
  padding: ${({ theme })=>theme.spacing(0.75)};
  width: 100%;
`;
const StyledValue = material.styled(StyledCell)`
  width: 60%;
  word-break: break-all;
`;
const StyledKey = material.styled(StyledCell)`
  width: 40%;
  color: ${({ theme })=>theme.palette.text.secondary};
`;
const StyledErrorValue = material.styled('div')`
  padding: ${({ theme })=>theme.spacing(1)};
  border-radius: 4px;
  width: 100%;
  word-break: break-all;
  background-color: ${({ theme })=>theme.palette.mode === 'dark' ? theme.palette.error.light : colors.red[50]};
`;
const StyledTable = material.styled('table')`
  border: 1px solid ${({ theme })=>theme.palette.divider};
  border-radius: 8px;
  table-layout: fixed;
  border-spacing: 0;
`;
const OnboardingViewTable = ({ children })=>/*#__PURE__*/ jsxRuntime.jsx(StyledTable, {
        children: /*#__PURE__*/ jsxRuntime.jsx("tbody", {
            children: children
        })
    });
const OnboardingViewLabel = ({ children })=>/*#__PURE__*/ jsxRuntime.jsx(StyledRow, {
        children: /*#__PURE__*/ jsxRuntime.jsx(StyledLabel, {
            colSpan: 2,
            children: children
        })
    });
const OnboardingViewRow = ({ label, field })=>{
    var _field_error;
    if (!field || !field.value) return null;
    const errorMessage = (_field_error = field.error) === null || _field_error === void 0 ? void 0 : _field_error.message;
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs(StyledErrorRow, {
                error: !!errorMessage,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(StyledKey, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: label
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(StyledValue, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: field.value
                        })
                    })
                ]
            }),
            errorMessage && /*#__PURE__*/ jsxRuntime.jsx(StyledErrorRow, {
                error: !!errorMessage,
                children: /*#__PURE__*/ jsxRuntime.jsx(StyledErrorCell, {
                    children: /*#__PURE__*/ jsxRuntime.jsx(StyledErrorValue, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: errorMessage
                        })
                    })
                })
            })
        ]
    });
};

function OnboardingAddressView({ country, line1, line2, city, state, postal_code }) {
    const { i18n } = react.useLingui();
    const countryField = {
        required: !!(country === null || country === void 0 ? void 0 : country.required),
        value: (country === null || country === void 0 ? void 0 : country.value) ? i18n._({
            id: "J/hVSQ",
            values: {
                0: getRegionName(country === null || country === void 0 ? void 0 : country.value)
            }
        }) : '',
        error: country === null || country === void 0 ? void 0 : country.error
    };
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "JNCzPW"
                }),
                field: countryField
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "DgvTYe"
                }),
                field: line1
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "cXOw12"
                }),
                field: line2
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "3wV73y"
                }),
                field: city
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "RS0o7b"
                }),
                field: state
            }),
            /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                label: i18n._({
                    id: "U4aiMW"
                }),
                field: postal_code
            })
        ]
    });
}

function _define_property$d(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$d(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$d(target, key, source[key]);
        });
    }
    return target;
}
const StyledRelationship = material.styled('p')`
  margin: -8px 0;
  font-size: 15px;
`;
function OnboardingPersonView({ first_name, last_name, email, phone, date_of_birth, id_number, address, relationship, emptyFields }) {
    var _address_country;
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            emptyFields && (emptyFields === null || emptyFields === void 0 ? void 0 : emptyFields.length) > 0 && /*#__PURE__*/ jsxRuntime.jsxs(material.Typography, {
                color: "error",
                children: [
                    i18n._({
                        id: "WNVNlc"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("ul", {
                        children: emptyFields.map((field)=>/*#__PURE__*/ jsxRuntime.jsx("li", {
                                children: field
                            }, field))
                    })
                ]
            }),
            relationship && /*#__PURE__*/ jsxRuntime.jsx(StyledRelationship, {
                children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                    variant: "body2",
                    children: relationshipToLabel(relationship, i18n)
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(OnboardingViewTable, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "V1EGGU"
                        }),
                        field: first_name
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "1ZaQUH"
                        }),
                        field: last_name
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "qMgKul"
                        }),
                        field: relationship === null || relationship === void 0 ? void 0 : relationship.title
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "ATGYL1"
                        }),
                        field: email
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "ZuLy43"
                        }),
                        field: phone
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "Dh+FIh"
                        }),
                        field: date_of_birth
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: i18n._({
                            id: "cCdqpN"
                        }),
                        field: relationship.percent_ownership
                    })
                ]
            }),
            address && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingViewTable, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewLabel, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: i18n._({
                                id: "Du6bPw"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingAddressView, _object_spread$d({}, address))
                ]
            }),
            Boolean(id_number === null || id_number === void 0 ? void 0 : id_number.value) && /*#__PURE__*/ jsxRuntime.jsxs(OnboardingViewTable, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewLabel, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(material.Typography, {
                            variant: "body2",
                            children: i18n._({
                                id: "he73TN"
                            })
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(OnboardingViewRow, {
                        label: getIdentificationLabel(i18n, address === null || address === void 0 ? void 0 : (_address_country = address.country) === null || _address_country === void 0 ? void 0 : _address_country.value),
                        field: id_number
                    })
                ]
            })
        ]
    });
}

function _define_property$c(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$c(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$c(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$8(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$8(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$8(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const OnboardingPersonsReview = ()=>{
    const { i18n } = react.useLingui();
    const { enablePersonEditMode } = useOnboardingRequirementsContext();
    const { personsWithErrors, submitPersonsReview, form: { methods: { handleSubmit } } } = useOnboardingPersonList();
    return /*#__PURE__*/ jsxRuntime.jsxs(OnboardingForm, {
        onSubmit: handleSubmit(submitPersonsReview),
        actions: /*#__PURE__*/ jsxRuntime.jsx(OnboardingFormActions, {}),
        children: [
            personsWithErrors.map((person)=>/*#__PURE__*/ jsxRuntime.jsxs(OnboardingStepContent, {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(OnboardingSubTitle, {
                            action: /*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                                variant: "text",
                                onClick: ()=>{
                                    enablePersonEditMode(person.id);
                                },
                                children: i18n._({
                                    id: "ePK91l"
                                })
                            }),
                            children: `${person.first_name.value} ${person.last_name.value}`
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(OnboardingPersonView, _object_spread_props$8(_object_spread$c({}, person), {
                            emptyFields: findEmptyRequiredFields(person)
                        }))
                    ]
                }, person.id)),
            personsWithErrors.length === 0 && /*#__PURE__*/ jsxRuntime.jsx(OnboardingStepContent, {
                children: i18n._({
                    id: "Z7ZKvj"
                })
            })
        ]
    });
};

function _define_property$b(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$b(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$b(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$2(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$2(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$2(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function OnboardingContent(_param = {}) {
    var { onComplete, onContinue, showContinueButton } = _param, restProps = _object_without_properties$2(_param, [
        "onComplete",
        "onContinue",
        "showContinueButton"
    ]);
    const { i18n } = react.useLingui();
    const { currentRequirement, personId, onboardingCompleted } = useOnboardingRequirementsContext();
    const { isLoading, error } = useOnboardingRequirementsData();
    if (onboardingCompleted) {
        return /*#__PURE__*/ jsxRuntime.jsx(OnboardingCompleted, {
            onComplete: onComplete,
            onContinue: onContinue,
            showContinueButton: showContinueButton
        });
    }
    if (isLoading || !currentRequirement) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.LinearProgress, {});
    }
    const Step = getComponent(currentRequirement, personId);
    if (!Step) return null;
    const stepProps = getStepProps(Step, restProps);
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingLayout, {
        title: /*#__PURE__*/ jsxRuntime.jsx(OnboardingTitle, {
            title: getTitle(currentRequirement, personId, i18n),
            description: getDescription(currentRequirement, personId, i18n)
        }),
        content: error ? /*#__PURE__*/ jsxRuntime.jsx(material.Alert, {
            icon: false,
            severity: "error",
            children: getAPIErrorMessage(i18n, error)
        }) : /*#__PURE__*/ jsxRuntime.jsx(Step, _object_spread$b({}, stepProps))
    });
}
const getTitle = (requirement, personId, i18n)=>{
    if (isCreatingPerson(personId)) {
        if (isDirectors(requirement)) return i18n._({
            id: "nDDLax"
        });
        if (isOwners(requirement)) return i18n._({
            id: "rdr/lC"
        });
        if (isExecutives(requirement)) return i18n._({
            id: "XGymvz"
        });
        return i18n._({
            id: "zvKydJ"
        });
    }
    if (isPersonsDocuments(requirement)) {
        if (isEditingPerson(personId)) return i18n._({
            id: "hWTSIp"
        });
        return i18n._({
            id: "zZS+i1"
        });
    }
    if (isEditingPerson(personId)) return i18n._({
        id: "kpCS0V"
    });
    if (isEntity(requirement)) return i18n._({
        id: "D6nVvu"
    });
    if (isRepresentative(requirement)) return i18n._({
        id: "TvsoUX"
    });
    if (isOwners(requirement)) return i18n._({
        id: "+xr0Re"
    });
    if (isDirectors(requirement)) return i18n._({
        id: "jFvv1W"
    });
    if (isExecutives(requirement)) return i18n._({
        id: "x9SxJC"
    });
    if (isBankAccount(requirement)) return i18n._({
        id: "jp7EVM"
    });
    if (isBusinessProfile(requirement)) return i18n._({
        id: "f/l1S2"
    });
    if (isPersons(requirement)) return i18n._({
        id: "qapYmX"
    });
    if (isTosAcceptance(requirement)) return i18n._({
        id: "PrLJUa"
    });
    if (isOwnershipDeclaration(requirement)) return i18n._({
        id: "PrLJUa"
    });
    if (isEntityDocuments(requirement)) return i18n._({
        id: "lmybGC"
    });
    throw new Error(`Unknown step title ${JSON.stringify(requirement)}`);
};
const getDescription = (requirement, personId, i18n)=>{
    if (isCreatingPerson(personId)) {
        if (isDirectors(requirement)) return i18n._({
            id: "Gj7rFo"
        });
        if (isOwners(requirement)) return i18n._({
            id: "/HA4nr"
        });
        if (isExecutives(requirement)) return i18n._({
            id: "F8bH9h"
        });
        return i18n._({
            id: "a8A+R4"
        });
    }
    if (isPersonsDocuments(requirement)) {
        if (isEditingPerson(personId)) return i18n._({
            id: "SV2ROL"
        });
        return i18n._({
            id: "SV2ROL"
        });
    }
    if (isEditingPerson(personId)) return '';
    if (isEntity(requirement)) return i18n._({
        id: "oaOuCy"
    });
    if (isRepresentative(requirement)) return i18n._({
        id: "gIFcgb"
    });
    if (isOwners(requirement)) return i18n._({
        id: "mP5mj1"
    });
    if (isDirectors(requirement)) return i18n._({
        id: "4nFLJR"
    });
    if (isExecutives(requirement)) return i18n._({
        id: "fQJFcz"
    });
    if (isBankAccount(requirement)) return i18n._({
        id: "1VxwdW"
    });
    if (isBusinessProfile(requirement)) return i18n._({
        id: "OkbY/k"
    });
    if (isPersons(requirement)) return i18n._({
        id: "rOFGja"
    });
    if (isTosAcceptance(requirement)) return i18n._({
        id: "6pF/vl"
    });
    if (isOwnershipDeclaration(requirement)) return i18n._({
        id: "6pF/vl"
    });
    if (isEntityDocuments(requirement)) return i18n._({
        id: "SV2ROL"
    });
    throw new Error(`Unknown step description ${JSON.stringify(requirement)}`);
};
const getComponent = (requirement, personId)=>{
    if (isEntity(requirement)) return OnboardingEntity;
    if (isBusinessProfile(requirement)) return OnboardingBusinessProfile;
    if (isPersonsDocuments(requirement)) {
        if (isEditingPerson(personId)) return OnboardingPersonDocuments;
        return OnboardingPersonDocumentList;
    }
    if (isPersonEditingEnabled(personId)) return OnboardingPerson;
    if (isRepresentative(requirement)) return OnboardingPerson;
    if (isOwners(requirement)) return OnboardingPersonList;
    if (isDirectors(requirement)) return OnboardingPersonList;
    if (isExecutives(requirement)) return OnboardingPersonList;
    if (isPersons(requirement)) return OnboardingPersonsReview;
    if (isBankAccount(requirement)) return OnboardingBankAccount;
    if (isTosAcceptance(requirement)) return OnboardingAgreements;
    if (isOwnershipDeclaration(requirement)) return OnboardingAgreements;
    if (isEntityDocuments(requirement)) return OnboardingEntityDocuments;
    throw new Error(`Unknown step component ${JSON.stringify(requirement)}`);
};
const getStepProps = (StepComponent, restProps)=>{
    if (StepComponent === OnboardingBankAccount) {
        return {
            allowedCurrencies: restProps.allowedCurrencies,
            allowedCountries: restProps.allowedCountries
        };
    }
    return {};
};

function _define_property$a(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$a(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$a(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$7(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$7(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$7(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
/**
 * Onboarding component
 * @description Onboarding component.
 */ const Onboarding = (props)=>{
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingComponent, _object_spread$a({}, props))
    });
};
const OnboardingComponent = (props)=>{
    const { isLoading, error } = useOnboardingRequirementsData();
    const { i18n } = react.useLingui();
    const { componentSettings } = useMoniteContext();
    const { onComplete: propsOnComplete } = props;
    const { onPaymentsOnboardingComplete, onComplete: settingsOnComplete } = componentSettings.onboarding;
    const handleOnboardingComplete = React.useCallback((completedEntityId)=>{
        // We call onComplete from the props,
        // onPaymentsOnboardingComplete from the component settings, and onComplete from the component settings
        // TODO: We should probably deprecate onPaymentsOnboardingComplete and use onComplete instead
        propsOnComplete === null || propsOnComplete === void 0 ? void 0 : propsOnComplete(completedEntityId);
        onPaymentsOnboardingComplete === null || onPaymentsOnboardingComplete === void 0 ? void 0 : onPaymentsOnboardingComplete(completedEntityId);
        settingsOnComplete === null || settingsOnComplete === void 0 ? void 0 : settingsOnComplete(completedEntityId);
    }, [
        propsOnComplete,
        onPaymentsOnboardingComplete,
        settingsOnComplete
    ]);
    if (error) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            children: getAPIErrorMessage(i18n, error)
        });
    }
    if (isLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(material.LinearProgress, {});
    }
    return /*#__PURE__*/ jsxRuntime.jsx(OnboardingContextProvider, {
        children: /*#__PURE__*/ jsxRuntime.jsx(OnboardingContent, _object_spread_props$7(_object_spread$a({}, componentSettings.onboarding, props), {
            onComplete: handleOnboardingComplete
        }))
    });
};

function _define_property$9(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$9(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$9(target, key, source[key]);
        });
    }
    return target;
}
const ConfirmDeleteModal = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(ConfirmDeleteModalBase, _object_spread$9({}, props))
    });
const ConfirmDeleteModalBase = ({ tag, onClose, onDelete, modalOpened })=>{
    const { i18n } = react.useLingui();
    const tag_id = tag === null || tag === void 0 ? void 0 : tag.id;
    const { api, queryClient } = useMoniteContext();
    const deleteTagMutation = api.tags.deleteTagsId.useMutation({
        path: {
            tag_id: tag_id !== null && tag_id !== void 0 ? tag_id : ''
        }
    }, {
        onSuccess: ()=>{
            api.tags.getTagsId.removeQueries({
                parameters: {
                    path: {
                        tag_id
                    }
                }
            }, queryClient);
            return api.tags.getTags.invalidateQueries(queryClient);
        }
    });
    const handleDelete = ()=>{
        deleteTagMutation.mutate(undefined, {
            onSuccess: ()=>{
                reactHotToast.toast.success(i18n._({
                    id: "z03j6r",
                    values: {
                        0: tag.name
                    }
                }));
                onClose === null || onClose === void 0 ? void 0 : onClose();
                onDelete === null || onDelete === void 0 ? void 0 : onDelete(tag.id);
            }
        });
    };
    return /*#__PURE__*/ jsxRuntime.jsx(ConfirmationModal, {
        open: modalOpened,
        title: i18n._({
            id: "T2bD3m",
            values: {
                0: tag.name
            }
        }),
        message: i18n._({
            id: "qaVlVz"
        }),
        confirmLabel: i18n._({
            id: "cnGeoo"
        }),
        cancelLabel: i18n._({
            id: "dEgA5A"
        }),
        onClose: onClose,
        onConfirm: handleDelete,
        isLoading: deleteTagMutation.isPending
    });
};

function _define_property$8(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$8(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$8(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$6(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$6(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$6(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const TagsTable = (props)=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(TagsTableBase, _object_spread$8({}, props))
    });
const TagsTableBase = ({ onChangeSort: onChangeSortCallback, showCreationModal })=>{
    const { i18n } = react.useLingui();
    const { api, locale, componentSettings } = useMoniteContext();
    const [currentPaginationToken, setCurrentPaginationToken] = React.useState(null);
    const [pageSize, setPageSize] = React.useState(componentSettings.tags.pageSizeOptions[0]);
    const [selectedTag, setSelectedTag] = React.useState(undefined);
    const [sortModel, setSortModels] = React.useState({
        field: 'created_at',
        sort: 'desc'
    });
    const [editModalOpened, setEditModalOpened] = React.useState(false);
    const [deleteModalOpened, setDeleteModalOpened] = React.useState(false);
    const { tagsWithKeywords } = useTags({});
    const openEditModal = React.useCallback(()=>{
        setEditModalOpened(true);
    }, []);
    const openDeleteModal = React.useCallback(()=>{
        setDeleteModalOpened(true);
    }, []);
    const closeEditModal = React.useCallback(()=>{
        setEditModalOpened(false);
    }, []);
    const closeDeleteModal = React.useCallback(()=>{
        setSelectedTag(undefined);
        setEditModalOpened(false);
        setDeleteModalOpened(false);
    }, []);
    const { data: tags, isLoading, isError, error, refetch } = api.tags.getTags.useQuery({
        query: {
            sort: sortModel === null || sortModel === void 0 ? void 0 : sortModel.field,
            order: sortModel === null || sortModel === void 0 ? void 0 : sortModel.sort,
            limit: pageSize,
            pagination_token: currentPaginationToken !== null && currentPaginationToken !== void 0 ? currentPaginationToken : undefined
        }
    });
    //TODO: Remove this error handling and replace with proper error handling
    React.useEffect(()=>{
        if (isError) {
            reactHotToast.toast.error(getAPIErrorMessage(i18n, error));
        }
    }, [
        isError,
        error,
        i18n
    ]);
    React.useEffect(()=>{
        if (currentPaginationToken && (tags === null || tags === void 0 ? void 0 : tags.data.length) === 0) {
            setCurrentPaginationToken(null);
        }
    }, [
        currentPaginationToken,
        tags
    ]);
    const onChangeSort = (model)=>{
        setSortModels(model[0]);
        setCurrentPaginationToken(null);
        onChangeSortCallback === null || onChangeSortCallback === void 0 ? void 0 : onChangeSortCallback(model[0]);
    };
    const { data: user } = useEntityUserByAuthToken();
    const { data: isDeleteAllowed } = useIsActionAllowed({
        method: 'tag',
        action: 'delete',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    var _tags_data;
    const tagsList = ((_tags_data = tags === null || tags === void 0 ? void 0 : tags.data) !== null && _tags_data !== void 0 ? _tags_data : []).map((tag)=>{
        var _tagsWithKeywords_tag_id;
        return _object_spread_props$6(_object_spread$8({}, tag), {
            keywords: (_tagsWithKeywords_tag_id = tagsWithKeywords[tag.id]) === null || _tagsWithKeywords_tag_id === void 0 ? void 0 : _tagsWithKeywords_tag_id.join(', ')
        });
    });
    const columns = React.useMemo(()=>{
        return [
            {
                field: 'name',
                headerName: i18n._({
                    id: "6YtxFj"
                }),
                sortable: false,
                flex: 1
            },
            {
                field: 'category',
                headerName: i18n._({
                    id: "K7tIrx"
                }),
                sortable: false,
                flex: 1,
                valueFormatter: (value)=>getTagCategoryLabel(value, i18n)
            },
            {
                field: 'keywords',
                headerName: i18n._({
                    id: "/n/HCO"
                }),
                sortable: false,
                flex: 1
            },
            {
                field: 'created_at',
                headerName: i18n._({
                    id: "YeUQpx"
                }),
                flex: 0.5,
                valueFormatter: (value)=>i18n.date(value, locale.dateFormat)
            },
            {
                field: 'updated_at',
                headerName: i18n._({
                    id: "4StVS4"
                }),
                flex: 0.5,
                valueFormatter: (value)=>i18n.date(value, locale.dateFormat)
            },
            {
                field: 'created_by_entity_user_id',
                headerName: i18n._({
                    id: "NCIYDF"
                }),
                flex: 0.6,
                sortable: false,
                renderCell: (params)=>params.value ? /*#__PURE__*/ jsxRuntime.jsx(UserCell$1, {
                        id: params.value
                    }) : null
            }
        ];
    }, [
        locale.dateFormat,
        i18n
    ]);
    if (!isLoading && (tags === null || tags === void 0 ? void 0 : tags.data.length) === 0) {
        return /*#__PURE__*/ jsxRuntime.jsx(DataGridEmptyState, {
            title: i18n._({
                id: "P3d5qF"
            }),
            descriptionLine1: i18n._({
                id: "Bf6oDC"
            }),
            descriptionLine2: i18n._({
                id: "Bqt0mr"
            }),
            actionButtonLabel: i18n._({
                id: "/1hd7s"
            }),
            actionOptions: [
                i18n._({
                    id: "UL8A9w"
                })
            ],
            onAction: (action)=>{
                if (action === i18n._({
                    id: "UL8A9w"
                })) {
                    showCreationModal === null || showCreationModal === void 0 ? void 0 : showCreationModal();
                }
            },
            type: "no-data"
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        className: ScopedCssBaselineContainerClassName,
        sx: {
            display: 'flex',
            flexDirection: 'column',
            overflow: 'hidden',
            height: 'inherit',
            minHeight: '500px'
        },
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(xDataGrid.DataGrid, {
                initialState: {
                    sorting: {
                        sortModel: [
                            sortModel
                        ]
                    }
                },
                rowSelection: false,
                onRowClick: (params)=>{
                    if (!hasSelectedText()) {
                        setSelectedTag(params.row);
                        openEditModal();
                    }
                },
                disableColumnFilter: true,
                loading: isLoading,
                onSortModelChange: onChangeSort,
                slots: {
                    pagination: ()=>/*#__PURE__*/ jsxRuntime.jsx(TablePagination, {
                            pageSizeOptions: componentSettings.tags.pageSizeOptions,
                            prevPage: tags === null || tags === void 0 ? void 0 : tags.prev_pagination_token,
                            nextPage: tags === null || tags === void 0 ? void 0 : tags.next_pagination_token,
                            paginationModel: {
                                pageSize,
                                page: currentPaginationToken
                            },
                            onPaginationModelChange: ({ page, pageSize })=>{
                                setPageSize(pageSize);
                                setCurrentPaginationToken(page);
                            }
                        }),
                    noRowsOverlay: ()=>/*#__PURE__*/ jsxRuntime.jsx(GetNoRowsOverlay, {
                            isLoading: isLoading,
                            dataLength: (tags === null || tags === void 0 ? void 0 : tags.data.length) || 0,
                            isFiltering: false,
                            isSearching: false,
                            isError: isError,
                            onCreate: showCreationModal,
                            refetch: refetch,
                            entityName: i18n._({
                                id: "OYHzN1"
                            }),
                            actionButtonLabel: i18n._({
                                id: "/1hd7s"
                            }),
                            actionOptions: [
                                i18n._({
                                    id: "UL8A9w"
                                })
                            ],
                            type: "no-data"
                        })
                },
                columns: columns,
                rows: tagsList
            }),
            /*#__PURE__*/ jsxRuntime.jsx(TagFormModal, {
                tag: selectedTag,
                open: editModalOpened,
                onClose: closeEditModal,
                isDeleteAllowed: isDeleteAllowed !== null && isDeleteAllowed !== void 0 ? isDeleteAllowed : false,
                onDelete: (tag)=>{
                    if (isDeleteAllowed) {
                        setSelectedTag(tag);
                        openDeleteModal();
                    }
                }
            }),
            selectedTag && /*#__PURE__*/ jsxRuntime.jsx(ConfirmDeleteModal, {
                tag: selectedTag,
                modalOpened: deleteModalOpened,
                onClose: closeDeleteModal
            })
        ]
    });
};

const Tags = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(TagsBase, {})
    });
const TagsBase = ()=>{
    const { i18n } = react.useLingui();
    const [creationModalOpened, setCreationModalOpened] = React.useState(false);
    const showCreationModal = React.useCallback(()=>{
        setCreationModalOpened(true);
    }, []);
    const hideCreationModal = React.useCallback(()=>{
        setCreationModalOpened(false);
    }, []);
    const { data: user } = useEntityUserByAuthToken();
    const { data: isCreateAllowed, isLoading: isCreateAllowedLoading } = useIsActionAllowed({
        method: 'tag',
        action: 'create',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isReadAllowed, isLoading: isReadAllowedLoading } = useIsActionAllowed({
        method: 'tag',
        action: 'read',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    const { data: isDeleteAllowed } = useIsActionAllowed({
        method: 'tag',
        action: 'delete',
        entityUserId: user === null || user === void 0 ? void 0 : user.id
    });
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                    children: [
                        i18n._({
                            id: "OYHzN1"
                        }),
                        (isReadAllowedLoading || isCreateAllowedLoading) && /*#__PURE__*/ jsxRuntime.jsx(material.CircularProgress, {
                            size: "0.7em",
                            color: "secondary",
                            sx: {
                                ml: 1
                            }
                        })
                    ]
                }),
                extra: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                    size: "lg",
                    disabled: !isCreateAllowed,
                    onClick: showCreationModal,
                    children: i18n._({
                        id: "BOqY23"
                    })
                })
            }),
            !isReadAllowed && !isReadAllowedLoading && /*#__PURE__*/ jsxRuntime.jsx(AccessRestriction, {}),
            isReadAllowed && /*#__PURE__*/ jsxRuntime.jsx(TagsTable, {
                showCreationModal: showCreationModal
            }),
            /*#__PURE__*/ jsxRuntime.jsx(TagFormModal, {
                open: creationModalOpened,
                onClose: hideCreationModal,
                isDeleteAllowed: isDeleteAllowed !== null && isDeleteAllowed !== void 0 ? isDeleteAllowed : false
            })
        ]
    });
};

function Integrations() {
    return /*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(IntegrationsComponent, {})
    });
}
function IntegrationsComponent() {
    const { i18n } = react.useLingui();
    return /*#__PURE__*/ jsxRuntime.jsxs(material.Box, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PageHeader, {
                title: /*#__PURE__*/ jsxRuntime.jsx(jsxRuntime.Fragment, {
                    children: i18n._({
                        id: "nbfdhU"
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(material.Box, {
                sx: {
                    display: 'grid',
                    gridTemplateColumns: 'minmax(360px, 480px) minmax(360px, 480px)',
                    gap: 2
                },
                children: /*#__PURE__*/ jsxRuntime.jsx(FinanceIntegrationCard, {})
            })
        ]
    });
}

function _define_property$7(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$7(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$7(target, key, source[key]);
        });
    }
    return target;
}
const DocumentDesign = (props)=>/*#__PURE__*/ jsxRuntime.jsx(TemplateSettings, _object_spread$7({}, props));

const AISidebarWrapper = ({ children })=>/*#__PURE__*/ jsxRuntime.jsx("div", {
        className: cn('mtw:h-full mtw:w-[300px] mtw:pt-6', 'mtw:border-r mtw:border-sidebar-border mtw:border-solid'),
        children: children
    });

function _define_property$6(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$6(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$6(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$5(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$5(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$5(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const useAIAssistantOptions = (options)=>{
    return react$4.useChat(_object_spread_props$5(_object_spread$6({}, options), {
        experimental_prepareRequestBody: ({ messages })=>{
            const { content } = messages[messages.length - 1];
            return {
                text_prompt: content,
                attachment: null
            };
        }
    }));
};

function _define_property$5(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$5(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$5(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$4(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$4(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$4(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const createConversationGroups = (conversations, i18)=>{
    const conversationObject = conversations.reduce((groups, conversation)=>{
        const { created_at: createdAt } = conversation;
        // eslint-disable-next-line lingui/no-unlocalized-strings
        const monthYear = dateFns.format(new Date(createdAt), 'MMMM yyyy');
        const thisMonth = dateFns.isThisMonth(new Date(createdAt));
        const key = thisMonth ? i18._({
            id: "oW3yYY"
        }) : monthYear;
        if (groups[key]) {
            return _object_spread_props$4(_object_spread$5({}, groups), {
                [key]: [
                    ...groups[key],
                    conversation
                ]
            });
        }
        return _object_spread_props$4(_object_spread$5({}, groups), {
            [key]: [
                conversation
            ]
        });
    }, {}) || {};
    return Object.entries(conversationObject).map(([key, value])=>({
            title: key,
            conversations: value
        })) || [];
};
const setCursorAtTheEnd = (element)=>{
    const range = document.createRange();
    const selection = window.getSelection();
    range.selectNodeContents(element);
    range.collapse(false);
    selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();
    selection === null || selection === void 0 ? void 0 : selection.addRange(range);
    element.focus();
};
const removeTags = (str)=>{
    if (!str) {
        return '';
    }
    return str.replace(/(<([^>]+)>)/gi, ' ');
};
const splitByTags = (text)=>{
    const regex = /<([a-zA-Z0-9_-]+)>([\s\S]*?)<\/\1>/g;
    const result = [];
    let lastIndex = 0;
    let match;
    let id = 1;
    while((match = regex.exec(text)) !== null){
        const [_, tagName, tagContent] = match;
        const matchStart = match.index;
        const matchEnd = regex.lastIndex;
        if (matchStart > lastIndex) {
            const textBefore = text.slice(lastIndex, matchStart).trim();
            if (textBefore) {
                result.push({
                    type: 'text',
                    content: textBefore,
                    id
                });
                id = id + 1;
            }
        }
        let parsedContent = tagContent;
        try {
            parsedContent = JSON.parse(tagContent);
        } catch (_) {
        // continue regardless error
        }
        if (tagName === 'chart') {
            result.push({
                type: tagName,
                content: parsedContent,
                id
            });
        }
        id = id + 1;
        lastIndex = matchEnd;
    }
    if (lastIndex < text.length) {
        const remainingText = text.slice(lastIndex).trim();
        if (remainingText) {
            result.push({
                type: 'text',
                content: remainingText,
                id
            });
        }
    }
    return result;
};
const getChatTotalHeight = ({ isSubmitted, height, isError, isMobile })=>{
    if (isSubmitted) {
        return `${height + 30}px`;
    }
    if (isError) {
        return isMobile ? `${height + 140}px` : `${height + 120}px`;
    }
    return `${height}px`;
};
const fixMarkdownListIndentation = (text)=>{
    return text.replace(/(^|\n)( {3})- /g, '$1    - ');
};
const sanitizeEntityName = (str)=>str.replace(RegExp("[^\\p{L}\\p{N}\\s]", "gu"), '').trim();

function asyncGeneratorStep$3(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$3(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$3(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$3(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property$4(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$4(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$4(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$3(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$3(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$3(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AIAssistantChatContext = /*#__PURE__*/ React.createContext(undefined);
function useAIAssistantChat() {
    const context = React.useContext(AIAssistantChatContext);
    if (!context) {
        throw new Error('useAIAssistantChat must be used within a ChatProvider');
    }
    return context;
}
const AIAssistantChatProvider = ({ children, conversationId, isNewChat, setIsNewChat, initialInput })=>{
    const { apiUrl, fetchToken, api, queryClient, entityId } = useMoniteContext();
    const { data: entity } = useMyEntity();
    const { data: conversation } = api.ai.getAiConversationsId.useQuery({
        path: {
            conversation_id: conversationId
        }
    }, {
        enabled: !isNewChat
    });
    const { messages } = conversation || {};
    const entityName = React.useMemo(()=>{
        const name = entity ? getEntityName(entity) : '';
        return sanitizeEntityName(name);
    }, [
        entity
    ]);
    const values = useAIAssistantOptions({
        id: conversationId,
        fetch: (_, init)=>_async_to_generator$3(function*() {
                const token = yield fetchToken();
                const { access_token: accessToken, token_type: tokenType } = token;
                return fetch(`${apiUrl}/ai/conversations/${conversationId}/messages`, _object_spread_props$3(_object_spread$4({}, init || {}), {
                    method: 'POST',
                    headers: _object_spread_props$3(_object_spread$4({}, init === null || init === void 0 ? void 0 : init.headers), {
                        'x-monite-version': apiVersion,
                        'x-monite-entity-id': entityId,
                        'x-entity-name': entityName,
                        Authorization: `${tokenType} ${accessToken}`
                    })
                }));
            })(),
        initialMessages: messages,
        initialInput,
        onFinish: ()=>_async_to_generator$3(function*() {
                if (!isNewChat) {
                    return;
                }
                yield api.ai.getAiConversationsId.invalidateQueries(queryClient);
                yield api.ai.getAiConversations.invalidateQueries(queryClient);
                setIsNewChat(false);
            })()
    });
    const value = React.useMemo(()=>values, [
        values
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(AIAssistantChatContext.Provider, {
        value: value,
        children: children
    });
};

const AIButtonTooltip = ({ onClick, ariaLabel, children, icon })=>{
    const isMobile = useIsMobile();
    return /*#__PURE__*/ jsxRuntime.jsx(material.Tooltip, {
        hidden: isMobile,
        arrow: true,
        title: children,
        placement: "top",
        slotProps: {
            popper: {
                disablePortal: false
            },
            tooltip: {
                className: 'mtw:!bg-gray-800 mtw:!text-white'
            },
            arrow: {
                className: 'mtw:!text-gray-800'
            }
        },
        children: /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
            "aria-label": ariaLabel,
            onClick: onClick,
            className: "mtw:shrink-0 mtw:!p-0",
            type: "button",
            children: icon
        })
    });
};

const COLORS = [
    '#9999FF',
    '#E3135C',
    '#900838',
    '#FFBB28',
    '#FF8042',
    '#165c03',
    '#153765',
    '#3f027e',
    '#6ddfce',
    '#aa3264'
];
const DATE_FORMATS = [
    'yyyy-MM-dd',
    'yy-MM-dd',
    'dd-MM-yyyy',
    'dd-MM-yy',
    'dd.MM.yyyy',
    'dd.MM.yy',
    'yyyy/MM/dd',
    'yy/MM/dd',
    'dd/MM/yyyy',
    'dd/MM/yy',
    'MM/dd/yyyy',
    'MM/dd/yy'
];
const TIME_FORMATS = [
    '',
    ' HH:mm',
    ' HH:mm',
    ' HH:mm:ss',
    ' HH:mm:ss',
    ' hh:mm:ss aa',
    ' hh:mm aa'
];
const getDefaultPrompts = (i18n)=>[
        {
            id: '1',
            content: i18n._({
                id: "MSIfPx"
            }),
            created_at: '2025-03-10T09:33:53.715Z'
        },
        {
            id: '2',
            content: i18n._({
                id: "erARDd"
            }),
            created_at: '2025-03-10T09:33:53.715Z'
        },
        {
            id: '3',
            content: i18n._({
                id: "HY5rFE"
            }),
            created_at: '2025-03-10T09:33:53.715Z'
        }
    ];
const getFeedbackOptions = (i18n)=>[
        {
            feedback: i18n._({
                id: "Rm37aF"
            })
        },
        {
            feedback: i18n._({
                id: "oEz6gv"
            })
        }
    ];

function asyncGeneratorStep$2(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$2(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$2(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$2(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const FeedbackForm = ({ id, setIsFeedbackFormOpen })=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const { mutateAsync: postFeedbackMessage } = api.ai.postAiMessageFeedbacksCommentary.useMutation();
    const [input, setInput] = React.useState('');
    const [isSuccess, setIsSuccess] = React.useState(false);
    const feedbackOptions = React.useMemo(()=>getFeedbackOptions(i18n), [
        i18n
    ]);
    const handleCloseForm = ()=>{
        setIsFeedbackFormOpen(false);
    };
    const handleSendFeedbackMessage = (comment)=>_async_to_generator$2(function*() {
            yield postFeedbackMessage({
                body: {
                    message_id: id,
                    comment
                }
            });
            setIsSuccess(true);
        })();
    const handleInputValue = (e)=>{
        setInput(e.target.value);
    };
    const handleSubmit = (e)=>_async_to_generator$2(function*() {
            e.preventDefault();
            yield handleSendFeedbackMessage(input);
        })();
    React.useEffect(()=>{
        if (!isSuccess) {
            return;
        }
        const timeoutId = setTimeout(()=>{
            setIsSuccess(false);
            setIsFeedbackFormOpen(false);
        }, 2000);
        return ()=>{
            clearTimeout(timeoutId);
        };
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        isSuccess
    ]);
    if (isSuccess) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: cn('mtw:p-4 mtw:min-h-[110px] mtw:border mtw:border-solid mtw:border-border', 'mtw:flex mtw:items-center mtw:justify-center mtw:rounded-md'),
            children: /*#__PURE__*/ jsxRuntime.jsx("p", {
                className: "mtw:text-sm mtw:text-neutral-30",
                children: i18n._({
                    id: "nhMhRr"
                })
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("form", {
        onSubmit: handleSubmit,
        className: cn('mtw:relative mtw:p-4 mtw:mt-4 mtw:border mtw:border-solid mtw:border-border', 'mtw:rounded-md mtw:flex mtw:flex-col mtw:gap-4'),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(material.IconButton, {
                onClick: handleCloseForm,
                className: cn('mtw:!absolute mtw:!right-2 mtw:!top-2 mtw:!h-4 mtw:!w-4', 'mtw:!border-none mtw:!p-0 mtw:hover:!bg-transparent'),
                children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.X, {})
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("h5", {
                className: "mtw:text-sm mtw:font-normal mtw:text-gray-500",
                children: [
                    i18n._({
                        id: "5N30dV"
                    }),
                    ":"
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:flex mtw:flex-wrap mtw:gap-2",
                children: feedbackOptions.map(({ feedback })=>/*#__PURE__*/ jsxRuntime.jsx(material.Button, {
                        type: "button",
                        onClick: ()=>handleSendFeedbackMessage(feedback),
                        className: cn('mtw:!px-3 mtw:!py-2.5 mtw:!font-normal mtw:!text-sm mtw:!text-inherit', 'mtw:!border mtw:!border-solid mtw:!border-border mtw:!bg-transparent mtw:!font-medium'),
                        variant: "outlined",
                        children: feedback
                    }, feedback))
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: cn('mtw:w-full', 'mtw:border mtw:border-solid mtw:!border-border', 'mtw:!rounded-md mtw:px-3.5 mtw:h-[92px]'),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(material.Input, {
                        value: input,
                        onChange: handleInputValue,
                        placeholder: i18n._({
                            id: "c2fShE"
                        }),
                        className: cn('mtw:w-full mtw:focus-visible:ring-0 mtw:focus-visible:ring-offset-0', 'mtw:border-0 mtw:!text-sm'),
                        slotProps: {
                            input: {
                                className: 'mtw:!px-0'
                            }
                        }
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:flex mtw:justify-end",
                        children: /*#__PURE__*/ jsxRuntime.jsx("button", {
                            className: cn('mtw:shrink-0 mtw:bg-black mtw:h-9 mtw:w-9 mtw:rounded-full', 'mtw:flex mtw:justify-center mtw:items-center mtw:text-end', !input ? 'mtw:cursor-default mtw:bg-gray-500' : 'mtw:cursor-pointer'),
                            disabled: !input,
                            type: "submit",
                            "aria-label": i18n._({
                                id: "6oTsos"
                            }),
                            children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ArrowUp, {
                                className: "mtw:text-white",
                                size: 16
                            })
                        })
                    })
                ]
            })
        ]
    });
};

const AssistantButtons = ({ showActionButtons, id, content })=>{
    const { i18n } = react.useLingui();
    const buttonsContainerRef = React.useRef(null);
    const [isFeedbackFormOpen, setIsFeedbackFormOpen] = React.useState(false);
    const [feedback, setFeedback] = React.useState(null);
    const [isCopied, setIsCopied] = React.useState(false);
    const { api } = useMoniteContext();
    const { mutate: postFeedback } = api.ai.postAiMessageFeedbacks.useMutation();
    const handleCopyToClipboard = (e)=>{
        e.preventDefault();
        if (typeof content === 'undefined') {
            return;
        }
        const text = removeTags(content);
        copy__default.default(text);
        setIsCopied(true);
    };
    const handleGiveFeedback = (feedback)=>{
        postFeedback({
            body: {
                message_id: id,
                action: feedback
            }
        });
    };
    const handleLike = ()=>{
        handleGiveFeedback('like');
        setFeedback('like');
    };
    const handleDislike = ()=>{
        handleGiveFeedback('dislike');
        setFeedback('dislike');
        setIsFeedbackFormOpen(true);
    };
    React.useEffect(()=>{
        if (!isCopied) {
            return;
        }
        const timeoutId = setTimeout(()=>{
            setIsCopied(false);
        }, 3000);
        return ()=>{
            clearTimeout(timeoutId);
        };
    }, [
        isCopied
    ]);
    React.useEffect(()=>{
        if (!isFeedbackFormOpen) {
            return;
        }
        const timeoutId = setTimeout(()=>{
            if (!buttonsContainerRef.current) {
                return;
            }
            buttonsContainerRef.current.scrollIntoView();
        }, 1000);
        return ()=>{
            clearTimeout(timeoutId);
        };
    }, [
        isFeedbackFormOpen
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                ref: buttonsContainerRef,
                className: cn('mtw:flex mtw:items-center mtw:gap-2.5 mtw:invisible', 'mtw:opacity-0 mtw:transition-[opacity] mtw:duration-300 mtw:delay-2500', showActionButtons && 'mtw:visible mtw:opacity-100'),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(AIButtonTooltip, {
                        icon: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Copy, {
                            size: 16,
                            className: "mtw:text-gray-500"
                        }),
                        onClick: handleCopyToClipboard,
                        ariaLabel: i18n._({
                            id: "JE0w0F"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: isCopied ? i18n._({
                                id: "PiH3UR"
                            }) : i18n._({
                                id: "he3ygx"
                            })
                        })
                    }),
                    feedback !== 'dislike' && /*#__PURE__*/ jsxRuntime.jsx(AIButtonTooltip, {
                        icon: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ThumbsUp, {
                            size: 16,
                            className: cn(' mtw:text-gray-500', feedback === 'like' && 'mtw:fill-gray-500')
                        }),
                        onClick: handleLike,
                        ariaLabel: i18n._({
                            id: "3aahr0"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: i18n._({
                                id: "VIfUjY"
                            })
                        })
                    }),
                    feedback !== 'like' && /*#__PURE__*/ jsxRuntime.jsx(AIButtonTooltip, {
                        icon: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ThumbsDown, {
                            size: 16,
                            className: cn('mtw:text-gray-500', feedback === 'dislike' && 'mtw:fill-gray-500')
                        }),
                        onClick: handleDislike,
                        ariaLabel: i18n._({
                            id: "dU3HpG"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx("span", {
                            children: i18n._({
                                id: "if+kEf"
                            })
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: cn('mtw:transition-[height] mtw:ease-in-out mtw:duration-1000 mtw:mt-4 mtw:h-[320px]', !isFeedbackFormOpen && 'mtw:h-0 mtw:overflow-y-hidden'),
                children: /*#__PURE__*/ jsxRuntime.jsx(FeedbackForm, {
                    id: id,
                    setIsFeedbackFormOpen: setIsFeedbackFormOpen
                })
            })
        ]
    });
};

const ChartLegend = ({ payload: labels })=>/*#__PURE__*/ jsxRuntime.jsx("div", {
        className: "mtw:flex mtw:flex-col mtw:justify-start mtw:gap-2 mtw:h-[300px] mtw:overflow-y-auto mtw:[scrollbar-width:thin]",
        children: !!(labels === null || labels === void 0 ? void 0 : labels.length) && labels.map(({ color, value, payload }, index)=>/*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: cn('mtw:flex mtw:items-center mtw:justify-between mtw:rounded mtw:px-2 mtw:py-0.5', 'mtw:border mtw:border-gray-200 mtw:border-solid mtw:shadow-md'),
                children: [
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:items-center  mtw:gap-2 mtw:overflow-hidden",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                style: {
                                    background: color
                                },
                                className: "mtw:w-2 mtw:h-2 mtw:rounded-[2px] mtw:inline-block mtw:shrink-0 "
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: cn('mtw:mx-2 mtw:text-gray-700 mtw:inline-block', 'mtw:text-xs mtw:md:text-xs mtw:truncate'),
                                children: value
                            })
                        ]
                    }),
                    payload && /*#__PURE__*/ jsxRuntime.jsx("span", {
                        children: payload.value
                    })
                ]
            }, `item-${index}`))
    });

const AIPieChart = ({ data, parentWidth })=>{
    const innerRadius = parentWidth > 511 ? 60 : 40;
    return /*#__PURE__*/ jsxRuntime.jsx(recharts.ResponsiveContainer, {
        width: "100%",
        height: "100%",
        children: /*#__PURE__*/ jsxRuntime.jsxs(recharts.PieChart, {
            margin: {
                top: 5,
                right: parentWidth > 383 ? 30 : 5,
                left: parentWidth > 383 ? 20 : 5,
                bottom: 5
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(recharts.Pie, {
                    dataKey: "field_value",
                    data: data,
                    innerRadius: innerRadius,
                    isAnimationActive: false,
                    stroke: "",
                    children: data.map(({ field_name }, index)=>/*#__PURE__*/ jsxRuntime.jsx(recharts.Cell, {
                            name: field_name,
                            fill: COLORS[index % COLORS.length]
                        }, `cell-${index}`))
                }),
                /*#__PURE__*/ jsxRuntime.jsx(recharts.Tooltip, {
                    isAnimationActive: false
                }),
                parentWidth > 383 && /*#__PURE__*/ jsxRuntime.jsx(recharts.Legend, {
                    content: /*#__PURE__*/ jsxRuntime.jsx(ChartLegend, {}),
                    width: parentWidth > 447 ? 200 : 150,
                    verticalAlign: "middle",
                    align: "right"
                })
            ]
        })
    });
};

const BarChartXTick = ({ x = 0, y = 0, payload, textAnchor = 'end', angle })=>{
    const { value = '' } = payload || {};
    return /*#__PURE__*/ jsxRuntime.jsx(recharts.Text, {
        angle: angle,
        x: x,
        y: y,
        textAnchor: textAnchor,
        width: 150,
        maxLines: 1,
        className: "mtw:text-xs",
        children: value
    });
};

const AIBarChart = ({ data, metrics, parentWidth })=>{
    return /*#__PURE__*/ jsxRuntime.jsx(recharts.ResponsiveContainer, {
        width: "100%",
        height: "100%",
        children: /*#__PURE__*/ jsxRuntime.jsxs(recharts.BarChart, {
            data: data,
            margin: {
                top: 5,
                right: parentWidth > 383 ? 30 : 5,
                left: parentWidth > 383 ? 20 : 5,
                bottom: 5
            },
            children: [
                /*#__PURE__*/ jsxRuntime.jsx(recharts.Bar, {
                    name: metrics,
                    dataKey: "field_value",
                    fill: COLORS[0],
                    isAnimationActive: false
                }),
                /*#__PURE__*/ jsxRuntime.jsx(recharts.XAxis, {
                    interval: 0,
                    textAnchor: "end",
                    height: 100,
                    angle: -30,
                    dataKey: "field_name",
                    tickMargin: 12,
                    tick: /*#__PURE__*/ jsxRuntime.jsx(BarChartXTick, {})
                }),
                /*#__PURE__*/ jsxRuntime.jsx(recharts.YAxis, {}),
                /*#__PURE__*/ jsxRuntime.jsx(recharts.Tooltip, {
                    isAnimationActive: false
                }),
                parentWidth > 383 && /*#__PURE__*/ jsxRuntime.jsx(recharts.Legend, {
                    content: /*#__PURE__*/ jsxRuntime.jsx(ChartLegend, {}),
                    width: parentWidth > 447 ? 200 : 150,
                    verticalAlign: "top",
                    align: "right",
                    layout: "vertical"
                })
            ]
        })
    });
};

const getTableCellText = (cell)=>{
    const { props } = cell;
    const { children } = props;
    if (!children) {
        return '';
    }
    if (typeof children === 'string') {
        return children;
    }
    const isArrayOfChildren = Array.isArray(children);
    if (isArrayOfChildren) {
        return children.map((child)=>typeof child === 'string' ? child : '').join(' ');
    }
    return '';
};
const getParsedDate = (value)=>{
    const timeFormats = value.includes(':') ? TIME_FORMATS : [
        ''
    ];
    const formats = DATE_FORMATS.flatMap((dateFormat)=>timeFormats.map((timeFormat)=>`${dateFormat}${timeFormat}`));
    let date;
    for(let i = 0; i < formats.length; i++){
        date = dateFns.parse(value, formats[i], new Date());
        if (dateFns.isValid(date)) {
            break;
        }
    }
    return date;
};
const parseTableCellValue = (value)=>{
    const trimmedValue = value.trim();
    const parsedDate = getParsedDate(trimmedValue);
    const isValidDate = parsedDate && dateFns.isValid(parsedDate);
    if (isValidDate) {
        return parsedDate;
    }
    const numeric = trimmedValue.replace(/[^\d.-]/g, '').replace(/,/g, '');
    const parsed = parseFloat(numeric);
    const isValidNumber = !isNaN(parsed) && Number.isFinite(parsed) && numeric.length > 0;
    const decimalCount = (numeric.match(/\./g) || []).length;
    if (decimalCount > 1) {
        return trimmedValue;
    }
    if (isValidNumber) {
        return parsed;
    }
    return trimmedValue;
};
const sortAssistantTable = ({ bodyRows, sortIndex, direction })=>{
    return [
        ...bodyRows
    ].sort((rowA, rowB)=>{
        const { props: propsA } = rowA;
        const { props: propsB } = rowB;
        const { children: childrenA } = propsA;
        const { children: childrenB } = propsB;
        const maxCellIndex = Math.min(React.Children.toArray(childrenA).length, React.Children.toArray(childrenB).length) - 1;
        if (sortIndex > maxCellIndex || sortIndex < 0) {
            return 0;
        }
        const cellA = React.Children.toArray(childrenA)[sortIndex];
        const cellB = React.Children.toArray(childrenB)[sortIndex];
        const textA = getTableCellText(cellA);
        const textB = getTableCellText(cellB);
        const valueA = parseTableCellValue(textA);
        const valueB = parseTableCellValue(textB);
        const sortAsc = direction === 'asc';
        if (valueA instanceof Date && valueB instanceof Date) {
            return sortAsc ? valueA.getTime() - valueB.getTime() : valueB.getTime() - valueA.getTime();
        }
        if (typeof valueA === 'number' && typeof valueB === 'number') {
            return sortAsc ? valueA - valueB : valueB - valueA;
        }
        if (valueA < valueB) {
            return sortAsc ? -1 : 1;
        }
        if (valueA > valueB) {
            return sortAsc ? 1 : -1;
        }
        return 0;
    });
};

const SortableTable = ({ tbody, thead })=>{
    const [sortIndex, setSortIndex] = React.useState(null);
    const [direction, setDirection] = React.useState('asc');
    const [headerRow] = React.Children.toArray(thead.props.children);
    const headerCells = React.Children.toArray(headerRow.props.children);
    const bodyRows = React.Children.toArray(tbody.props.children);
    const sortedRows = React.useMemo(()=>{
        if (sortIndex === null) {
            return bodyRows;
        }
        return sortAssistantTable({
            bodyRows,
            sortIndex,
            direction
        });
    }, // eslint-disable-next-line react-hooks/exhaustive-deps
    [
        direction,
        sortIndex
    ]);
    const handleChangeSort = (index)=>{
        if (sortIndex === index) {
            setDirection((prev)=>prev === 'asc' ? 'desc' : 'asc');
            return;
        }
        setSortIndex(index);
        setDirection('asc');
    };
    return /*#__PURE__*/ jsxRuntime.jsxs("table", {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("thead", {
                children: /*#__PURE__*/ jsxRuntime.jsx("tr", {
                    children: headerCells.map(({ props: { children } }, index)=>/*#__PURE__*/ jsxRuntime.jsx("th", {
                            onClick: ()=>handleChangeSort(index),
                            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:items-center mtw:gap-1 mtw:cursor-pointer",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx("span", {
                                        className: "mtw:text-nowrap",
                                        children: children
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                                        className: cn('mtw:flex mtw:items-center mtw:invisible mtw:w-4', sortIndex === index && 'mtw:visible'),
                                        children: direction === 'asc' ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ArrowUpIcon, {
                                            size: 16
                                        }) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ArrowDownIcon, {
                                            size: 16
                                        })
                                    })
                                ]
                            })
                        }, index))
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx("tbody", {
                children: sortedRows
            })
        ]
    });
};

const MarkdownTable = ({ children })=>{
    const arrayChildren = React.Children.toArray(children);
    const thead = arrayChildren.find((child)=>/*#__PURE__*/ React.isValidElement(child) && child.type === 'thead');
    const tbody = arrayChildren.find((child)=>/*#__PURE__*/ React.isValidElement(child) && child.type === 'tbody');
    if (!thead || !tbody) {
        return /*#__PURE__*/ jsxRuntime.jsx("table", {
            children: children
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsx(SortableTable, {
        thead: thead,
        tbody: tbody
    });
};

function _define_property$3(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$3(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$3(target, key, source[key]);
        });
    }
    return target;
}
function _object_without_properties$1(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose$1(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose$1(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const AssistantMessageContent = ({ part })=>{
    const chartWrapperRef = React.useRef(null);
    const [width, setWidth] = React.useState(0);
    const { type, content } = part;
    React.useEffect(()=>{
        if (!(chartWrapperRef === null || chartWrapperRef === void 0 ? void 0 : chartWrapperRef.current)) {
            return;
        }
        const observer = new ResizeObserver((entries)=>{
            for (const entry of entries){
                setWidth(entry.contentRect.width);
            }
        });
        observer.observe(chartWrapperRef.current);
        return ()=>observer.disconnect();
    }, []);
    switch(type){
        case 'text':
            {
                const text = fixMarkdownListIndentation(content);
                return /*#__PURE__*/ jsxRuntime.jsx("div", {
                    className: cn([
                        'markdown',
                        'mtw:[&_td]:p-2.5 mtw:[&_th]:p-2.5'
                    ]),
                    children: /*#__PURE__*/ jsxRuntime.jsx(ReactMarkdown__default.default, {
                        remarkPlugins: [
                            remarkGfm__default.default
                        ],
                        rehypePlugins: [
                            rehypeRaw__default.default
                        ],
                        components: {
                            table: (_param)=>{
                                var props = _object_without_properties$1(_param, [
                                    "node"
                                ]);
                                return /*#__PURE__*/ jsxRuntime.jsx(MarkdownTable, _object_spread$3({}, props));
                            }
                        },
                        children: text
                    })
                });
            }
        case 'chart':
            {
                const { data_points: data, chart_metric: metrics, chart_type: chartType } = content;
                return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    ref: chartWrapperRef,
                    className: "mtw:h-[350px] mtw:w-full mtw:mt-3 overflow-hidden",
                    children: [
                        chartType === 'bar' && /*#__PURE__*/ jsxRuntime.jsx(AIBarChart, {
                            data: data,
                            metrics: metrics,
                            parentWidth: width
                        }),
                        chartType === 'pie' && /*#__PURE__*/ jsxRuntime.jsx(AIPieChart, {
                            data: data,
                            parentWidth: width
                        })
                    ]
                });
            }
        default:
            {
                return null;
            }
    }
};

const LoaderDots = ()=>{
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: "relative",
        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: cn('mtw:relative mtw:left-[-9985px] mtw:top-1/2 mtw:-translate-y-1/2 mtw:w-2.5 mtw:h-2.5', 'mtw:rounded-full mtw:bg-primary-80 mtw:text-primary-80', 'mtw:shadow-[9984px_0_0_0_#9880ff,9999px_0_0_0_#9880ff,10014px_0_0_0_#9880ff] animate-dot-typing')
        })
    });
};

const ChatMessageContainer$1 = ({ content, id, isLast, isStreaming, isError = false, isSubmitted = false })=>{
    const { i18n } = react.useLingui();
    const parts = splitByTags(content);
    const showActionButtons = !isStreaming || isStreaming && !isLast;
    const isAnswerLoading = isSubmitted && isLast;
    const textPart = parts.filter(({ type })=>type === 'text').map(({ content })=>content).join('/n');
    if (isAnswerLoading) {
        return /*#__PURE__*/ jsxRuntime.jsx(LoaderDots, {});
    }
    if (isError) {
        return /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: cn('mtw:border mtw:border-solid mtw:border-danger-40 mtw:bg-danger-95', 'mtw:rounded-lg mtw:px-4 mtw:py-3 mtw:mb-4'),
            children: i18n._({
                id: "TY83dO"
            })
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: cn('mtw:flex mtw:flex-col mtw:gap-4 mtw:overflow-x-auto', 'mtw:overflow-y-hidden mtw:grow'),
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: cn('mtw:transition-[height] mtw:ease-in-out mtw:duration-3000', 'mtw:h-full mtw:overflow-y-hidden', isLast && isStreaming && 'mtw:h-0'),
                children: parts.map((part)=>{
                    const { id } = part;
                    return /*#__PURE__*/ jsxRuntime.jsx(AssistantMessageContent, {
                        part: part
                    }, id);
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(AssistantButtons, {
                showActionButtons: showActionButtons,
                id: id,
                content: textPart
            })
        ]
    });
};
const AssistantMessage = /*#__PURE__*/ React.memo(ChatMessageContainer$1);

const ChatMessageContainer = ({ content })=>{
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        className: clsx__default.default([
            'mtw:flex mtw:flex-col mtw:gap-4 mtw:py-3',
            'mtw:bg-primary-85 mtw:rounded-xl mtw:px-4'
        ]),
        children: content
    });
};
const UserMessage = /*#__PURE__*/ React.memo(ChatMessageContainer);

const ChatMessage = ({ isLast, message })=>{
    const { role, content, id } = message;
    const { status } = useAIAssistantChat();
    switch(role){
        case 'user':
            {
                return /*#__PURE__*/ jsxRuntime.jsx(UserMessage, {
                    content: content
                });
            }
        case 'assistant':
            {
                const isStreaming = isLast && status === 'streaming';
                const isSubmitted = isLast && status === 'submitted';
                const isLoading = isLast && isStreaming && !content;
                return /*#__PURE__*/ jsxRuntime.jsx(AssistantMessage, {
                    isStreaming: isStreaming,
                    isSubmitted: isSubmitted || isLoading,
                    isLast: isLast,
                    content: content,
                    id: id
                });
            }
        default:
            {
                return null;
            }
    }
};

const POSSIBLE_ITEM_SIZE = 100;
const MESSAGE_ID = 'message-id';
const MOCK_MESSAGE = {
    content: '',
    id: MESSAGE_ID,
    role: 'assistant',
    parts: []
};
const MessageList = ({ isEnlarged })=>{
    const parentRef = React.useRef(null);
    const isScrolledToEnd = React.useRef(false);
    const prevStatusRef = React.useRef('ready');
    const { messages, status, setMessages } = useAIAssistantChat();
    const isMobile = useIsMobile();
    const isReady = status === 'ready';
    const isSubmitted = status === 'submitted';
    const isStreaming = status === 'streaming';
    const isError = status === 'error';
    const virtualizer = reactVirtual.useVirtualizer({
        getScrollElement: ()=>parentRef.current,
        count: messages.length,
        estimateSize: ()=>POSSIBLE_ITEM_SIZE,
        overscan: 25,
        getItemKey: React.useCallback((index)=>{
            var _messages_index;
            return (_messages_index = messages[index]) === null || _messages_index === void 0 ? void 0 : _messages_index.id;
        }, [
            messages
        ])
    });
    const virtualMessages = virtualizer.getVirtualItems();
    const height = virtualizer.getTotalSize();
    const totalHeight = getChatTotalHeight({
        isMobile,
        isSubmitted,
        isError,
        height
    });
    const messagesLength = messages.length;
    React.useEffect(()=>{
        if (!messagesLength || isScrolledToEnd.current) {
            return;
        }
        requestAnimationFrame(()=>{
            virtualizer.scrollToIndex(messagesLength - 1);
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        messagesLength
    ]);
    React.useEffect(()=>{
        if (!isSubmitted) {
            return;
        }
        isScrolledToEnd.current = true;
        virtualizer.scrollToIndex(messages.length - 1);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        isSubmitted
    ]);
    React.useEffect(()=>{
        if (!isStreaming) {
            return;
        }
        setMessages((prev)=>{
            const isInMessages = prev.find(({ id })=>id === MESSAGE_ID);
            if (isInMessages) {
                return prev;
            }
            return [
                ...prev,
                MOCK_MESSAGE
            ];
        });
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        isStreaming
    ]);
    React.useEffect(()=>{
        const shouldScrollToLastMessage = prevStatusRef.current !== status && (isReady || isStreaming);
        if (shouldScrollToLastMessage) {
            virtualizer.scrollToIndex(messages.length - 1, {
                align: 'start',
                behavior: 'smooth'
            });
        }
        prevStatusRef.current = status;
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [
        status
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        ref: parentRef,
        className: "mtw:size-full mtw:overflow-y-auto mtw:p-4 mtw:pt-0",
        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
            className: cn('mtw:max-w-sm mtw:sm:max-w-md mtw:md:max-w-lg mtw:lg:max-w-2xl mtw:xl:max-w-3xl', 'mtw:mx-auto mtw:w-full', isEnlarged && 'mtw:size-full'),
            children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:relative mtw:flex mtw:w-full mtw:flex-col",
                style: {
                    height: totalHeight
                },
                children: [
                    virtualMessages.map(({ index, start })=>{
                        const message = messages[index];
                        const { id, role } = message;
                        const isLast = messages.length - 1 === index && role === 'assistant';
                        return /*#__PURE__*/ jsxRuntime.jsx("div", {
                            "data-index": index,
                            ref: virtualizer.measureElement,
                            className: cn([
                                'mtw:absolute mtw:top-0 mtw:flex mtw:justify-start mtw:gap-3',
                                'mtw:p-4 mtw:[&_li]:pb-2 mtw:text-sm mtw:font-normal',
                                role === 'user' ? 'mtw:right-0 mtw:max-w-[70%] mtw:self-end' : 'mtw:left-0 mtw:w-full'
                            ]),
                            style: {
                                transform: `translateY(${start}px)`
                            },
                            children: /*#__PURE__*/ jsxRuntime.jsx(ChatMessage, {
                                message: message,
                                isLast: isLast
                            })
                        }, id);
                    }),
                    isError && /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: clsx__default.default([
                            'mtw:absolute mtw:bottom-0 mtw:left-0 mtw:w-full mtw:px-4 mtw:pt-5',
                            'mtw:flex mtw:justify-start mtw:gap-3'
                        ]),
                        children: /*#__PURE__*/ jsxRuntime.jsx(AssistantMessage, {
                            isLast: true,
                            isStreaming: isStreaming,
                            isError: isError,
                            content: "",
                            id: MESSAGE_ID
                        })
                    })
                ]
            })
        })
    });
};

const AIChat = ({ isEnlarged })=>{
    return /*#__PURE__*/ jsxRuntime.jsx(MessageList, {
        isEnlarged: isEnlarged
    });
};

function _define_property$2(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$2(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$2(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$2(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$2(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$2(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _object_without_properties(source, excluded) {
    if (source == null) return {};
    var target = _object_without_properties_loose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _object_without_properties_loose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const AssistantIconButton = (_param)=>{
    var { className, children } = _param, props = _object_without_properties(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("button", _object_spread_props$2(_object_spread$2({
        className: cn('mtw:hover:bg-sidebar-accent mtw:p-2 mtw:rounded-md mtw:cursor-pointer', className)
    }, props), {
        children: children
    }));
};

function _define_property$1(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread$1(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property$1(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys$1(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props$1(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys$1(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const AssistantLogo = (props)=>/*#__PURE__*/ jsxRuntime.jsx(material.SvgIcon, _object_spread_props$1(_object_spread$1({
        sx: {
            fontSize: 51
        }
    }, props), {
        children: /*#__PURE__*/ jsxRuntime.jsxs("svg", {
            xmlns: "http://www.w3.org/2000/svg",
            width: "28",
            height: "28",
            viewBox: "0 0 28 28",
            fill: "none",
            children: [
                /*#__PURE__*/ jsxRuntime.jsx("mask", {
                    id: "mask0_1031_9613",
                    style: {
                        maskType: 'alpha'
                    },
                    maskUnits: "userSpaceOnUse",
                    x: "0",
                    y: "0",
                    width: "28",
                    height: "28",
                    children: /*#__PURE__*/ jsxRuntime.jsx("circle", {
                        cx: "14",
                        cy: "14",
                        r: "14",
                        fill: "white"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("g", {
                    mask: "url(#mask0_1031_9613)",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("circle", {
                            cx: "13.9814",
                            cy: "14",
                            r: "14",
                            fill: "#D4DFFF"
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter0_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "18.9087",
                                cy: "8.32093",
                                rx: "12.014",
                                ry: "6.938",
                                transform: "rotate(40.0768 18.9087 8.32093)",
                                fill: "#E8C6F8"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter1_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M25.8577 21.8081C22.9796 25.2287 21.0382 16.6155 15.1149 11.6318C9.19171 6.64804 1.65601 6.43302 4.53408 3.01239C7.41214 -0.408239 17.4522 -1.97132 23.3755 3.0124C29.2987 7.99611 28.7358 18.3874 25.8577 21.8081Z",
                                fill: "#A3C0FB"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter2_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "18.7002",
                                cy: "7.86812",
                                rx: "12.2013",
                                ry: "7.04621",
                                transform: "rotate(40.0768 18.7002 7.86812)",
                                fill: "#A3B6F9"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter3_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "19.54",
                                cy: "6.86849",
                                rx: "9.9422",
                                ry: "5.74157",
                                transform: "rotate(40.0768 19.54 6.86849)",
                                fill: "#F4F7FF"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter4_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "8.98462",
                                cy: "20.8931",
                                rx: "7.40973",
                                ry: "9.56587",
                                transform: "rotate(-45.1708 8.98462 20.8931)",
                                fill: "#E8FAF6"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter5_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "9.47949",
                                cy: "20.4348",
                                rx: "9.89458",
                                ry: "11.187",
                                transform: "rotate(-18.0806 9.47949 20.4348)",
                                fill: "#E8FAF6"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter6_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "7.48705",
                                cy: "22.6501",
                                rx: "7.80754",
                                ry: "5.87604",
                                transform: "rotate(-7.8963 7.48705 22.6501)",
                                fill: "#F5F5F5"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter7_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M13.6 1.00338C15.0942 2.21198 11.2165 4.61532 8.22778 8.31046C5.23905 12.0056 2.6001 15.2413 1.10584 14.0327C-0.388411 12.8241 0.957665 8.79459 3.9464 5.09944C6.93514 1.4043 12.1057 -0.205216 13.6 1.00338Z",
                                fill: "#B489FA"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter8_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M9.75508 4.6941C10.2656 5.23077 8.03349 6.55418 6.01132 8.47769C3.98914 10.4012 2.20805 12.0864 1.69757 11.5497C1.18709 11.013 2.48524 8.98703 4.50741 7.06352C6.52959 5.14001 9.24459 4.15744 9.75508 4.6941Z",
                                fill: "#AF97F8"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter9_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M13.0792 -0.546923C14.1313 0.391432 10.1708 3.17495 6.70911 7.0563C3.2474 10.9376 0.196823 14.3393 -0.85528 13.4009C-1.90738 12.4626 0.176948 8.48633 3.63866 4.60498C7.10037 0.723642 12.0271 -1.48528 13.0792 -0.546923Z",
                                fill: "#A39AF8"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter10_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M9.44196 0.952167C9.99473 1.44517 7.55343 3.31182 5.33689 5.79706C3.12034 8.28229 1.16812 10.4613 0.615357 9.96832C0.0625907 9.47532 1.49076 7.01277 3.7073 4.52754C5.92385 2.0423 8.8892 0.459163 9.44196 0.952167Z",
                                fill: "#16457B"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter11_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M12.1897 3.17681C13.497 4.55907 10.1503 5.67553 7.5861 8.10064C5.02191 10.5257 2.7576 12.6441 1.45032 11.2619C-1.01146 9.04481 1.27834 6.77915 3.84253 4.35404C6.40672 1.92893 10.145 0.58769 12.1897 3.17681Z",
                                fill: "#A495F8"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter12_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M10.0551 4.20282C11.2615 4.82662 8.88108 7.11692 7.29592 10.1825C5.71077 13.2481 4.30748 15.9359 3.10109 15.3121C0.887979 14.4596 2.28829 11.6385 3.87344 8.57292C5.4586 5.50733 8.10329 2.87042 10.0551 4.20282Z",
                                fill: "#D5B6F9"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter13_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M17.3081 3.51596C18.6047 4.88687 14.6103 6.63275 11.3221 9.74256C8.03396 12.8524 5.1337 15.5724 3.83715 14.2015C2.5406 12.8306 4.29041 9.16556 7.57857 6.05575C10.8667 2.94594 16.0116 2.14506 17.3081 3.51596Z",
                                fill: "url(#paint0_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter14_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M9.86076 1.17295C10.5467 1.78476 7.96452 3.59962 5.70748 6.13026C3.45044 8.66089 1.46146 10.8788 0.775488 10.267C0.0895164 9.65516 1.4485 7.06264 3.70554 4.532C5.96258 2.00136 9.17479 0.561142 9.86076 1.17295Z",
                                fill: "#16457B"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter15_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M25.5139 12.7655C23.7958 14.8074 20.5318 12.1401 16.996 9.16509C13.4602 6.19011 10.9915 4.03405 12.7095 1.99214C14.4276 -0.0497789 18.6867 0.706623 22.2225 3.68161C25.7583 6.65659 27.2319 10.7236 25.5139 12.7655Z",
                                fill: "#49A3E0"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter16_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("ellipse", {
                                cx: "20.4168",
                                cy: "7.39112",
                                rx: "5.9226",
                                ry: "3.42027",
                                transform: "rotate(40.0768 20.4168 7.39112)",
                                fill: "#49A3E0"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter17_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M25.6512 11.3942C24.6862 12.3333 21.0798 12.2333 18.2506 9.3259C15.4214 6.41855 13.1381 3.12342 14.1032 2.18428C15.0682 1.24514 19.4468 1.52214 22.276 4.4295C25.1052 7.33685 26.6163 10.455 25.6512 11.3942Z",
                                fill: "#49A3E0"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter18_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M21.5855 15.3624C20.1752 16.7348 19.401 11.8691 16.5718 8.96175C13.7426 6.05439 7.24821 6.90716 8.65855 5.53474C12.647 1.1525 17.2853 2.33005 20.1145 5.23741C22.9437 8.14476 22.9958 13.99 21.5855 15.3624Z",
                                fill: "#49A3E0"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.9",
                            filter: "url(#filter19_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M20.6577 14.342C20.0171 14.9654 17.0167 14.2756 14.1875 11.3683C11.3583 8.46091 8.91555 5.32093 9.55616 4.69755C10.1968 4.07417 13.8657 5.04167 16.6949 7.94903C19.5241 10.8564 21.2983 13.7186 20.6577 14.342Z",
                                fill: "#A2C8FB"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter20_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M26.7043 17.0543C25.2765 18.2934 24.3764 12.8002 21.4173 8.64445C18.4582 4.4887 14.0189 2.87486 15.4467 1.6358C16.8745 0.396738 21.1809 1.90799 24.14 6.06374C27.0991 10.2195 28.1321 15.8153 26.7043 17.0543Z",
                                fill: "#F5F5F5"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.3",
                            filter: "url(#filter21_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M25.1749 20.2556C23.6563 21.5735 23.7778 15.1675 22.6429 12.0086C21.4229 8.61296 17.1305 5.22553 19.0954 3.52038C20.614 2.20248 24.041 4.2324 26.2225 11.6728C26.4653 14.3838 26.6936 18.9377 25.1749 20.2556Z",
                                fill: "#F5F5F5"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.8",
                            filter: "url(#filter22_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M26.1034 17.1766C24.6175 18.3075 24.0785 12.8357 21.4251 8.55175C18.7718 4.26779 13.063 3.13455 14.549 2.00373C16.0349 0.872899 21.6193 1.89659 24.2726 6.18055C26.9259 10.4645 27.5894 16.0458 26.1034 17.1766Z",
                                fill: "url(#paint1_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            filter: "url(#filter23_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M26.1212 14.8695C24.9485 15.8872 25.3106 11.0255 22.8438 7.97068C18.9392 3.13542 13.3155 2.53463 14.4883 1.51692C15.661 0.499213 21.8316 2.82085 24.1223 6.03802C26.4131 9.25518 27.294 13.8518 26.1212 14.8695Z",
                                fill: "url(#paint2_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            filter: "url(#filter24_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M25.7575 12.8255C24.5847 13.8432 25.311 11.0249 22.8442 7.97005C18.9395 3.13479 16.8564 4.59758 18.0291 3.57987C19.2018 2.56217 21.8319 2.82022 24.1227 6.03739C26.4135 9.25455 26.9302 11.8078 25.7575 12.8255Z",
                                fill: "url(#paint3_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.3",
                            filter: "url(#filter25_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M14.3559 27.4789C14.3559 27.0945 20.6671 25.6477 23.7836 22.239C26.9001 18.8304 26.9599 13.8026 27.4253 13.8026C28.1036 14.4228 27.3857 19.2553 24.2692 22.6639C21.1527 26.0725 15.0342 28.0991 14.3559 27.4789Z",
                                fill: "#16457B"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            filter: "url(#filter26_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M-0.0843164 10.4782C0.4886 10.4355 0.243521 18.7124 4.42911 23.0173C8.6147 27.3223 17.1 27.5032 16.9664 28.2024C15.8472 29.2906 7.63626 28.8125 3.45067 24.5076C-0.734914 20.2026 -1.20351 11.5663 -0.0843164 10.4782Z",
                                fill: "url(#paint4_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter27_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M3.38044 23.0373C3.69526 22.7399 8.43709 26.9348 13.463 27.036C18.4889 27.1371 23.6313 23.1326 23.9649 23.5415C23.9432 24.6174 18.7882 28.3431 13.7623 28.242C8.73639 28.1409 3.35879 24.1132 3.38044 23.0373Z",
                                fill: "#9F9DE2"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.2",
                            filter: "url(#filter28_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M14.6599 27.6999C16.1298 27.567 21.1706 26.0511 24.2871 22.6424C27.4036 19.2338 27.4967 15.6058 27.4283 13.8034C28.1603 14.4726 27.6015 19.4506 24.485 22.8592C21.3685 26.2678 15.3918 28.3692 14.6599 27.6999Z",
                                fill: "#16457B"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter29_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("circle", {
                                cx: "13.9814",
                                cy: "14",
                                r: "13.954",
                                stroke: "url(#paint5_linear_1031_9613)",
                                strokeWidth: "0.0920812"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter30_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M28.6697 13.9984C28.6697 22.1103 22.0937 28.6863 13.9818 28.6863C5.86993 28.6863 -0.706055 22.1103 -0.706055 13.9984C-0.706055 5.88653 5.86993 -0.689453 13.9818 -0.689453C22.0937 -0.689453 28.6697 5.88653 28.6697 13.9984ZM0.669552 13.9984C0.669552 21.3506 6.62965 27.3107 13.9818 27.3107C21.334 27.3107 27.2941 21.3506 27.2941 13.9984C27.2941 6.64625 21.334 0.686153 13.9818 0.686153C6.62965 0.686153 0.669552 6.64625 0.669552 13.9984Z",
                                fill: "url(#paint6_radial_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter31_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M28.6697 13.9984C28.6697 22.1103 22.0937 28.6863 13.9818 28.6863C5.86993 28.6863 -0.706055 22.1103 -0.706055 13.9984C-0.706055 5.88653 5.86993 -0.689453 13.9818 -0.689453C22.0937 -0.689453 28.6697 5.88653 28.6697 13.9984ZM0.231666 13.9984C0.231666 21.5924 6.38781 27.7486 13.9818 27.7486C21.5758 27.7486 27.7319 21.5924 27.7319 13.9984C27.7319 6.40442 21.5758 0.248267 13.9818 0.248267C6.38781 0.248267 0.231666 6.40442 0.231666 13.9984Z",
                                fill: "url(#paint7_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter32_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M-0.213405 11.755C0.263892 11.7833 0.186862 19.4923 4.19303 23.6127C8.1992 27.7332 15.5252 27.6833 15.4914 28.2611C14.672 29.0578 7.57284 28.4016 3.56667 24.2812C-0.439505 20.1608 -1.0328 12.5516 -0.213405 11.755Z",
                                fill: "url(#paint8_linear_1031_9613)"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("g", {
                            opacity: "0.5",
                            filter: "url(#filter33_f_1031_9613)",
                            children: /*#__PURE__*/ jsxRuntime.jsx("path", {
                                d: "M28.5886 13.9984C28.5886 22.1103 22.0126 28.6863 13.9008 28.6863C5.78887 28.6863 -0.787109 22.1103 -0.787109 13.9984C-0.787109 5.88653 5.78887 -0.689453 13.9008 -0.689453C22.0126 -0.689453 28.5886 5.88653 28.5886 13.9984ZM-0.00258827 13.9984C-0.00258827 21.677 6.22215 27.9018 13.9008 27.9018C21.5794 27.9018 27.8041 21.677 27.8041 13.9984C27.8041 6.31981 21.5794 0.095068 13.9008 0.095068C6.22215 0.095068 -0.00258827 6.31981 -0.00258827 13.9984Z",
                                fill: "#F5F5F5"
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ jsxRuntime.jsx("g", {
                    style: {
                        mixBlendMode: 'color-burn'
                    },
                    children: /*#__PURE__*/ jsxRuntime.jsx("rect", {
                        width: "28",
                        height: "28",
                        rx: "14",
                        fill: "#647BA4"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("defs", {
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter0_f_1031_9613",
                            x: "-0.522575",
                            y: "-10.2687",
                            width: "38.8625",
                            height: "37.1799",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter1_f_1031_9613",
                            x: "-5.30676",
                            y: "-9.37414",
                            width: "42.4719",
                            height: "41.1721",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter2_f_1031_9613",
                            x: "-0.890739",
                            y: "-10.8683",
                            width: "39.1819",
                            height: "37.4729",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter3_f_1031_9613",
                            x: "1.87196",
                            y: "-10.1046",
                            width: "35.3362",
                            height: "33.9455",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter4_f_1031_9613",
                            x: "-4.18219",
                            y: "7.73969",
                            width: "26.3341",
                            height: "26.3077",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter5_f_1031_9613",
                            x: "-9.75793",
                            y: "0.155159",
                            width: "38.4748",
                            height: "40.5588",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter6_f_1031_9613",
                            x: "-2.59109",
                            y: "14.4284",
                            width: "20.1568",
                            height: "16.4439",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.15102",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter7_f_1031_9613",
                            x: "-5.03269",
                            y: "-4.91745",
                            width: "24.4882",
                            height: "24.7333",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.76244",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter8_f_1031_9613",
                            x: "0.204719",
                            y: "3.16761",
                            width: "11.0056",
                            height: "9.864",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.690609",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter9_f_1031_9613",
                            x: "-2.97053",
                            y: "-2.60334",
                            width: "18.0641",
                            height: "18.0036",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.920812",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter10_f_1031_9613",
                            x: "-4.10797",
                            y: "-3.74273",
                            width: "18.2335",
                            height: "18.3859",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter11_f_1031_9613",
                            x: "-5.12839",
                            y: "-3.75339",
                            width: "23.1357",
                            height: "20.9775",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.76244",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter12_f_1031_9613",
                            x: "-3.5698",
                            y: "-1.67722",
                            width: "19.4794",
                            height: "22.6044",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.76244",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter13_f_1031_9613",
                            x: "-1.19683",
                            y: "-1.73297",
                            width: "23.3595",
                            height: "20.9034",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter14_f_1031_9613",
                            x: "-2.16576",
                            y: "-1.72923",
                            width: "14.9018",
                            height: "14.8608",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.38122",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter15_f_1031_9613",
                            x: "2.94227",
                            y: "-8.36242",
                            width: "32.4973",
                            height: "31.053",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "4.60406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter16_f_1031_9613",
                            x: "10.7729",
                            y: "-1.83844",
                            width: "19.2872",
                            height: "18.4581",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter17_f_1031_9613",
                            x: "12.0363",
                            y: "-0.138499",
                            width: "15.7477",
                            height: "13.902",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.920812",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter18_f_1031_9613",
                            x: "3.85688",
                            y: "-1.96148",
                            width: "23.2394",
                            height: "22.1671",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter19_f_1031_9613",
                            x: "1.62622",
                            y: "-3.30933",
                            width: "26.9888",
                            height: "25.689",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "3.91345",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter20_f_1031_9613",
                            x: "10.5668",
                            y: "-3.38726",
                            width: "21.3771",
                            height: "25.2237",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "2.30203",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter21_f_1031_9613",
                            x: "15.8255",
                            y: "0.384048",
                            width: "13.3354",
                            height: "22.81",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.38122",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter22_f_1031_9613",
                            x: "13.3849",
                            y: "0.65536",
                            width: "14.4168",
                            height: "17.5936",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.460406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter23_f_1031_9613",
                            x: "12.9489",
                            y: "-0.105828",
                            width: "15.072",
                            height: "16.4949",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.690609",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter24_f_1031_9613",
                            x: "16.7823",
                            y: "2.12802",
                            width: "10.5028",
                            height: "11.8299",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.460406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter25_f_1031_9613",
                            x: "11.593",
                            y: "11.0403",
                            width: "18.8296",
                            height: "19.312",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.38122",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter26_f_1031_9613",
                            x: "-3.36791",
                            y: "7.71608",
                            width: "23.0981",
                            height: "23.7456",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.38122",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter27_f_1031_9613",
                            x: "1.07883",
                            y: "20.7195",
                            width: "25.188",
                            height: "9.82672",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.15102",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter28_f_1031_9613",
                            x: "13.7393",
                            y: "12.8819",
                            width: "14.8973",
                            height: "15.8631",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.460406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter29_f_1031_9613",
                            x: "-0.110636",
                            y: "-0.0920812",
                            width: "28.1842",
                            height: "28.1842",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.0460406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter30_f_1031_9613",
                            x: "-4.3893",
                            y: "-4.3727",
                            width: "36.7425",
                            height: "36.7415",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.84162",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter31_f_1031_9613",
                            x: "-3.00809",
                            y: "-2.99148",
                            width: "33.98",
                            height: "33.9791",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "1.15102",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter32_f_1031_9613",
                            x: "-1.91344",
                            y: "10.3746",
                            width: "18.7859",
                            height: "19.5632",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.690609",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("filter", {
                            id: "filter33_f_1031_9613",
                            x: "-1.70792",
                            y: "-1.61027",
                            width: "31.2176",
                            height: "31.2166",
                            filterUnits: "userSpaceOnUse",
                            colorInterpolationFilters: "sRGB",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("feFlood", {
                                    floodOpacity: "0",
                                    result: "BackgroundImageFix"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feBlend", {
                                    mode: "normal",
                                    in: "SourceGraphic",
                                    in2: "BackgroundImageFix",
                                    result: "shape"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("feGaussianBlur", {
                                    stdDeviation: "0.460406",
                                    result: "effect1_foregroundBlur_1031_9613"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint0_linear_1031_9613",
                            x1: "13.1441",
                            y1: "3.83502",
                            x2: "2.90074",
                            y2: "17.7277",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "#A1A6F7"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "#A1A6F7",
                                    stopOpacity: "0"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint1_linear_1031_9613",
                            x1: "24.518",
                            y1: "6.57681",
                            x2: "20.1656",
                            y2: "9.27252",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "white"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "white",
                                    stopOpacity: "0"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint2_linear_1031_9613",
                            x1: "27.0307",
                            y1: "14.64",
                            x2: "15.3866",
                            y2: "2.59409",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "white"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "0.735428",
                                    stopColor: "white"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "white",
                                    stopOpacity: "0"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint3_linear_1031_9613",
                            x1: "27.0311",
                            y1: "14.6394",
                            x2: "15.387",
                            y2: "2.59346",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "white"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "0.735428",
                                    stopColor: "white"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "white",
                                    stopOpacity: "0"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint4_linear_1031_9613",
                            x1: "-3.57973",
                            y1: "8.25599",
                            x2: "13.9197",
                            y2: "32.5014",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "#524ECB"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "#9F9DE2"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint5_linear_1031_9613",
                            x1: "6.19243",
                            y1: "-1.80058",
                            x2: "19.7473",
                            y2: "28.8902",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "#B48AFA",
                                    stopOpacity: "0.6"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "0.348958",
                                    stopColor: "#516685",
                                    stopOpacity: "0.1"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "0.71875",
                                    stopColor: "#587092",
                                    stopOpacity: "0.1"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "#9686DF"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("radialGradient", {
                            id: "paint6_radial_1031_9613",
                            cx: "0",
                            cy: "0",
                            r: "1",
                            gradientUnits: "userSpaceOnUse",
                            gradientTransform: "translate(13.9818 10.4113) rotate(90) scale(18.2749)",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "white",
                                    stopOpacity: "0"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "white"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint7_linear_1031_9613",
                            x1: "4.67545",
                            y1: "1.13136",
                            x2: "22.1957",
                            y2: "27.2701",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "#DAB3F5"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "#F4DCF6"
                                })
                            ]
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("linearGradient", {
                            id: "paint8_linear_1031_9613",
                            x1: "-4.29855",
                            y1: "9.93492",
                            x2: "13.6172",
                            y2: "34.7785",
                            gradientUnits: "userSpaceOnUse",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    stopColor: "#524ECB"
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("stop", {
                                    offset: "1",
                                    stopColor: "#9F9DE2"
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    }));

const AssistantHeader = ({ isEnlarged, setIsEnlarged, view, setView, setConversationId, setIsNewChat })=>{
    const { i18n } = react.useLingui();
    const showChatHeader = view === 'start' || view === 'chat';
    const handleSetHistoryView = ()=>{
        setView('history');
    };
    const handleStartChat = ()=>{
        setConversationId('');
        setView('start');
        setIsNewChat(true);
    };
    const handleChangeEnlarge = ()=>{
        if (view === 'history') {
            setView('start');
        }
        setIsEnlarged((prev)=>!prev);
    };
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: cn('mtw:flex mtw:items-center mtw:justify-between mtw:relative', 'mtw:border-b mtw:border-solid mtw:border-border mtw:p-4', view === 'history' && 'mtw:justify-end'),
        children: [
            showChatHeader && /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:gap-2 mtw:flex mtw:items-center",
                children: [
                    !isEnlarged && /*#__PURE__*/ jsxRuntime.jsx(AssistantIconButton, {
                        onClick: handleSetHistoryView,
                        "aria-label": i18n._({
                            id: "zucql+"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Menu, {
                            className: "mtw:size-4 mtw:text-gray-500"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsxs("div", {
                        className: "mtw:flex mtw:items-center mtw:gap-1.5",
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                                className: "mtw:flex mtw:items-center mtw:gap-3",
                                children: [
                                    /*#__PURE__*/ jsxRuntime.jsx(AssistantLogo, {
                                        sx: {
                                            fontSize: 28
                                        }
                                    }),
                                    /*#__PURE__*/ jsxRuntime.jsx("h3", {
                                        className: "mtw:text-base mtw:font-semibold",
                                        children: i18n._({
                                            id: "3wfZhO"
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxRuntime.jsx("span", {
                                className: cn('mtw:border mtw:border-solid mtw:border-border', 'mtw:rounded-md mtw:text-xs mtw:py-0.5 mtw:px-2'),
                                children: i18n._({
                                    id: "YBt9YP"
                                })
                            })
                        ]
                    })
                ]
            }),
            view === 'history' && /*#__PURE__*/ jsxRuntime.jsx("h3", {
                className: cn('mtw:text-base mtw:font-semibold', 'mtw:absolute mtw:-translate-1/2 mtw:top-1/2 mtw:left-1/2'),
                children: i18n._({
                    id: "Sdv6pQ"
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:items-center",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(AssistantIconButton, {
                        onClick: handleChangeEnlarge,
                        "aria-label": isEnlarged ? i18n._({
                            id: "3TSz9S"
                        }) : i18n._({
                            id: "gz6UQ3"
                        }),
                        children: isEnlarged ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Minimize2, {
                            className: "mtw:size-4 mtw:text-gray-500"
                        }) : /*#__PURE__*/ jsxRuntime.jsx(lucideReact.Maximize2, {
                            className: "mtw:size-4 mtw:text-gray-500"
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(AssistantIconButton, {
                        onClick: handleStartChat,
                        "aria-label": i18n._({
                            id: "q2+WzE"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.SquarePen, {
                            className: "mtw:size-4 mtw:text-gray-500"
                        })
                    })
                ]
            })
        ]
    });
};

const ChatHistoryItem = ({ isEnlarged, id, conversationId, title, onSetConversation, messages })=>{
    const { i18n } = react.useLingui();
    var _messages_find;
    const { content = '' } = (_messages_find = messages.find(({ role })=>role === 'assistant')) !== null && _messages_find !== void 0 ? _messages_find : {};
    const text = content.replace('\n', '');
    const handleSetConversation = ()=>onSetConversation(id);
    return /*#__PURE__*/ jsxRuntime.jsxs("li", {
        onClick: handleSetConversation,
        className: cn('mtw:px-4 mtw:py-3 mtw:flex mtw:gap-4 mtw:items-center  mtw:justify-between', 'mtw:hover:bg-sidebar-accent mtw:hover:text-sidebar-accent-foreground mtw:rounded', 'mtw:truncate mtw:w-full mtw:cursor-pointer', isEnlarged && conversationId === id && 'mtw:text-sidebar-accent-foreground mtw:bg-sidebar-accent'),
        role: "button",
        children: [
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("h5", {
                        className: "mtw:truncate mtw:font-semibold",
                        children: title || i18n._({
                            id: "/sa3hT",
                            values: {
                                id: id
                            }
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("p", {
                        className: "mtw:line-clamp-2 mtw:font-normal mtw:whitespace-break-spaces mtw:h-10",
                        children: text || i18n._({
                            id: "sO0IGO"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronRight, {
                className: "mtw:shrink-0",
                size: 16
            })
        ]
    });
};

const ChatHistorySkeleton = ()=>{
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:gap-3 mtw:px-7 mtw:animate-pulse",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:bg-gray-200 mtw:h-5 mtw:rounded"
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("div", {
                className: "mtw:flex mtw:flex-col mtw:gap-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:bg-gray-200 mtw:h-21 mtw:rounded"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:bg-gray-200 mtw:h-21 mtw:rounded"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:bg-gray-200 mtw:h-21 mtw:rounded"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:bg-gray-200 mtw:h-21 mtw:rounded"
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:bg-gray-200 mtw:h-21 mtw:rounded"
                    })
                ]
            })
        ]
    });
};

const NoHistoryView = ({ isEnlarged, setView, setConversationId, setIsNewChat })=>{
    const { i18n } = react.useLingui();
    const handleStartChat = ()=>{
        setConversationId('');
        setView('start');
        setIsNewChat(true);
    };
    if (isEnlarged) {
        return /*#__PURE__*/ jsxRuntime.jsxs("div", {
            onClick: handleStartChat,
            className: "mtw:text-sm mtw:p-2 mtw:flex mtw:flex-col mtw:gap-2",
            children: [
                /*#__PURE__*/ jsxRuntime.jsx("h5", {
                    className: "mtw:px-4 mtw:text-sm mtw:text-gray-500 mtw:font-normal",
                    children: i18n._({
                        id: "oW3yYY"
                    })
                }),
                /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    role: "button",
                    className: cn('mtw:w-full mtw:px-4 mtw:py-3 mtw:rounded', 'mtw:bg-sidebar-accent mtw:text-sidebar-accent-foreground', 'mtw:truncate mtw:cursor-pointer'),
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("h5", {
                            className: "mtw:truncate mtw:font-semibold",
                            children: i18n._({
                                id: "q2+WzE"
                            })
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("p", {
                            className: "mtw:font-normal",
                            children: i18n._({
                                id: "yLO5sB"
                            })
                        })
                    ]
                })
            ]
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: "mtw:flex mtw:flex-col mtw:items-center mtw:h-full mtw:py-6 mtw:px-4",
        children: [
            /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: "mtw:flex mtw:flex-col mtw:justify-center mtw:items-center mtw:grow",
                children: /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-4 mtw:items-center mtw:-mt-20",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(AssistantLogo, {
                            sx: {
                                fontSize: 48
                            }
                        }),
                        /*#__PURE__*/ jsxRuntime.jsxs("div", {
                            className: "mtw:flex mtw:flex-col mtw:gap-2",
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx("h3", {
                                    className: "mtw:text-center mtw:font-semibold mtw:text-base",
                                    children: i18n._({
                                        id: "4Vi0UQ"
                                    })
                                }),
                                /*#__PURE__*/ jsxRuntime.jsx("p", {
                                    className: "mtw:text-center mtw:text-sm",
                                    children: i18n._({
                                        id: "gzbyr5"
                                    })
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(Button, {
                onClick: handleStartChat,
                className: "mtw:mt-auto mtw:w-fit mtw:bg-black mtw:hover:bg-black mtw:!px-8 mtw:!py-2",
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(lucideReact.SquarePen, {
                        className: "mtw:size-4 mtw:text-white"
                    }),
                    i18n._({
                        id: "q2+WzE"
                    })
                ]
            })
        ]
    });
};

const ChatHistory = ({ conversationId, setConversationId, setIsNewChat, setView, isEnlarged })=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { data, isLoading } = api.ai.getAiConversations.useQuery();
    const { data: conversations = [] } = data || {};
    const conversationGroups = React.useMemo(()=>{
        return createConversationGroups(conversations, i18n);
    }, [
        conversations,
        i18n
    ]);
    const onSetConversation = React.useCallback((id)=>{
        setView('chat');
        setConversationId(id);
        setIsNewChat(false);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    if (!isLoading && !conversations.length) {
        return /*#__PURE__*/ jsxRuntime.jsx(NoHistoryView, {
            isEnlarged: isEnlarged,
            setView: setView,
            setIsNewChat: setIsNewChat,
            setConversationId: setConversationId
        });
    }
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        className: cn('mtw:min-h-0 mtw:h-full mtw:overflow-auto', 'mtw:text-sm mtw:flex mtw:flex-1 mtw:flex-col mtw:gap-4'),
        children: [
            isLoading && /*#__PURE__*/ jsxRuntime.jsx(ChatHistorySkeleton, {}),
            conversationGroups.map(({ title, conversations })=>{
                return /*#__PURE__*/ jsxRuntime.jsxs("div", {
                    className: "mtw:flex mtw:flex-col mtw:gap-2 mtw:p-2",
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx("h5", {
                            className: "mtw:px-4 mtw:text-sm mtw:text-gray-500 mtw:font-normal",
                            children: title
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx("ul", {
                            className: "mtw:flex mtw:flex-col mtw:items-start",
                            children: conversations.map(({ title, id, messages })=>{
                                return /*#__PURE__*/ jsxRuntime.jsx(ChatHistoryItem, {
                                    isEnlarged: isEnlarged,
                                    id: id,
                                    conversationId: conversationId,
                                    title: title,
                                    onSetConversation: onSetConversation,
                                    messages: messages
                                }, id);
                            })
                        })
                    ]
                }, title);
            })
        ]
    });
};

const AIRichEditor = /*#__PURE__*/ React.forwardRef(({ handleInput, handleKeyDown, handlePaste }, editorRef)=>{
    const { i18n } = react.useLingui();
    const onInput = (e)=>{
        handleInput(e);
    };
    const onPaste = (e)=>{
        var _e_clipboardData;
        e.preventDefault();
        const clipboardData = (_e_clipboardData = e.clipboardData) === null || _e_clipboardData === void 0 ? void 0 : _e_clipboardData.getData('text');
        if (!clipboardData) {
            return;
        }
        const selection = window.getSelection();
        if (!selection || !selection.rangeCount) {
            return;
        }
        const range = selection.getRangeAt(0);
        range.deleteContents();
        const textNode = document.createTextNode(clipboardData);
        range.insertNode(textNode);
        range.setStartAfter(textNode);
        range.setEndAfter(textNode);
        selection.removeAllRanges();
        selection.addRange(range);
        const updatedText = typeof editorRef !== 'function' && (editorRef === null || editorRef === void 0 ? void 0 : editorRef.current) && editorRef.current.innerText;
        if (!updatedText) {
            return;
        }
        handlePaste(updatedText);
    };
    const onKeyDown = (e)=>{
        handleKeyDown(e);
    };
    return /*#__PURE__*/ jsxRuntime.jsx("div", {
        ref: editorRef,
        contentEditable: true,
        "data-placeholder": i18n._({
            id: "yLO5sB"
        }),
        onKeyDown: onKeyDown,
        onInput: onInput,
        onPaste: onPaste,
        className: cn('mtw:w-full mtw:min-h-[92px] mtw:max-h-[192px] mtw:grow mtw:overflow-y-auto', 'mtw:text-sm-normal mtw:[&_*]:!whitespace-break-spaces', 'mtw:bg-gray-100 mtw:box-content mtw:border-none', 'mtw:focus-visible:outline-none mtw:[scrollbar-width:thin]')
    });
});

const PromptSuggestion = ({ content })=>{
    const { setInput } = useAIAssistantChat();
    const handleSubmitPrompt = ()=>{
        setInput(content);
    };
    return /*#__PURE__*/ jsxRuntime.jsx("li", {
        onClick: handleSubmitPrompt,
        className: cn([
            'mtw:p-4 mtw:text-xs mtw:line-clamp-2 mtw:cursor-pointer mtw:shadow-md mtw:text-center',
            'mtw:border mtw:border-solid mtw:border-border mtw:rounded-xl mtw:w-fit'
        ]),
        role: "button",
        children: content
    });
};

const PromptSuggestions = ({ isEnlarged })=>{
    const { i18n } = react.useLingui();
    const suggestions = React.useMemo(()=>getDefaultPrompts(i18n), [
        i18n
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("ul", {
        className: cn('mtw:flex mtw:flex-col mtw:gap-2.5 mtw:justify-end mtw:size-full mtw:p-4 mtw:pt-0 mtw:items-center', isEnlarged && 'mtw:flex-row mtw:flex-wrap mtw:items-end mtw:justify-start'),
        children: suggestions.map(({ content, id })=>/*#__PURE__*/ jsxRuntime.jsx(PromptSuggestion, {
                content: content
            }, id))
    });
};

const PromptsPopoverItem = ({ content, onPromptInsert })=>{
    const html = DOMPurify__default.default.sanitize(content);
    const handlePromptInsert = ()=>{
        onPromptInsert(html);
    };
    return /*#__PURE__*/ jsxRuntime.jsx("li", {
        className: "mtw:py-2 mtw:px-3 mtw:cursor-pointer mtw:hover:bg-primary-90 mtw:text-sm mtw:truncate",
        onClick: handlePromptInsert,
        dangerouslySetInnerHTML: {
            __html: html
        }
    });
};

const PromptsPopover = ({ editorRef, popoverAnchorEl, showPrompts, closePrompts, onPromptInsert })=>{
    const { api } = useMoniteContext();
    const { i18n } = react.useLingui();
    const { data } = api.ai.getAiPrompts.useQuery();
    const { data: userPrompts = [] } = data || {};
    const defaultPrompts = React.useMemo(()=>getDefaultPrompts(i18n), [
        i18n
    ]);
    const handlePreserveInputFocus = ()=>{
        if (!editorRef.current) {
            return;
        }
        editorRef.current.focus();
    };
    const promptList = React.useMemo(()=>[
            ...defaultPrompts,
            ...userPrompts
        ], [
        defaultPrompts,
        userPrompts
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(material.Popover, {
        anchorEl: popoverAnchorEl,
        anchorOrigin: {
            vertical: 'top',
            horizontal: 'left'
        },
        transformOrigin: {
            vertical: 'bottom',
            horizontal: 'left'
        },
        slotProps: {
            paper: {
                className: cn('mtw:!w-[20rem] mtw:2xl:!w-[56rem] mtw:lg:!w-[42rem]', 'mtw:md:!w-[32rem] mtw:sm:!w-[28rem] mtw:!shadow-md', 'mtw:!border mtw:!border-solid mtw:!border-gray-200')
            }
        },
        open: showPrompts,
        onClose: closePrompts,
        children: /*#__PURE__*/ jsxRuntime.jsx("div", {
            onFocus: handlePreserveInputFocus,
            className: cn('mtw:w-[20rem] mtw:p-0 mtw:max-h-40 mtw:overflow-y-auto', 'mtw:2xl:w-[56rem] mtw:lg:w-[42rem] mtw:md:w-[32rem] mtw:sm:w-[28rem]'),
            children: /*#__PURE__*/ jsxRuntime.jsx("ul", {
                className: "mtw:m-0 mtw:p-0",
                children: promptList.map(({ content, id })=>/*#__PURE__*/ jsxRuntime.jsx(PromptsPopoverItem, {
                        content: content,
                        onPromptInsert: onPromptInsert
                    }, id))
            })
        })
    });
};

function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
const ChatInput = ({ isNewChat, onStartConversation, isEnlarged, view, setInitialInput })=>{
    const editorRef = React.useRef(null);
    const { i18n } = react.useLingui();
    const { api, queryClient } = useMoniteContext();
    const [showPrompts, setShowPrompts] = React.useState(false);
    const [popoverAnchorEl, setPopoverAnchorEl] = React.useState(null);
    const { id, input, status, setInput, handleSubmit } = useAIAssistantChat();
    const isStreaming = status === 'streaming';
    const isDisabled = !input || isStreaming;
    const updateHistory = ()=>{
        api.ai.getAiConversations.setQueryData(api.ai.getAiConversations.getQueryKey(), (data)=>{
            if (!(data === null || data === void 0 ? void 0 : data.data) || !Array.isArray(data.data)) {
                return data;
            }
            const newConversation = {
                id,
                title: i18n._({
                    id: "q2+WzE"
                }),
                created_at: new Date().toISOString(),
                is_starred: false,
                messages: []
            };
            return _object_spread_props(_object_spread({}, data), {
                data: [
                    newConversation,
                    ...data.data
                ]
            });
        }, queryClient);
    };
    const handleClearInput = ()=>{
        if (!editorRef.current) {
            return;
        }
        editorRef.current.innerHTML = '';
        setInput('');
        setInitialInput('');
        if (isNewChat) {
            onStartConversation();
            updateHistory();
        }
    };
    const handleInputSubmit = (e)=>{
        if (!editorRef.current) {
            return;
        }
        handleSubmit(e);
        handleClearInput();
    };
    const handleClosePrompts = React.useCallback(()=>{
        setShowPrompts(false);
    }, []);
    const handleKeyDown = (e)=>{
        var _window_getSelection;
        const shouldRemoveInnerHtml = (e.key === 'Backspace' || e.key === 'Delete') && editorRef && editorRef.current && editorRef.current.textContent && (editorRef.current.textContent.split('').length === 1 || ((_window_getSelection = window.getSelection()) === null || _window_getSelection === void 0 ? void 0 : _window_getSelection.toString().length) === editorRef.current.textContent.split('').length);
        if (e.key === 'Escape') {
            handleClosePrompts();
        }
        if (shouldRemoveInnerHtml) {
            handleClearInput();
            handleClosePrompts();
        }
        const isEnterPressed = e.key === 'Enter' && !e.shiftKey;
        if (!isEnterPressed) {
            return;
        }
        handleInputSubmit(e);
    };
    const handleInput = React.useCallback((e)=>{
        var _e_target_textContent;
        const content = (_e_target_textContent = e.target.textContent) !== null && _e_target_textContent !== void 0 ? _e_target_textContent : '';
        if (content === '/') {
            const selection = window.getSelection();
            if (selection && selection.rangeCount > 0) {
                setShowPrompts(true);
            }
        }
        setInput(content);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const handlePromptInsert = React.useCallback((prompt)=>{
        if (!editorRef.current) {
            return;
        }
        const currentContent = editorRef.current.innerHTML;
        const slashIndex = currentContent.indexOf('/');
        if (slashIndex !== -1) {
            editorRef.current.innerHTML = prompt;
            handleClosePrompts();
            setInput(prompt);
            setCursorAtTheEnd(editorRef.current);
        }
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    const handlePaste = React.useCallback((text)=>{
        setInput(text);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    React.useEffect(()=>{
        const isFocused = document.activeElement === editorRef.current;
        if (!editorRef.current || isFocused) {
            return;
        }
        editorRef.current.innerHTML = input;
        editorRef.current.focus();
        setCursorAtTheEnd(editorRef.current);
        if (!input) {
            return;
        }
        setInitialInput(input);
    }, [
        input,
        setInitialInput
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs("div", {
        ref: (node)=>{
            setPopoverAnchorEl(node);
        },
        className: cn('mtw:w-full mtw:mx-auto mtw:flex mtw:flex-col mtw:gap-2 mtw:p-4', 'mtw:sticky mtw:bottom-0 mtw:mt-auto', isEnlarged && 'mtw:2xl:max-w-4xl mtw:lg:max-w-2xl mtw:md:max-w-lg mtw:sm:max-w-md mtw:max-w-xs'),
        children: [
            view === 'start' && /*#__PURE__*/ jsxRuntime.jsx(PromptSuggestions, {
                isEnlarged: isEnlarged
            }),
            /*#__PURE__*/ jsxRuntime.jsxs("form", {
                className: cn('mtw:flex mtw:items-center mtw:gap-2 mtw:rounded-xl mtw:p-3 mtw:w-full', 'mtw:border mtw:border-transparent mtw:border-solid mtw:bg-gray-100', 'mtw:hover:border-primary-50 mtw:relative'),
                onSubmit: handleInputSubmit,
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx(AIRichEditor, {
                        ref: editorRef,
                        handleInput: handleInput,
                        handleKeyDown: handleKeyDown,
                        handlePaste: handlePaste
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx(PromptsPopover, {
                        editorRef: editorRef,
                        popoverAnchorEl: popoverAnchorEl,
                        closePrompts: handleClosePrompts,
                        showPrompts: showPrompts,
                        onPromptInsert: handlePromptInsert
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("button", {
                        className: cn('mtw:shrink-0 mtw:bg-black mtw:h-9 mtw:w-9 mtw:rounded-full', 'mtw:flex mtw:justify-center mtw:items-center mtw:self-end', isDisabled ? 'mtw:cursor-default mtw:bg-gray-500' : 'mtw:cursor-pointer'),
                        disabled: isDisabled,
                        type: "submit",
                        "aria-label": i18n._({
                            id: "6oTsos"
                        }),
                        children: /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ArrowUp, {
                            className: "mtw:text-white",
                            size: 16
                        })
                    })
                ]
            })
        ]
    });
};

function asyncGeneratorStep$1(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator$1(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep$1(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep$1(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const AIAssistant = ()=>/*#__PURE__*/ jsxRuntime.jsx(MoniteScopedProviders, {
        children: /*#__PURE__*/ jsxRuntime.jsx(AIAssistantBase, {})
    });
const AIAssistantBase = ()=>{
    const { i18n } = react.useLingui();
    const { api } = useMoniteContext();
    const isMobile = useIsMobile();
    const [conversationId, setConversationId] = React.useState('');
    const [view, setView] = React.useState('start');
    const [isNewChat, setIsNewChat] = React.useState(true);
    const [open, setOpen] = React.useState(false);
    const [isEnlarged, setIsEnlarged] = React.useState(false);
    const [initialInput, setInitialInput] = React.useState('');
    const withOverlay = open && isEnlarged;
    const { mutateAsync: fetchConversationId } = api.ai.postAiConversations.useMutation();
    const getConversationId = React.useCallback(()=>_async_to_generator$1(function*() {
            const { id: conversationId } = yield fetchConversationId({});
            if (!conversationId) {
                return;
            }
            setConversationId(conversationId);
        })(), [
        fetchConversationId
    ]);
    const handleStartConversation = React.useCallback(()=>{
        setView('chat');
    }, []);
    React.useEffect(()=>{
        if (conversationId) {
            return;
        }
        getConversationId();
    }, [
        conversationId,
        getConversationId
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(Popover, {
        modal: true,
        open: open,
        onOpenChange: setOpen,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(PopoverTrigger, {
                disabled: !conversationId,
                asChild: true,
                children: /*#__PURE__*/ jsxRuntime.jsx(Button, {
                    className: cn('mtw:absolute mtw:bottom-0 mtw:right-6 mtw:bg-black', 'mtw:rounded-t-xl  mtw:text-white mtw:hover:bg-black  mtw:rounded-b-none'),
                    variant: "default",
                    size: "lg",
                    children: open ? /*#__PURE__*/ jsxRuntime.jsx(lucideReact.ChevronDownIcon, {
                        className: "size-6",
                        size: 24
                    }) : /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
                        children: [
                            /*#__PURE__*/ jsxRuntime.jsx(AssistantLogo, {
                                sx: {
                                    fontSize: 28
                                }
                            }),
                            /*#__PURE__*/ jsxRuntime.jsxs("span", {
                                children: [
                                    " ",
                                    i18n._({
                                        id: "xWEvuo"
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsxs(PopoverContent, {
                align: "end",
                className: cn('mtw:rounded-3xl mtw:shadow-xl mtw:p-0 mtw:border-border', 'mtw:flex mtw:w-[400px] mtw:h-[640px] mtw:!z-[1205]', 'mtw:transition-[width,height] mtw:duration-300 mtw:ease-linear', isEnlarged && 'mtw:w-[calc(100vw-50px)] mtw:h-[calc(100vh-64px)]'),
                children: [
                    isEnlarged && !isMobile && /*#__PURE__*/ jsxRuntime.jsx(AISidebarWrapper, {
                        children: /*#__PURE__*/ jsxRuntime.jsx(ChatHistory, {
                            isEnlarged: true,
                            conversationId: conversationId,
                            setConversationId: setConversationId,
                            setIsNewChat: setIsNewChat,
                            setView: setView
                        })
                    }),
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "mtw:grow mtw:flex mtw:flex-col mtw:gap-6 mtw:w-full",
                        children: /*#__PURE__*/ jsxRuntime.jsxs(AIAssistantChatProvider, {
                            isNewChat: isNewChat,
                            setIsNewChat: setIsNewChat,
                            conversationId: conversationId,
                            initialInput: initialInput,
                            children: [
                                /*#__PURE__*/ jsxRuntime.jsx(AssistantHeader, {
                                    isEnlarged: isEnlarged,
                                    setIsEnlarged: setIsEnlarged,
                                    view: view,
                                    setView: setView,
                                    setConversationId: setConversationId,
                                    setIsNewChat: setIsNewChat
                                }),
                                view === 'chat' && /*#__PURE__*/ jsxRuntime.jsx(AIChat, {
                                    isEnlarged: isEnlarged
                                }),
                                view === 'history' && /*#__PURE__*/ jsxRuntime.jsx(ChatHistory, {
                                    conversationId: conversationId,
                                    setConversationId: setConversationId,
                                    setIsNewChat: setIsNewChat,
                                    setView: setView,
                                    isEnlarged: false
                                }),
                                view !== 'history' && /*#__PURE__*/ jsxRuntime.jsx(ChatInput, {
                                    view: view,
                                    isEnlarged: isEnlarged,
                                    isNewChat: isNewChat,
                                    setInitialInput: setInitialInput,
                                    onStartConversation: handleStartConversation
                                })
                            ]
                        })
                    }, conversationId)
                ]
            }),
            withOverlay && /*#__PURE__*/ jsxRuntime.jsx("div", {
                className: cn('mtw:absolute mtw:w-screen mtw:h-screen mtw:z-[1204]', 'mtw:bg-black mtw:opacity-30 mtw:top-0 mtw:left-0')
            })
        ]
    });
};

const GlobalToast = ()=>{
    const theme = material.useTheme();
    return /*#__PURE__*/ jsxRuntime.jsx(reactHotToast.Toaster, {
        toastOptions: {
            style: {
                padding: '8px 12px',
                borderRadius: '4px',
                fontFamily: theme.typography.body1.fontFamily,
                fontWeight: 500,
                fontSize: '14px',
                lineHeight: '20px',
                background: theme.palette.grey[900],
                color: theme.palette.grey[50]
            }
        },
        gutter: 8,
        position: "bottom-left",
        containerStyle: {
            top: 40,
            left: 40,
            bottom: 40,
            right: 40
        }
    });
};

var css_248z = "/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */\n@layer properties{@supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))){*,:before,:after,::backdrop{--tw-translate-x:0;--tw-translate-y:0;--tw-translate-z:0;--tw-space-y-reverse:0;--tw-border-style:solid;--tw-gradient-position:initial;--tw-gradient-from:#0000;--tw-gradient-via:#0000;--tw-gradient-to:#0000;--tw-gradient-stops:initial;--tw-gradient-via-stops:initial;--tw-gradient-from-position:0%;--tw-gradient-via-position:50%;--tw-gradient-to-position:100%;--tw-leading:initial;--tw-font-weight:initial;--tw-tracking:initial;--tw-ordinal:initial;--tw-slashed-zero:initial;--tw-numeric-figure:initial;--tw-numeric-spacing:initial;--tw-numeric-fraction:initial;--tw-shadow:0 0 #0000;--tw-shadow-color:initial;--tw-shadow-alpha:100%;--tw-inset-shadow:0 0 #0000;--tw-inset-shadow-color:initial;--tw-inset-shadow-alpha:100%;--tw-ring-color:initial;--tw-ring-shadow:0 0 #0000;--tw-inset-ring-color:initial;--tw-inset-ring-shadow:0 0 #0000;--tw-ring-inset:initial;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-offset-shadow:0 0 #0000;--tw-duration:initial;--tw-ease:initial;--tw-outline-style:solid}}}@layer theme{:root,:host{--mtw-font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;--mtw-color-red-50:oklch(97.1% .013 17.38);--mtw-color-red-100:oklch(93.6% .032 17.717);--mtw-color-red-500:oklch(63.7% .237 25.331);--mtw-color-red-600:oklch(57.7% .245 27.325);--mtw-color-red-900:oklch(39.6% .141 25.723);--mtw-color-red-950:oklch(25.8% .092 26.042);--mtw-color-amber-50:oklch(98.7% .022 95.277);--mtw-color-amber-600:oklch(66.6% .179 58.318);--mtw-color-yellow-50:oklch(98.7% .026 102.212);--mtw-color-yellow-100:oklch(97.3% .071 103.193);--mtw-color-yellow-900:oklch(42.1% .095 57.708);--mtw-color-yellow-950:oklch(28.6% .066 53.813);--mtw-color-green-50:oklch(98.2% .018 155.826);--mtw-color-green-100:oklch(96.2% .044 156.743);--mtw-color-green-500:oklch(72.3% .219 149.579);--mtw-color-green-600:oklch(62.7% .194 149.214);--mtw-color-green-900:oklch(39.3% .095 152.535);--mtw-color-green-950:oklch(26.6% .065 152.934);--mtw-color-blue-50:oklch(97% .014 254.604);--mtw-color-blue-100:oklch(93.2% .032 255.585);--mtw-color-blue-600:oklch(54.6% .245 262.881);--mtw-color-blue-900:oklch(37.9% .146 265.522);--mtw-color-blue-950:oklch(28.2% .091 267.935);--mtw-color-purple-50:oklch(97.7% .014 308.299);--mtw-color-purple-600:oklch(55.8% .288 302.321);--mtw-color-slate-50:oklch(98.4% .003 247.858);--mtw-color-slate-200:oklch(92.9% .013 255.508);--mtw-color-gray-100:oklch(96.7% .003 264.542);--mtw-color-gray-200:oklch(92.8% .006 264.531);--mtw-color-gray-500:oklch(55.1% .027 264.364);--mtw-color-gray-700:oklch(37.3% .034 259.733);--mtw-color-gray-800:oklch(27.8% .033 256.848);--mtw-color-gray-950:oklch(13% .028 261.692);--mtw-color-neutral-50:var(--mtw-color-neutral-50);--mtw-color-neutral-200:oklch(92.2% 0 0);--mtw-color-black:#000;--mtw-color-white:#fff;--mtw-spacing:.25rem;--mtw-container-xs:20rem;--mtw-container-sm:24rem;--mtw-container-md:28rem;--mtw-container-lg:32rem;--mtw-container-2xl:42rem;--mtw-container-3xl:48rem;--mtw-container-4xl:56rem;--mtw-text-xs:.75rem;--mtw-text-xs--line-height:calc(1/.75);--mtw-text-sm:.875rem;--mtw-text-sm--line-height:calc(1.25/.875);--mtw-text-base:1rem;--mtw-text-base--line-height:calc(1.5/1);--mtw-text-lg:1.125rem;--mtw-text-lg--line-height:calc(1.75/1.125);--mtw-text-xl:1.25rem;--mtw-text-xl--line-height:calc(1.75/1.25);--mtw-text-2xl:1.5rem;--mtw-text-2xl--line-height:calc(2/1.5);--mtw-font-weight-normal:400;--mtw-font-weight-medium:500;--mtw-font-weight-semibold:600;--mtw-font-weight-bold:700;--mtw-tracking-tight:-.025em;--mtw-tracking-widest:.1em;--mtw-leading-relaxed:1.625;--mtw-radius-xs:.125rem;--mtw-radius-3xl:1.5rem;--mtw-ease-in-out:cubic-bezier(.4,0,.2,1);--mtw-animate-spin:spin 1s linear infinite;--mtw-animate-pulse:pulse 2s cubic-bezier(.4,0,.6,1)infinite;--mtw-default-transition-duration:.15s;--mtw-default-transition-timing-function:cubic-bezier(.4,0,.2,1);--mtw-default-font-family:var(--mtw-font-family);--mtw-default-mono-font-family:var(--mtw-font-mono);--mtw-color-primary-10:var(--mtw-color-primary-10);--mtw-color-primary-20:var(--mtw-color-primary-20);--mtw-color-primary-30:var(--mtw-color-primary-30);--mtw-color-primary-40:var(--mtw-color-primary-40);--mtw-color-primary-50:var(--mtw-color-primary-50);--mtw-color-primary-60:var(--mtw-color-primary-60);--mtw-color-primary-70:var(--mtw-color-primary-70);--mtw-color-primary-80:var(--mtw-color-primary-80);--mtw-color-primary-85:var(--mtw-color-primary-85);--mtw-color-primary-90:var(--mtw-color-primary-90);--mtw-color-primary-95:var(--mtw-color-primary-95);--mtw-color-neutral-10:var(--mtw-color-neutral-10);--mtw-color-neutral-30:var(--mtw-color-neutral-30);--mtw-color-neutral-70:var(--mtw-color-neutral-70);--mtw-color-neutral-80:var(--mtw-color-neutral-80);--mtw-color-neutral-90:var(--mtw-color-neutral-90);--mtw-color-neutral-95:var(--mtw-color-neutral-95);--mtw-color-danger-10:var(--mtw-color-error-10);--mtw-color-danger-50:var(--mtw-color-error-50);--mtw-color-success-10:var(--mtw-color-success-10);--mtw-color-success-30:var(--mtw-color-success-30);--mtw-color-success-50:var(--mtw-color-success-50);--mtw-color-success-60:var(--mtw-color-success-60);--mtw-color-success-80:var(--mtw-color-success-80);--mtw-color-success-90:var(--mtw-color-success-90);--mtw-color-success-95:var(--mtw-color-success-95);--mtw-color-warning-10:var(--mtw-color-warning-10);--mtw-color-warning-30:var(--mtw-color-warning-30);--mtw-color-warning-50:var(--mtw-color-warning-50);--mtw-color-warning-60:var(--mtw-color-warning-60);--mtw-color-warning-80:var(--mtw-color-warning-80);--mtw-color-warning-90:var(--mtw-color-warning-90);--mtw-color-warning-95:var(--mtw-color-warning-95);--mtw-border:var(--mtw-border);--mtw-sidebar-foreground:var(--mtw-sidebar-foreground);--mtw-sidebar-primary:var(--mtw-sidebar-primary);--mtw-sidebar-primary-foreground:var(--mtw-sidebar-primary-foreground);--mtw-sidebar-accent:var(--mtw-sidebar-accent);--mtw-sidebar-accent-foreground:var(--mtw-sidebar-accent-foreground);--mtw-sidebar-border:var(--mtw-sidebar-border);--mtw-sidebar-ring:var(--mtw-sidebar-ring);--mtw-color-primary-foreground:var(--mtw-primary-foreground)}}@layer base{*,:after,:before,::backdrop{box-sizing:border-box;border:0 solid;margin:0;padding:0}::file-selector-button{box-sizing:border-box;border:0 solid;margin:0;padding:0}html,:host{-webkit-text-size-adjust:100%;tab-size:4;line-height:1.5;font-family:var(--mtw-default-font-family,ui-sans-serif,system-ui,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:var(--mtw-default-font-feature-settings,normal);font-variation-settings:var(--mtw-default-font-variation-settings,normal);-webkit-tap-highlight-color:transparent}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;-webkit-text-decoration:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:var(--mtw-default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-feature-settings:var(--mtw-default-mono-font-feature-settings,normal);font-variation-settings:var(--mtw-default-mono-font-variation-settings,normal);font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}ol,ul,menu{list-style:none}img,svg,video,canvas,audio,iframe,embed,object{vertical-align:middle;display:block}img,video{max-width:100%;height:auto}button,input,select,optgroup,textarea{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}::file-selector-button{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::file-selector-button{margin-inline-end:4px}::placeholder{opacity:1}@supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px){::placeholder{color:currentColor}@supports (color:color-mix(in lab, red, red)){::placeholder{color:color-mix(in oklab,currentcolor 50%,transparent)}}}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit{padding-block:0}::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-month-field{padding-block:0}::-webkit-datetime-edit-day-field{padding-block:0}::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field{padding-block:0}::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-millisecond-field{padding-block:0}::-webkit-datetime-edit-meridiem-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){appearance:button}::file-selector-button{appearance:button}::-webkit-inner-spin-button{height:auto}::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}.markdown{font-size:.875rem;line-height:1.42857}.markdown.markdown.markdown table{border-collapse:separate;border-spacing:0;width:100%;margin-block:.875rem;display:block;overflow-x:auto}.markdown th{text-align:left;background-color:var(--mtw-color-primary-65);border-top-width:1px;border-bottom-width:1px;font-weight:600}.markdown th:is(.markdown th) strong{font-size:.875rem;line-height:1.42857}.markdown th:first-of-type{border-top-left-radius:calc(var(--mtw-radius) - 4px);border-left-width:1px}.markdown th:last-of-type{border-top-right-radius:calc(var(--mtw-radius) - 4px);border-right-width:1px}.markdown td{white-space:nowrap;border-bottom-width:1px}.markdown tr>td:first-of-type{border-left-width:1px}.markdown td:last-of-type{border-right-width:1px}.markdown tbody tr:last-of-type td:first-of-type{border-bottom-left-radius:calc(var(--mtw-radius) - 4px)}.markdown tbody tr:last-of-type td:last-child{border-bottom-right-radius:calc(var(--mtw-radius) - 4px)}.markdown strong{font-weight:600}.markdown [class~=lead]{margin-top:1.2em;margin-bottom:1.2em;font-size:1.25em;line-height:1.6}.markdown a{position:relative}.markdown a:before{content:\"\";pointer-events:none;width:100%;height:3px;position:absolute;bottom:-.3em;left:0;right:0}.markdown a:hover:before,.markdown a:focus:before{transform:scaleX(.95)}.markdown strong{font-size:.875rem;font-weight:600;line-height:1.42857}.markdown ol{counter-reset:list-counter;margin-top:1.25em;margin-bottom:1.25em}.markdown ol>li{counter-increment:list-counter;padding-left:1.75em;position:relative}.markdown ol>li:before{content:counter(list-counter)\".\";color:oklch(37.3% .034 259.733);font-weight:400;position:absolute}.markdown ul>li{padding-left:1.75em;position:relative}.markdown ul>li:before{content:\"\";background-color:oklch(37.3% .034 259.733);border-radius:50%;width:.375rem;height:.375rem;position:absolute;top:.4375rem;left:.25rem}.markdown hr{border-top-width:1px;margin-top:3em;margin-bottom:3em}.markdown blockquote{color:#1a202c;quotes:\"“\"\"”\"\"‘\"\"’\";border-left-width:.25rem;margin-top:1.6em;margin-bottom:1.6em;padding-left:1em;font-style:italic;font-weight:500}.markdown blockquote p:first-of-type:before{content:open-quote}.markdown blockquote p:last-of-type:after{content:close-quote}.markdown h1{margin-top:0;margin-bottom:.888889em;font-size:2em;font-weight:800;line-height:1.11111}.markdown h2{margin-top:1.5em;margin-bottom:1em;font-size:1.25em;font-weight:700;line-height:1.33333}.markdown h3{margin-top:1em;margin-bottom:.6em;font-size:1em;font-weight:600;line-height:1.6}.markdown h4{margin-top:.75em;margin-bottom:.5em;font-weight:600;line-height:1.5}.markdown h5{margin-top:.5em;margin-bottom:.5em;font-weight:600;line-height:1.2}.markdown figure figcaption{color:oklch(44.6% .03 256.802);margin-top:.857143em;font-size:.875em;line-height:1.42857}.markdown code{color:oklch(21% .034 264.665);font-size:.875em;font-weight:600}.markdown code:before,.markdown code:after{content:\"`\"}.markdown pre{color:oklch(87.2% .01 258.338);background-color:oklch(27.8% .033 256.848);border-radius:.375rem;margin-top:1.71429em;margin-bottom:1.71429em;padding:.857143em 1.14286em;font-size:.875em;line-height:1.71429;overflow-x:auto}.markdown pre code{color:inherit;font-weight:400;font-size:inherit;font-family:inherit;line-height:inherit;background-color:#0000;border-width:0;border-radius:0;padding:0}.markdown pre code:before,.markdown pre code:after{content:\"\"}.markdown p{font-size:.875rem;font-weight:400;line-height:1.42857}.markdown img,.markdown video,.markdown figure{margin-top:2em;margin-bottom:2em}.markdown figure>*{margin-top:0;margin-bottom:0}.markdown h2 code{font-size:.875em}.markdown h3 code{font-size:.9em}.markdown ul{margin-top:1.25em;margin-bottom:1.25em}.markdown li{margin-top:.5em;font-size:.875rem;font-weight:400;line-height:1.42857}.markdown ol>li:before{left:0}.markdown>ul>li p{margin-top:0;margin-bottom:0}.markdown ul ul,.markdown ul ol,.markdown ol ul,.markdown ol ol{margin-top:.75em;margin-bottom:.75em}.markdown hr+*,.markdown h2+*,.markdown h3+*,.markdown h4+*,.markdown>:first-of-type{margin-top:0}.markdown>:last-child{margin-bottom:0}[data-placeholder]:empty:before{content:attr(data-placeholder);color:#6d737e;font-size:14px;font-weight:400}}@layer components;@layer utilities{.mtw\\:\\@container\\/card-header{container:card-header/inline-size}.mtw\\:pointer-events-none{pointer-events:none}.mtw\\:invisible{visibility:hidden}.mtw\\:visible{visibility:visible}.mtw\\:sr-only{clip:rect(0,0,0,0);white-space:nowrap;border-width:0;width:1px;height:1px;margin:-1px;padding:0;position:absolute;overflow:hidden}.mtw\\:\\!absolute{position:absolute!important}.mtw\\:absolute{position:absolute}.mtw\\:fixed{position:fixed}.mtw\\:relative{position:relative}.mtw\\:sticky{position:sticky}.mtw\\:inset-0{inset:calc(var(--mtw-spacing)*0)}.mtw\\:inset-x-0{inset-inline:calc(var(--mtw-spacing)*0)}.mtw\\:inset-y-0{inset-block:calc(var(--mtw-spacing)*0)}.mtw\\:\\!top-2{top:calc(var(--mtw-spacing)*2)!important}.mtw\\:top-0{top:calc(var(--mtw-spacing)*0)}.mtw\\:top-1\\/2{top:50%}.mtw\\:top-4{top:calc(var(--mtw-spacing)*4)}.mtw\\:top-\\[50\\%\\]{top:50%}.mtw\\:\\!right-2{right:calc(var(--mtw-spacing)*2)!important}.mtw\\:right-0{right:calc(var(--mtw-spacing)*0)}.mtw\\:right-2{right:calc(var(--mtw-spacing)*2)}.mtw\\:right-4{right:calc(var(--mtw-spacing)*4)}.mtw\\:right-6{right:calc(var(--mtw-spacing)*6)}.mtw\\:bottom-0{bottom:calc(var(--mtw-spacing)*0)}.mtw\\:left-0{left:calc(var(--mtw-spacing)*0)}.mtw\\:left-1\\/2{left:50%}.mtw\\:left-2{left:calc(var(--mtw-spacing)*2)}.mtw\\:left-\\[-9985px\\]{left:-9985px}.mtw\\:left-\\[50\\%\\]{left:50%}.mtw\\:\\!z-\\[1205\\]{z-index:1205!important}.mtw\\:z-50{z-index:50}.mtw\\:z-1300{z-index:1300}.mtw\\:z-\\[1204\\]{z-index:1204}.mtw\\:col-start-2{grid-column-start:2}.mtw\\:row-span-2{grid-row:span 2/span 2}.mtw\\:row-start-1{grid-row-start:1}.mtw\\:m-0{margin:calc(var(--mtw-spacing)*0)}.mtw\\:m-auto{margin:auto}.mtw\\:-mx-1{margin-inline:calc(var(--mtw-spacing)*-1)}.mtw\\:mx-1{margin-inline:calc(var(--mtw-spacing)*1)}.mtw\\:mx-2{margin-inline:calc(var(--mtw-spacing)*2)}.mtw\\:mx-auto{margin-inline:auto}.mtw\\:my-1{margin-block:calc(var(--mtw-spacing)*1)}.mtw\\:-mt-20{margin-top:calc(var(--mtw-spacing)*-20)}.mtw\\:mt-1{margin-top:calc(var(--mtw-spacing)*1)}.mtw\\:mt-2{margin-top:calc(var(--mtw-spacing)*2)}.mtw\\:mt-3{margin-top:calc(var(--mtw-spacing)*3)}.mtw\\:mt-4{margin-top:calc(var(--mtw-spacing)*4)}.mtw\\:mt-12{margin-top:calc(var(--mtw-spacing)*12)}.mtw\\:mt-auto{margin-top:auto}.mtw\\:mr-1{margin-right:calc(var(--mtw-spacing)*1)}.mtw\\:mr-2{margin-right:calc(var(--mtw-spacing)*2)}.mtw\\:mr-auto{margin-right:auto}.mtw\\:mb-1{margin-bottom:calc(var(--mtw-spacing)*1)}.mtw\\:mb-2{margin-bottom:calc(var(--mtw-spacing)*2)}.mtw\\:mb-4{margin-bottom:calc(var(--mtw-spacing)*4)}.mtw\\:mb-6{margin-bottom:calc(var(--mtw-spacing)*6)}.mtw\\:mb-8{margin-bottom:calc(var(--mtw-spacing)*8)}.mtw\\:ml-0\\.5{margin-left:calc(var(--mtw-spacing)*.5)}.mtw\\:ml-1{margin-left:calc(var(--mtw-spacing)*1)}.mtw\\:ml-2{margin-left:calc(var(--mtw-spacing)*2)}.mtw\\:ml-auto{margin-left:auto}.mtw\\:box-border{box-sizing:border-box}.mtw\\:box-border\\!{box-sizing:border-box!important}.mtw\\:box-content{box-sizing:content-box}.mtw\\:box-content\\!{box-sizing:content-box!important}.mtw\\:line-clamp-2{-webkit-line-clamp:2;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.mtw\\:block{display:block}.mtw\\:flex{display:flex}.mtw\\:grid{display:grid}.mtw\\:inline-block{display:inline-block}.mtw\\:inline-flex{display:inline-flex}.mtw\\:field-sizing-content{field-sizing:content}.mtw\\:aspect-square{aspect-ratio:1}.mtw\\:size-\\(--cell-size\\){width:var(--cell-size);height:var(--cell-size)}.mtw\\:size-2{width:calc(var(--mtw-spacing)*2);height:calc(var(--mtw-spacing)*2)}.mtw\\:size-2\\.5{width:calc(var(--mtw-spacing)*2.5);height:calc(var(--mtw-spacing)*2.5)}.mtw\\:size-3\\.5{width:calc(var(--mtw-spacing)*3.5);height:calc(var(--mtw-spacing)*3.5)}.mtw\\:size-4{width:calc(var(--mtw-spacing)*4);height:calc(var(--mtw-spacing)*4)}.mtw\\:size-8{width:calc(var(--mtw-spacing)*8);height:calc(var(--mtw-spacing)*8)}.mtw\\:size-9{width:calc(var(--mtw-spacing)*9);height:calc(var(--mtw-spacing)*9)}.mtw\\:size-auto{width:auto;height:auto}.mtw\\:size-full{width:100%;height:100%}.mtw\\:\\!h-4{height:calc(var(--mtw-spacing)*4)!important}.mtw\\:\\!h-6{height:calc(var(--mtw-spacing)*6)!important}.mtw\\:h-\\(--cell-size\\){height:var(--cell-size)}.mtw\\:h-0{height:calc(var(--mtw-spacing)*0)}.mtw\\:h-1\\.5{height:calc(var(--mtw-spacing)*1.5)}.mtw\\:h-2{height:calc(var(--mtw-spacing)*2)}.mtw\\:h-2\\.5{height:calc(var(--mtw-spacing)*2.5)}.mtw\\:h-3{height:calc(var(--mtw-spacing)*3)}.mtw\\:h-3\\.5{height:calc(var(--mtw-spacing)*3.5)}.mtw\\:h-4{height:calc(var(--mtw-spacing)*4)}.mtw\\:h-5{height:calc(var(--mtw-spacing)*5)}.mtw\\:h-8{height:calc(var(--mtw-spacing)*8)}.mtw\\:h-9{height:calc(var(--mtw-spacing)*9)}.mtw\\:h-10{height:calc(var(--mtw-spacing)*10)}.mtw\\:h-21{height:calc(var(--mtw-spacing)*21)}.mtw\\:h-30{height:calc(var(--mtw-spacing)*30)}.mtw\\:h-\\[6px\\]{height:6px}.mtw\\:h-\\[7px\\]{height:7px}.mtw\\:h-\\[85\\%\\]{height:85%}.mtw\\:h-\\[87px\\]{height:87px}.mtw\\:h-\\[92px\\]{height:92px}.mtw\\:h-\\[142px\\]{height:142px}.mtw\\:h-\\[170px\\]{height:170px}.mtw\\:h-\\[300px\\]{height:300px}.mtw\\:h-\\[320px\\]{height:320px}.mtw\\:h-\\[350px\\]{height:350px}.mtw\\:h-\\[566px\\]{height:566px}.mtw\\:h-\\[640px\\]{height:640px}.mtw\\:h-\\[calc\\(100\\%-1px\\)\\]{height:calc(100% - 1px)}.mtw\\:h-\\[calc\\(100vh-64px\\)\\]{height:calc(100vh - 64px)}.mtw\\:h-\\[calc\\(100vh-290px\\)\\]{height:calc(100vh - 290px)}.mtw\\:h-\\[var\\(--radix-select-trigger-height\\)\\]{height:var(--radix-select-trigger-height)}.mtw\\:h-auto{height:auto}.mtw\\:h-full{height:100%}.mtw\\:h-px{height:1px}.mtw\\:h-screen{height:100vh}.mtw\\:max-h-\\(--radix-dropdown-menu-content-available-height\\){max-height:var(--radix-dropdown-menu-content-available-height)}.mtw\\:max-h-\\(--radix-select-content-available-height\\){max-height:var(--radix-select-content-available-height)}.mtw\\:max-h-4\\/5{max-height:80%}.mtw\\:max-h-30{max-height:calc(var(--mtw-spacing)*30)}.mtw\\:max-h-40{max-height:calc(var(--mtw-spacing)*40)}.mtw\\:max-h-\\[192px\\]{max-height:192px}.mtw\\:max-h-\\[300px\\]{max-height:300px}.mtw\\:max-h-full{max-height:100%}.mtw\\:min-h-0{min-height:calc(var(--mtw-spacing)*0)}.mtw\\:min-h-10{min-height:calc(var(--mtw-spacing)*10)}.mtw\\:min-h-16{min-height:calc(var(--mtw-spacing)*16)}.mtw\\:min-h-\\[29\\.7cm\\]{min-height:29.7cm}.mtw\\:min-h-\\[92px\\]{min-height:92px}.mtw\\:min-h-\\[110px\\]{min-height:110px}.mtw\\:min-h-\\[1123px\\]{min-height:1123px}.mtw\\:min-h-\\[1219px\\]{min-height:1219px}.mtw\\:\\!w-4{width:calc(var(--mtw-spacing)*4)!important}.mtw\\:\\!w-6{width:calc(var(--mtw-spacing)*6)!important}.mtw\\:\\!w-\\[20rem\\]{width:20rem!important}.mtw\\:w-\\(--cell-size\\){width:var(--cell-size)}.mtw\\:w-0{width:calc(var(--mtw-spacing)*0)}.mtw\\:w-2{width:calc(var(--mtw-spacing)*2)}.mtw\\:w-2\\.5{width:calc(var(--mtw-spacing)*2.5)}.mtw\\:w-3{width:calc(var(--mtw-spacing)*3)}.mtw\\:w-3\\.5{width:calc(var(--mtw-spacing)*3.5)}.mtw\\:w-3\\/4{width:75%}.mtw\\:w-4{width:calc(var(--mtw-spacing)*4)}.mtw\\:w-5{width:calc(var(--mtw-spacing)*5)}.mtw\\:w-8{width:calc(var(--mtw-spacing)*8)}.mtw\\:w-9{width:calc(var(--mtw-spacing)*9)}.mtw\\:w-10{width:calc(var(--mtw-spacing)*10)}.mtw\\:w-18{width:calc(var(--mtw-spacing)*18)}.mtw\\:w-20{width:calc(var(--mtw-spacing)*20)}.mtw\\:w-44{width:calc(var(--mtw-spacing)*44)}.mtw\\:w-56{width:calc(var(--mtw-spacing)*56)}.mtw\\:w-60{width:calc(var(--mtw-spacing)*60)}.mtw\\:w-72{width:calc(var(--mtw-spacing)*72)}.mtw\\:w-\\[20rem\\]{width:20rem}.mtw\\:w-\\[21cm\\]{width:21cm}.mtw\\:w-\\[32rem\\]{width:32rem}.mtw\\:w-\\[45\\%\\]{width:45%}.mtw\\:w-\\[98\\%\\]{width:98%}.mtw\\:w-\\[100px\\]{width:100px}.mtw\\:w-\\[200px\\]{width:200px}.mtw\\:w-\\[262px\\]{width:262px}.mtw\\:w-\\[300px\\]{width:300px}.mtw\\:w-\\[400px\\]{width:400px}.mtw\\:w-\\[550px\\]{width:550px}.mtw\\:w-\\[600px\\]{width:600px}.mtw\\:w-\\[calc\\(100\\%-50px\\)\\]{width:calc(100% - 50px)}.mtw\\:w-\\[calc\\(100vw-50px\\)\\]{width:calc(100vw - 50px)}.mtw\\:w-auto{width:auto}.mtw\\:w-fit{width:fit-content}.mtw\\:w-full{width:100%}.mtw\\:w-px{width:1px}.mtw\\:w-screen{width:100vw}.mtw\\:max-w-4\\/5{max-width:80%}.mtw\\:max-w-\\[21cm\\]{max-width:21cm}.mtw\\:max-w-\\[70\\%\\]{max-width:70%}.mtw\\:max-w-\\[680px\\]{max-width:680px}.mtw\\:max-w-\\[1080px\\]{max-width:1080px}.mtw\\:max-w-\\[calc\\(100\\%-2rem\\)\\]{max-width:calc(100% - 2rem)}.mtw\\:max-w-full{max-width:100%}.mtw\\:max-w-screen{max-width:100vw}.mtw\\:max-w-sm{max-width:var(--mtw-container-sm)}.mtw\\:max-w-xs{max-width:var(--mtw-container-xs)}.mtw\\:min-w-\\(--cell-size\\){min-width:var(--cell-size)}.mtw\\:min-w-0{min-width:calc(var(--mtw-spacing)*0)}.mtw\\:min-w-5{min-width:calc(var(--mtw-spacing)*5)}.mtw\\:min-w-44{min-width:calc(var(--mtw-spacing)*44)}.mtw\\:min-w-\\[8rem\\]{min-width:8rem}.mtw\\:min-w-\\[21cm\\]{min-width:21cm}.mtw\\:min-w-\\[400px\\]{min-width:400px}.mtw\\:min-w-\\[550px\\]{min-width:550px}.mtw\\:min-w-\\[794px\\]{min-width:794px}.mtw\\:min-w-\\[890px\\]{min-width:890px}.mtw\\:min-w-\\[var\\(--radix-select-trigger-width\\)\\]{min-width:var(--radix-select-trigger-width)}.mtw\\:flex-1{flex:1}.mtw\\:flex-1\\/2{flex:50%}.mtw\\:flex-shrink-0,.mtw\\:shrink-0{flex-shrink:0}.mtw\\:grow{flex-grow:1}.mtw\\:border-collapse{border-collapse:collapse}.mtw\\:origin-\\(--radix-dropdown-menu-content-transform-origin\\){transform-origin:var(--radix-dropdown-menu-content-transform-origin)}.mtw\\:origin-\\(--radix-popover-content-transform-origin\\){transform-origin:var(--radix-popover-content-transform-origin)}.mtw\\:origin-\\(--radix-select-content-transform-origin\\){transform-origin:var(--radix-select-content-transform-origin)}.mtw\\:origin-\\(--radix-tooltip-content-transform-origin\\){transform-origin:var(--radix-tooltip-content-transform-origin)}.mtw\\:origin-center{transform-origin:50%}.mtw\\:-translate-1\\/2{--tw-translate-x:calc(calc(1/2*100%)*-1);--tw-translate-y:calc(calc(1/2*100%)*-1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:-translate-x-1\\/2{--tw-translate-x:calc(calc(1/2*100%)*-1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:translate-x-\\[-50\\%\\]{--tw-translate-x:-50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:-translate-y-1\\/2{--tw-translate-y:calc(calc(1/2*100%)*-1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:translate-y-0\\.5{--tw-translate-y:calc(var(--mtw-spacing)*.5);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:translate-y-\\[-50\\%\\]{--tw-translate-y:-50%;translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:translate-y-\\[calc\\(-50\\%_-_2px\\)\\]{--tw-translate-y:calc(-50% - 2px);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:rotate-45{rotate:45deg}.mtw\\:\\[transform\\:translateZ\\(0\\)\\]{transform:translateZ(0)}.mtw\\:animate-in{animation:enter var(--tw-duration,.15s)var(--tw-ease,ease)}.mtw\\:animate-pulse{animation:var(--mtw-animate-pulse)}.mtw\\:animate-spin{animation:var(--mtw-animate-spin)}.mtw\\:cursor-default{cursor:default}.mtw\\:cursor-pointer{cursor:pointer}.mtw\\:scroll-my-1{scroll-margin-block:calc(var(--mtw-spacing)*1)}.mtw\\:scroll-py-1{scroll-padding-block:calc(var(--mtw-spacing)*1)}.mtw\\:list-none{list-style-type:none}.mtw\\:auto-rows-min{grid-auto-rows:min-content}.mtw\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.mtw\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.mtw\\:grid-rows-\\[auto_auto\\]{grid-template-rows:auto auto}.mtw\\:flex-col{flex-direction:column}.mtw\\:flex-col-reverse{flex-direction:column-reverse}.mtw\\:flex-row{flex-direction:row}.mtw\\:flex-wrap{flex-wrap:wrap}.mtw\\:items-center{align-items:center}.mtw\\:items-end{align-items:flex-end}.mtw\\:items-start{align-items:flex-start}.mtw\\:\\!justify-start{justify-content:flex-start!important}.mtw\\:justify-between{justify-content:space-between}.mtw\\:justify-center{justify-content:center}.mtw\\:justify-end{justify-content:flex-end}.mtw\\:justify-start{justify-content:flex-start}.mtw\\:gap-0{gap:calc(var(--mtw-spacing)*0)}.mtw\\:gap-0\\.5{gap:calc(var(--mtw-spacing)*.5)}.mtw\\:gap-1{gap:calc(var(--mtw-spacing)*1)}.mtw\\:gap-1\\.5{gap:calc(var(--mtw-spacing)*1.5)}.mtw\\:gap-2{gap:calc(var(--mtw-spacing)*2)}.mtw\\:gap-2\\.5{gap:calc(var(--mtw-spacing)*2.5)}.mtw\\:gap-3{gap:calc(var(--mtw-spacing)*3)}.mtw\\:gap-4{gap:calc(var(--mtw-spacing)*4)}.mtw\\:gap-5{gap:calc(var(--mtw-spacing)*5)}.mtw\\:gap-6{gap:calc(var(--mtw-spacing)*6)}.mtw\\:gap-8{gap:calc(var(--mtw-spacing)*8)}.mtw\\:gap-10{gap:calc(var(--mtw-spacing)*10)}.mtw\\:gap-12{gap:calc(var(--mtw-spacing)*12)}:where(.mtw\\:space-y-2>:not(:last-child)){--tw-space-y-reverse:0;margin-block-start:calc(calc(var(--mtw-spacing)*2)*var(--tw-space-y-reverse));margin-block-end:calc(calc(var(--mtw-spacing)*2)*calc(1 - var(--tw-space-y-reverse)))}:where(.mtw\\:space-y-4>:not(:last-child)){--tw-space-y-reverse:0;margin-block-start:calc(calc(var(--mtw-spacing)*4)*var(--tw-space-y-reverse));margin-block-end:calc(calc(var(--mtw-spacing)*4)*calc(1 - var(--tw-space-y-reverse)))}.mtw\\:place-self-center{place-self:center}.mtw\\:self-end{align-self:flex-end}.mtw\\:self-start{align-self:flex-start}.mtw\\:justify-self-end{justify-self:flex-end}.mtw\\:truncate{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.mtw\\:overflow-auto{overflow:auto}.mtw\\:overflow-hidden{overflow:hidden}.mtw\\:overflow-x-auto{overflow-x:auto}.mtw\\:overflow-x-hidden{overflow-x:hidden}.mtw\\:overflow-y-auto{overflow-y:auto}.mtw\\:overflow-y-hidden{overflow-y:hidden}.mtw\\:\\!rounded{border-radius:.25rem!important}.mtw\\:\\!rounded-md{border-radius:calc(var(--mtw-radius) - 2px)!important}.mtw\\:rounded{border-radius:.25rem}.mtw\\:rounded-3xl{border-radius:var(--mtw-radius-3xl)}.mtw\\:rounded-\\[2px\\]{border-radius:2px}.mtw\\:rounded-\\[4px\\]{border-radius:4px}.mtw\\:rounded-\\[7\\.98px\\]{border-radius:7.98px}.mtw\\:rounded-full{border-radius:3.40282e38px}.mtw\\:rounded-lg{border-radius:var(--mtw-radius)}.mtw\\:rounded-md{border-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:rounded-none{border-radius:0}.mtw\\:rounded-sm{border-radius:calc(var(--mtw-radius) - 4px)}.mtw\\:rounded-xl{border-radius:calc(var(--mtw-radius) + 4px)}.mtw\\:rounded-xs{border-radius:var(--mtw-radius-xs)}.mtw\\:rounded-t-xl{border-top-left-radius:calc(var(--mtw-radius) + 4px);border-top-right-radius:calc(var(--mtw-radius) + 4px)}.mtw\\:rounded-l-md{border-top-left-radius:calc(var(--mtw-radius) - 2px);border-bottom-left-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:rounded-tl-none{border-top-left-radius:0}.mtw\\:rounded-r-md{border-top-right-radius:calc(var(--mtw-radius) - 2px);border-bottom-right-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:rounded-tr-none{border-top-right-radius:0}.mtw\\:rounded-b-none{border-bottom-right-radius:0;border-bottom-left-radius:0}.mtw\\:rounded-br-none{border-bottom-right-radius:0}.mtw\\:rounded-bl-none{border-bottom-left-radius:0}.mtw\\:\\!border{border-style:var(--tw-border-style)!important;border-width:1px!important}.mtw\\:border{border-style:var(--tw-border-style);border-width:1px}.mtw\\:border-0{border-style:var(--tw-border-style);border-width:0}.mtw\\:border-2{border-style:var(--tw-border-style);border-width:2px}.mtw\\:border-3{border-style:var(--tw-border-style);border-width:3px}.mtw\\:border-t{border-top-style:var(--tw-border-style);border-top-width:1px}.mtw\\:border-r{border-right-style:var(--tw-border-style);border-right-width:1px}.mtw\\:border-b,.mtw\\:border-b-1{border-bottom-style:var(--tw-border-style);border-bottom-width:1px}.mtw\\:\\!border-none{--tw-border-style:none!important;border-style:none!important}.mtw\\:\\!border-solid{--tw-border-style:solid!important;border-style:solid!important}.mtw\\:border-dashed{--tw-border-style:dashed;border-style:dashed}.mtw\\:border-none{--tw-border-style:none;border-style:none}.mtw\\:border-solid{--tw-border-style:solid;border-style:solid}.mtw\\:\\!border-border{border-color:var(--mtw-border)!important}.mtw\\:\\!border-gray-200{border-color:var(--mtw-color-gray-200)!important}.mtw\\:border-\\[\\#DEDEDE\\]{border-color:#dedede}.mtw\\:border-border{border-color:var(--mtw-border)}.mtw\\:border-danger-40{border-color:var(--mtw-color-error-40)}.mtw\\:border-gray-200{border-color:var(--mtw-color-gray-200)}.mtw\\:border-inherit{border-color:inherit}.mtw\\:border-input{border-color:var(--mtw-input)}.mtw\\:border-neutral-80{border-color:var(--mtw-color-neutral-80)}.mtw\\:border-neutral-200{border-color:var(--mtw-color-neutral-200)}.mtw\\:border-primary{border-color:var(--mtw-primary)}.mtw\\:border-primary-50{border-color:var(--mtw-color-primary-50)}.mtw\\:border-primary-80{border-color:var(--mtw-color-primary-80)}.mtw\\:border-primary-95{border-color:var(--mtw-color-primary-95)}.mtw\\:border-sidebar-border{border-color:var(--mtw-sidebar-border)}.mtw\\:border-transparent{border-color:#0000}.mtw\\:border-t-border{border-top-color:var(--mtw-border)}.mtw\\:border-t-transparent{border-top-color:#0000}.mtw\\:\\!bg-gray-800{background-color:var(--mtw-color-gray-800)!important}.mtw\\:\\!bg-transparent{background-color:#0000!important}.mtw\\:bg-\\[\\#F0F2F4\\]{background-color:#f0f2f4}.mtw\\:bg-\\[rgb\\(248\\,248\\,255\\)\\]{background-color:#f8f8ff}.mtw\\:bg-accent{background-color:var(--mtw-accent)}.mtw\\:bg-amber-50{background-color:var(--mtw-color-amber-50)}.mtw\\:bg-background{background-color:var(--mtw-background)}.mtw\\:bg-black,.mtw\\:bg-black\\/50{background-color:var(--mtw-color-black)}@supports (color:color-mix(in lab, red, red)){.mtw\\:bg-black\\/50{background-color:color-mix(in oklab,var(--mtw-color-black)50%,transparent)}}.mtw\\:bg-blue-50{background-color:var(--mtw-color-blue-50)}.mtw\\:bg-border{background-color:var(--mtw-border)}.mtw\\:bg-card{background-color:var(--mtw-card)}.mtw\\:bg-danger-90{background-color:var(--mtw-color-error-90)}.mtw\\:bg-danger-95{background-color:var(--mtw-color-error-95)}.mtw\\:bg-destructive{background-color:var(--mtw-destructive)}.mtw\\:bg-gray-100{background-color:var(--mtw-color-gray-100)}.mtw\\:bg-gray-200{background-color:var(--mtw-color-gray-200)}.mtw\\:bg-gray-500{background-color:var(--mtw-color-gray-500)}.mtw\\:bg-green-50{background-color:var(--mtw-color-green-50)}.mtw\\:bg-muted{background-color:var(--mtw-muted)}.mtw\\:bg-neutral-70{background-color:var(--mtw-color-neutral-70)}.mtw\\:bg-neutral-80{background-color:var(--mtw-color-neutral-80)}.mtw\\:bg-neutral-90{background-color:var(--mtw-color-neutral-90)}.mtw\\:bg-neutral-95{background-color:var(--mtw-color-neutral-95)}.mtw\\:bg-popover{background-color:var(--mtw-popover)}.mtw\\:bg-primary{background-color:var(--mtw-primary)}.mtw\\:bg-primary-60{background-color:var(--mtw-color-primary-60)}.mtw\\:bg-primary-80{background-color:var(--mtw-color-primary-80)}.mtw\\:bg-primary-85{background-color:var(--mtw-color-primary-85)}.mtw\\:bg-primary-90{background-color:var(--mtw-color-primary-90)}.mtw\\:bg-primary-95{background-color:var(--mtw-color-primary-95)}.mtw\\:bg-purple-50{background-color:var(--mtw-color-purple-50)}.mtw\\:bg-red-50{background-color:var(--mtw-color-red-50)}.mtw\\:bg-secondary{background-color:var(--mtw-secondary)}.mtw\\:bg-sidebar-accent{background-color:var(--mtw-sidebar-accent)}.mtw\\:bg-success-50{background-color:var(--mtw-color-success-50)}.mtw\\:bg-transparent{background-color:#0000}.mtw\\:bg-white{background-color:var(--mtw-color-white)}.mtw\\:bg-yellow-50{background-color:var(--mtw-color-yellow-50)}.mtw\\:bg-gradient-to-br{--tw-gradient-position:to bottom right in oklab;background-image:linear-gradient(var(--tw-gradient-stops))}.mtw\\:from-slate-50{--tw-gradient-from:var(--mtw-color-slate-50);--tw-gradient-stops:var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))}.mtw\\:to-slate-200{--tw-gradient-to:var(--mtw-color-slate-200);--tw-gradient-stops:var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))}.mtw\\:fill-current{fill:currentColor}.mtw\\:fill-gray-500{fill:var(--mtw-color-gray-500)}.mtw\\:fill-primary{fill:var(--mtw-primary)}.mtw\\:object-contain{object-fit:contain}.mtw\\:\\!p-0{padding:calc(var(--mtw-spacing)*0)!important}.mtw\\:p-0{padding:calc(var(--mtw-spacing)*0)}.mtw\\:p-0\\.5{padding:calc(var(--mtw-spacing)*.5)}.mtw\\:p-1{padding:calc(var(--mtw-spacing)*1)}.mtw\\:p-2{padding:calc(var(--mtw-spacing)*2)}.mtw\\:p-3{padding:calc(var(--mtw-spacing)*3)}.mtw\\:p-4{padding:calc(var(--mtw-spacing)*4)}.mtw\\:p-6{padding:calc(var(--mtw-spacing)*6)}.mtw\\:p-8{padding:calc(var(--mtw-spacing)*8)}.mtw\\:p-12{padding:calc(var(--mtw-spacing)*12)}.mtw\\:p-\\[3px\\]{padding:3px}.mtw\\:\\!px-0{padding-inline:calc(var(--mtw-spacing)*0)!important}.mtw\\:\\!px-3{padding-inline:calc(var(--mtw-spacing)*3)!important}.mtw\\:\\!px-5{padding-inline:calc(var(--mtw-spacing)*5)!important}.mtw\\:\\!px-8{padding-inline:calc(var(--mtw-spacing)*8)!important}.mtw\\:px-\\(--cell-size\\){padding-inline:var(--cell-size)}.mtw\\:px-0{padding-inline:calc(var(--mtw-spacing)*0)}.mtw\\:px-1{padding-inline:calc(var(--mtw-spacing)*1)}.mtw\\:px-2{padding-inline:calc(var(--mtw-spacing)*2)}.mtw\\:px-3{padding-inline:calc(var(--mtw-spacing)*3)}.mtw\\:px-3\\.5{padding-inline:calc(var(--mtw-spacing)*3.5)}.mtw\\:px-4{padding-inline:calc(var(--mtw-spacing)*4)}.mtw\\:px-5{padding-inline:calc(var(--mtw-spacing)*5)}.mtw\\:px-6{padding-inline:calc(var(--mtw-spacing)*6)}.mtw\\:px-7{padding-inline:calc(var(--mtw-spacing)*7)}.mtw\\:px-8{padding-inline:calc(var(--mtw-spacing)*8)}.mtw\\:\\!py-2{padding-block:calc(var(--mtw-spacing)*2)!important}.mtw\\:\\!py-2\\.5{padding-block:calc(var(--mtw-spacing)*2.5)!important}.mtw\\:py-0\\.5{padding-block:calc(var(--mtw-spacing)*.5)}.mtw\\:py-1{padding-block:calc(var(--mtw-spacing)*1)}.mtw\\:py-1\\.5{padding-block:calc(var(--mtw-spacing)*1.5)}.mtw\\:py-2{padding-block:calc(var(--mtw-spacing)*2)}.mtw\\:py-3{padding-block:calc(var(--mtw-spacing)*3)}.mtw\\:py-4{padding-block:calc(var(--mtw-spacing)*4)}.mtw\\:py-6{padding-block:calc(var(--mtw-spacing)*6)}.mtw\\:py-\\[7px\\]{padding-block:7px}.mtw\\:pt-0{padding-top:calc(var(--mtw-spacing)*0)}.mtw\\:pt-1{padding-top:calc(var(--mtw-spacing)*1)}.mtw\\:pt-2{padding-top:calc(var(--mtw-spacing)*2)}.mtw\\:pt-3{padding-top:calc(var(--mtw-spacing)*3)}.mtw\\:pt-4{padding-top:calc(var(--mtw-spacing)*4)}.mtw\\:pt-5{padding-top:calc(var(--mtw-spacing)*5)}.mtw\\:pt-6{padding-top:calc(var(--mtw-spacing)*6)}.mtw\\:pt-8{padding-top:calc(var(--mtw-spacing)*8)}.mtw\\:pr-1{padding-right:calc(var(--mtw-spacing)*1)}.mtw\\:pr-2{padding-right:calc(var(--mtw-spacing)*2)}.mtw\\:pr-3{padding-right:calc(var(--mtw-spacing)*3)}.mtw\\:pr-8{padding-right:calc(var(--mtw-spacing)*8)}.mtw\\:pb-4{padding-bottom:calc(var(--mtw-spacing)*4)}.mtw\\:pb-6{padding-bottom:calc(var(--mtw-spacing)*6)}.mtw\\:pb-8{padding-bottom:calc(var(--mtw-spacing)*8)}.mtw\\:pb-10{padding-bottom:calc(var(--mtw-spacing)*10)}.mtw\\:pb-12{padding-bottom:calc(var(--mtw-spacing)*12)}.mtw\\:pl-2{padding-left:calc(var(--mtw-spacing)*2)}.mtw\\:pl-4{padding-left:calc(var(--mtw-spacing)*4)}.mtw\\:pl-8{padding-left:calc(var(--mtw-spacing)*8)}.mtw\\:text-center{text-align:center}.mtw\\:text-end{text-align:end}.mtw\\:text-left{text-align:left}.mtw\\:text-right{text-align:right}.mtw\\:\\!text-sm{font-size:var(--mtw-text-sm)!important;line-height:var(--tw-leading,var(--mtw-text-sm--line-height))!important}.mtw\\:\\!text-xl{font-size:var(--mtw-text-xl)!important;line-height:var(--tw-leading,var(--mtw-text-xl--line-height))!important}.mtw\\:text-2xl{font-size:var(--mtw-text-2xl);line-height:var(--tw-leading,var(--mtw-text-2xl--line-height))}.mtw\\:text-base{font-size:var(--mtw-text-base);line-height:var(--tw-leading,var(--mtw-text-base--line-height))}.mtw\\:text-base\\!{font-size:var(--mtw-text-base)!important;line-height:var(--tw-leading,var(--mtw-text-base--line-height))!important}.mtw\\:text-lg{font-size:var(--mtw-text-lg);line-height:var(--tw-leading,var(--mtw-text-lg--line-height))}.mtw\\:text-sm{font-size:var(--mtw-text-sm);line-height:var(--tw-leading,var(--mtw-text-sm--line-height))}.mtw\\:text-xl{font-size:var(--mtw-text-xl);line-height:var(--tw-leading,var(--mtw-text-xl--line-height))}.mtw\\:text-xs{font-size:var(--mtw-text-xs);line-height:var(--tw-leading,var(--mtw-text-xs--line-height))}.mtw\\:text-\\[0\\.8rem\\]{font-size:.8rem}.mtw\\:text-\\[32px\\]{font-size:32px}.mtw\\:leading-4{--tw-leading:calc(var(--mtw-spacing)*4);line-height:calc(var(--mtw-spacing)*4)}.mtw\\:leading-5{--tw-leading:calc(var(--mtw-spacing)*5);line-height:calc(var(--mtw-spacing)*5)}.mtw\\:leading-6{--tw-leading:calc(var(--mtw-spacing)*6);line-height:calc(var(--mtw-spacing)*6)}.mtw\\:leading-8{--tw-leading:calc(var(--mtw-spacing)*8);line-height:calc(var(--mtw-spacing)*8)}.mtw\\:leading-10{--tw-leading:calc(var(--mtw-spacing)*10);line-height:calc(var(--mtw-spacing)*10)}.mtw\\:leading-none{--tw-leading:1;line-height:1}.mtw\\:\\!font-medium{--tw-font-weight:var(--mtw-font-weight-medium)!important;font-weight:var(--mtw-font-weight-medium)!important}.mtw\\:\\!font-normal{--tw-font-weight:var(--mtw-font-weight-normal)!important;font-weight:var(--mtw-font-weight-normal)!important}.mtw\\:font-bold{--tw-font-weight:var(--mtw-font-weight-bold);font-weight:var(--mtw-font-weight-bold)}.mtw\\:font-medium{--tw-font-weight:var(--mtw-font-weight-medium);font-weight:var(--mtw-font-weight-medium)}.mtw\\:font-normal{--tw-font-weight:var(--mtw-font-weight-normal);font-weight:var(--mtw-font-weight-normal)}.mtw\\:font-semibold{--tw-font-weight:var(--mtw-font-weight-semibold);font-weight:var(--mtw-font-weight-semibold)}.mtw\\:tracking-tight{--tw-tracking:var(--mtw-tracking-tight);letter-spacing:var(--mtw-tracking-tight)}.mtw\\:tracking-widest{--tw-tracking:var(--mtw-tracking-widest);letter-spacing:var(--mtw-tracking-widest)}.mtw\\:text-balance{text-wrap:balance}.mtw\\:text-nowrap{text-wrap:nowrap}.mtw\\:text-ellipsis{text-overflow:ellipsis}.mtw\\:whitespace-break-spaces{white-space:break-spaces}.mtw\\:whitespace-nowrap{white-space:nowrap}.mtw\\:\\!text-gray-700{color:var(--mtw-color-gray-700)!important}.mtw\\:\\!text-gray-800{color:var(--mtw-color-gray-800)!important}.mtw\\:\\!text-inherit{color:inherit!important}.mtw\\:\\!text-white{color:var(--mtw-color-white)!important}.mtw\\:text-\\[rgb\\(55\\,55\\,255\\)\\]{color:#3737ff}.mtw\\:text-\\[rgb\\(97\\,97\\,97\\)\\]{color:#616161}.mtw\\:text-accent-foreground{color:var(--mtw-accent-foreground)}.mtw\\:text-amber-600{color:var(--mtw-color-amber-600)}.mtw\\:text-blue-600{color:var(--mtw-color-blue-600)}.mtw\\:text-blue-900{color:var(--mtw-color-blue-900)}.mtw\\:text-card-foreground{color:var(--mtw-card-foreground)}.mtw\\:text-current{color:currentColor}.mtw\\:text-danger-10{color:var(--mtw-color-error-10)}.mtw\\:text-danger-50{color:var(--mtw-color-error-50)}.mtw\\:text-destructive{color:var(--mtw-destructive)}.mtw\\:text-foreground{color:var(--mtw-foreground)}.mtw\\:text-gray-500{color:var(--mtw-color-gray-500)}.mtw\\:text-gray-700{color:var(--mtw-color-gray-700)}.mtw\\:text-gray-800{color:var(--mtw-color-gray-800)}.mtw\\:text-gray-950{color:var(--mtw-color-gray-950)}.mtw\\:text-green-500{color:var(--mtw-color-green-500)}.mtw\\:text-green-600{color:var(--mtw-color-green-600)}.mtw\\:text-green-900{color:var(--mtw-color-green-900)}.mtw\\:text-inherit{color:inherit}.mtw\\:text-muted-foreground{color:var(--mtw-muted-foreground)}.mtw\\:text-neutral-10{color:var(--mtw-color-neutral-10)}.mtw\\:text-neutral-30{color:var(--mtw-color-neutral-30)}.mtw\\:text-neutral-50{color:var(--mtw-color-neutral-50)}.mtw\\:text-neutral-70{color:var(--mtw-color-neutral-70)}.mtw\\:text-popover-foreground{color:var(--mtw-popover-foreground)}.mtw\\:text-primary{color:var(--mtw-primary)}.mtw\\:text-primary-30{color:var(--mtw-color-primary-30)}.mtw\\:text-primary-50{color:var(--mtw-color-primary-50)}.mtw\\:text-primary-60{color:var(--mtw-color-primary-60)}.mtw\\:text-primary-80{color:var(--mtw-color-primary-80)}.mtw\\:text-primary-foreground{color:var(--mtw-primary-foreground)}.mtw\\:text-purple-600{color:var(--mtw-color-purple-600)}.mtw\\:text-red-500{color:var(--mtw-color-red-500)}.mtw\\:text-red-600{color:var(--mtw-color-red-600)}.mtw\\:text-red-900{color:var(--mtw-color-red-900)}.mtw\\:text-secondary-foreground{color:var(--mtw-secondary-foreground)}.mtw\\:text-sidebar-accent-foreground{color:var(--mtw-sidebar-accent-foreground)}.mtw\\:text-success-50{color:var(--mtw-color-success-50)}.mtw\\:text-white{color:var(--mtw-color-white)}.mtw\\:text-yellow-900{color:var(--mtw-color-yellow-900)}.mtw\\:tabular-nums{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal,)var(--tw-slashed-zero,)var(--tw-numeric-figure,)var(--tw-numeric-spacing,)var(--tw-numeric-fraction,)}.mtw\\:underline{text-decoration-line:underline}.mtw\\:underline-offset-4{text-underline-offset:4px}.mtw\\:opacity-0{opacity:0}.mtw\\:opacity-30{opacity:.3}.mtw\\:opacity-40{opacity:.4}.mtw\\:opacity-50{opacity:.5}.mtw\\:opacity-70{opacity:.7}.mtw\\:opacity-100{opacity:1}.mtw\\:\\!shadow-md{--tw-shadow:0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a)!important;box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)!important}.mtw\\:shadow-\\[0_3px_13px_rgba\\(17\\,17\\,17\\,0\\.16\\)\\]{--tw-shadow:0 3px 13px var(--tw-shadow-color,#11111129);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-\\[9984px_0_0_0_\\#9880ff\\,9999px_0_0_0_\\#9880ff\\,10014px_0_0_0_\\#9880ff\\]{--tw-shadow:9984px 0 0 0 var(--tw-shadow-color,#9880ff),9999px 0 0 0 var(--tw-shadow-color,#9880ff),10014px 0 0 0 var(--tw-shadow-color,#9880ff);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-lg{--tw-shadow:0 10px 15px -3px var(--tw-shadow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-md{--tw-shadow:0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-sm{--tw-shadow:0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 1px 2px -1px var(--tw-shadow-color,#0000001a);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-xl{--tw-shadow:0 20px 25px -5px var(--tw-shadow-color,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:shadow-xs{--tw-shadow:0 1px 2px 0 var(--tw-shadow-color,#0000000d);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:ring-0{--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(0px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:ring-offset-0{--tw-ring-offset-width:0px;--tw-ring-offset-shadow:var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)}.mtw\\:ring-offset-background{--tw-ring-offset-color:var(--mtw-background)}.mtw\\:ring-offset-white{--tw-ring-offset-color:var(--mtw-color-white)}.mtw\\:outline-hidden{--tw-outline-style:none;outline-style:none}@media (forced-colors:active){.mtw\\:outline-hidden{outline-offset:2px;outline:2px solid #0000}}.mtw\\:transition{transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter,display,visibility,content-visibility,overlay,pointer-events;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-\\[color\\,box-shadow\\]{transition-property:color,box-shadow;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-\\[height\\]{transition-property:height;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-\\[opacity\\]{transition-property:opacity;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-\\[width\\,height\\]{transition-property:width,height;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-all{transition-property:all;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-colors{transition-property:color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-opacity{transition-property:opacity;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-shadow{transition-property:box-shadow;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-transform{transition-property:transform,translate,scale,rotate;transition-timing-function:var(--tw-ease,var(--mtw-default-transition-timing-function));transition-duration:var(--tw-duration,var(--mtw-default-transition-duration))}.mtw\\:transition-none{transition-property:none}.mtw\\:delay-2500{transition-delay:2.5s}.mtw\\:duration-200{--tw-duration:.2s;transition-duration:.2s}.mtw\\:duration-300{--tw-duration:.3s;transition-duration:.3s}.mtw\\:duration-1000{--tw-duration:1s;transition-duration:1s}.mtw\\:duration-3000{--tw-duration:3s;transition-duration:3s}.mtw\\:ease-in-out{--tw-ease:var(--mtw-ease-in-out);transition-timing-function:var(--mtw-ease-in-out)}.mtw\\:ease-linear{--tw-ease:linear;transition-timing-function:linear}.mtw\\:outline-none{--tw-outline-style:none;outline-style:none}.mtw\\:select-none{-webkit-user-select:none;user-select:none}.mtw\\:\\[--cell-size\\:--spacing\\(8\\)\\]{--cell-size:calc(var(--mtw-spacing)*8)}.mtw\\:\\[scrollbar-width\\:thin\\]{scrollbar-width:thin}.mtw\\:delay-2500{animation-delay:2.5s}.mtw\\:fade-in-0{--tw-enter-opacity:0}.mtw\\:zoom-in-95{--tw-enter-scale:.95}@media (hover:hover){.mtw\\:group-hover\\:underline:is(:where(.mtw\\:group):hover *){text-decoration-line:underline}}.mtw\\:group-data-\\[disabled\\=true\\]\\:pointer-events-none:is(:where(.mtw\\:group)[data-disabled=true] *){pointer-events:none}.mtw\\:group-data-\\[disabled\\=true\\]\\:opacity-50:is(:where(.mtw\\:group)[data-disabled=true] *){opacity:.5}.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:relative:is(:where(.mtw\\:group\\/day)[data-focused=true] *){position:relative}.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:z-1300:is(:where(.mtw\\:group\\/day)[data-focused=true] *){z-index:1300}.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:border-ring:is(:where(.mtw\\:group\\/day)[data-focused=true] *){border-color:var(--mtw-ring)}.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:ring-\\[3px\\]:is(:where(.mtw\\:group\\/day)[data-focused=true] *){--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:ring-ring\\/50:is(:where(.mtw\\:group\\/day)[data-focused=true] *){--tw-ring-color:var(--mtw-ring)}@supports (color:color-mix(in lab, red, red)){.mtw\\:group-data-\\[focused\\=true\\]\\/day\\:ring-ring\\/50:is(:where(.mtw\\:group\\/day)[data-focused=true] *){--tw-ring-color:color-mix(in oklab,var(--mtw-ring)50%,transparent)}}.mtw\\:peer-disabled\\:cursor-not-allowed:is(:where(.mtw\\:peer):disabled~*){cursor:not-allowed}.mtw\\:peer-disabled\\:opacity-50:is(:where(.mtw\\:peer):disabled~*){opacity:.5}.mtw\\:selection\\:bg-primary ::selection{background-color:var(--mtw-primary)}.mtw\\:selection\\:bg-primary::selection{background-color:var(--mtw-primary)}.mtw\\:selection\\:text-primary-foreground ::selection{color:var(--mtw-primary-foreground)}.mtw\\:selection\\:text-primary-foreground::selection{color:var(--mtw-primary-foreground)}.mtw\\:file\\:inline-flex::file-selector-button{display:inline-flex}.mtw\\:file\\:h-7::file-selector-button{height:calc(var(--mtw-spacing)*7)}.mtw\\:file\\:border-0::file-selector-button{border-style:var(--tw-border-style);border-width:0}.mtw\\:file\\:bg-transparent::file-selector-button{background-color:#0000}.mtw\\:file\\:text-sm::file-selector-button{font-size:var(--mtw-text-sm);line-height:var(--tw-leading,var(--mtw-text-sm--line-height))}.mtw\\:file\\:font-medium::file-selector-button{--tw-font-weight:var(--mtw-font-weight-medium);font-weight:var(--mtw-font-weight-medium)}.mtw\\:file\\:text-foreground::file-selector-button{color:var(--mtw-foreground)}.mtw\\:placeholder\\:text-muted-foreground::placeholder{color:var(--mtw-muted-foreground)}.mtw\\:last\\:border-b-0:last-child{border-bottom-style:var(--tw-border-style);border-bottom-width:0}@media (hover:hover){.mtw\\:hover\\:cursor-pointer:hover{cursor:pointer}.mtw\\:hover\\:border-neutral-90:hover{border-color:var(--mtw-color-neutral-90)}.mtw\\:hover\\:border-primary-50:hover{border-color:var(--mtw-color-primary-50)}.mtw\\:hover\\:\\!bg-sidebar-accent:hover{background-color:var(--mtw-sidebar-accent)!important}.mtw\\:hover\\:\\!bg-transparent:hover{background-color:#0000!important}.mtw\\:hover\\:bg-accent:hover{background-color:var(--mtw-accent)}.mtw\\:hover\\:bg-black:hover{background-color:var(--mtw-color-black)}.mtw\\:hover\\:bg-destructive\\/90:hover{background-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:hover\\:bg-destructive\\/90:hover{background-color:color-mix(in oklab,var(--mtw-destructive)90%,transparent)}}.mtw\\:hover\\:bg-neutral-95:hover{background-color:var(--mtw-color-neutral-95)}.mtw\\:hover\\:bg-primary-90:hover{background-color:var(--mtw-color-primary-90)}.mtw\\:hover\\:bg-primary-95:hover{background-color:var(--mtw-color-primary-95)}.mtw\\:hover\\:bg-primary\\/90:hover{background-color:var(--mtw-primary)}@supports (color:color-mix(in lab, red, red)){.mtw\\:hover\\:bg-primary\\/90:hover{background-color:color-mix(in oklab,var(--mtw-primary)90%,transparent)}}.mtw\\:hover\\:bg-secondary\\/80:hover{background-color:var(--mtw-secondary)}@supports (color:color-mix(in lab, red, red)){.mtw\\:hover\\:bg-secondary\\/80:hover{background-color:color-mix(in oklab,var(--mtw-secondary)80%,transparent)}}.mtw\\:hover\\:bg-sidebar-accent:hover{background-color:var(--mtw-sidebar-accent)}.mtw\\:hover\\:\\!text-sidebar-accent-foreground:hover{color:var(--mtw-sidebar-accent-foreground)!important}.mtw\\:hover\\:text-accent-foreground:hover{color:var(--mtw-accent-foreground)}.mtw\\:hover\\:text-sidebar-accent-foreground:hover{color:var(--mtw-sidebar-accent-foreground)}.mtw\\:hover\\:no-underline:hover{text-decoration-line:none}.mtw\\:hover\\:underline:hover{text-decoration-line:underline}.mtw\\:hover\\:opacity-80:hover{opacity:.8}.mtw\\:hover\\:opacity-100:hover{opacity:1}}.mtw\\:focus\\:bg-accent:focus{background-color:var(--mtw-accent)}.mtw\\:focus\\:text-accent-foreground:focus{color:var(--mtw-accent-foreground)}.mtw\\:focus\\:ring-2:focus{--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:focus\\:ring-ring:focus{--tw-ring-color:var(--mtw-ring)}.mtw\\:focus\\:ring-offset-2:focus{--tw-ring-offset-width:2px;--tw-ring-offset-shadow:var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)}.mtw\\:focus\\:outline-hidden:focus{--tw-outline-style:none;outline-style:none}@media (forced-colors:active){.mtw\\:focus\\:outline-hidden:focus{outline-offset:2px;outline:2px solid #0000}}.mtw\\:focus-visible\\:border-ring:focus-visible{border-color:var(--mtw-ring)}.mtw\\:focus-visible\\:ring-0:focus-visible{--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(0px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:focus-visible\\:ring-\\[3px\\]:focus-visible{--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:focus-visible\\:ring-destructive\\/20:focus-visible{--tw-ring-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:focus-visible\\:ring-destructive\\/20:focus-visible{--tw-ring-color:color-mix(in oklab,var(--mtw-destructive)20%,transparent)}}.mtw\\:focus-visible\\:ring-ring\\/50:focus-visible{--tw-ring-color:var(--mtw-ring)}@supports (color:color-mix(in lab, red, red)){.mtw\\:focus-visible\\:ring-ring\\/50:focus-visible{--tw-ring-color:color-mix(in oklab,var(--mtw-ring)50%,transparent)}}.mtw\\:focus-visible\\:ring-offset-0:focus-visible{--tw-ring-offset-width:0px;--tw-ring-offset-shadow:var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)}.mtw\\:focus-visible\\:outline-1:focus-visible{outline-style:var(--tw-outline-style);outline-width:1px}.mtw\\:focus-visible\\:outline-ring:focus-visible{outline-color:var(--mtw-ring)}.mtw\\:focus-visible\\:outline-none:focus-visible{--tw-outline-style:none;outline-style:none}.mtw\\:disabled\\:pointer-events-none:disabled{pointer-events:none}.mtw\\:disabled\\:cursor-not-allowed:disabled{cursor:not-allowed}.mtw\\:disabled\\:opacity-50:disabled{opacity:.5}.mtw\\:has-focus\\:border-ring:has(:focus){border-color:var(--mtw-ring)}.mtw\\:has-focus\\:ring-\\[3px\\]:has(:focus){--tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:has-focus\\:ring-ring\\/50:has(:focus){--tw-ring-color:var(--mtw-ring)}@supports (color:color-mix(in lab, red, red)){.mtw\\:has-focus\\:ring-ring\\/50:has(:focus){--tw-ring-color:color-mix(in oklab,var(--mtw-ring)50%,transparent)}}.mtw\\:has-data-\\[slot\\=card-action\\]\\:grid-cols-\\[1fr_auto\\]:has([data-slot=card-action]){grid-template-columns:1fr auto}.mtw\\:has-\\[\\>svg\\]\\:px-0:has(>svg){padding-inline:calc(var(--mtw-spacing)*0)}.mtw\\:has-\\[\\>svg\\]\\:px-2\\.5:has(>svg){padding-inline:calc(var(--mtw-spacing)*2.5)}.mtw\\:has-\\[\\>svg\\]\\:px-3:has(>svg){padding-inline:calc(var(--mtw-spacing)*3)}.mtw\\:has-\\[\\>svg\\]\\:px-4:has(>svg){padding-inline:calc(var(--mtw-spacing)*4)}.mtw\\:aria-disabled\\:opacity-50[aria-disabled=true]{opacity:.5}.mtw\\:aria-invalid\\:border-destructive[aria-invalid=true]{border-color:var(--mtw-destructive)}.mtw\\:aria-invalid\\:ring-destructive\\/20[aria-invalid=true]{--tw-ring-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:aria-invalid\\:ring-destructive\\/20[aria-invalid=true]{--tw-ring-color:color-mix(in oklab,var(--mtw-destructive)20%,transparent)}}.mtw\\:aria-selected\\:text-muted-foreground[aria-selected=true]{color:var(--mtw-muted-foreground)}.mtw\\:data-\\[disabled\\]\\:pointer-events-none[data-disabled]{pointer-events:none}.mtw\\:data-\\[disabled\\]\\:opacity-50[data-disabled]{opacity:.5}.mtw\\:data-\\[disabled\\=true\\]\\:pointer-events-none[data-disabled=true]{pointer-events:none}.mtw\\:data-\\[disabled\\=true\\]\\:opacity-50[data-disabled=true]{opacity:.5}.mtw\\:data-\\[error\\=true\\]\\:text-destructive[data-error=true]{color:var(--mtw-destructive)}.mtw\\:data-\\[inset\\]\\:pl-8[data-inset]{padding-left:calc(var(--mtw-spacing)*8)}.mtw\\:data-\\[placeholder\\]\\:text-muted-foreground[data-placeholder]{color:var(--mtw-muted-foreground)}.mtw\\:data-\\[range-end\\=true\\]\\:rounded-md[data-range-end=true]{border-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:data-\\[range-end\\=true\\]\\:rounded-r-md[data-range-end=true]{border-top-right-radius:calc(var(--mtw-radius) - 2px);border-bottom-right-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:data-\\[range-end\\=true\\]\\:bg-primary[data-range-end=true]{background-color:var(--mtw-primary)}.mtw\\:data-\\[range-end\\=true\\]\\:text-primary-foreground[data-range-end=true]{color:var(--mtw-primary-foreground)}.mtw\\:data-\\[range-middle\\=true\\]\\:rounded-none[data-range-middle=true]{border-radius:0}.mtw\\:data-\\[range-middle\\=true\\]\\:bg-accent[data-range-middle=true]{background-color:var(--mtw-accent)}.mtw\\:data-\\[range-middle\\=true\\]\\:text-accent-foreground[data-range-middle=true]{color:var(--mtw-accent-foreground)}.mtw\\:data-\\[range-start\\=true\\]\\:rounded-md[data-range-start=true]{border-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:data-\\[range-start\\=true\\]\\:rounded-l-md[data-range-start=true]{border-top-left-radius:calc(var(--mtw-radius) - 2px);border-bottom-left-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:data-\\[range-start\\=true\\]\\:bg-primary[data-range-start=true]{background-color:var(--mtw-primary)}.mtw\\:data-\\[range-start\\=true\\]\\:text-primary-foreground[data-range-start=true]{color:var(--mtw-primary-foreground)}.mtw\\:data-\\[selected-single\\=true\\]\\:bg-primary[data-selected-single=true]{background-color:var(--mtw-primary)}.mtw\\:data-\\[selected-single\\=true\\]\\:text-primary-foreground[data-selected-single=true]{color:var(--mtw-primary-foreground)}.mtw\\:data-\\[selected\\=true\\]\\:rounded-none[data-selected=true]{border-radius:0}.mtw\\:data-\\[selected\\=true\\]\\:bg-accent[data-selected=true]{background-color:var(--mtw-accent)}.mtw\\:data-\\[selected\\=true\\]\\:text-accent-foreground[data-selected=true]{color:var(--mtw-accent-foreground)}.mtw\\:data-\\[side\\=bottom\\]\\:translate-y-1[data-side=bottom]{--tw-translate-y:calc(var(--mtw-spacing)*1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:data-\\[side\\=bottom\\]\\:slide-in-from-top-2[data-side=bottom]{--tw-enter-translate-y:calc(2*var(--spacing)*-1)}.mtw\\:data-\\[side\\=left\\]\\:-translate-x-1[data-side=left]{--tw-translate-x:calc(var(--mtw-spacing)*-1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:data-\\[side\\=left\\]\\:slide-in-from-right-2[data-side=left]{--tw-enter-translate-x:calc(2*var(--spacing))}.mtw\\:data-\\[side\\=right\\]\\:translate-x-1[data-side=right]{--tw-translate-x:calc(var(--mtw-spacing)*1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:data-\\[side\\=right\\]\\:slide-in-from-left-2[data-side=right]{--tw-enter-translate-x:calc(2*var(--spacing)*-1)}.mtw\\:data-\\[side\\=top\\]\\:-translate-y-1[data-side=top]{--tw-translate-y:calc(var(--mtw-spacing)*-1);translate:var(--tw-translate-x)var(--tw-translate-y)}.mtw\\:data-\\[side\\=top\\]\\:slide-in-from-bottom-2[data-side=top]{--tw-enter-translate-y:calc(2*var(--spacing))}.mtw\\:data-\\[size\\=default\\]\\:h-9[data-size=default]{height:calc(var(--mtw-spacing)*9)}.mtw\\:data-\\[size\\=sm\\]\\:h-8[data-size=sm]{height:calc(var(--mtw-spacing)*8)}:is(.mtw\\:\\*\\*\\:data-\\[slot\\=command-input-wrapper\\]\\:h-12 *)[data-slot=command-input-wrapper]{height:calc(var(--mtw-spacing)*12)}:is(.mtw\\:\\*\\:data-\\[slot\\=select-value\\]\\:line-clamp-1>*)[data-slot=select-value]{-webkit-line-clamp:1;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}:is(.mtw\\:\\*\\:data-\\[slot\\=select-value\\]\\:flex>*)[data-slot=select-value]{display:flex}:is(.mtw\\:\\*\\:data-\\[slot\\=select-value\\]\\:items-center>*)[data-slot=select-value]{align-items:center}:is(.mtw\\:\\*\\:data-\\[slot\\=select-value\\]\\:gap-2>*)[data-slot=select-value]{gap:calc(var(--mtw-spacing)*2)}.mtw\\:data-\\[state\\=active\\]\\:bg-background[data-state=active]{background-color:var(--mtw-background)}.mtw\\:data-\\[state\\=active\\]\\:shadow-sm[data-state=active]{--tw-shadow:0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 1px 2px -1px var(--tw-shadow-color,#0000001a);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.mtw\\:data-\\[state\\=checked\\]\\:border-primary[data-state=checked]{border-color:var(--mtw-primary)}.mtw\\:data-\\[state\\=checked\\]\\:bg-primary[data-state=checked]{background-color:var(--mtw-primary)}.mtw\\:data-\\[state\\=checked\\]\\:text-primary-foreground[data-state=checked]{color:var(--mtw-primary-foreground)}.mtw\\:data-\\[state\\=closed\\]\\:animate-accordion-up[data-state=closed]{animation:accordion-up var(--tw-duration,.2s)ease-out}.mtw\\:data-\\[state\\=closed\\]\\:animate-out[data-state=closed]{animation:exit var(--tw-duration,.15s)var(--tw-ease,ease)}.mtw\\:data-\\[state\\=closed\\]\\:duration-300[data-state=closed]{--tw-duration:.3s;transition-duration:.3s}.mtw\\:data-\\[state\\=closed\\]\\:fade-out-0[data-state=closed]{--tw-exit-opacity:0}.mtw\\:data-\\[state\\=closed\\]\\:slide-out-to-bottom[data-state=closed]{--tw-exit-translate-y:100%}.mtw\\:data-\\[state\\=closed\\]\\:slide-out-to-left[data-state=closed]{--tw-exit-translate-x:-100%}.mtw\\:data-\\[state\\=closed\\]\\:slide-out-to-right[data-state=closed]{--tw-exit-translate-x:100%}.mtw\\:data-\\[state\\=closed\\]\\:slide-out-to-top[data-state=closed]{--tw-exit-translate-y:-100%}.mtw\\:data-\\[state\\=closed\\]\\:zoom-out-95[data-state=closed]{--tw-exit-scale:.95}.mtw\\:data-\\[state\\=open\\]\\:animate-accordion-down[data-state=open]{animation:accordion-down var(--tw-duration,.2s)ease-out}.mtw\\:data-\\[state\\=open\\]\\:animate-in[data-state=open]{animation:enter var(--tw-duration,.15s)var(--tw-ease,ease)}.mtw\\:data-\\[state\\=open\\]\\:bg-accent[data-state=open]{background-color:var(--mtw-accent)}.mtw\\:data-\\[state\\=open\\]\\:bg-secondary[data-state=open]{background-color:var(--mtw-secondary)}.mtw\\:data-\\[state\\=open\\]\\:text-accent-foreground[data-state=open]{color:var(--mtw-accent-foreground)}.mtw\\:data-\\[state\\=open\\]\\:text-muted-foreground[data-state=open]{color:var(--mtw-muted-foreground)}.mtw\\:data-\\[state\\=open\\]\\:duration-500[data-state=open]{--tw-duration:.5s;transition-duration:.5s}.mtw\\:data-\\[state\\=open\\]\\:fade-in-0[data-state=open]{--tw-enter-opacity:0}.mtw\\:data-\\[state\\=open\\]\\:slide-in-from-bottom[data-state=open]{--tw-enter-translate-y:100%}.mtw\\:data-\\[state\\=open\\]\\:slide-in-from-left[data-state=open]{--tw-enter-translate-x:-100%}.mtw\\:data-\\[state\\=open\\]\\:slide-in-from-right[data-state=open]{--tw-enter-translate-x:100%}.mtw\\:data-\\[state\\=open\\]\\:slide-in-from-top[data-state=open]{--tw-enter-translate-y:-100%}.mtw\\:data-\\[state\\=open\\]\\:zoom-in-95[data-state=open]{--tw-enter-scale:.95}.mtw\\:data-\\[variant\\=destructive\\]\\:text-destructive[data-variant=destructive]{color:var(--mtw-destructive)}.mtw\\:data-\\[variant\\=destructive\\]\\:focus\\:bg-destructive\\/10[data-variant=destructive]:focus{background-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:data-\\[variant\\=destructive\\]\\:focus\\:bg-destructive\\/10[data-variant=destructive]:focus{background-color:color-mix(in oklab,var(--mtw-destructive)10%,transparent)}}.mtw\\:data-\\[variant\\=destructive\\]\\:focus\\:text-destructive[data-variant=destructive]:focus{color:var(--mtw-destructive)}@media (min-width:40rem){.mtw\\:sm\\:\\!w-\\[28rem\\]{width:28rem!important}.mtw\\:sm\\:w-\\[28rem\\]{width:28rem}.mtw\\:sm\\:max-w-\\[600px\\]{max-width:600px}.mtw\\:sm\\:max-w-lg{max-width:var(--mtw-container-lg)}.mtw\\:sm\\:max-w-md{max-width:var(--mtw-container-md)}.mtw\\:sm\\:max-w-screen{max-width:100vw}.mtw\\:sm\\:max-w-sm{max-width:var(--mtw-container-sm)}.mtw\\:sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.mtw\\:sm\\:flex-row{flex-direction:row}.mtw\\:sm\\:justify-end{justify-content:flex-end}.mtw\\:sm\\:text-left{text-align:left}}@media (min-width:48rem){.mtw\\:md\\:h-30{height:calc(var(--mtw-spacing)*30)}.mtw\\:md\\:h-auto{height:auto}.mtw\\:md\\:\\!w-\\[32rem\\]{width:32rem!important}.mtw\\:md\\:w-\\[32rem\\]{width:32rem}.mtw\\:md\\:max-w-lg{max-width:var(--mtw-container-lg)}.mtw\\:md\\:max-w-md{max-width:var(--mtw-container-md)}.mtw\\:md\\:flex-col{flex-direction:column}.mtw\\:md\\:flex-row{flex-direction:row}.mtw\\:md\\:justify-start{justify-content:flex-start}.mtw\\:md\\:text-sm{font-size:var(--mtw-text-sm);line-height:var(--tw-leading,var(--mtw-text-sm--line-height))}.mtw\\:md\\:text-xs{font-size:var(--mtw-text-xs);line-height:var(--tw-leading,var(--mtw-text-xs--line-height))}}@media (min-width:64rem){.mtw\\:lg\\:h-30{height:calc(var(--mtw-spacing)*30)}.mtw\\:lg\\:h-auto{height:auto}.mtw\\:lg\\:\\!w-\\[42rem\\]{width:42rem!important}.mtw\\:lg\\:w-\\[42rem\\]{width:42rem}.mtw\\:lg\\:max-w-2xl{max-width:var(--mtw-container-2xl)}.mtw\\:lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.mtw\\:lg\\:flex-col{flex-direction:column}.mtw\\:lg\\:flex-row{flex-direction:row}.mtw\\:lg\\:justify-between{justify-content:space-between}.mtw\\:lg\\:justify-end{justify-content:flex-end}.mtw\\:lg\\:justify-start{justify-content:flex-start}}@media (min-width:80rem){.mtw\\:xl\\:z-1299{z-index:1299}.mtw\\:xl\\:h-30{height:calc(var(--mtw-spacing)*30)}.mtw\\:xl\\:w-1\\/2{width:50%}.mtw\\:xl\\:max-w-3xl{max-width:var(--mtw-container-3xl)}.mtw\\:xl\\:max-w-\\[1200px\\]{max-width:1200px}.mtw\\:xl\\:flex-row{flex-direction:row}.mtw\\:xl\\:justify-between{justify-content:space-between}.mtw\\:xl\\:justify-end{justify-content:flex-end}.mtw\\:xl\\:gap-20{gap:calc(var(--mtw-spacing)*20)}}@media (min-width:96rem){.mtw\\:2xl\\:\\!w-\\[56rem\\]{width:56rem!important}.mtw\\:2xl\\:w-\\[56rem\\]{width:56rem}.mtw\\:2xl\\:max-w-4xl{max-width:var(--mtw-container-4xl)}}@media (prefers-color-scheme:dark){.mtw\\:dark\\:border-input{border-color:var(--mtw-input)}.mtw\\:dark\\:bg-blue-950{background-color:var(--mtw-color-blue-950)}.mtw\\:dark\\:bg-destructive\\/60{background-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:bg-destructive\\/60{background-color:color-mix(in oklab,var(--mtw-destructive)60%,transparent)}}.mtw\\:dark\\:bg-green-950{background-color:var(--mtw-color-green-950)}.mtw\\:dark\\:bg-input\\/30{background-color:var(--mtw-input)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:bg-input\\/30{background-color:color-mix(in oklab,var(--mtw-input)30%,transparent)}}.mtw\\:dark\\:bg-red-950{background-color:var(--mtw-color-red-950)}.mtw\\:dark\\:bg-yellow-950{background-color:var(--mtw-color-yellow-950)}.mtw\\:dark\\:text-blue-100{color:var(--mtw-color-blue-100)}.mtw\\:dark\\:text-green-100{color:var(--mtw-color-green-100)}.mtw\\:dark\\:text-muted-foreground{color:var(--mtw-muted-foreground)}.mtw\\:dark\\:text-red-100{color:var(--mtw-color-red-100)}.mtw\\:dark\\:text-yellow-100{color:var(--mtw-color-yellow-100)}@media (hover:hover){.mtw\\:dark\\:hover\\:bg-accent\\/50:hover{background-color:var(--mtw-accent)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:hover\\:bg-accent\\/50:hover{background-color:color-mix(in oklab,var(--mtw-accent)50%,transparent)}}.mtw\\:dark\\:hover\\:bg-input\\/50:hover{background-color:var(--mtw-input)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:hover\\:bg-input\\/50:hover{background-color:color-mix(in oklab,var(--mtw-input)50%,transparent)}}.mtw\\:dark\\:hover\\:text-accent-foreground:hover{color:var(--mtw-accent-foreground)}}.mtw\\:dark\\:focus-visible\\:ring-destructive\\/40:focus-visible{--tw-ring-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:focus-visible\\:ring-destructive\\/40:focus-visible{--tw-ring-color:color-mix(in oklab,var(--mtw-destructive)40%,transparent)}}.mtw\\:dark\\:aria-invalid\\:ring-destructive\\/40[aria-invalid=true]{--tw-ring-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:aria-invalid\\:ring-destructive\\/40[aria-invalid=true]{--tw-ring-color:color-mix(in oklab,var(--mtw-destructive)40%,transparent)}}.mtw\\:dark\\:data-\\[state\\=active\\]\\:border-input[data-state=active]{border-color:var(--mtw-input)}.mtw\\:dark\\:data-\\[state\\=active\\]\\:bg-input\\/30[data-state=active]{background-color:var(--mtw-input)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:data-\\[state\\=active\\]\\:bg-input\\/30[data-state=active]{background-color:color-mix(in oklab,var(--mtw-input)30%,transparent)}}.mtw\\:dark\\:data-\\[state\\=active\\]\\:text-foreground[data-state=active]{color:var(--mtw-foreground)}.mtw\\:dark\\:data-\\[state\\=checked\\]\\:bg-primary[data-state=checked]{background-color:var(--mtw-primary)}.mtw\\:dark\\:data-\\[variant\\=destructive\\]\\:focus\\:bg-destructive\\/20[data-variant=destructive]:focus{background-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){.mtw\\:dark\\:data-\\[variant\\=destructive\\]\\:focus\\:bg-destructive\\/20[data-variant=destructive]:focus{background-color:color-mix(in oklab,var(--mtw-destructive)20%,transparent)}}}.mtw\\:\\[\\&_\\*\\]\\:\\!whitespace-break-spaces *{white-space:break-spaces!important}.mtw\\:\\[\\&_\\[cmdk-group-heading\\]\\]\\:px-2 [cmdk-group-heading]{padding-inline:calc(var(--mtw-spacing)*2)}.mtw\\:\\[\\&_\\[cmdk-group-heading\\]\\]\\:py-1\\.5 [cmdk-group-heading]{padding-block:calc(var(--mtw-spacing)*1.5)}.mtw\\:\\[\\&_\\[cmdk-group-heading\\]\\]\\:text-xs [cmdk-group-heading]{font-size:var(--mtw-text-xs);line-height:var(--tw-leading,var(--mtw-text-xs--line-height))}.mtw\\:\\[\\&_\\[cmdk-group-heading\\]\\]\\:font-medium [cmdk-group-heading]{--tw-font-weight:var(--mtw-font-weight-medium);font-weight:var(--mtw-font-weight-medium)}.mtw\\:\\[\\&_\\[cmdk-group-heading\\]\\]\\:text-muted-foreground [cmdk-group-heading]{color:var(--mtw-muted-foreground)}.mtw\\:\\[\\&_\\[cmdk-group\\]\\]\\:px-2 [cmdk-group]{padding-inline:calc(var(--mtw-spacing)*2)}.mtw\\:\\[\\&_\\[cmdk-group\\]\\:not\\(\\[hidden\\]\\)_\\~\\[cmdk-group\\]\\]\\:pt-0 [cmdk-group]:not([hidden])~[cmdk-group]{padding-top:calc(var(--mtw-spacing)*0)}.mtw\\:\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:h-5 [cmdk-input-wrapper] svg{height:calc(var(--mtw-spacing)*5)}.mtw\\:\\[\\&_\\[cmdk-input-wrapper\\]_svg\\]\\:w-5 [cmdk-input-wrapper] svg{width:calc(var(--mtw-spacing)*5)}.mtw\\:\\[\\&_\\[cmdk-input\\]\\]\\:h-12 [cmdk-input]{height:calc(var(--mtw-spacing)*12)}.mtw\\:\\[\\&_\\[cmdk-item\\]\\]\\:px-2 [cmdk-item]{padding-inline:calc(var(--mtw-spacing)*2)}.mtw\\:\\[\\&_\\[cmdk-item\\]\\]\\:py-3 [cmdk-item]{padding-block:calc(var(--mtw-spacing)*3)}.mtw\\:\\[\\&_\\[cmdk-item\\]_svg\\]\\:h-5 [cmdk-item] svg{height:calc(var(--mtw-spacing)*5)}.mtw\\:\\[\\&_\\[cmdk-item\\]_svg\\]\\:w-5 [cmdk-item] svg{width:calc(var(--mtw-spacing)*5)}.mtw\\:\\[\\&_li\\]\\:pb-2 li{padding-bottom:calc(var(--mtw-spacing)*2)}.mtw\\:\\[\\&_p\\]\\:leading-relaxed p{--tw-leading:var(--mtw-leading-relaxed);line-height:var(--mtw-leading-relaxed)}.mtw\\:\\[\\&_svg\\]\\:pointer-events-none svg{pointer-events:none}.mtw\\:\\[\\&_svg\\]\\:shrink-0 svg{flex-shrink:0}.mtw\\:\\[\\&_svg\\:not\\(\\[class\\*\\=size-\\]\\)\\]\\:size-4 svg:not([class*=size-]){width:calc(var(--mtw-spacing)*4);height:calc(var(--mtw-spacing)*4)}.mtw\\:\\[\\&_svg\\:not\\(\\[class\\*\\=text-\\]\\)\\]\\:text-muted-foreground svg:not([class*=text-]){color:var(--mtw-muted-foreground)}.mtw\\:\\[\\&_td\\]\\:p-2\\.5 td,.mtw\\:\\[\\&_th\\]\\:p-2\\.5 th{padding:calc(var(--mtw-spacing)*2.5)}.mtw\\:\\[\\&\\:first-child\\[data-selected\\=true\\]_button\\]\\:rounded-l-md:first-child[data-selected=true] button{border-top-left-radius:calc(var(--mtw-radius) - 2px);border-bottom-left-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:\\[\\.border-b\\]\\:pb-6.border-b{padding-bottom:calc(var(--mtw-spacing)*6)}.mtw\\:\\[\\.border-t\\]\\:pt-6.border-t{padding-top:calc(var(--mtw-spacing)*6)}:is(.mtw\\:\\*\\:\\[span\\]\\:last\\:flex>*):is(span):last-child{display:flex}:is(.mtw\\:\\*\\:\\[span\\]\\:last\\:items-center>*):is(span):last-child{align-items:center}:is(.mtw\\:\\*\\:\\[span\\]\\:last\\:gap-2>*):is(span):last-child{gap:calc(var(--mtw-spacing)*2)}:is(.mtw\\:data-\\[variant\\=destructive\\]\\:\\*\\:\\[svg\\]\\:\\!text-destructive[data-variant=destructive]>*):is(svg){color:var(--mtw-destructive)!important}.mtw\\:\\[\\&\\:last-child\\[data-selected\\=true\\]_button\\]\\:rounded-r-md:last-child[data-selected=true] button{border-top-right-radius:calc(var(--mtw-radius) - 2px);border-bottom-right-radius:calc(var(--mtw-radius) - 2px)}.mtw\\:\\[\\&\\>span\\]\\:text-xs>span{font-size:var(--mtw-text-xs);line-height:var(--tw-leading,var(--mtw-text-xs--line-height))}.mtw\\:\\[\\&\\>span\\]\\:opacity-70>span{opacity:.7}.mtw\\:\\[\\&\\>svg\\]\\:pointer-events-none>svg{pointer-events:none}.mtw\\:\\[\\&\\>svg\\]\\:size-3>svg{width:calc(var(--mtw-spacing)*3);height:calc(var(--mtw-spacing)*3)}.mtw\\:\\[\\&\\>svg\\]\\:size-3\\.5>svg{width:calc(var(--mtw-spacing)*3.5);height:calc(var(--mtw-spacing)*3.5)}.mtw\\:\\[\\&\\>svg\\]\\:text-muted-foreground>svg{color:var(--mtw-muted-foreground)}.mtw\\:\\[\\&\\[data-state\\=open\\]\\>svg\\]\\:rotate-180[data-state=open]>svg{rotate:180deg}@media not all and (max-resolution:192dpi){.mtw\\:\\[\\@media\\(resolution\\>192dpi\\)\\]\\:min-h-\\[1828px\\]{min-height:1828px}.mtw\\:\\[\\@media\\(resolution\\>192dpi\\)\\]\\:min-w-\\[1335px\\]{min-width:1335px}}@media not all and (max-resolution:288dpi){.mtw\\:\\[\\@media\\(resolution\\>288dpi\\)\\]\\:min-h-\\[2438px\\]{min-height:2438px}.mtw\\:\\[\\@media\\(resolution\\>288dpi\\)\\]\\:min-w-\\[1780px\\]{min-width:1780px}}[data-slot=card-content] .mtw\\:\\[\\[data-slot\\=card-content\\]_\\&\\]\\:bg-transparent,[data-slot=popover-content] .mtw\\:\\[\\[data-slot\\=popover-content\\]_\\&\\]\\:bg-transparent{background-color:#0000}@media (hover:hover){a.mtw\\:\\[a\\&\\]\\:hover\\:bg-accent:hover{background-color:var(--mtw-accent)}a.mtw\\:\\[a\\&\\]\\:hover\\:bg-destructive\\/90:hover{background-color:var(--mtw-destructive)}@supports (color:color-mix(in lab, red, red)){a.mtw\\:\\[a\\&\\]\\:hover\\:bg-destructive\\/90:hover{background-color:color-mix(in oklab,var(--mtw-destructive)90%,transparent)}}a.mtw\\:\\[a\\&\\]\\:hover\\:bg-primary\\/90:hover{background-color:var(--mtw-primary)}@supports (color:color-mix(in lab, red, red)){a.mtw\\:\\[a\\&\\]\\:hover\\:bg-primary\\/90:hover{background-color:color-mix(in oklab,var(--mtw-primary)90%,transparent)}}a.mtw\\:\\[a\\&\\]\\:hover\\:bg-secondary\\/90:hover{background-color:var(--mtw-secondary)}@supports (color:color-mix(in lab, red, red)){a.mtw\\:\\[a\\&\\]\\:hover\\:bg-secondary\\/90:hover{background-color:color-mix(in oklab,var(--mtw-secondary)90%,transparent)}}a.mtw\\:\\[a\\&\\]\\:hover\\:text-accent-foreground:hover{color:var(--mtw-accent-foreground)}}.animate-dot-typing{--mtw-dot-loader-color:#111827;animation:1.5s linear infinite dot-typing}}:root{--rpv-core__annotation--link-hover-background-color:#ff03;--rpv-core__annotation-popup-wrapper-background-color:#faf089;--rpv-core__annotation-popup-wrapper-box-shadow:0 10px 15px -3px #0000001a,0 4px 6px -2px #0000000d;--rpv-core__annotation-popup-content-border-top-color:#1a202c;--rpv-core__arrow-border-color:#0000004d;--rpv-core__asking-password-color:#000;--rpv-core__asking-password-wrapper-background-color:#fff;--rpv-core__asking-password-wrapper-border-color:#0000004d;--rpv-core__button-background-color:#0000004d;--rpv-core__button-color:#000;--rpv-core__doc-error-background-color:#fff;--rpv-core__doc-error-text-background-color:#c02424;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#fff;--rpv-core__full-screen-target-background-color:#fff;--rpv-core__inner-page-background-color:#fff;--rpv-core__menu-divider-border-bottom-color:#0000004d;--rpv-core__menu-item-color:#000;--rpv-core__menu-item--hover-background-color:#0000001a;--rpv-core__menu-item--disabled-color:#0000004d;--rpv-core__minimal-button-color:#000;--rpv-core__minimal-button--hover-background-color:#0000001a;--rpv-core__minimal-button--disabled-color:#0000004d;--rpv-core__minimal-button--selected-background-color:#0000001a;--rpv-core__modal-body-background-color:#fff;--rpv-core__modal-body-border-color:#0000004d;--rpv-core__modal-overlay-background-color:#00000080;--rpv-core__page-layer-box-shadow:2px 2px 8px 0 #0003;--rpv-core__popover-body-background-color:#fff;--rpv-core__popover-body-border-color:#0000004d;--rpv-core__popover-body-color:#000;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__primary-button-color:#fff;--rpv-core__progress-bar-background-color:#0000001a;--rpv-core__progress-bar-progress-background-color:#2566e8;--rpv-core__progress-bar-progress-color:#fff;--rpv-core__separator-border-bottom-color:#0000004d;--rpv-core__spinner-border-color:#0006;--rpv-core__spinner-border-transparent-color:transparent;--rpv-core__splitter-background-color:transparent;--rpv-core__splitter--hover-background-color:#0003;--rpv-core__text-layer-text--selection-background-color:#00f;--rpv-core__text-layer-text--selection-color:transparent;--rpv-core__textbox-background-color:#fff;--rpv-core__textbox-border-color:#0003;--rpv-core__textbox-color:#000;--rpv-core__tooltip-body-background-color:#000;--rpv-core__tooltip-body-color:#fff}.rpv-core__viewer--dark{--rpv-core__asking-password-background-color:#363636;--rpv-core__asking-password-color:#fff;--rpv-core__asking-password-wrapper-border-color:#191919;--rpv-core__asking-password-wrapper-background-color:#191919;--rpv-core__button-background-color:#171717;--rpv-core__button-color:#fff;--rpv-core__doc-error-background-color:#191919;--rpv-core__doc-error-text-background-color:#c02323;--rpv-core__doc-error-text-color:#fff;--rpv-core__doc-loading-background-color:#191919;--rpv-core__full-screen-target-background-color:#1a1a1a;--rpv-core__inner-page-background-color:#1a1a1a;--rpv-core__menu-divider-border-bottom-color:#000;--rpv-core__menu-item-color:#fff;--rpv-core__menu-item--hover-background-color:#2566e8;--rpv-core__menu-item--disabled-color:#5e5e5e;--rpv-core__minimal-button-color:#fff;--rpv-core__minimal-button--disabled-color:#5e5e5e;--rpv-core__minimal-button--hover-background-color:#191919;--rpv-core__minimal-button--selected-background-color:#1657bb;--rpv-core__modal-body-background-color:#363636;--rpv-core__primary-button-background-color:#2566e8;--rpv-core__popover-body-background-color:#363636;--rpv-core__popover-body-color:#fff;--rpv-core__progress-bar-background-color:#000;--rpv-core__separator-border-bottom-color:#000;--rpv-core__spinner-border-color:#fff;--rpv-core__splitter-background-color:#1a1a1a;--rpv-core__splitter--hover-background-color:#2566e8;--rpv-core__textbox-background-color:#121212;--rpv-core__textbox-border-color:#121212;--rpv-core__textbox-color:#fff;--rpv-core__tooltip-body-background-color:#414141;--rpv-core__tooltip-body-color:#fff}.rpv-core__annotation{position:absolute}.rpv-core__annotation-layer{z-index:1}.rpv-core__arrow{border-bottom:1px solid var(--rpv-core__arrow-border-color);border-left-color:var(--rpv-core__arrow-border-color);border-right:1px solid var(--rpv-core__arrow-border-color);border-top-color:var(--rpv-core__arrow-border-color);z-index:0;width:10px;height:10px;position:absolute}.rpv-core__arrow--tl{bottom:0;left:0;transform:translate(50%,50%)rotate(45deg)}.rpv-core__arrow--tc{bottom:0;left:50%;transform:translate(-50%,50%)rotate(45deg)}.rpv-core__arrow--tr{bottom:0;right:0;transform:translate(-50%,50%)rotate(45deg)}.rpv-core__arrow--rt{top:0;left:0;transform:translate(-50%,50%)rotate(135deg)}.rpv-core__arrow--rc{top:50%;left:0;transform:translate(-50%,-50%)rotate(135deg)}.rpv-core__arrow--rb{bottom:0;left:0;transform:translate(-50%,-50%)rotate(135deg)}.rpv-core__arrow--bl{top:0;left:0;transform:translate(50%,-50%)rotate(225deg)}.rpv-core__arrow--bc{top:0;left:50%;transform:translate(-50%,-50%)rotate(225deg)}.rpv-core__arrow--br{top:0;right:0;transform:translate(-50%,-50%)rotate(225deg)}.rpv-core__arrow--lt{top:0;right:0;transform:translate(50%,50%)rotate(315deg)}.rpv-core__arrow--lc{top:50%;right:0;transform:translate(50%,-50%)rotate(315deg)}.rpv-core__arrow--lb{bottom:0;right:0;transform:translate(50%,-50%)rotate(315deg)}.rpv-core__asking-password{background-color:var(--rpv-core__asking-password-background-color);color:var(--rpv-core__asking-password-color);border-radius:.25rem;padding:2rem}.rpv-core__asking-password--rtl{direction:rtl}.rpv-core__asking-password-wrapper{background-color:var(--rpv-core__asking-password-wrapper-background-color);border:1px solid var(--rpv-core__asking-password-wrapper-border-color);justify-content:center;align-items:center;width:100%;height:100%;display:flex}.rpv-core__asking-password-message{margin:.5rem 0}.rpv-core__asking-password-body{justify-content:center;align-items:center;display:flex}.rpv-core__asking-password-input{width:15rem}.rpv-core__asking-password-input--ltr{margin-right:.5rem}.rpv-core__asking-password-input--rtl{margin-left:.5rem}.rpv-core__button{background-color:var(--rpv-core__button-background-color);color:var(--rpv-core__button-color);cursor:pointer;border:none;border-radius:.25rem;height:2rem;padding:0 1rem}.rpv-core__button--rtl{direction:rtl}.rpv-core__canvas-layer{direction:ltr;position:absolute;top:0;left:0;overflow:hidden}.rpv-core__doc-error{background-color:var(--rpv-core__doc-error-background-color);justify-content:center;align-items:center;height:100%;display:flex}.rpv-core__doc-error--rtl{direction:rtl}.rpv-core__doc-error-text{background-color:var(--rpv-core__doc-error-text-background-color);color:var(--rpv-core__doc-error-text-color);border-radius:.25rem;max-width:50%;padding:.5rem;line-height:1.5}.rpv-core__doc-loading{background-color:var(--rpv-core__doc-loading-background-color);width:100%;height:100%;min-height:inherit;justify-content:center;align-items:center;display:flex}.rpv-core__doc-loading--rtl{direction:rtl}.rpv-core__icon{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1px;text-align:center}.rpv-core__icon--rtl{transform:scaleX(-1)}.rpv-core__inner-container{min-height:inherit}.rpv-core__inner-pages{overflow:auto}.rpv-core__inner-pages--rtl{direction:rtl}.rpv-core__inner-pages--single{overflow:hidden}.rpv-core__inner-page-container--single{overflow:auto}.rpv-core__inner-page{background-color:var(--rpv-core__inner-page-background-color)}.rpv-core__inner-page--single{justify-content:center;align-items:center;display:flex}.rpv-core__inner-page--dual-even{justify-content:flex-end;align-items:center;display:flex}.rpv-core__inner-page--dual-odd{justify-content:flex-start;align-items:center;display:flex}.rpv-core__inner-page--dual-cover{justify-content:center;align-items:center;display:flex}.rpv-core__inner-page--dual-cover-odd{justify-content:flex-end;align-items:center;display:flex}.rpv-core__inner-page--dual-cover-even{justify-content:flex-start;align-items:center;display:flex}.rpv-core__annotation--link a{width:100%;height:100%;position:absolute;top:0;left:0}.rpv-core__annotation--link a:hover{background-color:var(--rpv-core__annotation--link-hover-background-color)}.rpv-core__menu{flex-direction:column;display:flex}.rpv-core__menu--rtl{text-align:right;direction:rtl}.rpv-core__menu-divider{border-bottom:1px solid var(--rpv-core__menu-divider-border-bottom-color);margin:.25rem 0}.rpv-core__menu-item{color:var(--rpv-core__menu-item-color);cursor:pointer;background-color:#0000;border:none;justify-content:center;align-items:center;width:100%;padding:.25rem 0;display:flex}.rpv-core__menu-item:focus{background-color:var(--rpv-core__menu-item--hover-background-color);outline:0}.rpv-core__menu-item:hover{background-color:var(--rpv-core__menu-item--hover-background-color)}.rpv-core__menu-item-icon{align-items:center;display:flex}.rpv-core__menu-item-icon--ltr{padding-left:1rem;padding-right:.5rem}.rpv-core__menu-item-icon--rtl{padding-left:.5rem;padding-right:1rem}.rpv-core__menu-item-label{white-space:nowrap;flex-grow:1;flex-shrink:1}.rpv-core__menu-item-label--ltr{padding-right:2rem}.rpv-core__menu-item-label--rtl{padding-left:2rem}.rpv-core__menu-item-check--ltr{padding-right:1rem}.rpv-core__menu-item-check--rtl{padding-left:1rem}.rpv-core__menu-item--disabled{color:var(--rpv-core__menu-item--disabled-color)}.rpv-core__menu-item--disabled:hover{background-color:#0000}.rpv-core__menu-item--ltr{text-align:left}.rpv-core__menu-item--rtl{text-align:right;direction:rtl}.rpv-core__minimal-button{color:var(--rpv-core__minimal-button-color);cursor:pointer;background-color:#0000;border:none;border-radius:.25rem;height:2rem;padding:0 .5rem}.rpv-core__minimal-button:hover{background-color:var(--rpv-core__minimal-button--hover-background-color)}.rpv-core__minimal-button--disabled{color:var(--rpv-core__minimal-button--disabled-color)}.rpv-core__minimal-button--rtl{direction:rtl}.rpv-core__minimal-button--selected{background-color:var(--rpv-core__minimal-button--selected-background-color)}.rpv-core__modal-body{background-color:var(--rpv-core__modal-body-background-color);border:1px solid var(--rpv-core__modal-body-border-color);border-radius:.25rem;max-width:32rem;margin:1rem;overflow:auto}.rpv-core__modal-body--rtl{direction:rtl}.rpv-core__modal-overlay{background-color:var(--rpv-core__modal-overlay-background-color);z-index:9999;justify-content:center;align-items:center;display:flex;position:fixed;inset:0}.rpv-core__page-layer{justify-content:center;align-items:center;display:flex;position:relative;overflow:visible}.rpv-core__page-layer:after{content:\"\";box-shadow:var(--rpv-core__page-layer-box-shadow);position:absolute;inset:.25rem}.rpv-core__page-layer--single{margin:0 auto}.rpv-core__page-size-calculator{justify-content:center;align-items:center;width:100%;height:100%;display:flex}.rpv-core__popover-body{background-color:var(--rpv-core__popover-body-background-color);border:1px solid var(--rpv-core__popover-body-border-color);color:var(--rpv-core__popover-body-color);z-index:9999;border-radius:.25rem;padding:.5rem 0;position:absolute;top:-9999px;left:0}.rpv-core__popover-body-arrow{background-color:var(--rpv-core__popover-body-background-color)}.rpv-core__popover-body--rtl{direction:rtl}.rpv-core__popover-overlay{position:fixed;inset:0}.rpv-core__annotation-popup-wrapper{background-color:var(--rpv-core__annotation-popup-wrapper-background-color);box-shadow:var(--rpv-core__annotation-popup-wrapper-box-shadow);word-break:break-word;padding:.25rem;font-size:.75rem}.rpv-core__annotation-popup-wrapper--rtl{direction:rtl}.rpv-core__annotation-popup-title{margin-bottom:.25rem;font-weight:600}.rpv-core__annotation-popup-date{font-size:.5rem}.rpv-core__annotation-popup-content{border-top:1px solid var(--rpv-core__annotation-popup-content-border-top-color);max-height:16rem;padding:.25rem;overflow:auto}.rpv-core__primary-button{background-color:var(--rpv-core__primary-button-background-color);color:var(--rpv-core__primary-button-color);cursor:pointer;border:none;border-radius:.25rem;height:2rem;padding:0 1rem}.rpv-core__primary-button--rtl{direction:rtl}.rpv-core__progress-bar{background-color:var(--rpv-core__progress-bar-background-color);border-radius:9999px;padding:.125rem}.rpv-core__progress-bar--rtl{direction:rtl}.rpv-core__progress-bar-progress{background-color:var(--rpv-core__progress-bar-progress-background-color);color:var(--rpv-core__progress-bar-progress-color);border-radius:9999px;justify-content:center;align-items:center;height:.75rem;font-size:.75rem;display:flex}.rpv-core__separator{border-bottom:1px solid var(--rpv-core__separator-border-bottom-color)}.rpv-core__spinner{border-bottom:2px solid var(--rpv-core__spinner-border-transparent-color);border-left:2px solid var(--rpv-core__spinner-border-transparent-color);border-right:2px solid var(--rpv-core__spinner-border-color);border-top:2px solid var(--rpv-core__spinner-border-color);border-radius:9999px}.rpv-core__spinner--animating{animation-name:rpv-core__spinner-transform;animation-duration:.4s;animation-timing-function:linear;animation-iteration-count:infinite}@keyframes rpv-core__spinner-transform{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.rpv-core__splitter{background-color:var(--rpv-core__splitter-background-color);cursor:ew-resize;width:.25rem;height:100%}.rpv-core__splitter:hover,.rpv-core__splitter--resizing{cursor:col-resize;background-color:var(--rpv-core__splitter--hover-background-color)}.rpv-core__splitter-body--resizing{cursor:col-resize}.rpv-core__splitter-sibling--resizing{pointer-events:none;-webkit-user-select:none;user-select:none}.rpv-core__textbox{background-color:var(--rpv-core__textbox-background-color);border:1px solid var(--rpv-core__textbox-border-color);box-sizing:border-box;color:var(--rpv-core__textbox-color);border-radius:.25rem;width:100%;height:2rem;padding:0 .5rem}.rpv-core__textbox--rtl{direction:rtl}.rpv-core__text-layer{opacity:.2;z-index:1;width:100%;height:100%;line-height:1;position:absolute;top:0;left:0}.rpv-core__text-layer span::selection{background-color:var(--rpv-core__text-layer-text--selection-background-color);color:var(--rpv-core__text-layer-text--selection-color)}.rpv-core__text-layer br::selection{color:#0000}.rpv-core__text-layer-text{color:#0000;cursor:text;transform-origin:0 0;white-space:pre;position:absolute}.rpv-core__tooltip-body{background-color:var(--rpv-core__tooltip-body-background-color);color:var(--rpv-core__tooltip-body-color);text-align:center;z-index:9999;border-radius:.25rem;max-width:20rem;position:absolute;top:-9999px;left:0}.rpv-core__tooltip-body--rtl{direction:rtl}.rpv-core__tooltip-body-arrow{background-color:var(--rpv-core__tooltip-body-background-color)}.rpv-core__tooltip-body-content{padding:.5rem}.rpv-core__display--block{display:block}.rpv-core__display--hidden{display:none}@media (min-width:640px){.rpv-core__display--hidden-small{display:none}.rpv-core__display--block-small{display:block}}@media (min-width:768px){.rpv-core__display--hidden-medium{display:none}.rpv-core__display--block-medium{display:block}}@media (min-width:1024px){.rpv-core__display--hidden-large{display:none}.rpv-core__display--block-large{display:block}}.rpv-core__viewer{min-height:inherit}.rpv-page-navigation__current-page-input{text-align:right;width:3rem;margin:0 .25rem}:root{--rpv-zoom__popover-target-arrow-border-color:#0009}.rpv-core__viewer--dark{--rpv-zoom__popover-target-arrow-border-color:#fff}.rpv-zoom__popover-target{color:var(--rpv-zoom__popover-target-color);align-items:center;display:flex}.rpv-zoom__popover-target-scale--ltr{margin-right:.25rem}.rpv-zoom__popover-target-scale--rtl{margin-left:.25rem}.rpv-zoom__popover-target-arrow{border-color:var(--rpv-zoom__popover-target-arrow-border-color)#0000 #0000;border-style:solid;border-width:.5rem .25rem 0;width:0;height:0}:root,:host{--rpv-core__inner-page-background-color:#f0f2f4;--rpv-core__page-layer-box-shadow:none}.rpv-core__inner-page{border-radius:10px}.rpv-core__canvas-layer{border-radius:8px}:root,:host{--mtw-background:oklch(100% 0 0);--mtw-foreground:oklch(14.5% 0 0);--mtw-card:oklch(100% 0 0);--mtw-card-foreground:oklch(14.5% 0 0);--mtw-popover:oklch(100% 0 0);--mtw-popover-foreground:oklch(14.5% 0 0);--mtw-primary:var(--mtw-color-primary-50);--mtw-primary-foreground:var(--mtw-color-primary-foreground);--mtw-secondary:var(--mtw-color-primary-90);--mtw-secondary-foreground:var(--mtw-color-primary-20);--mtw-muted:oklch(97% 0 0);--mtw-muted-foreground:oklch(55.6% 0 0);--mtw-accent:oklch(97% 0 0);--mtw-accent-foreground:oklch(20.5% 0 0);--mtw-destructive:var(--mtw-color-danger-10);--mtw-destructive-foreground:var(--color-white);--mtw-border:oklch(92.2% 0 0);--mtw-input:oklch(92.2% 0 0);--mtw-ring:oklch(70.8% 0 0);--mtw-chart-1:oklch(64.6% .222 41.116);--mtw-chart-2:oklch(60% .118 184.704);--mtw-chart-3:oklch(39.8% .07 227.392);--mtw-chart-4:oklch(82.8% .189 84.429);--mtw-chart-5:oklch(76.9% .188 70.08);--mtw-radius:.625rem;--mtw-sidebar:oklch(98.5% 0 0);--mtw-sidebar-foreground:oklch(14.5% 0 0);--mtw-sidebar-primary:oklch(20.5% 0 0);--mtw-sidebar-primary-foreground:oklch(98.5% 0 0);--mtw-sidebar-accent:oklch(97% 0 0);--mtw-sidebar-accent-foreground:oklch(20.5% 0 0);--mtw-sidebar-border:oklch(92.2% 0 0);--mtw-sidebar-ring:oklch(70.8% 0 0)}@keyframes dot-typing{0%{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}16.667%{box-shadow:9984px -10px 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}33.333%{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}50%{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px -10px 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}66.667%{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}83.333%{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px -10px 0 0 var(--mtw-dot-loader-color)}to{box-shadow:9984px 0 0 0 var(--mtw-dot-loader-color),9999px 0 0 0 var(--mtw-dot-loader-color),10014px 0 0 0 var(--mtw-dot-loader-color)}}@property --tw-translate-x{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-y{syntax:\"*\";inherits:false;initial-value:0}@property --tw-translate-z{syntax:\"*\";inherits:false;initial-value:0}@property --tw-space-y-reverse{syntax:\"*\";inherits:false;initial-value:0}@property --tw-border-style{syntax:\"*\";inherits:false;initial-value:solid}@property --tw-gradient-position{syntax:\"*\";inherits:false}@property --tw-gradient-from{syntax:\"<color>\";inherits:false;initial-value:#0000}@property --tw-gradient-via{syntax:\"<color>\";inherits:false;initial-value:#0000}@property --tw-gradient-to{syntax:\"<color>\";inherits:false;initial-value:#0000}@property --tw-gradient-stops{syntax:\"*\";inherits:false}@property --tw-gradient-via-stops{syntax:\"*\";inherits:false}@property --tw-gradient-from-position{syntax:\"<length-percentage>\";inherits:false;initial-value:0%}@property --tw-gradient-via-position{syntax:\"<length-percentage>\";inherits:false;initial-value:50%}@property --tw-gradient-to-position{syntax:\"<length-percentage>\";inherits:false;initial-value:100%}@property --tw-leading{syntax:\"*\";inherits:false}@property --tw-font-weight{syntax:\"*\";inherits:false}@property --tw-tracking{syntax:\"*\";inherits:false}@property --tw-ordinal{syntax:\"*\";inherits:false}@property --tw-slashed-zero{syntax:\"*\";inherits:false}@property --tw-numeric-figure{syntax:\"*\";inherits:false}@property --tw-numeric-spacing{syntax:\"*\";inherits:false}@property --tw-numeric-fraction{syntax:\"*\";inherits:false}@property --tw-shadow{syntax:\"*\";inherits:false;initial-value:0 0 #0000}@property --tw-shadow-color{syntax:\"*\";inherits:false}@property --tw-shadow-alpha{syntax:\"<percentage>\";inherits:false;initial-value:100%}@property --tw-inset-shadow{syntax:\"*\";inherits:false;initial-value:0 0 #0000}@property --tw-inset-shadow-color{syntax:\"*\";inherits:false}@property --tw-inset-shadow-alpha{syntax:\"<percentage>\";inherits:false;initial-value:100%}@property --tw-ring-color{syntax:\"*\";inherits:false}@property --tw-ring-shadow{syntax:\"*\";inherits:false;initial-value:0 0 #0000}@property --tw-inset-ring-color{syntax:\"*\";inherits:false}@property --tw-inset-ring-shadow{syntax:\"*\";inherits:false;initial-value:0 0 #0000}@property --tw-ring-inset{syntax:\"*\";inherits:false}@property --tw-ring-offset-width{syntax:\"<length>\";inherits:false;initial-value:0}@property --tw-ring-offset-color{syntax:\"*\";inherits:false;initial-value:#fff}@property --tw-ring-offset-shadow{syntax:\"*\";inherits:false;initial-value:0 0 #0000}@property --tw-duration{syntax:\"*\";inherits:false}@property --tw-ease{syntax:\"*\";inherits:false}@property --tw-outline-style{syntax:\"*\";inherits:false;initial-value:solid}@keyframes spin{to{transform:rotate(360deg)}}@keyframes pulse{50%{opacity:.5}}@keyframes enter{0%{opacity:var(--tw-enter-opacity,1);transform:translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0))}}@keyframes exit{to{opacity:var(--tw-exit-opacity,1);transform:translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0))}}@keyframes accordion-down{0%{height:0}to{height:var(--radix-accordion-content-height,var(--bits-accordion-content-height))}}@keyframes accordion-up{0%{height:var(--radix-accordion-content-height,var(--bits-accordion-content-height))}to{height:0}}\n";
styleInject(css_248z);

// @ts-expect-error - This is a global css file
/**
 * Sets the Tailwind Theme variables to the :root element
 * Based on the MoniteTheme object
 * @param theme - The MoniteTheme object
 * @uses tailwindApp - The Tailwind App CSS file
 * @returns The Tailwind Theme variables
 */ const getTailwindTheme = (theme)=>/*#__PURE__*/ react$3.css(":root,:host{--mtw-font-family:", theme.typography.fontFamily, ";--mtw-color-primary-10:", theme.palette.primary[10], ";--mtw-color-primary-20:", theme.palette.primary[20], ";--mtw-color-primary-30:", theme.palette.primary[30], ";--mtw-color-primary-40:", theme.palette.primary[40], ";--mtw-color-primary-50:", theme.palette.primary[50], ";--mtw-color-primary-55:", theme.palette.primary[55], ";--mtw-color-primary-60:", theme.palette.primary[60], ";--mtw-color-primary-65:", theme.palette.primary[65], ";--mtw-color-primary-80:", theme.palette.primary[80], ";--mtw-color-primary-85:", theme.palette.primary[85], ";--mtw-color-primary-90:", theme.palette.primary[90], ";--mtw-color-primary-95:", theme.palette.primary[95], ";--mtw-color-primary-foreground:", theme.palette.primary.foreground.main, ";--mtw-color-neutral-10:", theme.palette.neutral[10], ";--mtw-color-neutral-30:", theme.palette.neutral[30], ";--mtw-color-neutral-50:", theme.palette.neutral[50], ";--mtw-color-neutral-70:", theme.palette.neutral[70], ";--mtw-color-neutral-80:", theme.palette.neutral[80], ";--mtw-color-neutral-90:", theme.palette.neutral[90], ";--mtw-color-neutral-95:", theme.palette.neutral[95], ";--mtw-color-danger-10:", theme.palette.error[10], ";--mtw-color-danger-25:", theme.palette.error[25], ";--mtw-color-danger-50:", theme.palette.error[50], ";--mtw-color-danger-75:", theme.palette.error[75], ";--mtw-color-danger-100:", theme.palette.error[100], ";--mtw-color-success-10:", theme.palette.success[10], ";--mtw-color-success-30:", theme.palette.success[30], ";--mtw-color-success-50:", theme.palette.success[50], ";--mtw-color-success-60:", theme.palette.success[60], ";--mtw-color-success-80:", theme.palette.success[80], ";--mtw-color-success-90:", theme.palette.success[90], ";--mtw-color-success-95:", theme.palette.success[95], ";--mtw-color-warning-10:", theme.palette.warning[10], ";--mtw-color-warning-30:", theme.palette.warning[30], ";--mtw-color-warning-50:", theme.palette.warning[50], ";--mtw-color-warning-60:", theme.palette.warning[60], ";--mtw-color-warning-80:", theme.palette.warning[80], ";--mtw-color-warning-90:", theme.palette.warning[90], ";--mtw-color-warning-95:", theme.palette.warning[95], ";}", css_248z);

/**
 * Provides the Material Theme and Tailwind Theme to the children components
 */ const MoniteThemeProvider = ({ children, onThemeMounted })=>{
    const { theme } = useMoniteContext();
    const tailwindStyles = React.useMemo(()=>getTailwindTheme(theme), [
        theme
    ]);
    React.useLayoutEffect(()=>{
        onThemeMounted === null || onThemeMounted === void 0 ? void 0 : onThemeMounted();
    }, [
        onThemeMounted
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(jsxRuntime.Fragment, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(react$3.Global, {
                styles: [
                    tailwindStyles
                ]
            }),
            /*#__PURE__*/ jsxRuntime.jsx(styles$2.ThemeProvider, {
                theme: theme,
                children: children
            })
        ]
    });
};

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
const MoniteAPIProvider = ({ children, APIContext })=>{
    const { apiUrl, fetchToken, queryClient, requestFn } = useMoniteContext();
    return /*#__PURE__*/ jsxRuntime.jsx(Unstable_QraftSecureRequestFn.QraftSecureRequestFn, {
        requestFn: requestFn,
        securitySchemes: {
            HTTPBearer () {
                return _async_to_generator(function*() {
                    const { access_token } = yield fetchToken();
                    return {
                        token: access_token,
                        // replace with the plain JWT token when the [task](https://monite.atlassian.net/browse/DEV-11142) is done
                        refreshInterval: 10 * 60000
                    };
                })();
            }
        },
        children: (securedRequestFn)=>/*#__PURE__*/ jsxRuntime.jsx(APIContext.Provider, {
                value: {
                    queryClient,
                    baseUrl: apiUrl,
                    requestFn: securedRequestFn
                },
                children: children
            })
    });
};

const MoniteProvider = ({ monite, theme, componentSettings, children, locale, onThemeMounted })=>{
    return /*#__PURE__*/ jsxRuntime.jsxs(MoniteContextProvider, {
        monite: monite,
        locale: locale,
        theme: theme,
        componentSettings: componentSettings,
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(EmotionCacheProvider, {
                cacheKey: "monite-css-baseline",
                children: /*#__PURE__*/ jsxRuntime.jsxs(MoniteThemeProvider, {
                    onThemeMounted: ()=>{
                        onThemeMounted === null || onThemeMounted === void 0 ? void 0 : onThemeMounted();
                    },
                    children: [
                        /*#__PURE__*/ jsxRuntime.jsx(ContainerCssBaseline, {
                            enableColorScheme: true
                        }),
                        /*#__PURE__*/ jsxRuntime.jsx(GlobalToast, {})
                    ]
                })
            }),
            /*#__PURE__*/ jsxRuntime.jsx(MoniteAPIProvider, {
                APIContext: MoniteQraftContext,
                children: /*#__PURE__*/ jsxRuntime.jsx(KanmonContextProvider, {
                    children: children
                })
            })
        ]
    });
};

Object.defineProperty(exports, 'toast', {
  enumerable: true,
  get: function () { return reactHotToast.toast; }
});
exports.AIAssistant = AIAssistant;
exports.ApprovalPolicies = ApprovalPolicies;
exports.ApprovalPoliciesTable = ApprovalPoliciesTable;
exports.ApprovalPolicyDetails = ApprovalPolicyDetails;
exports.ApprovalRequests = ApprovalRequests;
exports.ApprovalRequestsTable = ApprovalRequestsTable;
exports.BankAccountFormDialog = BankAccountFormDialog;
exports.CounterpartAutocomplete = CounterpartAutocomplete;
exports.CounterpartDetails = CounterpartDetails;
exports.Counterparts = Counterparts;
exports.CounterpartsTable = CounterpartsTable;
exports.CreditNotesTable = CreditNotesTable;
exports.Dialog = Dialog$1;
exports.DocumentDesign = DocumentDesign;
exports.FinanceBanner = FinanceBanner;
exports.FinanceIntegrationCard = FinanceIntegrationCard;
exports.FinanceInvoice = FinanceInvoice;
exports.FinanceTab = FinanceTab;
exports.Integrations = Integrations;
exports.InvoiceDetails = InvoiceDetails;
exports.InvoicesTable = InvoicesTable;
exports.MoniteAPIProvider = MoniteAPIProvider;
exports.MoniteProvider = MoniteProvider;
exports.MoniteScopedProviders = MoniteScopedProviders;
exports.OCR_SUPPORTED_FORMATS = OCR_SUPPORTED_FORMATS;
exports.Onboarding = Onboarding;
exports.PageHeader = PageHeader;
exports.PayableDetails = PayableDetails;
exports.Payables = Payables;
exports.PayablesTable = PayablesTable;
exports.ProductDetails = ProductDetails;
exports.ProductDetailsView = ProductDetailsView;
exports.Products = Products;
exports.ProductsTable = ProductsTable;
exports.QuotesTable = QuotesTable;
exports.Receivables = Receivables;
exports.ReceivablesTable = ReceivablesTable;
exports.ReceivablesTableTabEnum = ReceivablesTableTabEnum;
exports.RolesAndApprovalPolicies = RolesAndApprovalPolicies;
exports.RootElementsProvider = RootElementsProvider;
exports.TagFormModal = TagFormModal;
exports.Tags = Tags;
exports.TagsTable = TagsTable;
exports.TemplateSettings = TemplateSettings;
exports.UserRoleDeleteDialog = UserRoleDeleteDialog;
exports.UserRoleDetailsDialog = UserRoleDetailsDialog;
exports.UserRoleEditDialog = UserRoleEditDialog;
exports.UserRoles = UserRoles;
exports.UserRolesTable = UserRolesTable;
exports.breakpoints = breakpoints;
exports.countryCurrencyList = countryCurrencyList;
exports.createAPIClient = createAPIClient;
exports.createDayPluralForm = createDayPluralForm;
exports.defaultAvailableCountries = defaultAvailableCountries;
exports.defaultAvailableCurrencies = defaultAvailableCurrencies;
exports.defaultCounterpartColumnWidth = defaultCounterpartColumnWidth;
exports.filterOptions = filterOptions;
exports.getCounterpartName = getCounterpartName;
exports.getCountries = getCountries;
exports.getCountriesArray = getCountriesArray;
exports.getCurrencies = getCurrencies;
exports.getCurrenciesArray = getCurrenciesArray;
exports.getEntityName = getEntityName$1;
exports.getGroupTitleForOption = getGroupTitleForOption;
exports.getIndividualName = getIndividualName;
exports.getIndividualNameWithFallback = getIndividualNameWithFallback;
exports.getUserDisplayName = getUserDisplayName;
exports.rateMajorToMinor = rateMajorToMinor$1;
exports.rateMinorToMajor = rateMinorToMajor$1;
exports.sortCurrencyOptionsByGroup = sortCurrencyOptionsByGroup;
exports.useApprovalPolicyById = useApprovalPolicyById;
exports.useAreCounterpartsLoading = useAreCounterpartsLoading;
exports.useAutosizeGridColumns = useAutosizeGridColumns;
exports.useComponentSettings = useComponentSettings;
exports.useCounterpartAddresses = useCounterpartAddresses;
exports.useCounterpartAddressesById = useCounterpartAddressesById;
exports.useCounterpartBankById = useCounterpartBankById;
exports.useCounterpartById = useCounterpartById;
exports.useCounterpartContactById = useCounterpartContactById;
exports.useCounterpartContactList = useCounterpartContactList;
exports.useCounterpartList = useCounterpartList;
exports.useCounterpartVatById = useCounterpartVatById;
exports.useCounterpartVatList = useCounterpartVatList;
exports.useCreateCounterpart = useCreateCounterpart;
exports.useCreateCounterpartBank = useCreateCounterpartBank;
exports.useCreateCounterpartContact = useCreateCounterpartContact;
exports.useCreateCounterpartVat = useCreateCounterpartVat;
exports.useCreatePaymentRecord = useCreatePaymentRecord;
exports.useCurrencies = useCurrencies;
exports.useDebounce = useDebounce;
exports.useDebounceCallback = useDebounceCallback;
exports.useDeleteCounterpart = useDeleteCounterpart;
exports.useDeleteCounterpartBank = useDeleteCounterpartBank;
exports.useDeleteCounterpartContact = useDeleteCounterpartContact;
exports.useDeleteCounterpartVat = useDeleteCounterpartVat;
exports.useDialog = useDialog;
exports.useEntitySettings = useEntitySettings;
exports.useEntityUserByAuthToken = useEntityUserByAuthToken;
exports.useEntityUserById = useEntityUserById;
exports.useEntityUserRoleByAuthToken = useEntityUserRoleByAuthToken;
exports.useFileById = useFileById;
exports.useFileInput = useFileInput;
exports.useFormPersist = useFormPersist;
exports.useGetPayableCounterpart = useGetPayableCounterpart;
exports.useGetReceivableById = useGetReceivableById;
exports.useIsDesktopScreen = useIsDesktopScreen;
exports.useIsExtraLargeDesktopScreen = useIsExtraLargeDesktopScreen;
exports.useIsLargeDesktopScreen = useIsLargeDesktopScreen;
exports.useIsLargerThan = useIsLargerThan;
exports.useIsMobile = useIsMobile;
exports.useIsMobileScreen = useIsMobileScreen;
exports.useIsMounted = useIsMounted;
exports.useIsSmallerThan = useIsSmallerThan;
exports.useIsTabletScreen = useIsTabletScreen;
exports.useLedgerAccounts = useLedgerAccounts;
exports.useLocalStorageFields = useLocalStorageFields;
exports.useMe = useMe;
exports.useMediaQuery = useMediaQuery;
exports.useMenuButton = useMenuButton;
exports.useMoniteContext = useMoniteContext;
exports.useMyEntity = useMyEntity;
exports.useOptionalFields = useOptionalFields;
exports.usePatchEntitiesIdSettings = usePatchEntitiesIdSettings;
exports.usePayButtonVisibility = usePayButtonVisibility;
exports.usePayableCallbacks = usePayableCallbacks;
exports.usePayableDetailsThemeProps = usePayableDetailsThemeProps;
exports.usePayablePaymentIntentsAndRecords = usePayablePaymentIntentsAndRecords;
exports.usePaymentIntentById = usePaymentIntentById;
exports.usePaymentRecordById = usePaymentRecordById;
exports.usePaymentRecords = usePaymentRecords;
exports.useReceivablesTableProps = useReceivablesTableProps;
exports.useRootElements = useRootElements;
exports.useUpdateCounterpart = useUpdateCounterpart;
exports.useUpdateCounterpartAddress = useUpdateCounterpartAddress;
exports.useUpdateCounterpartBank = useUpdateCounterpartBank;
exports.useUpdateCounterpartContact = useUpdateCounterpartContact;
exports.useUpdateCounterpartVat = useUpdateCounterpartVat;
//# sourceMappingURL=index.js.map
