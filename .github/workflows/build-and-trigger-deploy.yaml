name: Build Images and Deploy to Dev

on:
  push:
    branches:
      - main

jobs:

  build-sdk-demo-with-nextjs-and-clerk-auth:
    name: Build and Push sdk-demo-with-nextjs-and-clerk-auth
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: werf/actions/install@v2
        with:
          version: v2.16.2

      - name: Log in to GitLab Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.monite.com
          username: ${{ vars.GITLAB_BOT_USERNAME }}
          password: ${{ secrets.GITLAB_BOT_ACCESS_TOKEN }}

      - name: Build and Push All Images
        run: |
          . $(werf ci-env github --as-file)
          werf export \
            --config werf.nextjs-clerk.yaml \
            --parallel-tasks-limit=-1 \
            --repo registry.monite.com/monite/frontend/sdkapp \
            --tag registry.monite.com/monite/frontend/sdkapp:%image%-${{ github.sha }}

  build-sdk-storybook:
    name: Build and Push sdk-storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: werf/actions/install@v2
        with:
          version: v2.16.2

      - name: Log in to GitLab Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.monite.com
          username: ${{ vars.GITLAB_BOT_USERNAME }}
          password: ${{ secrets.GITLAB_BOT_ACCESS_TOKEN }}

      - name: Build and Push All Images
        run: |
          . $(werf ci-env github --as-file)
          werf export \
            --config werf.storybook.yaml \
            --parallel-tasks-limit=-1 \
            --repo registry.monite.com/monite/frontend/sdkapp \
            --tag registry.monite.com/monite/frontend/sdkapp:%image%-${{ github.sha }}

  build-sdk-drop-in:
    name: Build and Push sdk-drop-in
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: werf/actions/install@v2
        with:
          version: v2.16.2

      - name: Log in to GitLab Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.monite.com
          username: ${{ vars.GITLAB_BOT_USERNAME }}
          password: ${{ secrets.GITLAB_BOT_ACCESS_TOKEN }}

      - name: Build and Push All Images
        run: |
          . $(werf ci-env github --as-file)
          werf export \
            --config werf.drop_in.yaml \
            --parallel-tasks-limit=-1 \
            --repo registry.monite.com/monite/frontend/sdkapp \
            --tag registry.monite.com/monite/frontend/sdkapp:%image%-${{ github.sha }}

  build-sdk-playground:
    name: Build and Push sdk-playground
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Create .env file and Build SDK Playground
        run: |
          # Create .env file from GitHub secrets
          cat > packages/sdk-playground/.env << EOF
          VITE_MONITE_ENTITY_ID=${{ secrets.VITE_MONITE_ENTITY_ID }}
          VITE_MONITE_ENTITY_USER_ID=${{ secrets.VITE_MONITE_ENTITY_USER_ID }}
          VITE_MONITE_PROJECT_CLIENT_ID=${{ secrets.VITE_MONITE_PROJECT_CLIENT_ID }}
          VITE_MONITE_PROJECT_CLIENT_SECRET=${{ secrets.VITE_MONITE_PROJECT_CLIENT_SECRET }}
          VITE_MONITE_API_URL=${{ secrets.VITE_MONITE_API_URL }}
          VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          EOF

          # Build SDK Playground with .env file
          yarn build --filter='sdk-playground'

      - uses: werf/actions/install@v2
        with:
          version: v2.16.2

      - name: Log in to GitLab Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.monite.com
          username: ${{ vars.GITLAB_BOT_USERNAME }}
          password: ${{ secrets.GITLAB_BOT_ACCESS_TOKEN }}

      - name: Build and Push Images
        run: |
          . $(werf ci-env github --as-file)

          werf export \
            --config werf.sdk-playground.yaml \
            --parallel-tasks-limit=-1 \
            --repo registry.monite.com/monite/frontend/sdkapp \
            --tag registry.monite.com/monite/frontend/sdkapp:%image%-${{ github.sha }}

  trigger-gitlab-deploy:
    name: Trigger GitLab Deployment to Dev
    runs-on: ubuntu-latest
    needs:
      - build-sdk-demo-with-nextjs-and-clerk-auth
      - build-sdk-drop-in
      - build-sdk-playground

    steps:
      - name: Trigger GitLab Pipeline Deploy to Dev
        run: |
          REPO="${{ secrets.GITLAB_REPOSITORY }}"
          PROJECT_ID="${{ secrets.GITLAB_GROUP_ID }}"
          GITLAB_TOKEN="${{ secrets.GITLAB_REMOTE_TRIGGER_TOKEN }}"

          SDK_DEMO_WITH_NEXTJS_AND_CLERK_AUTH="sdk-demo-with-nextjs-and-clerk-auth-${{ github.sha }}"
          SDK_DROP_IN_NGINX="sdk-drop-in-nginx-${{ github.sha }}"
          SDK_PLAYGROUND_NGINX="sdk-playground-nginx-${{ github.sha }}"

          echo "sdk-demo-with-nextjs-and-clerk-auth = $SDK_DEMO_WITH_NEXTJS_AND_CLERK_AUTH"
          echo "sdk-drop-in-nginx = $SDK_DROP_IN_NGINX"
          echo "sdk-playground-nginx = $SDK_PLAYGROUND_NGINX"

          RESPONSE=$(curl --request POST \
            --form token="${GITLAB_TOKEN}" \
            --form ref="master" \
            --form "variables[GITHUB_SHA]=${{ github.sha }}" \
            --form "variables[SDK_DEMO_WITH_NEXTJS_AND_CLERK_AUTH]=${SDK_DEMO_WITH_NEXTJS_AND_CLERK_AUTH}" \
            --form "variables[SDK_DROP_IN_NGINX]=${SDK_DROP_IN_NGINX}" \
            --form "variables[SDK_PLAYGROUND_NGINX]=${SDK_PLAYGROUND_NGINX}" \
            --form "variables[GITHUB_BRANCH]=${{ github.ref_name }}" \
            --form "variables[CI_PIPELINE_SOURCE]=pipeline" \
            --form "variables[CI_ACTION]=dev_deploy" \
            "https://${REPO}/api/v4/projects/${PROJECT_ID}/trigger/pipeline")

          PIPELINE_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "Created pipeline ID: $PIPELINE_ID"

          # Update pipeline name for better visibility
          curl --request PUT \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_PUT_TOKEN }}" \
            --data "name=ðŸš€ Deploy SDK Apps from branch ${{ github.ref_name }}" \
            "https://${REPO}/api/v4/projects/${PROJECT_ID}/pipelines/${PIPELINE_ID}/metadata"

  trigger-storybook-deploy:
    name: Trigger GitLab Storybook build and deploy
    runs-on: ubuntu-latest
    needs:
      - build-sdk-storybook

    steps:
      - name: Trigger GitLab Pipeline Storybook build and deploy
        run: |
          REPO="${{ secrets.GITLAB_REPOSITORY }}"
          PROJECT_ID="${{ secrets.GITLAB_GROUP_ID }}"
          GITLAB_TOKEN="${{ secrets.GITLAB_REMOTE_TRIGGER_TOKEN }}"

          SDK_STORYBOOK="sdk-storybook-${{ github.sha }}"

          echo "sdk-storybook = $SDK_STORYBOOK"

          RESPONSE=$(curl --request POST \
            --form token="${GITLAB_TOKEN}" \
            --form ref="master" \
            --form "variables[GITHUB_SHA]=${{ github.sha }}" \
            --form "variables[SDK_STORYBOOK]=${SDK_STORYBOOK}" \
            --form "variables[GITHUB_BRANCH]=${{ github.ref_name }}" \
            --form "variables[CI_PIPELINE_SOURCE]=pipeline" \
            --form "variables[CI_ACTION]=build_storybook" \
            "https://${REPO}/api/v4/projects/${PROJECT_ID}/trigger/pipeline")

          PIPELINE_ID=$(echo "$RESPONSE" | jq -r '.id')
          echo "Created pipeline ID: $PIPELINE_ID"

          # Update pipeline name for better visibility
          curl --request PUT \
            --header "PRIVATE-TOKEN: ${{ secrets.GITLAB_PUT_TOKEN }}" \
            --data "name=ðŸ“š Deploy Storybook from branch ${{ github.ref_name }}" \
            "https://${REPO}/api/v4/projects/${PROJECT_ID}/pipelines/${PIPELINE_ID}/metadata"
